{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\vietn\\\\Desktop\\\\AppEnegry2020\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport { determination } from \"./utils/determination\";\nimport { interpose } from \"./utils/interpose\";\nimport { points, visitPoints } from \"./utils/points\";\nexport default function () {\n  var x = function x(d) {\n    return d[0];\n  },\n      y = function y(d) {\n    return d[1];\n  },\n      domain;\n\n  function quadratic(data) {\n    var _points = points(data, x, y),\n        _points2 = _slicedToArray(_points, 4),\n        xv = _points2[0],\n        yv = _points2[1],\n        ux = _points2[2],\n        uy = _points2[3],\n        n = xv.length;\n\n    var X2 = 0,\n        X3 = 0,\n        X4 = 0,\n        XY = 0,\n        X2Y = 0,\n        i,\n        dx,\n        dy,\n        x2;\n\n    for (i = 0; i < n;) {\n      dx = xv[i];\n      dy = yv[i++];\n      x2 = dx * dx;\n      X2 += (x2 - X2) / i;\n      X3 += (x2 * dx - X3) / i;\n      X4 += (x2 * x2 - X4) / i;\n      XY += (dx * dy - XY) / i;\n      X2Y += (x2 * dy - X2Y) / i;\n    }\n\n    var Y = 0,\n        n0 = 0,\n        xmin = domain ? +domain[0] : Infinity,\n        xmax = domain ? +domain[1] : -Infinity;\n    visitPoints(data, x, y, function (dx, dy) {\n      n0++;\n      Y += (dy - Y) / n0;\n\n      if (!domain) {\n        if (dx < xmin) xmin = dx;\n        if (dx > xmax) xmax = dx;\n      }\n    });\n\n    var X2X2 = X4 - X2 * X2,\n        d = X2 * X2X2 - X3 * X3,\n        a = (X2Y * X2 - XY * X3) / d,\n        b = (XY * X2X2 - X2Y * X3) / d,\n        c = -a * X2,\n        fn = function fn(x) {\n      x = x - ux;\n      return a * x * x + b * x + c + uy;\n    };\n\n    var out = interpose(xmin, xmax, fn);\n    out.a = a;\n    out.b = b - 2 * a * ux;\n    out.c = c - b * ux + a * ux * ux + uy;\n    out.predict = fn;\n    out.rSquared = determination(data, x, y, Y, fn);\n    return out;\n  }\n\n  quadratic.domain = function (arr) {\n    return arguments.length ? (domain = arr, quadratic) : domain;\n  };\n\n  quadratic.x = function (fn) {\n    return arguments.length ? (x = fn, quadratic) : x;\n  };\n\n  quadratic.y = function (fn) {\n    return arguments.length ? (y = fn, quadratic) : y;\n  };\n\n  return quadratic;\n}","map":{"version":3,"sources":["C:/Users/vietn/Desktop/AppEnegry2020/frontend/node_modules/d3-regression/src/quadratic.js"],"names":["determination","interpose","points","visitPoints","x","d","y","domain","quadratic","data","xv","yv","ux","uy","n","length","X2","X3","X4","XY","X2Y","i","dx","dy","x2","Y","n0","xmin","Infinity","xmax","X2X2","a","b","c","fn","out","predict","rSquared","arr","arguments"],"mappings":";AAAA,SAASA,aAAT,QAA8B,uBAA9B;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,MAAT,EAAiBC,WAAjB,QAAoC,gBAApC;AAEA,eAAe,YAAU;AACvB,MAAIC,CAAC,GAAG,WAAAC,CAAC;AAAA,WAAIA,CAAC,CAAC,CAAD,CAAL;AAAA,GAAT;AAAA,MACIC,CAAC,GAAG,WAAAD,CAAC;AAAA,WAAIA,CAAC,CAAC,CAAD,CAAL;AAAA,GADT;AAAA,MAEIE,MAFJ;;AAIA,WAASC,SAAT,CAAmBC,IAAnB,EAAwB;AAAA,kBACGP,MAAM,CAACO,IAAD,EAAOL,CAAP,EAAUE,CAAV,CADT;AAAA;AAAA,QACfI,EADe;AAAA,QACXC,EADW;AAAA,QACPC,EADO;AAAA,QACHC,EADG;AAAA,QAEhBC,CAFgB,GAEZJ,EAAE,CAACK,MAFS;;AAItB,QAAIC,EAAE,GAAG,CAAT;AAAA,QACIC,EAAE,GAAG,CADT;AAAA,QAEIC,EAAE,GAAG,CAFT;AAAA,QAGIC,EAAE,GAAG,CAHT;AAAA,QAIIC,GAAG,GAAG,CAJV;AAAA,QAKIC,CALJ;AAAA,QAKOC,EALP;AAAA,QAKWC,EALX;AAAA,QAKeC,EALf;;AAOA,SAAKH,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGP,CAAhB,GAAoB;AAClBQ,MAAAA,EAAE,GAAGZ,EAAE,CAACW,CAAD,CAAP;AACAE,MAAAA,EAAE,GAAGZ,EAAE,CAACU,CAAC,EAAF,CAAP;AACAG,MAAAA,EAAE,GAAGF,EAAE,GAAGA,EAAV;AACAN,MAAAA,EAAE,IAAI,CAACQ,EAAE,GAAGR,EAAN,IAAYK,CAAlB;AACAJ,MAAAA,EAAE,IAAI,CAACO,EAAE,GAAGF,EAAL,GAAUL,EAAX,IAAiBI,CAAvB;AACAH,MAAAA,EAAE,IAAI,CAACM,EAAE,GAAGA,EAAL,GAAUN,EAAX,IAAiBG,CAAvB;AACAF,MAAAA,EAAE,IAAI,CAACG,EAAE,GAAGC,EAAL,GAAUJ,EAAX,IAAiBE,CAAvB;AACAD,MAAAA,GAAG,IAAI,CAACI,EAAE,GAAGD,EAAL,GAAUH,GAAX,IAAkBC,CAAzB;AACD;;AAED,QAAII,CAAC,GAAG,CAAR;AAAA,QACIC,EAAE,GAAG,CADT;AAAA,QAEIC,IAAI,GAAGpB,MAAM,GAAG,CAACA,MAAM,CAAC,CAAD,CAAV,GAAgBqB,QAFjC;AAAA,QAGIC,IAAI,GAAGtB,MAAM,GAAG,CAACA,MAAM,CAAC,CAAD,CAAV,GAAgB,CAACqB,QAHlC;AAKAzB,IAAAA,WAAW,CAACM,IAAD,EAAOL,CAAP,EAAUE,CAAV,EAAa,UAACgB,EAAD,EAAKC,EAAL,EAAY;AAClCG,MAAAA,EAAE;AACFD,MAAAA,CAAC,IAAI,CAACF,EAAE,GAAGE,CAAN,IAAWC,EAAhB;;AACA,UAAI,CAACnB,MAAL,EAAY;AACV,YAAIe,EAAE,GAAGK,IAAT,EAAeA,IAAI,GAAGL,EAAP;AACf,YAAIA,EAAE,GAAGO,IAAT,EAAeA,IAAI,GAAGP,EAAP;AAChB;AACF,KAPU,CAAX;;AASA,QAAMQ,IAAI,GAAGZ,EAAE,GAAIF,EAAE,GAAGA,EAAxB;AAAA,QACMX,CAAC,GAAIW,EAAE,GAAGc,IAAL,GAAYb,EAAE,GAAGA,EAD5B;AAAA,QAEMc,CAAC,GAAG,CAACX,GAAG,GAAGJ,EAAN,GAAWG,EAAE,GAAGF,EAAjB,IAAuBZ,CAFjC;AAAA,QAGM2B,CAAC,GAAG,CAACb,EAAE,GAAGW,IAAL,GAAYV,GAAG,GAAGH,EAAnB,IAAyBZ,CAHnC;AAAA,QAIM4B,CAAC,GAAG,CAACF,CAAD,GAAKf,EAJf;AAAA,QAKMkB,EAAE,GAAG,SAALA,EAAK,CAAA9B,CAAC,EAAI;AACRA,MAAAA,CAAC,GAAGA,CAAC,GAAGQ,EAAR;AACA,aAAOmB,CAAC,GAAG3B,CAAJ,GAAQA,CAAR,GAAY4B,CAAC,GAAG5B,CAAhB,GAAoB6B,CAApB,GAAwBpB,EAA/B;AACD,KARP;;AAUA,QAAMsB,GAAG,GAAGlC,SAAS,CAAC0B,IAAD,EAAOE,IAAP,EAAaK,EAAb,CAArB;AAEAC,IAAAA,GAAG,CAACJ,CAAJ,GAAQA,CAAR;AACAI,IAAAA,GAAG,CAACH,CAAJ,GAAQA,CAAC,GAAG,IAAID,CAAJ,GAAQnB,EAApB;AACAuB,IAAAA,GAAG,CAACF,CAAJ,GAAQA,CAAC,GAAGD,CAAC,GAAGpB,EAAR,GAAamB,CAAC,GAAGnB,EAAJ,GAASA,EAAtB,GAA2BC,EAAnC;AACAsB,IAAAA,GAAG,CAACC,OAAJ,GAAcF,EAAd;AACAC,IAAAA,GAAG,CAACE,QAAJ,GAAerC,aAAa,CAACS,IAAD,EAAOL,CAAP,EAAUE,CAAV,EAAamB,CAAb,EAAgBS,EAAhB,CAA5B;AAEA,WAAOC,GAAP;AACD;;AAED3B,EAAAA,SAAS,CAACD,MAAV,GAAmB,UAAS+B,GAAT,EAAa;AAC9B,WAAOC,SAAS,CAACxB,MAAV,IAAoBR,MAAM,GAAG+B,GAAT,EAAc9B,SAAlC,IAA+CD,MAAtD;AACD,GAFD;;AAIAC,EAAAA,SAAS,CAACJ,CAAV,GAAc,UAAS8B,EAAT,EAAY;AACxB,WAAOK,SAAS,CAACxB,MAAV,IAAoBX,CAAC,GAAG8B,EAAJ,EAAQ1B,SAA5B,IAAyCJ,CAAhD;AACD,GAFD;;AAIAI,EAAAA,SAAS,CAACF,CAAV,GAAc,UAAS4B,EAAT,EAAY;AACxB,WAAOK,SAAS,CAACxB,MAAV,IAAoBT,CAAC,GAAG4B,EAAJ,EAAQ1B,SAA5B,IAAyCF,CAAhD;AACD,GAFD;;AAIA,SAAOE,SAAP;AACD","sourcesContent":["import { determination } from \"./utils/determination\";\nimport { interpose } from \"./utils/interpose\";\nimport { points, visitPoints } from \"./utils/points\";\n\nexport default function(){\n  let x = d => d[0],\n      y = d => d[1],\n      domain;\n\n  function quadratic(data){\n    const [xv, yv, ux, uy] = points(data, x, y),\n          n = xv.length;\n    \n    let X2 = 0,\n        X3 = 0,\n        X4 = 0,\n        XY = 0,\n        X2Y = 0,\n        i, dx, dy, x2;\n\n    for (i = 0; i < n;) {\n      dx = xv[i];\n      dy = yv[i++];\n      x2 = dx * dx;\n      X2 += (x2 - X2) / i;\n      X3 += (x2 * dx - X3) / i;\n      X4 += (x2 * x2 - X4) / i;\n      XY += (dx * dy - XY) / i;\n      X2Y += (x2 * dy - X2Y) / i;\n    }\n    \n    let Y = 0,\n        n0 = 0,\n        xmin = domain ? +domain[0] : Infinity,\n        xmax = domain ? +domain[1] : -Infinity;\n    \n    visitPoints(data, x, y, (dx, dy) => {\n      n0++;\n      Y += (dy - Y) / n0;\n      if (!domain){\n        if (dx < xmin) xmin = dx;\n        if (dx > xmax) xmax = dx;\n      }\n    });\n    \n    const X2X2 = X4 - (X2 * X2),\n          d = (X2 * X2X2 - X3 * X3),\n          a = (X2Y * X2 - XY * X3) / d,\n          b = (XY * X2X2 - X2Y * X3) / d,\n          c = -a * X2,\n          fn = x => {\n            x = x - ux;\n            return a * x * x + b * x + c + uy;\n          };\n    \n    const out = interpose(xmin, xmax, fn);\n\n    out.a = a;\n    out.b = b - 2 * a * ux;\n    out.c = c - b * ux + a * ux * ux + uy;\n    out.predict = fn;\n    out.rSquared = determination(data, x, y, Y, fn);\n\n    return out;\n  }\n  \n  quadratic.domain = function(arr){\n    return arguments.length ? (domain = arr, quadratic) : domain;\n  }\n\n  quadratic.x = function(fn){\n    return arguments.length ? (x = fn, quadratic) : x;\n  }\n\n  quadratic.y = function(fn){\n    return arguments.length ? (y = fn, quadratic) : y;\n  }\n  \n  return quadratic;\n}"]},"metadata":{},"sourceType":"module"}