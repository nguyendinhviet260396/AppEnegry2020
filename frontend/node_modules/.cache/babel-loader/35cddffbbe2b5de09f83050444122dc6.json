{"ast":null,"code":"import * as types from './../constants/weather';\nimport moment from 'moment';\nconst inittialState = {\n  listWeather: []\n};\n\nconst reducer = (state = inittialState, action) => {\n  switch (action.type) {\n    case types.REFESH_WEATHER:\n      {\n        return { ...state\n        };\n      }\n\n    case types.REFESH_WEATHER_SUCCESS:\n      {\n        const {\n          data\n        } = action.payload;\n        const new_data = [{\n          name: data.name,\n          country: data.sys.country,\n          temp: data.main.temp,\n          humi: data.main.humidity,\n          wind_speed: data.wind.speed,\n          sunrise: moment.unix(data.sys.sunrise).format('HH:MM:SS'),\n          sunset: moment.unix(data.sys.sunset).format('HH:MM:SS'),\n          description: data.weather[0].main\n        }];\n        return { ...state,\n          listWeather: new_data\n        };\n      }\n\n    case types.REFESH_WEATHER_FAILED:\n      {\n        return { ...state\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/vietn/Desktop/AppEnegry2020/frontend/src/reducers/weather.js"],"names":["types","moment","inittialState","listWeather","reducer","state","action","type","REFESH_WEATHER","REFESH_WEATHER_SUCCESS","data","payload","new_data","name","country","sys","temp","main","humi","humidity","wind_speed","wind","speed","sunrise","unix","format","sunset","description","weather","REFESH_WEATHER_FAILED"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,wBAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,WAAW,EAAE;AADO,CAAtB;;AAIA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGH,aAAT,EAAwBI,MAAxB,KAAmC;AACjD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,KAAK,CAACQ,cAAX;AAA2B;AACzB,eAAO,EACL,GAAGH;AADE,SAAP;AAGD;;AACD,SAAKL,KAAK,CAACS,sBAAX;AAAmC;AACjC,cAAM;AAAEC,UAAAA;AAAF,YAAWJ,MAAM,CAACK,OAAxB;AACA,cAAMC,QAAQ,GAAG,CACf;AACEC,UAAAA,IAAI,EAAEH,IAAI,CAACG,IADb;AAEEC,UAAAA,OAAO,EAAEJ,IAAI,CAACK,GAAL,CAASD,OAFpB;AAGEE,UAAAA,IAAI,EAAEN,IAAI,CAACO,IAAL,CAAUD,IAHlB;AAIEE,UAAAA,IAAI,EAAER,IAAI,CAACO,IAAL,CAAUE,QAJlB;AAKEC,UAAAA,UAAU,EAAEV,IAAI,CAACW,IAAL,CAAUC,KALxB;AAMEC,UAAAA,OAAO,EAAEtB,MAAM,CAACuB,IAAP,CAAYd,IAAI,CAACK,GAAL,CAASQ,OAArB,EAA8BE,MAA9B,CAAqC,UAArC,CANX;AAOEC,UAAAA,MAAM,EAAEzB,MAAM,CAACuB,IAAP,CAAYd,IAAI,CAACK,GAAL,CAASW,MAArB,EAA6BD,MAA7B,CAAoC,UAApC,CAPV;AAQEE,UAAAA,WAAW,EAAEjB,IAAI,CAACkB,OAAL,CAAa,CAAb,EAAgBX;AAR/B,SADe,CAAjB;AAYA,eAAO,EACL,GAAGZ,KADE;AAELF,UAAAA,WAAW,EAAES;AAFR,SAAP;AAID;;AACD,SAAKZ,KAAK,CAAC6B,qBAAX;AAAkC;AAChC,eAAO,EACL,GAAGxB;AADE,SAAP;AAGD;;AACD;AACE,aAAOA,KAAP;AA/BJ;AAiCD,CAlCD;;AAmCA,eAAeD,OAAf","sourcesContent":["import * as types from './../constants/weather';\r\nimport moment from 'moment';\r\n\r\nconst inittialState = {\r\n  listWeather: [],\r\n};\r\n\r\nconst reducer = (state = inittialState, action) => {\r\n  switch (action.type) {\r\n    case types.REFESH_WEATHER: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case types.REFESH_WEATHER_SUCCESS: {\r\n      const { data } = action.payload;\r\n      const new_data = [\r\n        {\r\n          name: data.name,\r\n          country: data.sys.country,\r\n          temp: data.main.temp,\r\n          humi: data.main.humidity,\r\n          wind_speed: data.wind.speed,\r\n          sunrise: moment.unix(data.sys.sunrise).format('HH:MM:SS'),\r\n          sunset: moment.unix(data.sys.sunset).format('HH:MM:SS'),\r\n          description: data.weather[0].main,\r\n        },\r\n      ];\r\n      return {\r\n        ...state,\r\n        listWeather: new_data,\r\n      };\r\n    }\r\n    case types.REFESH_WEATHER_FAILED: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}