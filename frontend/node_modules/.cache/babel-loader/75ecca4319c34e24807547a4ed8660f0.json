{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport BaseComponent from './base';\nimport { move } from '../util/g-util';\n\nvar Breadcrumb =\n/** @class */\nfunction (_super) {\n  __extends(Breadcrumb, _super);\n\n  function Breadcrumb() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.listeners = [];\n\n    _this.onItemGroupToggleActive = function (itemGroup, active) {\n      return function () {\n        var rectShape = itemGroup.get('children').find(function (item) {\n          return item.get('class') === 'item-background';\n        });\n\n        if (rectShape) {\n          rectShape.attr(active ? _this.itemActiveBackgroundStyle : _this.itemBackgroundStyle);\n        }\n\n        _this.getCanvas().draw();\n      };\n    };\n\n    return _this;\n  }\n\n  Breadcrumb.prototype.destroy = function () {\n    this.offEvents();\n\n    _super.prototype.destroy.call(this);\n  };\n\n  Breadcrumb.prototype.initConfig = function (config) {\n    this.x = config.x;\n    this.y = config.y;\n    this.items = config.items || [];\n    this.itemPadding = config.itemPadding || [2, 8, 2, 8];\n    this.backgroundStyle = __assign({\n      lineWidth: 1,\n      stroke: '#ffffff'\n    }, config.backgroundStyle || {});\n    this.itemBackgroundStyle = __assign({\n      fill: '#fff'\n    }, config.itemBackgroundStyle || {});\n    this.itemActiveBackgroundStyle = __assign({\n      fill: '#ccc',\n      opacity: 0.2\n    }, config.itemActiveBackgroundStyle || {});\n    this.separator = config.separator || '/';\n    this.separatorStyle = __assign({\n      textBaseline: 'top',\n      fill: '#000000',\n      opacity: 0.45\n    }, config.separatorStyle || {});\n    this.itemWidth = config.itemWidth;\n    this.itemHeight = config.itemHeight;\n    this.maxItemWidth = config.maxItemWidth;\n    this.textStyle = __assign({\n      textBaseline: 'top',\n      fill: '#000000',\n      opacity: 0.45\n    }, config.textStyle || {});\n  };\n\n  Breadcrumb.prototype.renderInner = function (group) {\n    var startX = 0;\n    var startY = 0;\n    this.offEvents();\n    this.renderItems(group, startX, startY); //this.bindEvents(group);\n\n    move(this.group, this.x, this.y);\n  };\n\n  Breadcrumb.prototype.renderItems = function (group, startX, startY) {\n    var _this = this;\n\n    var _a = this.itemPadding,\n        topPadding = _a[0],\n        rightPadding = _a[1],\n        bottomPadding = _a[2],\n        leftPadding = _a[3];\n    var itemHeight; // background\n\n    var backgroundRect = group.addShape('rect', {\n      class: 'breadcrumb-background',\n      attrs: __assign({\n        x: startX,\n        y: startY,\n        width: 1,\n        height: 1\n      }, this.backgroundStyle)\n    });\n    this.items.forEach(function (item, idx) {\n      // item group\n      var itemGroup = group.addGroup({\n        id: \"item-group-\" + item.key,\n        // data: item.key,\n        data: item,\n        class: 'item-group',\n        attrs: {\n          cursor: 'pointer'\n        }\n      }); // background rect\n\n      var rectShape = itemGroup.addShape('rect', {\n        id: \"item-background-\" + item.key,\n        class: 'item-background',\n        attrs: __assign(__assign({\n          x: startX,\n          y: startY,\n          width: leftPadding + rightPadding,\n          height: topPadding + bottomPadding\n        }, _this.itemBackgroundStyle), {\n          cursor: 'pointer'\n        })\n      });\n      rectShape.name = 'breadcrumb'; // text shape\n\n      var textShape = itemGroup.addShape('text', {\n        id: \"item-text-\" + item.key,\n        class: 'item-text',\n        attrs: __assign(__assign({\n          x: startX + leftPadding,\n          y: startY + topPadding,\n          text: item.text\n        }, _this.textStyle), {\n          cursor: 'pointer'\n        })\n      });\n      textShape.name = 'breadcrumb';\n      var textShapeBBox = textShape.getBBox();\n      itemHeight = _this.itemHeight || textShapeBBox.height;\n      var itemWidth = _this.itemWidth || textShapeBBox.width;\n\n      if (_this.maxItemWidth) {\n        itemWidth = Math.min(itemWidth, _this.maxItemWidth);\n      } // update background rect\n\n\n      var backgroundRectAttr = {\n        x: startX,\n        y: startY,\n        width: itemWidth + leftPadding + rightPadding,\n        height: itemHeight + topPadding + bottomPadding\n      };\n      rectShape.attr('width', backgroundRectAttr.width);\n      rectShape.attr('height', backgroundRectAttr.height); // clip\n\n      itemGroup.setClip({\n        type: 'rect',\n        attrs: backgroundRectAttr\n      });\n      startX += backgroundRectAttr.width; // separator\n\n      if (idx !== _this.items.length - 1) {\n        var sepShape = group.addShape('text', {\n          attrs: __assign({\n            x: startX,\n            y: startY + topPadding,\n            text: _this.separator\n          }, _this.separatorStyle),\n          class: 'separator'\n        });\n        startX += sepShape.getBBox().width;\n      }\n    }); // update background\n\n    backgroundRect.attr({\n      width: startX,\n      height: itemHeight + topPadding + bottomPadding\n    });\n  };\n\n  Breadcrumb.prototype.bindEvents = function (group) {\n    var _this = this;\n\n    var items = this.items;\n    var itemGroups = group.get('children').filter(function (item) {\n      return item.get('class') === 'item-group';\n    });\n\n    var callback = function (event, itemGroup, emitEventName) {\n      return function () {\n        var key = itemGroup.get('data');\n        var item = items.find(function (val) {\n          return val.key === key;\n        });\n\n        _this.emit(emitEventName, {\n          item: item\n        });\n      };\n    };\n\n    itemGroups.forEach(function (itemGroup) {\n      var clickCallback = callback('click', itemGroup, 'onItemClick');\n      var dblclickCallback = callback('dblclick', itemGroup, 'onItemDblclick');\n\n      var mouseEnterCallback = _this.onItemGroupToggleActive(itemGroup, true);\n\n      var mouseLeaveCallback = _this.onItemGroupToggleActive(itemGroup, false);\n\n      itemGroup.on('click', clickCallback);\n      itemGroup.on('dblclick', dblclickCallback);\n      itemGroup.on('mouseenter', mouseEnterCallback);\n      itemGroup.on('mouseleave', mouseLeaveCallback);\n\n      _this.listeners.push({\n        target: itemGroup,\n        event: 'click',\n        callback: clickCallback\n      });\n\n      _this.listeners.push({\n        target: itemGroup,\n        event: 'dblclick',\n        callback: dblclickCallback\n      });\n\n      _this.listeners.push({\n        target: itemGroup,\n        event: 'mouseenter',\n        callback: mouseEnterCallback\n      });\n\n      _this.listeners.push({\n        target: itemGroup,\n        event: 'mouseleave',\n        callback: mouseLeaveCallback\n      });\n    });\n  };\n\n  Breadcrumb.prototype.offEvents = function () {\n    if (this.listeners) {\n      this.listeners.forEach(function (_a) {\n        var target = _a.target,\n            event = _a.event,\n            callback = _a.callback;\n        target.off(event, callback);\n      });\n    }\n\n    this.listeners = [];\n  };\n\n  return Breadcrumb;\n}(BaseComponent);\n\nexport default Breadcrumb;","map":{"version":3,"sources":["../../src/components/breadcrumb.ts"],"names":[],"mappings":"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","sourcesContent":["import BaseComponent, { BaseComponentConfig } from './base';\nimport { IGroup, BBox, IShape } from '../dependents';\nimport { move } from '../util/g-util';\nimport { TextStyle, GraphicStyle } from '../interface/config';\n\nexport interface BreadcrumbItem {\n  key: string;\n  text: string;\n}\n\nexport interface BreadcrumbConfig extends BaseComponentConfig {\n  x: number;\n  y: number;\n  items: BreadcrumbItem[];\n  itemPadding?: [number, number, number, number];\n  backgroundStyle?: GraphicStyle;\n  itemBackgroundStyle?: GraphicStyle;\n  itemActiveBackgroundStyle?: GraphicStyle;\n  separator?: string;\n  separatorStyle?: TextStyle;\n  itemWidth?: number;\n  itemHeight?: number;\n  maxItemWidth?: number;\n  textStyle?: TextStyle;\n}\n\nexport default class Breadcrumb extends BaseComponent<BreadcrumbConfig> {\n  private x: number;\n  private y: number;\n  private items: BreadcrumbItem[];\n  private itemPadding: [number, number, number, number];\n  private backgroundStyle: {\n    fill?: string;\n    stroke?: string;\n    lineWidth?: number;\n  };\n  private itemBackgroundStyle: {\n    fill?: string;\n    opacity?: number;\n  };\n  private itemActiveBackgroundStyle: {\n    fill?: string;\n    opacity?: number;\n  };\n  private separator: string;\n  private separatorStyle: TextStyle;\n  private itemWidth: number | undefined;\n  private itemHeight: number | undefined;\n  private maxItemWidth: number | undefined;\n  private textStyle: TextStyle;\n\n  private listeners: { target: IShape | IGroup; event: string; callback: () => void }[] = [];\n\n  public destroy() {\n    this.offEvents();\n    super.destroy();\n  }\n\n  protected initConfig(config: BreadcrumbConfig) {\n    this.x = config.x;\n    this.y = config.y;\n    this.items = config.items || [];\n    this.itemPadding = config.itemPadding || [2, 8, 2, 8];\n    this.backgroundStyle = { lineWidth: 1, stroke: '#ffffff', ...(config.backgroundStyle || {}) };\n    this.itemBackgroundStyle = { fill: '#fff', ...(config.itemBackgroundStyle || {}) };\n    this.itemActiveBackgroundStyle = { fill: '#ccc', opacity: 0.2, ...(config.itemActiveBackgroundStyle || {}) };\n    this.separator = config.separator || '/';\n    this.separatorStyle = { textBaseline: 'top', fill: '#000000', opacity: 0.45, ...(config.separatorStyle || {}) };\n    this.itemWidth = config.itemWidth;\n    this.itemHeight = config.itemHeight;\n    this.maxItemWidth = config.maxItemWidth;\n    this.textStyle = { textBaseline: 'top', fill: '#000000', opacity: 0.45, ...(config.textStyle || {}) };\n  }\n\n  protected renderInner(group: IGroup) {\n    const startX = 0;\n    const startY = 0;\n    this.offEvents();\n    this.renderItems(group, startX, startY);\n    //this.bindEvents(group);\n    move(this.group, this.x, this.y);\n  }\n\n  private renderItems(group: IGroup, startX: number, startY: number) {\n    const [topPadding, rightPadding, bottomPadding, leftPadding] = this.itemPadding;\n    let itemHeight;\n\n    // background\n    const backgroundRect = group.addShape('rect', {\n      class: 'breadcrumb-background',\n      attrs: {\n        x: startX,\n        y: startY,\n        width: 1,\n        height: 1,\n        ...this.backgroundStyle,\n      },\n    });\n\n    this.items.forEach((item: BreadcrumbItem, idx: number) => {\n      // item group\n      const itemGroup: IGroup = group.addGroup({\n        id: `item-group-${item.key}`,\n        // data: item.key,\n        data: item,\n        class: 'item-group',\n        attrs: {\n          cursor: 'pointer',\n        },\n      });\n\n      // background rect\n\n      const rectShape: any = itemGroup.addShape('rect', {\n        id: `item-background-${item.key}`,\n        class: 'item-background',\n        attrs: {\n          x: startX,\n          y: startY,\n          width: leftPadding + rightPadding,\n          height: topPadding + bottomPadding,\n          ...this.itemBackgroundStyle,\n          cursor: 'pointer',\n        },\n      });\n      rectShape.name = 'breadcrumb';\n\n      // text shape\n      const textShape: any = itemGroup.addShape('text', {\n        id: `item-text-${item.key}`,\n        class: 'item-text',\n        attrs: {\n          x: startX + leftPadding,\n          y: startY + topPadding,\n          text: item.text,\n          ...this.textStyle,\n          cursor: 'pointer',\n        },\n      });\n      textShape.name = 'breadcrumb';\n      const textShapeBBox: BBox = textShape.getBBox();\n      itemHeight = this.itemHeight || textShapeBBox.height;\n      let itemWidth = this.itemWidth || textShapeBBox.width;\n      if (this.maxItemWidth) {\n        itemWidth = Math.min(itemWidth, this.maxItemWidth);\n      }\n      // update background rect\n      const backgroundRectAttr = {\n        x: startX,\n        y: startY,\n        width: itemWidth + leftPadding + rightPadding,\n        height: itemHeight + topPadding + bottomPadding,\n      };\n      rectShape.attr('width', backgroundRectAttr.width);\n      rectShape.attr('height', backgroundRectAttr.height);\n      // clip\n      itemGroup.setClip({\n        type: 'rect',\n        attrs: backgroundRectAttr,\n      });\n      startX += backgroundRectAttr.width;\n\n      // separator\n      if (idx !== this.items.length - 1) {\n        const sepShape: any = group.addShape('text', {\n          attrs: {\n            x: startX,\n            y: startY + topPadding,\n            text: this.separator,\n            ...this.separatorStyle,\n          },\n          class: 'separator',\n        });\n        startX += sepShape.getBBox().width;\n      }\n    });\n\n    // update background\n    backgroundRect.attr({\n      width: startX,\n      height: itemHeight + topPadding + bottomPadding,\n    });\n  }\n\n  private bindEvents(group: IGroup) {\n    const items = this.items;\n    const itemGroups = group.get('children').filter((item) => item.get('class') === 'item-group');\n    const callback = (event: string, itemGroup: IGroup, emitEventName: string) => () => {\n      const key: string = itemGroup.get('data');\n      const item = items.find((val) => val.key === key);\n      this.emit(emitEventName, {\n        item,\n      });\n    };\n\n    itemGroups.forEach((itemGroup) => {\n      const clickCallback = callback('click', itemGroup, 'onItemClick');\n      const dblclickCallback = callback('dblclick', itemGroup, 'onItemDblclick');\n      const mouseEnterCallback = this.onItemGroupToggleActive(itemGroup, true);\n      const mouseLeaveCallback = this.onItemGroupToggleActive(itemGroup, false);\n      itemGroup.on('click', clickCallback);\n      itemGroup.on('dblclick', dblclickCallback);\n      itemGroup.on('mouseenter', mouseEnterCallback);\n      itemGroup.on('mouseleave', mouseLeaveCallback);\n      this.listeners.push({ target: itemGroup, event: 'click', callback: clickCallback });\n      this.listeners.push({ target: itemGroup, event: 'dblclick', callback: dblclickCallback });\n      this.listeners.push({ target: itemGroup, event: 'mouseenter', callback: mouseEnterCallback });\n      this.listeners.push({ target: itemGroup, event: 'mouseleave', callback: mouseLeaveCallback });\n    });\n  }\n\n  private onItemGroupToggleActive = (itemGroup: IGroup, active: boolean) => () => {\n    const rectShape = itemGroup.get('children').find((item) => item.get('class') === 'item-background');\n    if (rectShape) {\n      rectShape.attr(active ? this.itemActiveBackgroundStyle : this.itemBackgroundStyle);\n    }\n    this.getCanvas().draw();\n  };\n\n  private offEvents() {\n    if (this.listeners) {\n      this.listeners.forEach(({ target, event, callback }) => {\n        target.off(event, callback);\n      });\n    }\n    this.listeners = [];\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}