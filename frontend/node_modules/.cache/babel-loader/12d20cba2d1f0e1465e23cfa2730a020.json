{"ast":null,"code":"import { each, deepMix, clone, find } from '@antv/util';\nimport { rgb2arr } from '../../../util/color';\nimport BBox from '../../../util/bbox';\nvar DEFAULT_OFFSET = 8;\n\nfunction mappingColor(band, gray) {\n  var reflect;\n  each(band, function (b) {\n    var map = b;\n\n    if (gray >= map.from && gray < map.to) {\n      reflect = map.color;\n    }\n  });\n  return reflect;\n}\n\nvar RangeColumnLabel =\n/** @class */\nfunction () {\n  function RangeColumnLabel(cfg) {\n    this.destroyed = false;\n    this.view = cfg.view;\n    this.plot = cfg.plot;\n    var defaultOptions = this.getDefaultOptions();\n    this.options = deepMix(defaultOptions, cfg, {});\n\n    if (!this.options.topStyle) {\n      this.options.topStyle = this.options.style;\n    }\n\n    if (!this.options.bottomStyle) {\n      this.options.bottomStyle = this.options.style;\n    }\n\n    this.init();\n  }\n\n  RangeColumnLabel.prototype.init = function () {\n    var _this = this;\n\n    this.container = this.getGeometry().labelsContainer;\n    this.view.on('beforerender', function () {\n      _this.clear();\n\n      _this.plot.canvas.draw();\n    });\n  };\n\n  RangeColumnLabel.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.getGeometry(),\n        coordinate = _a.coordinate,\n        elements = _a.elements;\n\n    this.coord = coordinate;\n    each(elements, function (ele) {\n      var shape = ele.shape;\n\n      var positions = _this.getPosition(shape);\n\n      var values = _this.getValue(shape);\n\n      var textBaeline = _this.getTextBaseline();\n\n      var labels = [];\n      each(positions, function (pos, i) {\n        var style = i === 1 ? _this.options.topStyle : _this.options.bottomStyle;\n\n        var color = _this.getTextColor(shape, i);\n\n        if (_this.options.position === 'inner' && _this.options.adjustColor && color !== 'black') {\n          style.stroke = null;\n        }\n\n        var formatter = _this.options.formatter;\n        var content = formatter ? formatter(values[i]) : values[i];\n\n        var label = _this.container.addShape('text', {\n          attrs: deepMix({}, style, {\n            x: pos.x,\n            y: pos.y,\n            text: content,\n            fill: color,\n            textAlign: 'center',\n            textBaseline: textBaeline[i]\n          }),\n          name: 'label'\n        });\n\n        labels.push(label);\n\n        _this.doAnimation(label);\n      });\n      shape.set('labelShapes', labels);\n\n      _this.adjustPosition(labels[0], labels[1], shape);\n    });\n    this.plot.canvas.draw();\n  };\n\n  RangeColumnLabel.prototype.hide = function () {\n    this.container.set('visible', false);\n    this.plot.canvas.draw();\n  };\n\n  RangeColumnLabel.prototype.show = function () {\n    this.container.set('visible', true);\n    this.plot.canvas.draw();\n  };\n\n  RangeColumnLabel.prototype.clear = function () {\n    if (this.container) {\n      this.container.clear();\n    }\n  };\n\n  RangeColumnLabel.prototype.destroy = function () {\n    if (this.container) {\n      this.container.remove();\n    }\n\n    this.destroyed = true;\n  };\n\n  RangeColumnLabel.prototype.getBBox = function () {\n    return this.container.getBBox();\n  };\n\n  RangeColumnLabel.prototype.getShapeBbox = function (shape) {\n    var _this = this;\n\n    var points = [];\n    each(shape.get('origin').points, function (p) {\n      points.push(_this.coord.convertPoint(p));\n    });\n    var bbox = new BBox(points[0].x, points[1].y, Math.abs(points[2].x - points[0].x), Math.abs(points[0].y - points[1].y));\n    return bbox;\n  };\n\n  RangeColumnLabel.prototype.getDefaultOptions = function () {\n    var theme = this.plot.theme;\n    var labelStyle = theme.label.style;\n    return {\n      position: 'outer',\n      offsetX: 0,\n      offsetY: DEFAULT_OFFSET,\n      style: clone(labelStyle),\n      adjustColor: true,\n      adjustPosition: true\n    };\n  };\n\n  RangeColumnLabel.prototype.getPosition = function (shape) {\n    var bbox = this.getShapeBbox(shape);\n    var minX = bbox.minX,\n        minY = bbox.minY,\n        maxY = bbox.maxY,\n        width = bbox.width;\n    var offsetY = this.options.offsetY;\n    var x = minX + width / 2;\n    var y1, y2;\n\n    if (this.options.position === 'outer') {\n      y1 = minY - offsetY;\n      y2 = maxY + offsetY;\n    } else {\n      y1 = minY + offsetY;\n      y2 = maxY - offsetY;\n    }\n\n    return [{\n      x: x,\n      y: y2\n    }, {\n      x: x,\n      y: y1\n    }];\n  };\n\n  RangeColumnLabel.prototype.getValue = function (shape) {\n    var yField = this.plot.options.yField;\n    return shape.get('origin').data[yField];\n  };\n\n  RangeColumnLabel.prototype.getTextBaseline = function () {\n    if (this.options.position === 'outer') {\n      return ['top', 'bottom'];\n    } else {\n      return ['bottom', 'top'];\n    }\n  };\n\n  RangeColumnLabel.prototype.getTextColor = function (shape, index) {\n    if (this.options.adjustColor && this.options.position === 'inner') {\n      var shapeColor = shape.attr('fill');\n      var shapeOpacity = shape.attr('opacity') ? shape.attr('opacity') : 1;\n      var rgb = rgb2arr(shapeColor);\n      var gray = Math.round(rgb[0] * 0.299 + rgb[1] * 0.587 + rgb[2] * 0.114) / shapeOpacity;\n      var colorBand = [{\n        from: 0,\n        to: 85,\n        color: 'white'\n      }, {\n        from: 85,\n        to: 170,\n        color: '#F6F6F6'\n      }, {\n        from: 170,\n        to: 255,\n        color: 'black'\n      }];\n      var reflect = mappingColor(colorBand, gray);\n      return reflect;\n    }\n\n    var defaultColor = index === 1 ? this.options.topStyle.fill : this.options.bottomStyle.fill;\n    return defaultColor;\n  };\n\n  RangeColumnLabel.prototype.doAnimation = function (label) {\n    if (this.plot.animation && this.plot.animation === false) {\n      return;\n    }\n\n    label.attr('fillOpacity', 0);\n    label.attr('strokeOpacity', 0);\n    label.stopAnimate();\n    label.animate({\n      fillOpacity: 1,\n      strokeOpacity: 1\n    }, 800, 'easeLinear', 500);\n  };\n\n  RangeColumnLabel.prototype.adjustPosition = function (la, lb, shape) {\n    var origin = shape.get('origin');\n    var shapeMinY = origin.y[1];\n    var shapeMaxY = origin.y[0];\n    var bbox = shape.getBBox();\n    var height = bbox.height;\n    var shapeHeight = height;\n    var panelRange = this.view.coordinateBBox;\n    var boxes = [la.getBBox(), lb.getBBox()];\n    var ay = la.attr('y');\n    var by = lb.attr('y');\n\n    if (this.options.adjustPosition && this.options.position === 'inner') {\n      var totalLength = boxes[0].height + boxes[1].height;\n      var isOverlap = boxes[1].maxY - boxes[0].minY > 2;\n      var isTooShort = totalLength > shapeHeight;\n\n      if (isOverlap || isTooShort) {\n        by = shapeMinY - this.options.offsetY;\n        lb.attr('fill', this.options.topStyle.fill);\n        lb.attr('textBaseline', 'bottom');\n        ay = shapeMaxY + this.options.offsetY;\n        la.attr('fill', this.options.bottomStyle.fill);\n        la.attr('textBaseline', 'top');\n        boxes[0] = la.getBBox();\n        boxes[1] = lb.getBBox();\n      }\n    } // fixme: textBaseline 取不准bbox\n\n\n    if (boxes[0].maxY > panelRange.maxY - DEFAULT_OFFSET) {\n      ay = panelRange.maxY - DEFAULT_OFFSET / 2;\n      la.attr('textBaseline', 'bottom');\n    }\n\n    la.attr('y', ay);\n    lb.attr('y', by);\n    this.plot.canvas.draw();\n  };\n\n  RangeColumnLabel.prototype.getGeometry = function () {\n    return find(this.view.geometries, function (geom) {\n      return geom.type === 'interval';\n    });\n  };\n\n  return RangeColumnLabel;\n}();\n\nexport default RangeColumnLabel;","map":{"version":3,"sources":["../../../../src/plots/range-column/component/label.ts"],"names":[],"mappings":"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","sourcesContent":["import { each, deepMix, clone, find } from '@antv/util';\nimport { View, IGroup, Geometry } from '../../../dependents';\nimport { rgb2arr } from '../../../util/color';\nimport BBox from '../../../util/bbox';\n\nconst DEFAULT_OFFSET = 8;\n\nfunction mappingColor(band, gray) {\n  let reflect;\n  each(band, (b) => {\n    const map = b;\n    if (gray >= map.from && gray < map.to) {\n      reflect = map.color;\n    }\n  });\n  return reflect;\n}\n\nexport interface RangeColumnLabelConfig {\n  visible: boolean;\n  position?: 'outer' | 'inner';\n  formatter?: (...args: any[]) => string;\n  offsetX?: number;\n  offsetY?: number;\n  style?: any;\n  topStyle?: any;\n  bottomStyle?: any;\n  adjustColor?: boolean;\n  adjustPosition?: boolean;\n}\n\nexport interface IRangeColumnLabel extends RangeColumnLabelConfig {\n  view: View;\n  plot: any;\n}\n\nexport default class RangeColumnLabel {\n  public options: RangeColumnLabelConfig;\n  public destroyed: boolean = false;\n  private plot: any;\n  private view: View;\n  private coord: any;\n  private container: IGroup;\n\n  constructor(cfg: IRangeColumnLabel) {\n    this.view = cfg.view;\n    this.plot = cfg.plot;\n    const defaultOptions = this.getDefaultOptions();\n    this.options = deepMix(defaultOptions, cfg, {});\n    if (!this.options.topStyle) {\n      this.options.topStyle = this.options.style;\n    }\n    if (!this.options.bottomStyle) {\n      this.options.bottomStyle = this.options.style;\n    }\n    this.init();\n  }\n\n  public init() {\n    this.container = this.getGeometry().labelsContainer;\n    this.view.on('beforerender', () => {\n      this.clear();\n      this.plot.canvas.draw();\n    });\n  }\n\n  public render() {\n    const { coordinate, elements } = this.getGeometry();\n    this.coord = coordinate;\n    each(elements, (ele) => {\n      const shape = ele.shape;\n      const positions = this.getPosition(shape);\n      const values = this.getValue(shape);\n      const textBaeline = this.getTextBaseline();\n      const labels = [];\n      each(positions, (pos, i) => {\n        const style = i === 1 ? this.options.topStyle : this.options.bottomStyle;\n        const color = this.getTextColor(shape, i);\n        if (this.options.position === 'inner' && this.options.adjustColor && color !== 'black') {\n          style.stroke = null;\n        }\n        const formatter = this.options.formatter;\n        const content = formatter ? formatter(values[i]) : values[i];\n        const label = this.container.addShape('text', {\n          attrs: deepMix({}, style, {\n            x: pos.x,\n            y: pos.y,\n            text: content,\n            fill: color,\n            textAlign: 'center',\n            textBaseline: textBaeline[i],\n          }),\n          name: 'label',\n        });\n        labels.push(label);\n        this.doAnimation(label);\n      });\n      shape.set('labelShapes', labels);\n      this.adjustPosition(labels[0], labels[1], shape);\n    });\n    this.plot.canvas.draw();\n  }\n\n  public hide() {\n    this.container.set('visible', false);\n    this.plot.canvas.draw();\n  }\n\n  public show() {\n    this.container.set('visible', true);\n    this.plot.canvas.draw();\n  }\n\n  public clear() {\n    if (this.container) {\n      this.container.clear();\n    }\n  }\n\n  public destroy() {\n    if (this.container) {\n      this.container.remove();\n    }\n    this.destroyed = true;\n  }\n\n  public getBBox() {\n    return this.container.getBBox();\n  }\n\n  protected getShapeBbox(shape) {\n    const points = [];\n    each(shape.get('origin').points, (p) => {\n      points.push(this.coord.convertPoint(p));\n    });\n    const bbox = new BBox(\n      points[0].x,\n      points[1].y,\n      Math.abs(points[2].x - points[0].x),\n      Math.abs(points[0].y - points[1].y)\n    );\n    return bbox;\n  }\n\n  private getDefaultOptions() {\n    const { theme } = this.plot;\n    const labelStyle = theme.label.style;\n    return {\n      position: 'outer',\n      offsetX: 0,\n      offsetY: DEFAULT_OFFSET,\n      style: clone(labelStyle),\n      adjustColor: true,\n      adjustPosition: true,\n    };\n  }\n\n  private getPosition(shape) {\n    const bbox = this.getShapeBbox(shape);\n    const { minX, minY, maxY, width } = bbox;\n    const { offsetY } = this.options;\n    const x = minX + width / 2;\n    let y1, y2;\n    if (this.options.position === 'outer') {\n      y1 = minY - offsetY;\n      y2 = maxY + offsetY;\n    } else {\n      y1 = minY + offsetY;\n      y2 = maxY - offsetY;\n    }\n    return [\n      { x: x, y: y2 },\n      { x: x, y: y1 },\n    ];\n  }\n\n  private getValue(shape) {\n    const { yField } = this.plot.options;\n    return shape.get('origin').data[yField];\n  }\n\n  private getTextBaseline() {\n    if (this.options.position === 'outer') {\n      return ['top', 'bottom'];\n    } else {\n      return ['bottom', 'top'];\n    }\n  }\n\n  private getTextColor(shape, index) {\n    if (this.options.adjustColor && this.options.position === 'inner') {\n      const shapeColor = shape.attr('fill');\n      const shapeOpacity = shape.attr('opacity') ? shape.attr('opacity') : 1;\n      const rgb = rgb2arr(shapeColor);\n      const gray = Math.round(rgb[0] * 0.299 + rgb[1] * 0.587 + rgb[2] * 0.114) / shapeOpacity;\n      const colorBand = [\n        { from: 0, to: 85, color: 'white' },\n        { from: 85, to: 170, color: '#F6F6F6' },\n        { from: 170, to: 255, color: 'black' },\n      ];\n      const reflect = mappingColor(colorBand, gray);\n      return reflect;\n    }\n    const defaultColor = index === 1 ? this.options.topStyle.fill : this.options.bottomStyle.fill;\n    return defaultColor;\n  }\n\n  private doAnimation(label) {\n    if (this.plot.animation && this.plot.animation === false) {\n      return;\n    }\n    label.attr('fillOpacity', 0);\n    label.attr('strokeOpacity', 0);\n    label.stopAnimate();\n    label.animate(\n      {\n        fillOpacity: 1,\n        strokeOpacity: 1,\n      },\n      800,\n      'easeLinear',\n      500\n    );\n  }\n\n  private adjustPosition(la, lb, shape) {\n    const origin = shape.get('origin');\n    const shapeMinY = origin.y[1];\n    const shapeMaxY = origin.y[0];\n    const bbox = shape.getBBox();\n    const { height } = bbox;\n    const shapeHeight = height;\n    const panelRange = this.view.coordinateBBox;\n    const boxes = [la.getBBox(), lb.getBBox()];\n    let ay = la.attr('y');\n    let by = lb.attr('y');\n    if (this.options.adjustPosition && this.options.position === 'inner') {\n      const totalLength = boxes[0].height + boxes[1].height;\n      const isOverlap = boxes[1].maxY - boxes[0].minY > 2;\n      const isTooShort = totalLength > shapeHeight;\n      if (isOverlap || isTooShort) {\n        by = shapeMinY - this.options.offsetY;\n        lb.attr('fill', this.options.topStyle.fill);\n        lb.attr('textBaseline', 'bottom');\n        ay = shapeMaxY + this.options.offsetY;\n        la.attr('fill', this.options.bottomStyle.fill);\n        la.attr('textBaseline', 'top');\n        boxes[0] = la.getBBox();\n        boxes[1] = lb.getBBox();\n      }\n    }\n    // fixme: textBaseline 取不准bbox\n    if (boxes[0].maxY > panelRange.maxY - DEFAULT_OFFSET) {\n      ay = panelRange.maxY - DEFAULT_OFFSET / 2;\n      la.attr('textBaseline', 'bottom');\n    }\n    la.attr('y', ay);\n    lb.attr('y', by);\n    this.plot.canvas.draw();\n  }\n\n  private getGeometry() {\n    return find(this.view.geometries, (geom) => geom.type === 'interval') as Geometry;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}