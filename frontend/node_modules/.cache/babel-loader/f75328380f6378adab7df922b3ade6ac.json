{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { filter, each, findIndex } from '@antv/util';\nimport { InteractionAction, TooltipController, registerComponentController } from '../../../dependents'; // @ts-ignore\n\nvar ActiveTooltipController =\n/** @class */\nfunction (_super) {\n  __extends(ActiveTooltipController, _super);\n\n  function ActiveTooltipController() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(ActiveTooltipController.prototype, \"name\", {\n    get: function () {\n      return 'tooltip-active';\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  ActiveTooltipController.prototype.getTooltipCfg = function () {\n    // @ts-ignore\n    var cfg = _super.prototype.getTooltipCfg.call(this);\n\n    return __assign(__assign({}, cfg), {\n      showCrosshairs: true,\n      showMarkers: false,\n      shared: true\n    });\n  };\n\n  return ActiveTooltipController;\n}(TooltipController);\n\nexport { ActiveTooltipController };\nregisterComponentController('tooltip-active', ActiveTooltipController);\n\nvar MarkerActiveAction =\n/** @class */\nfunction (_super) {\n  __extends(MarkerActiveAction, _super);\n\n  function MarkerActiveAction() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  MarkerActiveAction.prototype.init = function () {\n    // 移除默认的tooltip交互\n    this.getView().removeInteraction('tooltip');\n  };\n\n  MarkerActiveAction.prototype.show = function () {\n    var curLocation = this.getPoint();\n\n    if (curLocation) {\n      this.showTooltip(curLocation);\n    }\n  };\n\n  MarkerActiveAction.prototype.hide = function () {\n    var view = this.getView();\n    var controller = this.getTooltipController();\n    controller.hideTooltip();\n    var points = filter(view.geometries, function (geom) {\n      return geom.type == 'point';\n    });\n    each(points, function (point) {\n      each(point.elements, function (element) {\n        element.setState('active', false);\n      });\n    });\n  };\n\n  MarkerActiveAction.prototype.showTooltip = function (point) {\n    var view = this.getView();\n    var controller = this.getTooltipController();\n    controller.showTooltip(point);\n    var items = controller.getTooltipItems(point);\n    var points = filter(view.geometries, function (geom) {\n      return geom.type == 'point';\n    });\n    each(points, function (point) {\n      each(point.elements, function (element) {\n        element.setState('active', findIndex(items, function (item) {\n          return item.data === element.data;\n        }) !== -1);\n      });\n    });\n  };\n\n  MarkerActiveAction.prototype.getPoint = function () {\n    var ev = this.context.event;\n    return ev ? {\n      x: ev.x,\n      y: ev.y\n    } : null;\n  };\n\n  MarkerActiveAction.prototype.getView = function () {\n    return this.context.view;\n  };\n\n  MarkerActiveAction.prototype.getTooltipController = function () {\n    return this.getView().getController('tooltip-active');\n  };\n\n  return MarkerActiveAction;\n}(InteractionAction);\n\nexport default MarkerActiveAction;","map":{"version":3,"sources":["../../../../src/plots/line/interaction/marker-active.ts"],"names":[],"mappings":"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","sourcesContent":["import { filter, each, findIndex } from '@antv/util';\nimport {\n  InteractionAction,\n  View,\n  TooltipController,\n  Point,\n  registerComponentController,\n  Geometry,\n} from '../../../dependents';\n\n// @ts-ignore\nexport class ActiveTooltipController extends TooltipController {\n  public get name(): string {\n    return 'tooltip-active';\n  }\n  protected getTooltipCfg() {\n    // @ts-ignore\n    const cfg = super.getTooltipCfg();\n    return { ...cfg, showCrosshairs: true, showMarkers: false, shared: true };\n  }\n}\n\nregisterComponentController('tooltip-active', ActiveTooltipController);\n\nclass MarkerActiveAction extends InteractionAction {\n  public init() {\n    // 移除默认的tooltip交互\n    this.getView().removeInteraction('tooltip');\n  }\n\n  public show() {\n    const curLocation = this.getPoint();\n    if (curLocation) {\n      this.showTooltip(curLocation);\n    }\n  }\n\n  public hide() {\n    const view = this.getView();\n    const controller = this.getTooltipController();\n    controller.hideTooltip();\n    const points: Geometry[] = filter(view.geometries, (geom) => geom.type == 'point');\n    each(points, (point: Geometry) => {\n      each(point.elements, (element) => {\n        element.setState('active', false);\n      });\n    });\n  }\n\n  public showTooltip(point: Point) {\n    const view = this.getView();\n    const controller = this.getTooltipController();\n    controller.showTooltip(point);\n    const items = controller.getTooltipItems(point);\n    const points: Geometry[] = filter(view.geometries, (geom) => geom.type == 'point');\n    each(points, (point: Geometry) => {\n      each(point.elements, (element) => {\n        element.setState('active', findIndex(items, (item) => item.data === element.data) !== -1);\n      });\n    });\n  }\n\n  private getPoint(): Point | null {\n    const ev = this.context.event;\n\n    return ev ? { x: ev.x, y: ev.y } : null;\n  }\n\n  private getView(): View {\n    return this.context.view;\n  }\n\n  private getTooltipController() {\n    return this.getView().getController('tooltip-active') as TooltipController;\n  }\n}\n\nexport default MarkerActiveAction;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}