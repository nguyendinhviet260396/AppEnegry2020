{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport deepMix from '@antv/util/lib/deep-mix';\nimport Global from '../../global';\nimport Shape from '../shape'; // 带有图标的圆，可用于拓扑图中\n\nShape.registerNode('circle', {\n  // 自定义节点时的配置\n  options: {\n    size: Global.defaultNode.size,\n    style: {\n      x: 0,\n      y: 0,\n      stroke: Global.defaultShapeStrokeColor,\n      fill: Global.defaultShapeFillColor,\n      lineWidth: Global.defaultNode.style.lineWidth\n    },\n    labelCfg: {\n      style: {\n        fill: '#595959'\n      }\n    },\n    // 节点上左右上下四个方向上的链接circle配置\n    linkPoints: {\n      top: false,\n      right: false,\n      bottom: false,\n      left: false,\n      // circle的大小\n      size: 10,\n      lineWidth: 1,\n      fill: '#72CC4A',\n      stroke: '#72CC4A'\n    },\n    // 节点中icon配置\n    icon: {\n      // 是否显示icon，值为 false 则不渲染icon\n      show: false,\n      // icon的地址，字符串类型\n      img: 'https://gw.alipayobjects.com/zos/basement_prod/012bcf4f-423b-4922-8c24-32a89f8c41ce.svg',\n      width: 16,\n      height: 16\n    }\n  },\n  shapeType: 'circle',\n  // 文本位置\n  labelPosition: 'center',\n  drawShape: function drawShape(cfg, group) {\n    var _a = this.getOptions(cfg).icon,\n        defaultIcon = _a === void 0 ? {} : _a;\n    var style = this.getShapeStyle(cfg);\n    var icon = deepMix({}, defaultIcon, cfg.icon);\n    var keyShape = group.addShape('circle', {\n      attrs: style,\n      className: this.type + \"-keyShape\",\n      draggable: true\n    });\n    var width = icon.width,\n        height = icon.height,\n        show = icon.show;\n\n    if (show) {\n      group.addShape('image', {\n        attrs: __assign({\n          x: -width / 2,\n          y: -height / 2\n        }, icon),\n        className: this.type + \"-icon\",\n        name: this.type + \"-icon\",\n        draggable: true\n      });\n    }\n\n    this.drawLinkPoints(cfg, group);\n    return keyShape;\n  },\n\n  /**\n   * 绘制节点上的LinkPoints\n   * @param {Object} cfg data数据配置项\n   * @param {Group} group Group实例\n   */\n  drawLinkPoints: function drawLinkPoints(cfg, group) {\n    var _a = this.getOptions(cfg).linkPoints,\n        linkPoints = _a === void 0 ? {} : _a;\n\n    var top = linkPoints.top,\n        left = linkPoints.left,\n        right = linkPoints.right,\n        bottom = linkPoints.bottom,\n        markSize = linkPoints.size,\n        markR = linkPoints.r,\n        markStyle = __rest(linkPoints, [\"top\", \"left\", \"right\", \"bottom\", \"size\", \"r\"]);\n\n    var size = this.getSize(cfg);\n    var r = size[0] / 2;\n\n    if (left) {\n      // left circle\n      group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: -r,\n          y: 0,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-left',\n        name: 'link-point-left',\n        isAnchorPoint: true\n      });\n    }\n\n    if (right) {\n      // right circle\n      group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: r,\n          y: 0,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-right',\n        name: 'link-point-right',\n        isAnchorPoint: true\n      });\n    }\n\n    if (top) {\n      // top circle\n      group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: 0,\n          y: -r,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-top',\n        name: 'link-point-top',\n        isAnchorPoint: true\n      });\n    }\n\n    if (bottom) {\n      // bottom circle\n      group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: 0,\n          y: r,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-bottom',\n        name: 'link-point-bottom',\n        isAnchorPoint: true\n      });\n    }\n  },\n\n  /**\n   * 获取节点的样式，供基于该节点自定义时使用\n   * @param {Object} cfg 节点数据模型\n   * @return {Object} 节点的样式\n   */\n  getShapeStyle: function getShapeStyle(cfg) {\n    var defaultStyle = this.getOptions(cfg).style;\n    var strokeStyle = {\n      stroke: cfg.color\n    }; // 如果设置了color，则覆盖默认的stroke属性\n\n    var style = deepMix({}, defaultStyle, strokeStyle);\n    var size = this.getSize(cfg);\n    var r = size[0] / 2;\n\n    var styles = __assign({\n      x: 0,\n      y: 0,\n      r: r\n    }, style);\n\n    return styles;\n  },\n  update: function update(cfg, item) {\n    var group = item.getContainer();\n    var size = this.getSize(cfg); // 下面这些属性需要覆盖默认样式与目前样式，但若在 cfg 中有指定则应该被 cfg 的相应配置覆盖。\n\n    var strokeStyle = {\n      stroke: cfg.color,\n      r: size[0] / 2\n    }; // 与 getShapeStyle 不同在于，update 时需要获取到当前的 style 进行融合。即新传入的配置项中没有涉及的属性，保留当前的配置。\n\n    var keyShape = item.get('keyShape');\n    var style = deepMix({}, keyShape.attr(), strokeStyle, cfg.style);\n    this.updateShape(cfg, item, style, true);\n    this.updateLinkPoints(cfg, group);\n  }\n}, 'single-node');","map":{"version":3,"sources":["C:/Users/vietn/Desktop/AppEnegry2020/frontend/node_modules/@antv/g6/es/shape/nodes/circle.js"],"names":["__assign","__rest","deepMix","Global","Shape","registerNode","options","size","defaultNode","style","x","y","stroke","defaultShapeStrokeColor","fill","defaultShapeFillColor","lineWidth","labelCfg","linkPoints","top","right","bottom","left","icon","show","img","width","height","shapeType","labelPosition","drawShape","cfg","group","_a","getOptions","defaultIcon","getShapeStyle","keyShape","addShape","attrs","className","type","draggable","name","drawLinkPoints","markSize","markR","r","markStyle","getSize","isAnchorPoint","defaultStyle","strokeStyle","color","styles","update","item","getContainer","get","attr","updateShape","updateLinkPoints"],"mappings":"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","sourcesContent":["import { __assign, __rest } from \"tslib\";\nimport deepMix from '@antv/util/lib/deep-mix';\nimport Global from '../../global';\nimport Shape from '../shape'; // 带有图标的圆，可用于拓扑图中\n\nShape.registerNode('circle', {\n  // 自定义节点时的配置\n  options: {\n    size: Global.defaultNode.size,\n    style: {\n      x: 0,\n      y: 0,\n      stroke: Global.defaultShapeStrokeColor,\n      fill: Global.defaultShapeFillColor,\n      lineWidth: Global.defaultNode.style.lineWidth\n    },\n    labelCfg: {\n      style: {\n        fill: '#595959'\n      }\n    },\n    // 节点上左右上下四个方向上的链接circle配置\n    linkPoints: {\n      top: false,\n      right: false,\n      bottom: false,\n      left: false,\n      // circle的大小\n      size: 10,\n      lineWidth: 1,\n      fill: '#72CC4A',\n      stroke: '#72CC4A'\n    },\n    // 节点中icon配置\n    icon: {\n      // 是否显示icon，值为 false 则不渲染icon\n      show: false,\n      // icon的地址，字符串类型\n      img: 'https://gw.alipayobjects.com/zos/basement_prod/012bcf4f-423b-4922-8c24-32a89f8c41ce.svg',\n      width: 16,\n      height: 16\n    }\n  },\n  shapeType: 'circle',\n  // 文本位置\n  labelPosition: 'center',\n  drawShape: function drawShape(cfg, group) {\n    var _a = this.getOptions(cfg).icon,\n        defaultIcon = _a === void 0 ? {} : _a;\n    var style = this.getShapeStyle(cfg);\n    var icon = deepMix({}, defaultIcon, cfg.icon);\n    var keyShape = group.addShape('circle', {\n      attrs: style,\n      className: this.type + \"-keyShape\",\n      draggable: true\n    });\n    var width = icon.width,\n        height = icon.height,\n        show = icon.show;\n\n    if (show) {\n      group.addShape('image', {\n        attrs: __assign({\n          x: -width / 2,\n          y: -height / 2\n        }, icon),\n        className: this.type + \"-icon\",\n        name: this.type + \"-icon\",\n        draggable: true\n      });\n    }\n\n    this.drawLinkPoints(cfg, group);\n    return keyShape;\n  },\n\n  /**\n   * 绘制节点上的LinkPoints\n   * @param {Object} cfg data数据配置项\n   * @param {Group} group Group实例\n   */\n  drawLinkPoints: function drawLinkPoints(cfg, group) {\n    var _a = this.getOptions(cfg).linkPoints,\n        linkPoints = _a === void 0 ? {} : _a;\n\n    var top = linkPoints.top,\n        left = linkPoints.left,\n        right = linkPoints.right,\n        bottom = linkPoints.bottom,\n        markSize = linkPoints.size,\n        markR = linkPoints.r,\n        markStyle = __rest(linkPoints, [\"top\", \"left\", \"right\", \"bottom\", \"size\", \"r\"]);\n\n    var size = this.getSize(cfg);\n    var r = size[0] / 2;\n\n    if (left) {\n      // left circle\n      group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: -r,\n          y: 0,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-left',\n        name: 'link-point-left',\n        isAnchorPoint: true\n      });\n    }\n\n    if (right) {\n      // right circle\n      group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: r,\n          y: 0,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-right',\n        name: 'link-point-right',\n        isAnchorPoint: true\n      });\n    }\n\n    if (top) {\n      // top circle\n      group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: 0,\n          y: -r,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-top',\n        name: 'link-point-top',\n        isAnchorPoint: true\n      });\n    }\n\n    if (bottom) {\n      // bottom circle\n      group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: 0,\n          y: r,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-bottom',\n        name: 'link-point-bottom',\n        isAnchorPoint: true\n      });\n    }\n  },\n\n  /**\n   * 获取节点的样式，供基于该节点自定义时使用\n   * @param {Object} cfg 节点数据模型\n   * @return {Object} 节点的样式\n   */\n  getShapeStyle: function getShapeStyle(cfg) {\n    var defaultStyle = this.getOptions(cfg).style;\n    var strokeStyle = {\n      stroke: cfg.color\n    }; // 如果设置了color，则覆盖默认的stroke属性\n\n    var style = deepMix({}, defaultStyle, strokeStyle);\n    var size = this.getSize(cfg);\n    var r = size[0] / 2;\n\n    var styles = __assign({\n      x: 0,\n      y: 0,\n      r: r\n    }, style);\n\n    return styles;\n  },\n  update: function update(cfg, item) {\n    var group = item.getContainer();\n    var size = this.getSize(cfg); // 下面这些属性需要覆盖默认样式与目前样式，但若在 cfg 中有指定则应该被 cfg 的相应配置覆盖。\n\n    var strokeStyle = {\n      stroke: cfg.color,\n      r: size[0] / 2\n    }; // 与 getShapeStyle 不同在于，update 时需要获取到当前的 style 进行融合。即新传入的配置项中没有涉及的属性，保留当前的配置。\n\n    var keyShape = item.get('keyShape');\n    var style = deepMix({}, keyShape.attr(), strokeStyle, cfg.style);\n    this.updateShape(cfg, item, style, true);\n    this.updateLinkPoints(cfg, group);\n  }\n}, 'single-node');"]},"metadata":{},"sourceType":"module"}