{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { MarkerSymbols } from '../dependents';\nimport { deepMix, isMatch, isString, isArray, each, find } from '@antv/util';\nimport { DEFAULT_ANIMATE_CFG } from '@antv/g2/lib/animate';\nvar DEFAULT_STYLE = {\n  stroke: 'transparent',\n  fill: '#FCC509',\n  lineWidth: 0\n};\nvar ACTIVE_STYLE = {\n  stroke: '#FFF',\n  fill: '#FCC509',\n  lineWidth: 1\n};\nvar SELECTED_STYLE = {\n  stroke: 'rgba(0,0,0,0.85)',\n  fill: '#FCC509',\n  lineWidth: 1\n};\n/**\n * 标注点 绘制在最顶层\n */\n\nvar MarkerPoint =\n/** @class */\nfunction () {\n  function MarkerPoint(cfg) {\n    this.points = [];\n    this.labels = [];\n    this.name = 'markerPoints';\n    this.defaultCfg = {\n      offsetX: 0,\n      offsetY: 0,\n      style: {\n        normal: DEFAULT_STYLE,\n        selected: SELECTED_STYLE,\n        active: ACTIVE_STYLE\n      },\n      label: {\n        visible: false,\n        offsetY: -8,\n        position: 'top',\n        style: {\n          fill: 'rgba(0, 0, 0, 0.85)'\n        }\n      },\n      animation: false\n    };\n    this.view = cfg.view;\n    this.size = cfg.size || 6;\n    this.config = deepMix({}, this.defaultCfg, cfg);\n\n    this._init();\n  }\n\n  MarkerPoint.prototype.render = function () {\n    var dataArray = this.getDataArray();\n\n    this._renderPoints(dataArray);\n\n    this.view.canvas.draw();\n\n    this._addInteraction();\n  };\n\n  MarkerPoint.prototype.clear = function () {\n    if (this.container) {\n      this.container.clear();\n    }\n  };\n\n  MarkerPoint.prototype.destroy = function () {\n    if (this.container) {\n      this.container.remove();\n    }\n\n    this.points = [];\n    this.labels = [];\n  };\n\n  MarkerPoint.prototype.getDataArray = function () {\n    var geometry = this.view.geometries[0];\n    return geometry.dataArray;\n  };\n\n  MarkerPoint.prototype._init = function () {\n    var _this = this;\n\n    var layer = this.view.foregroundGroup;\n    this.container = layer.addGroup();\n    this.render();\n    this.view.on('beforerender', function () {\n      _this.clear();\n    });\n  };\n\n  MarkerPoint.prototype._renderPoints = function (dataArray) {\n    var _this = this;\n\n    each(this.config.data, function (dataItem, dataItemIdx) {\n      each(dataArray, function (dataum) {\n        var origin = find(dataum, function (d) {\n          return isMatch(d._origin, dataItem);\n        });\n\n        if (origin) {\n          var pointAttrs = _this.config.style.normal;\n\n          var group = _this.container.addGroup({\n            name: _this.name\n          });\n\n          var x = origin.x,\n              y = origin.y;\n\n          if (isArray(x)) {\n            x = x[0];\n          }\n\n          if (isArray(y)) {\n            y = y[0];\n          }\n\n          var symbol = _this.config.symbol;\n          var _a = _this.config,\n              offsetX = _a.offsetX,\n              offsetY = _a.offsetY;\n          var point = void 0;\n\n          if (isString(symbol) && symbol.startsWith('image://')) {\n            var imageUrl = symbol.substr(8);\n            point = group.addShape('image', {\n              attrs: {\n                x: x - _this.size / 2 + offsetX,\n                y: y - _this.size / 2 + offsetY,\n                img: imageUrl,\n                width: _this.size,\n                height: _this.size\n              }\n            });\n          } else {\n            symbol = isString(symbol) ? MarkerSymbols[symbol] : symbol;\n            point = group.addShape({\n              type: 'marker',\n              name: 'marker-point',\n              id: \"point-\" + dataItemIdx,\n              attrs: __assign(__assign({\n                x: x + offsetX,\n                y: y + offsetY,\n                r: _this.size / 2\n              }, pointAttrs), {\n                symbol: symbol\n              })\n            });\n          }\n\n          _this.points.push(point);\n\n          _this._animatePoint(point);\n\n          _this._renderLabel(group, origin, dataItemIdx);\n\n          group.set('data', dataItem);\n          group.set('origin', origin);\n        }\n      });\n    });\n  };\n\n  MarkerPoint.prototype._renderLabel = function (container, origin, index) {\n    var labelCfg = this.config.label;\n\n    if (labelCfg && labelCfg.visible) {\n      var _a = labelCfg.offsetX,\n          offsetX = _a === void 0 ? 0 : _a,\n          _b = labelCfg.offsetY,\n          offsetY = _b === void 0 ? 0 : _b,\n          formatter = labelCfg.formatter,\n          position = labelCfg.position,\n          field = labelCfg.field;\n      var text = origin._origin[field];\n\n      if (formatter) {\n        text = formatter(text, {\n          _origin: origin._origin\n        }, index);\n      }\n\n      var x = isArray(origin.x) ? origin.x[0] : origin.x;\n      var y = isArray(origin.y) ? origin.y[0] : origin.y;\n      var label = container.addShape('text', {\n        name: 'marker-label',\n        id: \"label-\" + index,\n        attrs: __assign(__assign({\n          x: x + offsetX,\n          y: y + offsetY,\n          text: text || ''\n        }, labelCfg.style), {\n          textAlign: 'center',\n          textBaseline: position === 'top' ? 'bottom' : 'top'\n        })\n      });\n      this.labels.push(label);\n    }\n  };\n\n  MarkerPoint.prototype._addInteraction = function () {\n    var _this = this;\n\n    var events = this.config.events;\n    each(events, function (cb, eventName) {\n      _this.container.on(_this.name + \":\" + eventName, function (e) {\n        cb(e);\n        var target = e.target.get('parent');\n        var pointShape = target.get('children')[0];\n\n        if (pointShape) {\n          var data = pointShape.get('data');\n          var id = pointShape.get('id');\n          var condition = {\n            id: id,\n            data: data\n          };\n\n          if (eventName === 'click') {\n            if (_this.selectedPoint && _this.selectedPoint.get('id') === id) {\n              _this.selectedPoint = null;\n\n              _this.setState('inactive', condition);\n            } else {\n              _this.selectedPoint = pointShape;\n\n              _this.setState('selected', condition);\n            }\n          } else if (eventName === 'mouseenter') {\n            _this.setState('active', condition);\n          } else if (eventName === 'mouseleave') {\n            _this.setState('inactive', condition);\n          }\n        }\n\n        _this.view.canvas.draw();\n      });\n\n      _this.view.on('click', function (e) {\n        var target = e.target.get('parent');\n\n        if (!target || target.get('name') !== _this.name && _this.selectedPoint) {\n          _this.selectedPoint = null;\n\n          _this.setState('inactive');\n        }\n      });\n    });\n  };\n\n  MarkerPoint.prototype.setState = function (state, condition) {\n    var _this = this;\n\n    if (state === 'active') {\n      if (!this.selectedPoint || condition.id !== this.selectedPoint.get('id')) {\n        this._onActive(condition);\n      }\n    } else if (state === 'inactive') {\n      this.points.forEach(function (p) {\n        return _this._onInactive(p);\n      });\n    } else if (state === 'selected') {\n      this._onSelected(condition);\n    }\n  };\n\n  MarkerPoint.prototype._onActive = function (condition) {\n    var _this = this;\n\n    var active = this.config.style.active;\n    each(this.points, function (point) {\n      if (point.get('id') === condition.id) {\n        each(active, function (v, k) {\n          point.attr(k, v);\n        });\n      } else {\n        _this._onInactive(point);\n      }\n    });\n  };\n\n  MarkerPoint.prototype._onInactive = function (point) {\n    var normal = this.config.style.normal;\n\n    if (!this.selectedPoint || point.get('id') !== this.selectedPoint.get('id')) {\n      each(normal, function (v, k) {\n        point.attr(k, v);\n      });\n    }\n  };\n\n  MarkerPoint.prototype._onSelected = function (condition) {\n    var _this = this;\n\n    var selected = this.config.style.selected;\n    each(this.points, function (point) {\n      if (point.get('id') === condition.id) {\n        each(selected, function (v, k) {\n          point.attr(k, v);\n        });\n      } else {\n        _this._onInactive(point);\n      }\n    });\n  };\n  /** point animation, not for label */\n\n\n  MarkerPoint.prototype._animatePoint = function (shape) {\n    var _a = this.config,\n        animation = _a.animation,\n        size = _a.size;\n\n    if (animation !== false) {\n      var _b = animation,\n          _c = _b.endState,\n          endState = _c === void 0 ? {} : _c,\n          _d = _b.animateCfg,\n          animateCfg = _d === void 0 ? DEFAULT_ANIMATE_CFG.appear : _d;\n      shape.animate(__assign({\n        r: Number.isNaN(endState.size / 2) ? size / 2 : endState.size / 2\n      }, endState), animateCfg);\n    }\n  };\n\n  return MarkerPoint;\n}();\n\nexport default MarkerPoint;","map":{"version":3,"sources":["../../src/components/marker-point.ts"],"names":[],"mappings":"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","sourcesContent":["import { View, IGroup, IShape, MarkerSymbols } from '../dependents';\nimport { deepMix, isMatch, isString, isArray, each, find } from '@antv/util';\nimport { MappingDatum, GAnimateCfg } from '@antv/g2/lib/interface';\nimport { DEFAULT_ANIMATE_CFG } from '@antv/g2/lib/animate';\nimport { Event } from '@antv/g2/lib/dependents';\n\ninterface PointStyle {\n  size?: number;\n  fill?: string;\n  stroke?: string;\n  lineWidth?: number;\n}\n\ninterface MarkerItem {\n  _origin: object;\n}\n\ntype AnimationOption = {\n  endState: PointStyle;\n  animateCfg: GAnimateCfg;\n};\n\ninterface Cfg {\n  view: View;\n  data: any[];\n  // 'image://http://xxx.xxx.xxx/a/b.png'\n  symbol?: string | ((x: number, y: number, r: number) => any[][]);\n  size?: number;\n  /** 标注点 point 坐标的 x 偏移 */\n  offsetX?: number;\n  offsetY?: number;\n  label?: {\n    visible: boolean;\n    /** marker point 映射的字段 */\n    field?: string;\n    /** _origin: 原始数据 */\n    formatter?: (text: string, item: MarkerItem, index: number) => string;\n    position?: 'top' | 'bottom';\n    offsetX?: number;\n    offsetY?: number;\n    style?: object;\n  };\n  style?: {\n    normal?: PointStyle;\n    active?: PointStyle;\n    selected?: PointStyle;\n  };\n  events?: {\n    mouseenter?: (e: Event) => void;\n    mouseleave?: (e: Event) => void;\n    click?: (e: Event) => void;\n  };\n  animation?: boolean | AnimationOption;\n}\n\nconst DEFAULT_STYLE = {\n  stroke: 'transparent',\n  fill: '#FCC509',\n  lineWidth: 0,\n};\n\nconst ACTIVE_STYLE = {\n  stroke: '#FFF',\n  fill: '#FCC509',\n  lineWidth: 1,\n};\n\nconst SELECTED_STYLE = {\n  stroke: 'rgba(0,0,0,0.85)',\n  fill: '#FCC509',\n  lineWidth: 1,\n};\n\ninterface StateCondition {\n  id: string;\n  data: {};\n}\ntype State = 'active' | 'inactive' | 'selected';\n\nexport { Cfg as MarkerPointCfg };\n\n/**\n * 标注点 绘制在最顶层\n */\nexport default class MarkerPoint {\n  public view: View;\n  public container: IGroup;\n  public config: Cfg;\n  private points: IShape[] = [];\n  private labels: IShape[] = [];\n  private size: number;\n  private name = 'markerPoints';\n  private selectedPoint: IShape;\n\n  protected defaultCfg = {\n    offsetX: 0,\n    offsetY: 0,\n    style: { normal: DEFAULT_STYLE, selected: SELECTED_STYLE, active: ACTIVE_STYLE },\n    label: {\n      visible: false,\n      offsetY: -8,\n      position: 'top',\n      style: {\n        fill: 'rgba(0, 0, 0, 0.85)',\n      },\n    },\n    animation: false,\n  };\n\n  constructor(cfg: Cfg) {\n    this.view = cfg.view;\n    this.size = cfg.size || 6;\n    this.config = deepMix({}, this.defaultCfg, cfg);\n    this._init();\n  }\n\n  public render() {\n    const dataArray = this.getDataArray();\n    this._renderPoints(dataArray);\n    this.view.canvas.draw();\n    this._addInteraction();\n  }\n\n  public clear() {\n    if (this.container) {\n      this.container.clear();\n    }\n  }\n\n  public destroy() {\n    if (this.container) {\n      this.container.remove();\n    }\n    this.points = [];\n    this.labels = [];\n  }\n\n  protected getDataArray(): MappingDatum[][] {\n    const geometry = this.view.geometries[0];\n    return geometry.dataArray;\n  }\n\n  private _init() {\n    const layer = this.view.foregroundGroup;\n    this.container = layer.addGroup();\n    this.render();\n    this.view.on('beforerender', () => {\n      this.clear();\n    });\n  }\n\n  private _renderPoints(dataArray: MappingDatum[][]) {\n    each(this.config.data, (dataItem, dataItemIdx) => {\n      each(dataArray, (dataum: MappingDatum[]) => {\n        const origin = find(dataum, (d) => isMatch(d._origin, dataItem));\n        if (origin) {\n          const pointAttrs = this.config.style.normal;\n          const group = this.container.addGroup({ name: this.name });\n          let { x, y } = origin;\n          if (isArray(x)) {\n            x = x[0];\n          }\n          if (isArray(y)) {\n            y = y[0];\n          }\n          let symbol = this.config.symbol;\n          const { offsetX, offsetY } = this.config;\n          let point;\n          if (isString(symbol) && symbol.startsWith('image://')) {\n            const imageUrl = symbol.substr(8);\n            point = group.addShape('image', {\n              attrs: {\n                x: x - this.size / 2 + offsetX,\n                y: y - this.size / 2 + offsetY,\n                img: imageUrl,\n                width: this.size,\n                height: this.size,\n              },\n            });\n          } else {\n            symbol = isString(symbol) ? MarkerSymbols[symbol] : symbol;\n            point = group.addShape({\n              type: 'marker',\n              name: 'marker-point',\n              id: `point-${dataItemIdx}`,\n              attrs: {\n                x: x + offsetX,\n                y: y + offsetY,\n                r: this.size / 2,\n                ...pointAttrs,\n                symbol,\n              },\n            });\n          }\n          this.points.push(point);\n          this._animatePoint(point);\n          this._renderLabel(group, origin, dataItemIdx);\n          group.set('data', dataItem);\n          group.set('origin', origin);\n        }\n      });\n    });\n  }\n\n  private _renderLabel(container: IGroup, origin: MappingDatum, index) {\n    const { label: labelCfg } = this.config;\n    if (labelCfg && labelCfg.visible) {\n      const { offsetX = 0, offsetY = 0, formatter, position, field } = labelCfg;\n      let text = origin._origin[field];\n      if (formatter) {\n        text = formatter(text, { _origin: origin._origin }, index);\n      }\n      const x = isArray(origin.x) ? origin.x[0] : origin.x;\n      const y = isArray(origin.y) ? origin.y[0] : origin.y;\n      const label = container.addShape('text', {\n        name: 'marker-label',\n        id: `label-${index}`,\n        attrs: {\n          x: x + offsetX,\n          y: y + offsetY,\n          text: text || '',\n          ...labelCfg.style,\n          textAlign: 'center',\n          textBaseline: position === 'top' ? 'bottom' : 'top',\n        },\n      });\n      this.labels.push(label);\n    }\n  }\n\n  private _addInteraction() {\n    const { events } = this.config;\n    each(events, (cb, eventName) => {\n      this.container.on(`${this.name}:${eventName}`, (e) => {\n        cb(e);\n        const target = e.target.get('parent');\n        const pointShape = target.get('children')[0];\n        if (pointShape) {\n          const data = pointShape.get('data');\n          const id = pointShape.get('id');\n          const condition = { id, data };\n          if (eventName === 'click') {\n            if (this.selectedPoint && this.selectedPoint.get('id') === id) {\n              this.selectedPoint = null;\n              this.setState('inactive', condition);\n            } else {\n              this.selectedPoint = pointShape;\n              this.setState('selected', condition);\n            }\n          } else if (eventName === 'mouseenter') {\n            this.setState('active', condition);\n          } else if (eventName === 'mouseleave') {\n            this.setState('inactive', condition);\n          }\n        }\n        this.view.canvas.draw();\n      });\n      this.view.on('click', (e) => {\n        const target = e.target.get('parent');\n        if (!target || (target.get('name') !== this.name && this.selectedPoint)) {\n          this.selectedPoint = null;\n          this.setState('inactive');\n        }\n      });\n    });\n  }\n\n  private setState(state: State, condition?: StateCondition) {\n    if (state === 'active') {\n      if (!this.selectedPoint || condition.id !== this.selectedPoint.get('id')) {\n        this._onActive(condition);\n      }\n    } else if (state === 'inactive') {\n      this.points.forEach((p) => this._onInactive(p));\n    } else if (state === 'selected') {\n      this._onSelected(condition);\n    }\n  }\n\n  private _onActive(condition?: StateCondition) {\n    const { active } = this.config.style;\n    each(this.points, (point) => {\n      if (point.get('id') === condition.id) {\n        each(active, (v, k) => {\n          point.attr(k, v);\n        });\n      } else {\n        this._onInactive(point);\n      }\n    });\n  }\n\n  private _onInactive(point: IShape) {\n    const { normal } = this.config.style;\n    if (!this.selectedPoint || point.get('id') !== this.selectedPoint.get('id')) {\n      each(normal, (v, k) => {\n        point.attr(k, v);\n      });\n    }\n  }\n\n  private _onSelected(condition: StateCondition) {\n    const { selected } = this.config.style;\n    each(this.points, (point) => {\n      if (point.get('id') === condition.id) {\n        each(selected, (v, k) => {\n          point.attr(k, v);\n        });\n      } else {\n        this._onInactive(point);\n      }\n    });\n  }\n\n  /** point animation, not for label */\n  private _animatePoint(shape: IShape) {\n    const { animation, size } = this.config;\n    if (animation !== false) {\n      const { endState = {}, animateCfg = DEFAULT_ANIMATE_CFG.appear } = animation as AnimationOption;\n      shape.animate(\n        {\n          r: Number.isNaN(endState.size / 2) ? size / 2 : endState.size / 2,\n          ...endState,\n        },\n        animateCfg\n      );\n    }\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}