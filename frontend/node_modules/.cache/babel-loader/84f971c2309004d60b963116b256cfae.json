{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vietn\\\\Desktop\\\\AppEnegry2020\\\\frontend\\\\src\\\\containers\\\\ConfigSystem\\\\index.js\";\nimport * as React from \"react\";\nimport { Line } from '@ant-design/charts';\n\nclass ChartContainer extends React.Component {\n  render() {\n    const data = [[1327359600000, 30.95], [1327446000000, 31.34], [1327532400000, 31.18], [1327618800000, 31.05], [1327878000000, 31.00], [1327964400000, 30.95], [1328050800000, 31.24], [1328137200000, 31.29], [1328223600000, 31.85], [1328482800000, 31.86], [1328569200000, 32.28], [1328655600000, 32.10], [1328742000000, 32.65], [1328828400000, 32.21], [1329087600000, 32.35], [1329174000000, 32.44], [1329260400000, 32.46], [1329346800000, 32.86], [1329433200000, 32.75], [1329778800000, 32.54], [1329865200000, 32.33], [1329951600000, 32.97], [1330038000000, 33.41], [1330297200000, 33.27], [1330383600000, 33.27], [1330470000000, 32.89], [1330556400000, 33.10], [1330642800000, 33.73], [1330902000000, 33.22], [1330988400000, 31.99], [1331074800000, 32.41], [1331161200000, 33.05], [1331247600000, 33.64], [1331506800000, 33.56], [1331593200000, 34.22], [1331679600000, 33.77], [1331766000000, 34.17], [1331852400000, 33.82], [1332111600000, 34.51], [1332198000000, 33.16], [1332284400000, 33.56], [1332370800000, 33.71], [1332457200000, 33.81], [1332712800000, 34.40], [1332799200000, 34.63], [1332885600000, 34.46], [1332972000000, 34.48], [1333058400000, 34.31], [1333317600000, 34.70], [1333404000000, 34.31], [1333490400000, 33.46], [1333576800000, 33.59], [1333922400000, 33.22], [1334008800000, 32.61], [1334095200000, 33.01], [1334181600000, 33.55], [1334268000000, 33.18], [1334527200000, 32.84], [1334613600000, 33.84], [1334700000000, 33.39], [1334786400000, 32.91], [1334872800000, 33.06], [1335132000000, 32.62], [1335218400000, 32.40], [1335304800000, 33.13], [1335391200000, 33.26], [1335477600000, 33.58], [1335736800000, 33.55], [1335823200000, 33.77], [1335909600000, 33.76], [1335996000000, 33.32], [1336082400000, 32.61], [1336341600000, 32.52], [1336428000000, 32.67], [1336514400000, 32.52], [1336600800000, 31.92], [1336687200000, 32.20], [1336946400000, 32.23], [1337032800000, 32.33], [1337119200000, 32.36], [1337205600000, 32.01], [1337292000000, 31.31], [1337551200000, 32.01], [1337637600000, 32.01], [1337724000000, 32.18], [1337810400000, 31.54], [1337896800000, 31.60], [1338242400000, 32.05], [1338328800000, 31.29], [1338415200000, 31.05], [1338501600000, 29.82], [1338760800000, 30.31], [1338847200000, 30.70], [1338933600000, 31.69], [1339020000000, 31.32], [1339106400000, 31.65], [1339365600000, 31.13], [1339452000000, 31.77], [1339538400000, 31.79], [1339624800000, 31.67], [1339711200000, 32.39], [1339970400000, 32.63], [1340056800000, 32.89], [1340143200000, 31.99], [1340229600000, 31.23], [1340316000000, 31.57], [1340575200000, 30.84], [1340661600000, 31.07], [1340748000000, 31.41], [1340834400000, 31.17], [1340920800000, 32.37], [1341180000000, 32.19], [1341266400000, 32.51], [1341439200000, 32.53], [1341525600000, 31.37], [1341784800000, 30.43], [1341871200000, 30.44], [1341957600000, 30.20], [1342044000000, 30.14], [1342130400000, 30.65], [1342389600000, 30.40], [1342476000000, 30.65], [1342562400000, 31.43], [1342648800000, 31.89], [1342735200000, 31.38], [1342994400000, 30.64], [1343080800000, 30.02], [1343167200000, 30.33], [1343253600000, 30.95], [1343340000000, 31.89], [1343599200000, 31.01], [1343685600000, 30.88], [1343772000000, 30.69], [1343858400000, 30.58], [1343944800000, 32.02], [1344204000000, 32.14], [1344290400000, 32.37], [1344376800000, 32.51], [1344463200000, 32.65], [1344549600000, 32.64], [1344808800000, 32.27], [1344895200000, 32.10], [1344981600000, 32.91], [1345068000000, 33.65], [1345154400000, 33.80], [1345413600000, 33.92], [1345500000000, 33.75], [1345586400000, 33.84], [1345672800000, 33.50], [1345759200000, 32.26], [1346018400000, 32.32], [1346104800000, 32.06], [1346191200000, 31.96], [1346277600000, 31.46], [1346364000000, 31.27], [1346709600000, 31.43], [1346796000000, 32.26], [1346882400000, 32.79], [1346968800000, 32.46], [1347228000000, 32.13], [1347314400000, 32.43], [1347400800000, 32.42], [1347487200000, 32.81], [1347573600000, 33.34], [1347832800000, 33.41], [1347919200000, 32.57], [1348005600000, 33.12], [1348092000000, 34.53], [1348178400000, 33.83], [1348437600000, 33.41], [1348524000000, 32.90], [1348610400000, 32.53], [1348696800000, 32.80], [1348783200000, 32.44], [1349042400000, 32.62], [1349128800000, 32.57], [1349215200000, 32.60], [1349301600000, 32.68], [1349388000000, 32.47], [1349647200000, 32.23], [1349733600000, 31.68], [1349820000000, 31.51], [1349906400000, 31.78], [1349992800000, 31.94], [1350252000000, 32.33], [1350338400000, 33.24], [1350424800000, 33.44], [1350511200000, 33.48], [1350597600000, 33.24], [1350856800000, 33.49], [1350943200000, 33.31], [1351029600000, 33.36], [1351116000000, 33.40], [1351202400000, 34.01], [1351638000000, 34.02], [1351724400000, 34.36], [1351810800000, 34.39], [1352070000000, 34.24], [1352156400000, 34.39], [1352242800000, 33.47], [1352329200000, 32.98], [1352415600000, 32.90], [1352674800000, 32.70], [1352761200000, 32.54], [1352847600000, 32.23], [1352934000000, 32.64], [1353020400000, 32.65], [1353279600000, 32.92], [1353366000000, 32.64], [1353452400000, 32.84], [1353625200000, 33.40], [1353884400000, 33.30], [1353970800000, 33.18], [1354057200000, 33.88], [1354143600000, 34.09], [1354230000000, 34.61], [1354489200000, 34.70], [1354575600000, 35.30], [1354662000000, 35.40], [1354748400000, 35.14], [1354834800000, 35.48], [1355094000000, 35.75], [1355180400000, 35.54], [1355266800000, 35.96], [1355353200000, 35.53], [1355439600000, 37.56], [1355698800000, 37.42], [1355785200000, 37.49], [1355871600000, 38.09], [1355958000000, 37.87], [1356044400000, 37.71], [1356303600000, 37.53], [1356476400000, 37.55], [1356562800000, 37.30], [1356649200000, 36.90], [1356908400000, 37.68], [1357081200000, 38.34], [1357167600000, 37.75], [1357254000000, 38.13], [1357513200000, 37.94], [1357599600000, 38.14], [1357686000000, 38.66], [1357772400000, 38.62], [1357858800000, 38.09], [1358118000000, 38.16], [1358204400000, 38.15], [1358290800000, 37.88], [1358377200000, 37.73], [1358463600000, 37.98], [1358809200000, 37.95], [1358895600000, 38.25], [1358982000000, 38.10], [1359068400000, 38.32], [1359327600000, 38.24], [1359414000000, 38.52], [1359500400000, 37.94], [1359586800000, 37.83], [1359673200000, 38.34], [1359932400000, 38.10], [1360018800000, 38.51], [1360105200000, 38.40], [1360191600000, 38.07], [1360278000000, 39.12], [1360537200000, 38.64], [1360623600000, 38.89], [1360710000000, 38.81], [1360796400000, 38.61], [1360882800000, 38.63], [1361228400000, 38.99], [1361314800000, 38.77], [1361401200000, 38.34], [1361487600000, 38.55], [1361746800000, 38.11], [1361833200000, 38.59], [1361919600000, 39.60]];\n    const config = {\n      data,\n      height: 200,\n      xField: 'year',\n      yField: 'value',\n      point: {\n        size: 5,\n        shape: 'diamond'\n      },\n      label: {\n        style: {\n          fill: '#aaa'\n        }\n      }\n    };\n    return /*#__PURE__*/React.createElement(Line, Object.assign({}, config, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 18\n      }\n    }));\n  }\n\n}\n\nexport default ChartContainer; // import React from 'react';\n// import { Liquid } from '@ant-design/charts';\n// class  DemoLiquid extends React.Component{\n//   render (){\n//   const config = {\n//     percent: 100000,\n//     statistic: {\n//       content: {\n//         style: {\n//           fontSize:50,\n//           fill: 'black',\n//         },\n//       },\n//     },\n//   };\n//   return <Liquid {...config} />;\n//  }\n// };\n// export default DemoLiquid;\n//  //export default  ChartContainer;\n// import React, { useState, useEffect } from 'react';\n// import { Line } from '@ant-design/charts';\n// class  DemoGeneral extends React.Component{\n//   render (){\n//   const [data, setData] = useState([]);\n//   const [annotations, setAnnotations] = useState([]);\n//   let ref;\n//   useEffect(() => {\n//     asyncFetch();\n//   }, []);\n//   const asyncFetch = () => {\n//     fetch('https://gw.alipayobjects.com/os/bmw-prod/89729b32-1592-44ae-ba96-1e296638f5f7.json')\n//       .then((response) => response.json())\n//       .then((json) => setData(json))\n//       .catch((error) => {\n//         console.log('fetch data failed', error);\n//       });\n//   };\n//   const config = {\n//     data,\n//     padding: 'auto',\n//     xField: 'date',\n//     yField: 'value',\n//     meta: {\n//       date: {\n//         formatter: (v) => (v.split(' ') ? v.split(' ')[1] : ''),\n//       },\n//       value: {\n//         min: 0,\n//         max: Math.pow(10, 7),\n//         tickCount: 10,\n//         formatter: (v) => `${v / Math.pow(10, 6)}M`,\n//       },\n//     },\n//     lineStyle: {\n//       lineCap: 'round',\n//     },\n//     interactions: [{ type: 'brush' }],\n//     annotations,\n//   };\n//   useEffect(() => {\n//     if (ref && data.length) {\n//       const yScale = ref.chart.getScaleByField('value');\n//       const coordinate = ref.chart.getCoordinate();\n//       const getDimYPosition = (value) => coordinate.convertDim(yScale.scale(value), 'y');\n//       setAnnotations([\n//         {\n//           type: 'line',\n//           start: { date: 'January 1991', value: 2549000 },\n//           end: ['August 1990', 3850000],\n//           text: {\n//             content: 'The UK recession of 1991',\n//             rotate: 0,\n//             autoRotate: false,\n//             offsetY: getDimYPosition(3850000) - getDimYPosition(2549000) - 10,\n//             style: {\n//               textAlign: 'center',\n//               textBaseline: 'bottom',\n//             },\n//           },\n//           style: {\n//             stroke: '#000',\n//             lineDash: [2, 4],\n//           },\n//         },\n//       ]);\n//     }\n//   }, [data]);\n//   return <Line {...config} chartRef={(chartRef) => (ref = chartRef)} />;\n// }\n// };\n// export default DemoGeneral;","map":{"version":3,"sources":["C:/Users/vietn/Desktop/AppEnegry2020/frontend/src/containers/ConfigSystem/index.js"],"names":["React","Line","ChartContainer","Component","render","data","config","height","xField","yField","point","size","shape","label","style","fill"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport { Line } from '@ant-design/charts';\r\n\r\nclass  ChartContainer extends React.Component{\r\n    render (){\r\n\r\n        const data = [\r\n          [1327359600000,30.95],\r\n          [1327446000000,31.34],\r\n          [1327532400000,31.18],\r\n          [1327618800000,31.05],\r\n          [1327878000000,31.00],\r\n          [1327964400000,30.95],\r\n          [1328050800000,31.24],\r\n          [1328137200000,31.29],\r\n          [1328223600000,31.85],\r\n          [1328482800000,31.86],\r\n          [1328569200000,32.28],\r\n          [1328655600000,32.10],\r\n          [1328742000000,32.65],\r\n          [1328828400000,32.21],\r\n          [1329087600000,32.35],\r\n          [1329174000000,32.44],\r\n          [1329260400000,32.46],\r\n          [1329346800000,32.86],\r\n          [1329433200000,32.75],\r\n          [1329778800000,32.54],\r\n          [1329865200000,32.33],\r\n          [1329951600000,32.97],\r\n          [1330038000000,33.41],\r\n          [1330297200000,33.27],\r\n          [1330383600000,33.27],\r\n          [1330470000000,32.89],\r\n          [1330556400000,33.10],\r\n          [1330642800000,33.73],\r\n          [1330902000000,33.22],\r\n          [1330988400000,31.99],\r\n          [1331074800000,32.41],\r\n          [1331161200000,33.05],\r\n          [1331247600000,33.64],\r\n          [1331506800000,33.56],\r\n          [1331593200000,34.22],\r\n          [1331679600000,33.77],\r\n          [1331766000000,34.17],\r\n          [1331852400000,33.82],\r\n          [1332111600000,34.51],\r\n          [1332198000000,33.16],\r\n          [1332284400000,33.56],\r\n          [1332370800000,33.71],\r\n          [1332457200000,33.81],\r\n          [1332712800000,34.40],\r\n          [1332799200000,34.63],\r\n          [1332885600000,34.46],\r\n          [1332972000000,34.48],\r\n          [1333058400000,34.31],\r\n          [1333317600000,34.70],\r\n          [1333404000000,34.31],\r\n          [1333490400000,33.46],\r\n          [1333576800000,33.59],\r\n          [1333922400000,33.22],\r\n          [1334008800000,32.61],\r\n          [1334095200000,33.01],\r\n          [1334181600000,33.55],\r\n          [1334268000000,33.18],\r\n          [1334527200000,32.84],\r\n          [1334613600000,33.84],\r\n          [1334700000000,33.39],\r\n          [1334786400000,32.91],\r\n          [1334872800000,33.06],\r\n          [1335132000000,32.62],\r\n          [1335218400000,32.40],\r\n          [1335304800000,33.13],\r\n          [1335391200000,33.26],\r\n          [1335477600000,33.58],\r\n          [1335736800000,33.55],\r\n          [1335823200000,33.77],\r\n          [1335909600000,33.76],\r\n          [1335996000000,33.32],\r\n          [1336082400000,32.61],\r\n          [1336341600000,32.52],\r\n          [1336428000000,32.67],\r\n          [1336514400000,32.52],\r\n          [1336600800000,31.92],\r\n          [1336687200000,32.20],\r\n          [1336946400000,32.23],\r\n          [1337032800000,32.33],\r\n          [1337119200000,32.36],\r\n          [1337205600000,32.01],\r\n          [1337292000000,31.31],\r\n          [1337551200000,32.01],\r\n          [1337637600000,32.01],\r\n          [1337724000000,32.18],\r\n          [1337810400000,31.54],\r\n          [1337896800000,31.60],\r\n          [1338242400000,32.05],\r\n          [1338328800000,31.29],\r\n          [1338415200000,31.05],\r\n          [1338501600000,29.82],\r\n          [1338760800000,30.31],\r\n          [1338847200000,30.70],\r\n          [1338933600000,31.69],\r\n          [1339020000000,31.32],\r\n          [1339106400000,31.65],\r\n          [1339365600000,31.13],\r\n          [1339452000000,31.77],\r\n          [1339538400000,31.79],\r\n          [1339624800000,31.67],\r\n          [1339711200000,32.39],\r\n          [1339970400000,32.63],\r\n          [1340056800000,32.89],\r\n          [1340143200000,31.99],\r\n          [1340229600000,31.23],\r\n          [1340316000000,31.57],\r\n          [1340575200000,30.84],\r\n          [1340661600000,31.07],\r\n          [1340748000000,31.41],\r\n          [1340834400000,31.17],\r\n          [1340920800000,32.37],\r\n          [1341180000000,32.19],\r\n          [1341266400000,32.51],\r\n          [1341439200000,32.53],\r\n          [1341525600000,31.37],\r\n          [1341784800000,30.43],\r\n          [1341871200000,30.44],\r\n          [1341957600000,30.20],\r\n          [1342044000000,30.14],\r\n          [1342130400000,30.65],\r\n          [1342389600000,30.40],\r\n          [1342476000000,30.65],\r\n          [1342562400000,31.43],\r\n          [1342648800000,31.89],\r\n          [1342735200000,31.38],\r\n          [1342994400000,30.64],\r\n          [1343080800000,30.02],\r\n          [1343167200000,30.33],\r\n          [1343253600000,30.95],\r\n          [1343340000000,31.89],\r\n          [1343599200000,31.01],\r\n          [1343685600000,30.88],\r\n          [1343772000000,30.69],\r\n          [1343858400000,30.58],\r\n          [1343944800000,32.02],\r\n          [1344204000000,32.14],\r\n          [1344290400000,32.37],\r\n          [1344376800000,32.51],\r\n          [1344463200000,32.65],\r\n          [1344549600000,32.64],\r\n          [1344808800000,32.27],\r\n          [1344895200000,32.10],\r\n          [1344981600000,32.91],\r\n          [1345068000000,33.65],\r\n          [1345154400000,33.80],\r\n          [1345413600000,33.92],\r\n          [1345500000000,33.75],\r\n          [1345586400000,33.84],\r\n          [1345672800000,33.50],\r\n          [1345759200000,32.26],\r\n          [1346018400000,32.32],\r\n          [1346104800000,32.06],\r\n          [1346191200000,31.96],\r\n          [1346277600000,31.46],\r\n          [1346364000000,31.27],\r\n          [1346709600000,31.43],\r\n          [1346796000000,32.26],\r\n          [1346882400000,32.79],\r\n          [1346968800000,32.46],\r\n          [1347228000000,32.13],\r\n          [1347314400000,32.43],\r\n          [1347400800000,32.42],\r\n          [1347487200000,32.81],\r\n          [1347573600000,33.34],\r\n          [1347832800000,33.41],\r\n          [1347919200000,32.57],\r\n          [1348005600000,33.12],\r\n          [1348092000000,34.53],\r\n          [1348178400000,33.83],\r\n          [1348437600000,33.41],\r\n          [1348524000000,32.90],\r\n          [1348610400000,32.53],\r\n          [1348696800000,32.80],\r\n          [1348783200000,32.44],\r\n          [1349042400000,32.62],\r\n          [1349128800000,32.57],\r\n          [1349215200000,32.60],\r\n          [1349301600000,32.68],\r\n          [1349388000000,32.47],\r\n          [1349647200000,32.23],\r\n          [1349733600000,31.68],\r\n          [1349820000000,31.51],\r\n          [1349906400000,31.78],\r\n          [1349992800000,31.94],\r\n          [1350252000000,32.33],\r\n          [1350338400000,33.24],\r\n          [1350424800000,33.44],\r\n          [1350511200000,33.48],\r\n          [1350597600000,33.24],\r\n          [1350856800000,33.49],\r\n          [1350943200000,33.31],\r\n          [1351029600000,33.36],\r\n          [1351116000000,33.40],\r\n          [1351202400000,34.01],\r\n          [1351638000000,34.02],\r\n          [1351724400000,34.36],\r\n          [1351810800000,34.39],\r\n          [1352070000000,34.24],\r\n          [1352156400000,34.39],\r\n          [1352242800000,33.47],\r\n          [1352329200000,32.98],\r\n          [1352415600000,32.90],\r\n          [1352674800000,32.70],\r\n          [1352761200000,32.54],\r\n          [1352847600000,32.23],\r\n          [1352934000000,32.64],\r\n          [1353020400000,32.65],\r\n          [1353279600000,32.92],\r\n          [1353366000000,32.64],\r\n          [1353452400000,32.84],\r\n          [1353625200000,33.40],\r\n          [1353884400000,33.30],\r\n          [1353970800000,33.18],\r\n          [1354057200000,33.88],\r\n          [1354143600000,34.09],\r\n          [1354230000000,34.61],\r\n          [1354489200000,34.70],\r\n          [1354575600000,35.30],\r\n          [1354662000000,35.40],\r\n          [1354748400000,35.14],\r\n          [1354834800000,35.48],\r\n          [1355094000000,35.75],\r\n          [1355180400000,35.54],\r\n          [1355266800000,35.96],\r\n          [1355353200000,35.53],\r\n          [1355439600000,37.56],\r\n          [1355698800000,37.42],\r\n          [1355785200000,37.49],\r\n          [1355871600000,38.09],\r\n          [1355958000000,37.87],\r\n          [1356044400000,37.71],\r\n          [1356303600000,37.53],\r\n          [1356476400000,37.55],\r\n          [1356562800000,37.30],\r\n          [1356649200000,36.90],\r\n          [1356908400000,37.68],\r\n          [1357081200000,38.34],\r\n          [1357167600000,37.75],\r\n          [1357254000000,38.13],\r\n          [1357513200000,37.94],\r\n          [1357599600000,38.14],\r\n          [1357686000000,38.66],\r\n          [1357772400000,38.62],\r\n          [1357858800000,38.09],\r\n          [1358118000000,38.16],\r\n          [1358204400000,38.15],\r\n          [1358290800000,37.88],\r\n          [1358377200000,37.73],\r\n          [1358463600000,37.98],\r\n          [1358809200000,37.95],\r\n          [1358895600000,38.25],\r\n          [1358982000000,38.10],\r\n          [1359068400000,38.32],\r\n          [1359327600000,38.24],\r\n          [1359414000000,38.52],\r\n          [1359500400000,37.94],\r\n          [1359586800000,37.83],\r\n          [1359673200000,38.34],\r\n          [1359932400000,38.10],\r\n          [1360018800000,38.51],\r\n          [1360105200000,38.40],\r\n          [1360191600000,38.07],\r\n          [1360278000000,39.12],\r\n          [1360537200000,38.64],\r\n          [1360623600000,38.89],\r\n          [1360710000000,38.81],\r\n          [1360796400000,38.61],\r\n          [1360882800000,38.63],\r\n          [1361228400000,38.99],\r\n          [1361314800000,38.77],\r\n          [1361401200000,38.34],\r\n          [1361487600000,38.55],\r\n          [1361746800000,38.11],\r\n          [1361833200000,38.59],\r\n          [1361919600000,39.60],\r\n          ];\r\n          const config = {\r\n            data,\r\n            height: 200,\r\n            xField: 'year',\r\n            yField: 'value',\r\n            point: {\r\n              size: 5,\r\n              shape: 'diamond',\r\n            },\r\n            label: {\r\n              style: {\r\n                fill: '#aaa',\r\n              },\r\n            },\r\n          };\r\n          return <Line {...config} />;\r\n    }\r\n}\r\nexport default ChartContainer;\r\n// import React from 'react';\r\n// import { Liquid } from '@ant-design/charts';\r\n// class  DemoLiquid extends React.Component{\r\n//   render (){\r\n//   const config = {\r\n//     percent: 100000,\r\n//     statistic: {\r\n//       content: {\r\n//         style: {\r\n//           fontSize:50,\r\n//           fill: 'black',\r\n//         },\r\n//       },\r\n//     },\r\n//   };\r\n//   return <Liquid {...config} />;\r\n//  }\r\n// };\r\n// export default DemoLiquid;\r\n//  //export default  ChartContainer;\r\n// import React, { useState, useEffect } from 'react';\r\n// import { Line } from '@ant-design/charts';\r\n// class  DemoGeneral extends React.Component{\r\n//   render (){\r\n//   const [data, setData] = useState([]);\r\n//   const [annotations, setAnnotations] = useState([]);\r\n//   let ref;\r\n//   useEffect(() => {\r\n//     asyncFetch();\r\n//   }, []);\r\n//   const asyncFetch = () => {\r\n//     fetch('https://gw.alipayobjects.com/os/bmw-prod/89729b32-1592-44ae-ba96-1e296638f5f7.json')\r\n//       .then((response) => response.json())\r\n//       .then((json) => setData(json))\r\n//       .catch((error) => {\r\n//         console.log('fetch data failed', error);\r\n//       });\r\n//   };\r\n//   const config = {\r\n//     data,\r\n//     padding: 'auto',\r\n//     xField: 'date',\r\n//     yField: 'value',\r\n//     meta: {\r\n//       date: {\r\n//         formatter: (v) => (v.split(' ') ? v.split(' ')[1] : ''),\r\n//       },\r\n//       value: {\r\n//         min: 0,\r\n//         max: Math.pow(10, 7),\r\n//         tickCount: 10,\r\n//         formatter: (v) => `${v / Math.pow(10, 6)}M`,\r\n//       },\r\n//     },\r\n//     lineStyle: {\r\n//       lineCap: 'round',\r\n//     },\r\n//     interactions: [{ type: 'brush' }],\r\n//     annotations,\r\n//   };\r\n//   useEffect(() => {\r\n//     if (ref && data.length) {\r\n//       const yScale = ref.chart.getScaleByField('value');\r\n//       const coordinate = ref.chart.getCoordinate();\r\n//       const getDimYPosition = (value) => coordinate.convertDim(yScale.scale(value), 'y');\r\n//       setAnnotations([\r\n//         {\r\n//           type: 'line',\r\n//           start: { date: 'January 1991', value: 2549000 },\r\n//           end: ['August 1990', 3850000],\r\n//           text: {\r\n//             content: 'The UK recession of 1991',\r\n//             rotate: 0,\r\n//             autoRotate: false,\r\n//             offsetY: getDimYPosition(3850000) - getDimYPosition(2549000) - 10,\r\n//             style: {\r\n//               textAlign: 'center',\r\n//               textBaseline: 'bottom',\r\n//             },\r\n//           },\r\n//           style: {\r\n//             stroke: '#000',\r\n//             lineDash: [2, 4],\r\n//           },\r\n//         },\r\n//       ]);\r\n//     }\r\n//   }, [data]);\r\n//   return <Line {...config} chartRef={(chartRef) => (ref = chartRef)} />;\r\n// }\r\n// };\r\n// export default DemoGeneral;"]},"metadata":{},"sourceType":"module"}