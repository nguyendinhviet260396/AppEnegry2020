{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\vietn\\\\Desktop\\\\AppEnegry2020\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport { determination } from \"./utils/determination\";\nimport { interpose } from \"./utils/interpose\";\nimport { ols } from \"./utils/ols\";\nimport { visitPoints } from \"./utils/points\";\nexport default function () {\n  var x = function x(d) {\n    return d[0];\n  },\n      y = function y(d) {\n    return d[1];\n  },\n      domain;\n\n  function power(data) {\n    var n = 0,\n        X = 0,\n        Y = 0,\n        XY = 0,\n        X2 = 0,\n        YS = 0,\n        xmin = domain ? +domain[0] : Infinity,\n        xmax = domain ? +domain[1] : -Infinity;\n    visitPoints(data, x, y, function (dx, dy) {\n      var lx = Math.log(dx),\n          ly = Math.log(dy);\n      ++n;\n      X += (lx - X) / n;\n      Y += (ly - Y) / n;\n      XY += (lx * ly - XY) / n;\n      X2 += (lx * lx - X2) / n;\n      YS += (dy - YS) / n;\n\n      if (!domain) {\n        if (dx < xmin) xmin = dx;\n        if (dx > xmax) xmax = dx;\n      }\n    });\n\n    var _ols = ols(X, Y, XY, X2),\n        _ols2 = _slicedToArray(_ols, 2),\n        a = _ols2[0],\n        b = _ols2[1];\n\n    a = Math.exp(a);\n\n    var fn = function fn(x) {\n      return a * Math.pow(x, b);\n    },\n        out = interpose(xmin, xmax, fn);\n\n    out.a = a;\n    out.b = b;\n    out.predict = fn;\n    out.rSquared = determination(data, x, y, YS, fn);\n    return out;\n  }\n\n  power.domain = function (arr) {\n    return arguments.length ? (domain = arr, power) : domain;\n  };\n\n  power.x = function (fn) {\n    return arguments.length ? (x = fn, power) : x;\n  };\n\n  power.y = function (fn) {\n    return arguments.length ? (y = fn, power) : y;\n  };\n\n  return power;\n}","map":{"version":3,"sources":["C:/Users/vietn/Desktop/AppEnegry2020/frontend/node_modules/d3-regression/src/power.js"],"names":["determination","interpose","ols","visitPoints","x","d","y","domain","power","data","n","X","Y","XY","X2","YS","xmin","Infinity","xmax","dx","dy","lx","Math","log","ly","a","b","exp","fn","pow","out","predict","rSquared","arr","arguments","length"],"mappings":";AAAA,SAASA,aAAT,QAA8B,uBAA9B;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AAEA,eAAe,YAAW;AACxB,MAAIC,CAAC,GAAG,WAAAC,CAAC;AAAA,WAAIA,CAAC,CAAC,CAAD,CAAL;AAAA,GAAT;AAAA,MACIC,CAAC,GAAG,WAAAD,CAAC;AAAA,WAAIA,CAAC,CAAC,CAAD,CAAL;AAAA,GADT;AAAA,MAEIE,MAFJ;;AAIA,WAASC,KAAT,CAAeC,IAAf,EAAoB;AAClB,QAAIC,CAAC,GAAG,CAAR;AAAA,QACIC,CAAC,GAAG,CADR;AAAA,QAEIC,CAAC,GAAG,CAFR;AAAA,QAGIC,EAAE,GAAG,CAHT;AAAA,QAIIC,EAAE,GAAG,CAJT;AAAA,QAKIC,EAAE,GAAG,CALT;AAAA,QAMIC,IAAI,GAAGT,MAAM,GAAG,CAACA,MAAM,CAAC,CAAD,CAAV,GAAgBU,QANjC;AAAA,QAOIC,IAAI,GAAGX,MAAM,GAAG,CAACA,MAAM,CAAC,CAAD,CAAV,GAAgB,CAACU,QAPlC;AASAd,IAAAA,WAAW,CAACM,IAAD,EAAOL,CAAP,EAAUE,CAAV,EAAa,UAACa,EAAD,EAAKC,EAAL,EAAY;AAClC,UAAMC,EAAE,GAAGC,IAAI,CAACC,GAAL,CAASJ,EAAT,CAAX;AAAA,UACMK,EAAE,GAAGF,IAAI,CAACC,GAAL,CAASH,EAAT,CADX;AAEA,QAAEV,CAAF;AACAC,MAAAA,CAAC,IAAI,CAACU,EAAE,GAAGV,CAAN,IAAWD,CAAhB;AACAE,MAAAA,CAAC,IAAI,CAACY,EAAE,GAAGZ,CAAN,IAAWF,CAAhB;AACAG,MAAAA,EAAE,IAAI,CAACQ,EAAE,GAAGG,EAAL,GAAUX,EAAX,IAAiBH,CAAvB;AACAI,MAAAA,EAAE,IAAI,CAACO,EAAE,GAAGA,EAAL,GAAUP,EAAX,IAAiBJ,CAAvB;AACAK,MAAAA,EAAE,IAAI,CAACK,EAAE,GAAGL,EAAN,IAAYL,CAAlB;;AAEA,UAAI,CAACH,MAAL,EAAY;AACV,YAAIY,EAAE,GAAGH,IAAT,EAAeA,IAAI,GAAGG,EAAP;AACf,YAAIA,EAAE,GAAGD,IAAT,EAAeA,IAAI,GAAGC,EAAP;AAChB;AACF,KAdU,CAAX;;AAVkB,eA0BLjB,GAAG,CAACS,CAAD,EAAIC,CAAJ,EAAOC,EAAP,EAAWC,EAAX,CA1BE;AAAA;AAAA,QA0BbW,CA1Ba;AAAA,QA0BVC,CA1BU;;AA2BlBD,IAAAA,CAAC,GAAGH,IAAI,CAACK,GAAL,CAASF,CAAT,CAAJ;;AACA,QAAMG,EAAE,GAAG,SAALA,EAAK,CAAAxB,CAAC;AAAA,aAAIqB,CAAC,GAAGH,IAAI,CAACO,GAAL,CAASzB,CAAT,EAAYsB,CAAZ,CAAR;AAAA,KAAZ;AAAA,QACII,GAAG,GAAG7B,SAAS,CAACe,IAAD,EAAOE,IAAP,EAAaU,EAAb,CADnB;;AAGAE,IAAAA,GAAG,CAACL,CAAJ,GAAQA,CAAR;AACAK,IAAAA,GAAG,CAACJ,CAAJ,GAAQA,CAAR;AACAI,IAAAA,GAAG,CAACC,OAAJ,GAAcH,EAAd;AACAE,IAAAA,GAAG,CAACE,QAAJ,GAAehC,aAAa,CAACS,IAAD,EAAOL,CAAP,EAAUE,CAAV,EAAaS,EAAb,EAAiBa,EAAjB,CAA5B;AAEA,WAAOE,GAAP;AACD;;AAEDtB,EAAAA,KAAK,CAACD,MAAN,GAAe,UAAS0B,GAAT,EAAa;AAC1B,WAAOC,SAAS,CAACC,MAAV,IAAoB5B,MAAM,GAAG0B,GAAT,EAAczB,KAAlC,IAA2CD,MAAlD;AACD,GAFD;;AAIAC,EAAAA,KAAK,CAACJ,CAAN,GAAU,UAASwB,EAAT,EAAY;AACpB,WAAOM,SAAS,CAACC,MAAV,IAAoB/B,CAAC,GAAGwB,EAAJ,EAAQpB,KAA5B,IAAqCJ,CAA5C;AACD,GAFD;;AAIAI,EAAAA,KAAK,CAACF,CAAN,GAAU,UAASsB,EAAT,EAAY;AACpB,WAAOM,SAAS,CAACC,MAAV,IAAoB7B,CAAC,GAAGsB,EAAJ,EAAQpB,KAA5B,IAAqCF,CAA5C;AACD,GAFD;;AAIA,SAAOE,KAAP;AACD","sourcesContent":["import { determination } from \"./utils/determination\";\nimport { interpose } from \"./utils/interpose\";\nimport { ols } from \"./utils/ols\";\nimport { visitPoints } from \"./utils/points\";\n\nexport default function() {\n  let x = d => d[0],\n      y = d => d[1],\n      domain;\n  \n  function power(data){\n    let n = 0,\n        X = 0,\n        Y = 0,\n        XY = 0,\n        X2 = 0,\n        YS = 0,\n        xmin = domain ? +domain[0] : Infinity,\n        xmax = domain ? +domain[1] : -Infinity;\n    \n    visitPoints(data, x, y, (dx, dy) => {\n      const lx = Math.log(dx),\n            ly = Math.log(dy);\n      ++n;\n      X += (lx - X) / n;\n      Y += (ly - Y) / n;\n      XY += (lx * ly - XY) / n;\n      X2 += (lx * lx - X2) / n;\n      YS += (dy - YS) / n;\n\n      if (!domain){\n        if (dx < xmin) xmin = dx;\n        if (dx > xmax) xmax = dx;\n      }\n    });\n\n    let [a, b] = ols(X, Y, XY, X2);\n    a = Math.exp(a);\n    const fn = x => a * Math.pow(x, b),\n        out = interpose(xmin, xmax, fn);\n\n    out.a = a;\n    out.b = b;\n    out.predict = fn;\n    out.rSquared = determination(data, x, y, YS, fn);\n\n    return out; \n  }\n  \n  power.domain = function(arr){\n    return arguments.length ? (domain = arr, power) : domain;\n  }\n\n  power.x = function(fn){\n    return arguments.length ? (x = fn, power) : x;\n  }\n\n  power.y = function(fn){\n    return arguments.length ? (y = fn, power) : y;\n  }\n  \n  return power;\n}"]},"metadata":{},"sourceType":"module"}