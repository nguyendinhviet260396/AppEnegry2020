{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { get, each, filter } from '@antv/util';\nimport Interaction from '../../../interaction/core';\n\nvar LineSelect =\n/** @class */\nfunction (_super) {\n  __extends(LineSelect, _super);\n\n  function LineSelect(cfg) {\n    return _super.call(this, __assign({\n      endEvent: 'click'\n    }, cfg)) || this;\n  }\n\n  LineSelect.prototype.start = function () {\n    return;\n  };\n\n  LineSelect.prototype.end = function (ev) {\n    var target = ev.target;\n    var lines = filter(this.view.geometries, function (geom) {\n      return geom.type == 'line';\n    });\n\n    if (target.get('name') === 'line') {\n      var data_1 = get(ev, 'data.data');\n      each(lines, function (line) {\n        each(line.elements, function (element) {\n          element.setState('inactive', element.data !== data_1);\n        });\n      }); // TODO： 设置z-index\n    } else {\n      each(lines, function (line) {\n        each(line.elements, function (element) {\n          element.setState('inactive', false);\n        });\n      }); // TODO: 重置z-index\n    }\n  };\n\n  return LineSelect;\n}(Interaction);\n\nexport default LineSelect;","map":{"version":3,"sources":["../../../../src/plots/line/interaction/line-select.ts"],"names":[],"mappings":";AAAA,SAAS,GAAT,EAAc,IAAd,EAAoB,MAApB,QAAkC,YAAlC;AACA,OAAO,WAAP,MAAwB,2BAAxB;;AAGA,IAAA,UAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAwC,EAAA,SAAA,CAAA,UAAA,EAAA,MAAA,CAAA;;AACtC,WAAA,UAAA,CAAY,GAAZ,EAAe;WACb,MAAA,CAAA,IAAA,CAAA,IAAA,EAAA,QAAA,CAAA;AACE,MAAA,QAAQ,EAAE;AADZ,KAAA,EAEK,GAFL,CAAA,KAGE,I;AACH;;AAEM,EAAA,UAAA,CAAA,SAAA,CAAA,KAAA,GAAP,YAAA;AACE;AACD,GAFM;;AAIA,EAAA,UAAA,CAAA,SAAA,CAAA,GAAA,GAAP,UAAW,EAAX,EAAa;AACX,QAAM,MAAM,GAAG,EAAE,CAAC,MAAlB;AACA,QAAM,KAAK,GAAe,MAAM,CAAC,KAAK,IAAL,CAAU,UAAX,EAAuB,UAAC,IAAD,EAAK;AAAK,aAAA,IAAI,CAAC,IAAL,IAAA,MAAA;AAAmB,KAApD,CAAhC;;AACA,QAAI,MAAM,CAAC,GAAP,CAAW,MAAX,MAAuB,MAA3B,EAAmC;AACjC,UAAM,MAAI,GAAG,GAAG,CAAC,EAAD,EAAK,WAAL,CAAhB;AACA,MAAA,IAAI,CAAC,KAAD,EAAQ,UAAC,IAAD,EAAe;AACzB,QAAA,IAAI,CAAC,IAAI,CAAC,QAAN,EAAgB,UAAC,OAAD,EAAQ;AAC1B,UAAA,OAAO,CAAC,QAAR,CAAiB,UAAjB,EAA6B,OAAO,CAAC,IAAR,KAAiB,MAA9C;AACD,SAFG,CAAJ;AAGD,OAJG,CAAJ,CAFiC,CAOjC;AACD,KARD,MAQO;AACL,MAAA,IAAI,CAAC,KAAD,EAAQ,UAAC,IAAD,EAAe;AACzB,QAAA,IAAI,CAAC,IAAI,CAAC,QAAN,EAAgB,UAAC,OAAD,EAAQ;AAC1B,UAAA,OAAO,CAAC,QAAR,CAAiB,UAAjB,EAA6B,KAA7B;AACD,SAFG,CAAJ;AAGD,OAJG,CAAJ,CADK,CAML;AACD;AACF,GAnBM;;AAoBT,SAAA,UAAA;AAAC,CAhCD,CAAwC,WAAxC,CAAA","sourcesContent":["import { get, each, filter } from '@antv/util';\nimport Interaction from '../../../interaction/core';\nimport { Geometry } from '../../../dependents';\n\nexport default class LineSelect extends Interaction {\n  constructor(cfg) {\n    super({\n      endEvent: 'click',\n      ...cfg,\n    });\n  }\n\n  public start() {\n    return;\n  }\n\n  public end(ev) {\n    const target = ev.target;\n    const lines: Geometry[] = filter(this.view.geometries, (geom) => geom.type == 'line');\n    if (target.get('name') === 'line') {\n      const data = get(ev, 'data.data');\n      each(lines, (line: Geometry) => {\n        each(line.elements, (element) => {\n          element.setState('inactive', element.data !== data);\n        });\n      });\n      // TODO： 设置z-index\n    } else {\n      each(lines, (line: Geometry) => {\n        each(line.elements, (element) => {\n          element.setState('inactive', false);\n        });\n      });\n      // TODO: 重置z-index\n    }\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}