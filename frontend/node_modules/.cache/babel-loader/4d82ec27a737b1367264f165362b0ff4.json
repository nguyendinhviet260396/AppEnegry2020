{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { deepMix, each } from '@antv/util';\nimport { registerPlotType } from '../../base/global';\nimport BaseBarLayer from '../bar/layer';\nimport RangeBarLabel from './component/label';\nimport { setShapeCache } from './animation';\n\nvar RangeBarLayer =\n/** @class */\nfunction (_super) {\n  __extends(RangeBarLayer, _super);\n\n  function RangeBarLayer() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = 'rangeBar';\n    return _this;\n  }\n\n  RangeBarLayer.getDefaultOptions = function () {\n    return deepMix(_super.getDefaultOptions.call(this), {\n      label: {\n        visible: true,\n        position: 'outer'\n      },\n      xAxis: {\n        visible: true,\n        autoRotateTitle: false,\n        grid: {\n          visible: true\n        },\n        line: {\n          visible: false\n        },\n        tickLine: {\n          visible: false\n        },\n        label: {\n          visible: true,\n          autoRotate: true,\n          autoHide: true\n        },\n        title: {\n          visible: true,\n          spacing: 12\n        }\n      },\n      yAxis: {\n        visible: true,\n        autoRotateTitle: true,\n        grid: {\n          visible: false\n        },\n        line: {\n          visible: true\n        },\n        tickLine: {\n          visible: true\n        },\n        label: {\n          visible: true,\n          autoHide: true,\n          autoRotate: false\n        },\n        title: {\n          visible: false,\n          spacing: 12\n        }\n      }\n    }, {});\n  };\n\n  RangeBarLayer.prototype.afterRender = function () {\n    this.renderLabel(); // 为更新动画缓存shape\n\n    var shapeCaches = [];\n    var geoms = this.view.geometries;\n    each(geoms, function (geom) {\n      var elements = geom.elements;\n      each(elements, function (ele) {\n        shapeCaches.push(ele.shape);\n      });\n    });\n    setShapeCache(shapeCaches);\n\n    _super.prototype.afterRender.call(this);\n  };\n\n  RangeBarLayer.prototype.renderLabel = function () {\n    if (this.options.label && this.options.label.visible) {\n      var label = new RangeBarLabel(__assign({\n        view: this.view,\n        plot: this\n      }, this.options.label));\n      label.render();\n    }\n  };\n\n  RangeBarLayer.prototype.animation = function () {\n    _super.prototype.animation.call(this);\n  };\n\n  return RangeBarLayer;\n}(BaseBarLayer);\n\nexport default RangeBarLayer;\nregisterPlotType('rangeBar', RangeBarLayer);","map":{"version":3,"sources":["../../../src/plots/range-bar/layer.ts"],"names":[],"mappings":"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","sourcesContent":["import { deepMix, each } from '@antv/util';\nimport { registerPlotType } from '../../base/global';\nimport { LayerConfig } from '../../base/layer';\nimport BaseBarLayer from '../bar/layer';\nimport { BarViewConfig } from '../bar/interface';\nimport RangeBarLabel, { RangeBarLabelConfig } from './component/label';\nimport { setShapeCache } from './animation';\n\nexport interface RangeBarViewConfig extends BarViewConfig {\n  label?: RangeBarLabelConfig;\n}\n\nexport interface RangeBarLayerConfig extends RangeBarViewConfig, LayerConfig {}\n\nexport default class RangeBarLayer extends BaseBarLayer<RangeBarLayerConfig> {\n  public static getDefaultOptions(): Partial<RangeBarViewConfig> {\n    return deepMix(\n      super.getDefaultOptions(),\n      {\n        label: {\n          visible: true,\n          position: 'outer',\n        },\n        xAxis: {\n          visible: true,\n          autoRotateTitle: false,\n          grid: {\n            visible: true,\n          },\n          line: {\n            visible: false,\n          },\n          tickLine: {\n            visible: false,\n          },\n          label: {\n            visible: true,\n            autoRotate: true,\n            autoHide: true,\n          },\n          title: {\n            visible: true,\n            spacing: 12,\n          },\n        },\n        yAxis: {\n          visible: true,\n          autoRotateTitle: true,\n          grid: {\n            visible: false,\n          },\n          line: {\n            visible: true,\n          },\n          tickLine: {\n            visible: true,\n          },\n          label: {\n            visible: true,\n            autoHide: true,\n            autoRotate: false,\n          },\n          title: {\n            visible: false,\n            spacing: 12,\n          },\n        },\n      },\n      {}\n    );\n  }\n\n  public type: string = 'rangeBar';\n\n  public afterRender() {\n    this.renderLabel();\n    // 为更新动画缓存shape\n    const shapeCaches = [];\n    const geoms = this.view.geometries;\n    each(geoms, (geom) => {\n      const elements = geom.elements;\n      each(elements, (ele) => {\n        shapeCaches.push(ele.shape);\n      });\n    });\n    setShapeCache(shapeCaches);\n    super.afterRender();\n  }\n\n  protected renderLabel() {\n    if (this.options.label && this.options.label.visible) {\n      const label = new RangeBarLabel({\n        view: this.view,\n        plot: this,\n        ...this.options.label,\n      });\n      label.render();\n    }\n  }\n\n  protected animation() {\n    super.animation();\n  }\n}\n\nregisterPlotType('rangeBar', RangeBarLayer);\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}