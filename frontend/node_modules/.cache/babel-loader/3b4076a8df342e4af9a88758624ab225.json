{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { registerLabelComponent } from '../../../components/label/base';\nimport BarLabel from '../../bar/component/label';\n\nvar StackedBarLabel =\n/** @class */\nfunction (_super) {\n  __extends(StackedBarLabel, _super);\n\n  function StackedBarLabel() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  StackedBarLabel.prototype.adjustLabel = function (label, element) {\n    if (this.options.adjustPosition) {\n      var labelRange = label.getBBox();\n      var shapeRange = this.getElementShapeBBox(element); // label 有 offset\n\n      if (shapeRange.maxX <= labelRange.maxX) {\n        label.set('visible', false);\n      }\n    }\n  };\n\n  return StackedBarLabel;\n}(BarLabel);\n\nexport default StackedBarLabel;\nregisterLabelComponent('stacked-bar', StackedBarLabel);","map":{"version":3,"sources":["../../../../src/plots/stacked-bar/component/label.ts"],"names":[],"mappings":";AACA,SAAS,sBAAT,QAAuC,gCAAvC;AACA,OAAO,QAAP,MAAqB,2BAArB;;AAEA,IAAA,eAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA6C,EAAA,SAAA,CAAA,eAAA,EAAA,MAAA,CAAA;;AAA7C,WAAA,eAAA,GAAA;;AAWC;;AAVW,EAAA,eAAA,CAAA,SAAA,CAAA,WAAA,GAAV,UAAsB,KAAtB,EAAqC,OAArC,EAAqD;AACnD,QAAI,KAAK,OAAL,CAAa,cAAjB,EAAiC;AAC/B,UAAM,UAAU,GAAG,KAAK,CAAC,OAAN,EAAnB;AACA,UAAM,UAAU,GAAG,KAAK,mBAAL,CAAyB,OAAzB,CAAnB,CAF+B,CAG/B;;AACA,UAAI,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAAlC,EAAwC;AACtC,QAAA,KAAK,CAAC,GAAN,CAAU,SAAV,EAAqB,KAArB;AACD;AACF;AACF,GATS;;AAUZ,SAAA,eAAA;AAAC,CAXD,CAA6C,QAA7C,CAAA;;;AAaA,sBAAsB,CAAC,aAAD,EAAgB,eAAhB,CAAtB","sourcesContent":["import { Element, IShape } from '../../../dependents';\nimport { registerLabelComponent } from '../../../components/label/base';\nimport BarLabel from '../../bar/component/label';\n\nexport default class StackedBarLabel extends BarLabel {\n  protected adjustLabel(label: IShape, element: Element) {\n    if (this.options.adjustPosition) {\n      const labelRange = label.getBBox();\n      const shapeRange = this.getElementShapeBBox(element);\n      // label 有 offset\n      if (shapeRange.maxX <= labelRange.maxX) {\n        label.set('visible', false);\n      }\n    }\n  }\n}\n\nregisterLabelComponent('stacked-bar', StackedBarLabel);\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}