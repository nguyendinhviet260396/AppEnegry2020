{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { deepMix, uniqueId } from '@antv/util';\nimport { registerPlotType } from '../../base/global';\nimport GaugeLayer from '../gauge/layer';\nimport { GaugeShape } from '../gauge/geometry/shape/gauge-shape';\n\nvar FanGaugeLayer =\n/** @class */\nfunction (_super) {\n  __extends(FanGaugeLayer, _super);\n\n  function FanGaugeLayer() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = 'fanGauge';\n    return _this;\n  }\n\n  FanGaugeLayer.getDefaultOptions = function () {\n    return deepMix({}, _super.getDefaultOptions.call(this), {\n      rangeColor: '#F6445A',\n      rangeSize: 70,\n      axis: {\n        visible: true,\n        offset: 5,\n        tickCount: 10,\n        subTickCount: 4,\n        tickLine: {\n          visible: true,\n          length: 3,\n          style: {\n            stroke: '#aaa',\n            lineWidth: 3\n          }\n        },\n        label: {\n          visible: true,\n          style: {\n            fill: '#aaa',\n            fontSize: 16,\n            textAlign: 'center',\n            textBaseline: 'middle'\n          }\n        }\n      }\n    });\n  };\n\n  FanGaugeLayer.prototype.initG2Shape = function () {\n    this.gaugeShape = new GaugeShape(uniqueId());\n    this.gaugeShape.setOption(this.type, deepMix({}, this.options, {\n      radius: 1,\n      angle: 120,\n      textPosition: '125%',\n      bottomRatio: 3.5\n    }));\n    this.gaugeShape.render();\n  };\n\n  FanGaugeLayer.prototype.axis = function () {\n    var axesConfig = {\n      value: false,\n      1: false\n    };\n    this.setConfig('axes', axesConfig);\n  };\n\n  FanGaugeLayer.prototype.annotation = function () {\n    var statistic = this.options.statistic;\n    var annotationConfigs = []; // @ts-ignore\n\n    if (statistic && statistic.visible) {\n      var statistics = this.renderStatistic();\n      annotationConfigs.push(statistics);\n    }\n\n    var siderTexts = this.renderSideText();\n    var allAnnotations = annotationConfigs.concat(siderTexts);\n    this.setConfig('annotations', allAnnotations);\n  };\n\n  FanGaugeLayer.prototype.renderSideText = function () {\n    var _a = this.options,\n        max = _a.max,\n        min = _a.min,\n        format = _a.format,\n        rangeSize = _a.rangeSize,\n        axis = _a.axis;\n    var OFFSET_Y = 12;\n    return [min, max].map(function (value, index) {\n      return {\n        type: 'text',\n        top: true,\n        position: ['50%', '50%'],\n        content: format(value),\n        style: deepMix({}, axis.label.style, {\n          textAlign: 'center'\n        }),\n        offsetX: !index ? -rangeSize : rangeSize,\n        offsetY: OFFSET_Y\n      };\n    });\n  };\n\n  return FanGaugeLayer;\n}(GaugeLayer);\n\nexport default FanGaugeLayer;\nregisterPlotType('fanGauge', FanGaugeLayer);","map":{"version":3,"sources":["../../../src/plots/fan-gauge/layer.ts"],"names":[],"mappings":"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","sourcesContent":["import { deepMix, uniqueId } from '@antv/util';\nimport { registerPlotType } from '../../base/global';\nimport GaugeLayer from '../gauge/layer';\nimport { GaugeShape } from '../gauge/geometry/shape/gauge-shape';\nimport { GaugeViewConfig } from '../gauge/interface';\nimport { LayerConfig } from '../../base/layer';\n\nexport interface FanGaugeViewConfig extends GaugeViewConfig {}\n\nexport interface FanGaugeLayerConfig extends FanGaugeViewConfig, LayerConfig {}\n\nexport default class FanGaugeLayer<T extends FanGaugeLayerConfig = FanGaugeLayerConfig> extends GaugeLayer<T> {\n  public static getDefaultOptions() {\n    return deepMix({}, super.getDefaultOptions(), {\n      rangeColor: '#F6445A',\n      rangeSize: 70,\n      axis: {\n        visible: true,\n        offset: 5,\n        tickCount: 10,\n        subTickCount: 4,\n        tickLine: {\n          visible: true,\n          length: 3,\n          style: {\n            stroke: '#aaa',\n            lineWidth: 3,\n          },\n        },\n        label: {\n          visible: true,\n          style: {\n            fill: '#aaa',\n            fontSize: 16,\n            textAlign: 'center',\n            textBaseline: 'middle',\n          },\n        },\n      },\n    });\n  }\n\n  public type: string = 'fanGauge';\n\n  protected initG2Shape() {\n    this.gaugeShape = new GaugeShape(uniqueId());\n    this.gaugeShape.setOption(\n      this.type,\n      deepMix({}, this.options, {\n        radius: 1,\n        angle: 120,\n        textPosition: '125%',\n        bottomRatio: 3.5,\n      })\n    );\n    this.gaugeShape.render();\n  }\n\n  protected axis() {\n    const axesConfig: any = {\n      value: false,\n      1: false,\n    };\n    this.setConfig('axes', axesConfig);\n  }\n\n  protected annotation() {\n    const { statistic } = this.options;\n    const annotationConfigs = [];\n    // @ts-ignore\n    if (statistic && statistic.visible) {\n      const statistics = this.renderStatistic();\n      annotationConfigs.push(statistics);\n    }\n    const siderTexts = this.renderSideText();\n    const allAnnotations = annotationConfigs.concat(siderTexts);\n    this.setConfig('annotations', allAnnotations);\n  }\n\n  protected renderSideText() {\n    const { max, min, format, rangeSize, axis } = this.options;\n    const OFFSET_Y = 12;\n    return [min, max].map((value, index) => {\n      return {\n        type: 'text',\n        top: true,\n        position: ['50%', '50%'],\n        content: format(value),\n        style: deepMix({}, axis.label.style, {\n          textAlign: 'center',\n        }),\n        offsetX: !index ? -rangeSize : rangeSize,\n        offsetY: OFFSET_Y,\n      };\n    });\n  }\n}\n\nregisterPlotType('fanGauge', FanGaugeLayer);\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}