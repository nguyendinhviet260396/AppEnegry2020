{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { clone, deepMix, each, hasKey, isString, mix, isArray } from '@antv/util';\nimport { getScale } from '@antv/scale';\nimport TextDescription from '../components/description';\nimport BBox from '../util/bbox';\nimport Layer from '../base/layer';\nimport { isTextUsable } from '../util/common';\nimport ThemeController from '../base/controller/theme';\nimport { getGlobalTheme } from '../theme';\nvar LEGEND_MARGIN = 5;\n\nvar ComboViewLayer =\n/** @class */\nfunction (_super) {\n  __extends(ComboViewLayer, _super);\n\n  function ComboViewLayer(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.geomLayers = [];\n    _this.legends = [];\n    _this.requiredField = ['xField', 'yField'];\n    _this.options = _this.getOptions(props);\n    _this.initialOptions = deepMix({}, props);\n    _this.themeController = new ThemeController();\n    return _this;\n  }\n\n  ComboViewLayer.getDefaultOptions = function () {\n    return {\n      title: {\n        visible: false,\n        alignTo: 'left',\n        text: ''\n      },\n      description: {\n        visible: false,\n        text: '',\n        alignTo: 'left'\n      }\n    };\n  };\n\n  ComboViewLayer.prototype.getOptions = function (props) {\n    var curOptions = this.options || {};\n\n    var options = _super.prototype.getOptions.call(this, props); // @ts-ignore\n\n\n    var defaultOptions = this.constructor.getDefaultOptions(props);\n    return deepMix({}, options, defaultOptions, curOptions, props);\n  };\n\n  ComboViewLayer.prototype.checkData = function () {\n    var _this = this;\n\n    var _a, _b;\n\n    var _c = this.options,\n        data = _c.data,\n        xField = _c.xField,\n        yField = _c.yField; // 判断1: 没有配置必选字段时不绘制\n\n    for (var i = 0; i < this.requiredField.length; i++) {\n      var field = this.requiredField[i];\n\n      if (!hasKey(this.options, field)) {\n        return false;\n      }\n    } // 判断2: yField不是数组或只设置了一个字段时不绘制\n\n\n    if (!isArray(yField) || yField.length < 2) {\n      return false;\n    } // 判断3:data为空时不绘制 data:[]\n\n\n    if (!isArray(data) || data.length === 0) {\n      return false;\n    } // 判断4: 内嵌两层空数据时不绘制 data:[[],[]]\n\n\n    if (((_a = data[0]) === null || _a === void 0 ? void 0 : _a.length) === 0 && ((_b = data[1]) === null || _b === void 0 ? void 0 : _b.length) === 0) {\n      return false;\n    } // 判断5：一层数据为空时，利用相关映射字段补齐数据 data:[[],[{type:'a',value:10}]\n\n\n    each(data, function (d, index) {\n      if (!isArray(d) || d.length === 0) {\n        var mockData = _this.getMockData(index);\n\n        data[index] = mockData;\n      }\n    }); // 判断6: 两份数据xField或值不一致时不绘制\n\n    if (!data[0][0][xField] || !data[1][0][xField]) {\n      return false;\n    }\n\n    return true;\n  };\n\n  ComboViewLayer.prototype.init = function () {\n    _super.prototype.init.call(this);\n\n    this.theme = this.themeController.getTheme(this.options, this.type);\n    this.drawTitle();\n    this.drawDescription();\n  };\n\n  ComboViewLayer.prototype.updateConfig = function (cfg) {\n    this.doDestroy();\n    this.options = this.getOptions(cfg);\n    this.processOptions(this.options);\n  };\n\n  ComboViewLayer.prototype.changeData = function (data) {\n    if (data && data.length < 2 || !isArray(data[0])) {\n      return;\n    }\n\n    each(this.geomLayers, function (layer, index) {\n      layer.changeData(data[index]);\n    });\n  };\n\n  ComboViewLayer.prototype.changeDataByIndex = function (data, index) {\n    if (isArray(data[0])) {\n      return;\n    }\n\n    var geomLayer = this.geomLayers[index];\n    geomLayer.changeData(data);\n  };\n\n  ComboViewLayer.prototype.doDestroy = function () {\n    each(this.geomLayers, function (layer) {\n      layer.doDestroy();\n    });\n    this.geomLayers = [];\n    each(this.legends, function (legend) {\n      legend.destroy();\n    });\n    this.legends = [];\n  };\n\n  ComboViewLayer.prototype.createLayer = function (LayerCtr, data, config) {\n    var viewRange = this.getViewRange();\n    var layer = new LayerCtr(__assign({\n      canvas: this.canvas,\n      container: this.container,\n      x: viewRange.minX,\n      y: viewRange.minY,\n      width: viewRange.width,\n      height: viewRange.height,\n      data: data\n    }, config));\n    this.geomLayers.push(layer);\n    return layer;\n  }; // 临时修复 v1 双轴图在左侧数据为0的时候右侧scale处理错误的问题\n\n\n  ComboViewLayer.prototype.getLeftYAxisMax = function () {\n    var leftScaleData = this.getScaleData(0);\n    var rightScaleData = this.getScaleData(1);\n    return leftScaleData.min == 0 && leftScaleData.max === 0 ? Math.max(rightScaleData.max, 0) : leftScaleData.max;\n  };\n\n  ComboViewLayer.prototype.yAxis = function (index) {\n    var leftScaleData = this.getScaleData(0);\n    var yAxis = this.options.yAxis;\n    var config = index === 0 ? yAxis.leftConfig : yAxis.rightConfig;\n    var colorValue = this.colors[index];\n    var yAxisConfig = clone(config);\n    var styleMap = {\n      title: 'stroke',\n      line: 'stroke',\n      label: 'fill',\n      tickLine: 'stroke'\n    };\n\n    if (config.visible && config.colorMapping) {\n      each(yAxisConfig, function (config, name) {\n        if (!isString(config) && hasKey(styleMap, name)) {\n          var styleKey = styleMap[name];\n\n          if (!config.style) {\n            config.style = {};\n          }\n\n          config.style[styleKey] = colorValue;\n        }\n      });\n    }\n\n    if (!config.visible) {\n      yAxisConfig.title.visible = false;\n      yAxisConfig.tickLine.visible = false;\n      yAxisConfig.label.visible = false;\n      yAxisConfig.line.visible = false;\n      yAxisConfig.visible = true;\n    }\n\n    var yAxisGlobalConfig = this.getYAxisGlobalConfig();\n\n    if (index === 0 && leftScaleData.max === 0 && leftScaleData.min === 0) {\n      yAxisConfig.max = this.getLeftYAxisMax();\n    }\n\n    return deepMix({}, yAxisGlobalConfig, yAxisConfig);\n  };\n\n  ComboViewLayer.prototype.getTicks = function () {\n    var yAxis = this.options.yAxis;\n    var leftScaleData = this.getScaleData(0); // 取到左轴ticks数量\n\n    var Scale = getScale('linear');\n    var linearScale = new Scale(deepMix({}, {\n      min: 0,\n      max: this.getLeftYAxisMax(),\n      nice: true,\n      values: leftScaleData.values\n    }, {\n      tickCount: yAxis.tickCount\n    }));\n    var tickCount = linearScale.ticks.length; // 生成右轴ticks\n\n    var max = yAxis.max ? linearScale.max : this.getScaleData(1).max;\n    var tickInterval = max / (tickCount - 1);\n    var ticks = [];\n\n    for (var i = 0; i < tickCount; i++) {\n      var tickValue = i * tickInterval;\n\n      if (!Number.isInteger(tickValue)) {\n        tickValue = parseFloat(tickValue.toFixed(1));\n      }\n\n      ticks.push(tickValue);\n    }\n\n    return ticks;\n  };\n\n  ComboViewLayer.prototype.getScaleData = function (index) {\n    var _a = this.options,\n        data = _a.data,\n        yField = _a.yField,\n        yAxis = _a.yAxis;\n    var values = [];\n    each(data[index], function (d) {\n      values.push(d[yField[index]]);\n    });\n    values.sort(function (a, b) {\n      return a - b;\n    });\n    var min = values[0];\n    var max = yAxis.max ? yAxis.max : values[values.length - 1];\n    return {\n      min: min,\n      max: max,\n      values: values\n    };\n  };\n\n  ComboViewLayer.prototype.getDataByXField = function (value, index) {\n    var _a = this.options,\n        data = _a.data,\n        xField = _a.xField;\n    var dataSource = data[index];\n    return dataSource.filter(function (d) {\n      return d[xField] === value;\n    });\n  };\n\n  ComboViewLayer.prototype.getYAxisGlobalConfig = function () {\n    var _a = this.options.yAxis,\n        min = _a.min,\n        max = _a.max,\n        tickCount = _a.tickCount;\n    return {\n      min: min,\n      max: max,\n      tickCount: tickCount\n    };\n  };\n\n  ComboViewLayer.prototype.adjustLayout = function () {\n    var _this = this;\n\n    var _a, _b;\n\n    var bleeding = getGlobalTheme().bleeding;\n\n    if (isArray(bleeding)) {\n      each(bleeding, function (it, index) {\n        if (typeof bleeding[index] === 'function') {\n          bleeding[index] = bleeding[index](_this.options);\n        }\n      });\n    }\n\n    var viewRange = this.getViewRange();\n    var leftPadding = this.transfromPadding(this.geomLayers[0].options.padding);\n    var rightPadding = this.transfromPadding(this.geomLayers[1].options.padding); // 获取legendHeight并加入上部padding\n\n    var legendHeight = 0;\n    var legendABBox;\n    var legendBBBox;\n\n    if ((_a = this.options.legend) === null || _a === void 0 ? void 0 : _a.visible) {\n      legendABBox = this.legends[0].getLayoutBBox();\n      legendBBBox = this.legends[1].getLayoutBBox();\n      legendHeight = legendABBox.height + LEGEND_MARGIN * 2;\n    } // 同步左右padding\n    // const uniquePadding = [leftPadding[0] + legendHeight, rightPadding[1], rightPadding[2], leftPadding[3]];\n\n\n    var uniquePadding = leftPadding.map(function (item, index) {\n      // 兼容老版本\n      if (index === 0) {\n        return Math.max.apply(null, [item + legendHeight, rightPadding[index]]);\n      }\n\n      return Math.max.apply(null, [item, rightPadding[index]]);\n    });\n    this.geomLayers[0].updateConfig({\n      padding: uniquePadding\n    });\n    this.geomLayers[0].render();\n    this.geomLayers[1].updateConfig({\n      padding: uniquePadding\n    });\n    this.geomLayers[1].render(); // 更新legend的位置\n\n    if ((_b = this.options.legend) === null || _b === void 0 ? void 0 : _b.visible) {\n      this.legends[0].setLocation({\n        x: bleeding[3],\n        y: viewRange.minY + LEGEND_MARGIN\n      });\n      this.legends[1].setLocation({\n        x: viewRange.maxX - bleeding[1] - legendBBBox.width,\n        y: viewRange.minY + LEGEND_MARGIN\n      });\n    }\n  };\n  /**\n   * padding 预处理\n   * @param {string | number | number[]} padding\n   */\n\n\n  ComboViewLayer.prototype.transfromPadding = function (padding) {\n    if (typeof padding === 'string' || typeof padding === 'number') {\n      return [Number(padding)];\n    }\n\n    return padding;\n  };\n\n  ComboViewLayer.prototype.legendFilter = function (index) {\n    var _this = this;\n\n    var legend = this.legends[index];\n    var legend_group = legend.get('group');\n    legend_group.on('click', function () {\n      var item = legend.get('items')[0];\n\n      if (!item.unchecked) {\n        legend.setItemState(item, 'unchecked', true);\n\n        _this.hideLayer(index);\n      } else {\n        legend.setItemState(item, 'unchecked', false);\n\n        _this.showLayer(index);\n      }\n    });\n  };\n\n  ComboViewLayer.prototype.hideLayer = function (index) {\n    var layer = this.geomLayers[index];\n    var field = this.options.yField[index]; // 隐藏layer时只隐藏yAxis和geometry\n\n    var view = layer.view;\n    var axisContainer = this.getYAxisContainer(view, field);\n\n    if (axisContainer) {\n      axisContainer.set('visible', false);\n    }\n\n    this.setGeometryVisibility(view, false);\n    this.canvas.draw();\n  };\n\n  ComboViewLayer.prototype.showLayer = function (index) {\n    var layer = this.geomLayers[index];\n    var field = this.options.yField[index];\n    var view = layer.view;\n    var axisContainer = this.getYAxisContainer(view, field);\n\n    if (axisContainer) {\n      axisContainer.set('visible', true);\n    }\n\n    this.setGeometryVisibility(view, true);\n    this.canvas.draw();\n  };\n\n  ComboViewLayer.prototype.setGeometryVisibility = function (view, show) {\n    each(view.geometries, function (geom) {\n      var container = geom.container,\n          labelsContainer = geom.labelsContainer;\n\n      if (container) {\n        container.set('visible', show);\n      }\n\n      if (labelsContainer) {\n        labelsContainer.set('visible', show);\n      }\n    });\n  };\n\n  ComboViewLayer.prototype.getYAxisContainer = function (view, field) {\n    var container;\n    var axisCtr = view.controllers.filter(function (ctr) {\n      return hasKey(ctr, 'axisContainer');\n    })[0];\n\n    if (axisCtr) {\n      var ctr = axisCtr;\n      var axisGroups = ctr.axisContainer.get('children');\n      each(axisGroups, function (g) {\n        var axisField = g.get('component').get('field');\n\n        if (axisField === field) {\n          container = g;\n        }\n      });\n    }\n\n    return container;\n  };\n\n  ComboViewLayer.prototype.getUnCheckedValue = function () {\n    var value = [];\n    each(this.legends, function (legend) {\n      var uncheckedItems = legend.getItemsByState('unchecked');\n      each(uncheckedItems, function (item) {\n        value.push(item.name);\n      });\n    });\n    return value;\n  };\n\n  ComboViewLayer.prototype.drawTitle = function () {\n    var props = this.options;\n    var range = this.layerBBox;\n\n    if (this.title) {\n      this.title.destroy();\n      this.title = null;\n    }\n\n    if (isTextUsable(props.title)) {\n      var width = this.width;\n      var theme = this.theme;\n      var title = new TextDescription({\n        leftMargin: range.minX + theme.title.padding[3],\n        rightMargin: range.maxX - theme.title.padding[1],\n        topMargin: range.minY + theme.title.padding[0],\n        text: props.title.text,\n        style: mix(theme.title, props.title.style),\n        wrapperWidth: width - theme.title.padding[3] - theme.title.padding[1],\n        container: this.container.addGroup(),\n        theme: theme,\n        index: isTextUsable(props.description) ? 0 : 1,\n        plot: this,\n        alignTo: props.title.alignTo,\n        name: 'title'\n      });\n      this.title = title;\n    }\n  };\n\n  ComboViewLayer.prototype.drawDescription = function () {\n    var props = this.options;\n    var range = this.layerBBox;\n\n    if (this.description) {\n      this.description.destroy();\n      this.description = null;\n    }\n\n    if (isTextUsable(props.description)) {\n      var width = this.width;\n      var theme = this.theme;\n      var topMargin = 0;\n\n      if (this.title) {\n        var titleBBox = this.title.getBBox();\n        topMargin += titleBBox.minY + titleBBox.height;\n        topMargin += theme.description.padding[0];\n      } else {\n        // 无title的情况下使用title的上padding\n        topMargin += range.minY + theme.title.padding[0];\n      }\n\n      var description = new TextDescription({\n        leftMargin: range.minX + theme.description.padding[3],\n        topMargin: topMargin,\n        rightMargin: range.maxX - theme.title.padding[1],\n        text: props.description.text,\n        style: mix(theme.description, props.description.style),\n        wrapperWidth: width - theme.description.padding[3] - theme.description.padding[1],\n        container: this.container.addGroup(),\n        theme: theme,\n        index: 1,\n        plot: this,\n        alignTo: props.description.alignTo,\n        name: 'description'\n      });\n      this.description = description;\n    }\n  };\n\n  ComboViewLayer.prototype.getViewRange = function () {\n    if (!this.layerBBox) {\n      this.layerBBox = new BBox(this.x, this.y, this.width, this.height);\n    }\n\n    var viewMinX = this.layerBBox.minX;\n    var viewMaxX = this.layerBBox.maxX;\n    var viewMinY = this.layerBBox.minY;\n    var viewMaxY = this.layerBBox.maxY;\n    var components = [this.title, this.description];\n    each(components, function (component) {\n      if (component) {\n        var position = component.position;\n\n        var _a = component.getBBox(),\n            minX = _a.minX,\n            maxX = _a.maxX,\n            minY = _a.minY,\n            maxY = _a.maxY;\n\n        if (maxY >= viewMinY && maxY <= viewMaxY && position === 'top') {\n          viewMinY = maxY;\n        }\n\n        if (minY >= viewMinY && minY <= viewMaxY && position === 'bottom') {\n          viewMaxY = minY;\n        }\n\n        if (maxX > viewMinX && maxX <= viewMaxX && position === 'left') {\n          viewMinX = maxX;\n        }\n\n        if (minX >= viewMinX && maxX <= viewMaxX && position === 'right') {\n          viewMaxX = minX;\n        }\n      }\n    });\n    return new BBox(viewMinX, viewMinY, viewMaxX - viewMinX, viewMaxY - viewMinY);\n  };\n\n  ComboViewLayer.prototype.getMockData = function (index) {\n    var _a = this.options,\n        xField = _a.xField,\n        yField = _a.yField;\n    var mock = {};\n    mock[xField] = 'null';\n    mock[yField[index]] = 0;\n    return [mock];\n  };\n\n  return ComboViewLayer;\n}(Layer);\n\nexport default ComboViewLayer;","map":{"version":3,"sources":["../../src/combo/base.ts"],"names":[],"mappings":"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","sourcesContent":["import { clone, deepMix, each, hasKey, isString, mix, isArray } from '@antv/util';\nimport { getScale } from '@antv/scale';\nimport TextDescription from '../components/description';\nimport BBox from '../util/bbox';\nimport Layer, { LayerConfig } from '../base/layer';\nimport ViewLayer from '../base/view-layer';\nimport { isTextUsable } from '../util/common';\nimport ThemeController from '../base/controller/theme';\nimport { ComboViewConfig } from './util/interface';\nimport { DataItem } from '../interface/config';\nimport { getGlobalTheme } from '../theme';\n\nconst LEGEND_MARGIN = 5;\n\nexport interface IComboViewLayer extends ComboViewConfig, LayerConfig {}\n\nexport default abstract class ComboViewLayer<T extends IComboViewLayer = IComboViewLayer> extends Layer<T> {\n  public static getDefaultOptions(): Partial<ComboViewConfig> {\n    return {\n      title: {\n        visible: false,\n        alignTo: 'left',\n        text: '',\n      },\n      description: {\n        visible: false,\n        text: '',\n        alignTo: 'left',\n      },\n    };\n  }\n\n  public initialOptions: T;\n  public title: TextDescription;\n  public description: TextDescription;\n  public viewRange: BBox;\n  public theme: any;\n  public type: string;\n  protected themeController: ThemeController;\n  protected geomLayers: ViewLayer[] = [];\n  protected colors: string[];\n  protected legends: any[] = [];\n  protected requiredField: string[] = ['xField', 'yField'];\n\n  constructor(props: T) {\n    super(props);\n    this.options = this.getOptions(props);\n    this.initialOptions = deepMix({}, props);\n    this.themeController = new ThemeController();\n  }\n\n  public getOptions(props: Partial<T>): T {\n    const curOptions = this.options || {};\n    const options = super.getOptions(props);\n    // @ts-ignore\n    const defaultOptions = this.constructor.getDefaultOptions(props);\n    return deepMix({}, options, defaultOptions, curOptions, props);\n  }\n\n  public checkData() {\n    const { data, xField, yField } = this.options;\n    // 判断1: 没有配置必选字段时不绘制\n    for (let i = 0; i < this.requiredField.length; i++) {\n      const field = this.requiredField[i];\n      if (!hasKey(this.options, field)) {\n        return false;\n      }\n    }\n    // 判断2: yField不是数组或只设置了一个字段时不绘制\n    if (!isArray(yField) || yField.length < 2) {\n      return false;\n    }\n    // 判断3:data为空时不绘制 data:[]\n    if (!isArray(data) || data.length === 0) {\n      return false;\n    }\n    // 判断4: 内嵌两层空数据时不绘制 data:[[],[]]\n    if (data[0]?.length === 0 && data[1]?.length === 0) {\n      return false;\n    }\n    // 判断5：一层数据为空时，利用相关映射字段补齐数据 data:[[],[{type:'a',value:10}]\n    each(data, (d, index) => {\n      if (!isArray(d) || d.length === 0) {\n        const mockData = this.getMockData(index);\n        data[index] = mockData;\n      }\n    });\n    // 判断6: 两份数据xField或值不一致时不绘制\n    if (!data[0][0][xField] || !data[1][0][xField]) {\n      return false;\n    }\n    return true;\n  }\n\n  public init() {\n    super.init();\n    this.theme = this.themeController.getTheme(this.options as any, this.type);\n    this.drawTitle();\n    this.drawDescription();\n  }\n\n  public updateConfig(cfg: Partial<T>) {\n    this.doDestroy();\n    this.options = this.getOptions(cfg);\n    this.processOptions(this.options);\n  }\n\n  public changeData(data: DataItem[][]) {\n    if ((data && data.length < 2) || !isArray(data[0])) {\n      return;\n    }\n    each(this.geomLayers, (layer, index) => {\n      layer.changeData(data[index]);\n    });\n  }\n\n  public changeDataByIndex(data, index) {\n    if (isArray(data[0])) {\n      return;\n    }\n    const geomLayer = this.geomLayers[index];\n    geomLayer.changeData(data);\n  }\n\n  protected doDestroy() {\n    each(this.geomLayers, (layer) => {\n      layer.doDestroy();\n    });\n    this.geomLayers = [];\n    each(this.legends, (legend) => {\n      legend.destroy();\n    });\n    this.legends = [];\n  }\n\n  protected createLayer(LayerCtr, data, config) {\n    const viewRange = this.getViewRange();\n    const layer = new LayerCtr({\n      canvas: this.canvas,\n      container: this.container,\n      x: viewRange.minX,\n      y: viewRange.minY,\n      width: viewRange.width,\n      height: viewRange.height,\n      data,\n      ...config,\n    });\n    this.geomLayers.push(layer);\n    return layer;\n  }\n\n  // 临时修复 v1 双轴图在左侧数据为0的时候右侧scale处理错误的问题\n  protected getLeftYAxisMax() {\n    const leftScaleData = this.getScaleData(0);\n    const rightScaleData = this.getScaleData(1);\n\n    return leftScaleData.min == 0 && leftScaleData.max === 0 ? Math.max(rightScaleData.max, 0) : leftScaleData.max;\n  }\n\n  protected yAxis(index: number) {\n    const leftScaleData = this.getScaleData(0);\n    const { yAxis } = this.options;\n    const config = index === 0 ? yAxis.leftConfig : yAxis.rightConfig;\n    const colorValue = this.colors[index];\n    const yAxisConfig = clone(config);\n    const styleMap = {\n      title: 'stroke',\n      line: 'stroke',\n      label: 'fill',\n      tickLine: 'stroke',\n    };\n    if (config.visible && config.colorMapping) {\n      each(yAxisConfig, (config, name) => {\n        if (!isString(config) && hasKey(styleMap, name)) {\n          const styleKey = styleMap[name];\n          if (!config.style) {\n            config.style = {};\n          }\n          config.style[styleKey] = colorValue;\n        }\n      });\n    }\n    if (!config.visible) {\n      yAxisConfig.title.visible = false;\n      yAxisConfig.tickLine.visible = false;\n      yAxisConfig.label.visible = false;\n      yAxisConfig.line.visible = false;\n      yAxisConfig.visible = true;\n    }\n    const yAxisGlobalConfig = this.getYAxisGlobalConfig();\n\n    if (index === 0 && leftScaleData.max === 0 && leftScaleData.min === 0) {\n      yAxisConfig.max = this.getLeftYAxisMax();\n    }\n\n    return deepMix({}, yAxisGlobalConfig, yAxisConfig);\n  }\n\n  protected getTicks() {\n    const { yAxis } = this.options;\n    const leftScaleData = this.getScaleData(0);\n    // 取到左轴ticks数量\n    const Scale = getScale('linear');\n    const linearScale = new Scale(\n      deepMix(\n        {},\n        {\n          min: 0,\n          max: this.getLeftYAxisMax(),\n          nice: true,\n          values: leftScaleData.values,\n        },\n        {\n          tickCount: yAxis.tickCount,\n        }\n      )\n    );\n    const tickCount = linearScale.ticks.length;\n    // 生成右轴ticks\n    const max = yAxis.max ? linearScale.max : this.getScaleData(1).max;\n    const tickInterval = max / (tickCount - 1);\n    const ticks = [];\n    for (let i = 0; i < tickCount; i++) {\n      let tickValue = i * tickInterval;\n      if (!Number.isInteger(tickValue)) {\n        tickValue = parseFloat(tickValue.toFixed(1));\n      }\n      ticks.push(tickValue);\n    }\n    return ticks;\n  }\n\n  protected getScaleData(index: number) {\n    const { data, yField, yAxis } = this.options;\n    const values = [];\n    each(data[index], (d) => {\n      values.push(d[yField[index]]);\n    });\n    values.sort((a, b) => a - b);\n    const min = values[0];\n    const max = yAxis.max ? yAxis.max : values[values.length - 1];\n    return { min, max, values };\n  }\n\n  protected getDataByXField(value: number | string, index: number) {\n    const { data, xField } = this.options;\n    const dataSource = data[index];\n    return dataSource.filter((d) => {\n      return d[xField] === value;\n    });\n  }\n\n  protected getYAxisGlobalConfig() {\n    const { min, max, tickCount } = this.options.yAxis;\n    return { min, max, tickCount };\n  }\n\n  protected adjustLayout() {\n    const { bleeding } = getGlobalTheme();\n    if (isArray(bleeding)) {\n      each(bleeding, (it, index) => {\n        if (typeof bleeding[index] === 'function') {\n          bleeding[index] = bleeding[index](this.options);\n        }\n      });\n    }\n    const viewRange = this.getViewRange();\n    const leftPadding: number[] = this.transfromPadding(this.geomLayers[0].options.padding);\n    const rightPadding: number[] = this.transfromPadding(this.geomLayers[1].options.padding);\n\n    // 获取legendHeight并加入上部padding\n    let legendHeight = 0;\n    let legendABBox;\n    let legendBBBox;\n    if (this.options.legend?.visible) {\n      legendABBox = this.legends[0].getLayoutBBox();\n      legendBBBox = this.legends[1].getLayoutBBox();\n      legendHeight = legendABBox.height + LEGEND_MARGIN * 2;\n    }\n    // 同步左右padding\n    // const uniquePadding = [leftPadding[0] + legendHeight, rightPadding[1], rightPadding[2], leftPadding[3]];\n    const uniquePadding = leftPadding.map((item: number, index: number) => {\n      // 兼容老版本\n      if (index === 0) {\n        return Math.max.apply(null, [item + legendHeight, rightPadding[index]]);\n      }\n      return Math.max.apply(null, [item, rightPadding[index]]);\n    });\n\n    this.geomLayers[0].updateConfig({\n      padding: uniquePadding,\n    });\n    this.geomLayers[0].render();\n    this.geomLayers[1].updateConfig({\n      padding: uniquePadding,\n    });\n    this.geomLayers[1].render();\n    // 更新legend的位置\n    if (this.options.legend?.visible) {\n      this.legends[0].setLocation({\n        x: bleeding[3],\n        y: viewRange.minY + LEGEND_MARGIN,\n      });\n      this.legends[1].setLocation({\n        x: viewRange.maxX - bleeding[1] - legendBBBox.width,\n        y: viewRange.minY + LEGEND_MARGIN,\n      });\n    }\n  }\n\n  /**\n   * padding 预处理\n   * @param {string | number | number[]} padding\n   */\n  private transfromPadding(padding: string | number | number[]): number[] {\n    if (typeof padding === 'string' || typeof padding === 'number') {\n      return [Number(padding)];\n    }\n    return padding;\n  }\n\n  protected legendFilter(index) {\n    const legend = this.legends[index];\n    const legend_group = legend.get('group');\n    legend_group.on('click', () => {\n      const item = legend.get('items')[0];\n      if (!item.unchecked) {\n        legend.setItemState(item, 'unchecked', true);\n        this.hideLayer(index);\n      } else {\n        legend.setItemState(item, 'unchecked', false);\n        this.showLayer(index);\n      }\n    });\n  }\n\n  protected hideLayer(index) {\n    const layer = this.geomLayers[index];\n    const field = this.options.yField[index];\n    // 隐藏layer时只隐藏yAxis和geometry\n    const { view } = layer;\n    const axisContainer = this.getYAxisContainer(view, field);\n    if (axisContainer) {\n      axisContainer.set('visible', false);\n    }\n    this.setGeometryVisibility(view, false);\n    this.canvas.draw();\n  }\n\n  protected showLayer(index) {\n    const layer = this.geomLayers[index];\n    const field = this.options.yField[index];\n    const { view } = layer;\n    const axisContainer = this.getYAxisContainer(view, field);\n    if (axisContainer) {\n      axisContainer.set('visible', true);\n    }\n    this.setGeometryVisibility(view, true);\n    this.canvas.draw();\n  }\n\n  protected setGeometryVisibility(view, show) {\n    each(view.geometries, (geom) => {\n      const { container, labelsContainer } = geom;\n      if (container) {\n        container.set('visible', show);\n      }\n      if (labelsContainer) {\n        labelsContainer.set('visible', show);\n      }\n    });\n  }\n\n  protected getYAxisContainer(view, field) {\n    let container;\n    const axisCtr = view.controllers.filter((ctr) => {\n      return hasKey(ctr, 'axisContainer');\n    })[0];\n    if (axisCtr) {\n      const ctr = axisCtr as any;\n      const axisGroups = ctr.axisContainer.get('children');\n      each(axisGroups, (g) => {\n        const axisField = g.get('component').get('field');\n        if (axisField === field) {\n          container = g;\n        }\n      });\n    }\n    return container;\n  }\n\n  protected getUnCheckedValue() {\n    const value = [];\n    each(this.legends, (legend) => {\n      const uncheckedItems = legend.getItemsByState('unchecked');\n      each(uncheckedItems, (item) => {\n        value.push(item.name);\n      });\n    });\n    return value;\n  }\n\n  protected drawTitle(): void {\n    const props = this.options;\n    const range = this.layerBBox;\n    if (this.title) {\n      this.title.destroy();\n      this.title = null;\n    }\n\n    if (isTextUsable(props.title)) {\n      const width = this.width;\n      const theme = this.theme;\n      const title = new TextDescription({\n        leftMargin: range.minX + theme.title.padding[3],\n        rightMargin: range.maxX - theme.title.padding[1],\n        topMargin: range.minY + theme.title.padding[0],\n        text: props.title.text,\n        style: mix(theme.title, props.title.style),\n        wrapperWidth: width - theme.title.padding[3] - theme.title.padding[1],\n        container: this.container.addGroup() as any,\n        theme,\n        index: isTextUsable(props.description) ? 0 : 1,\n        plot: this as any,\n        alignTo: props.title.alignTo,\n        name: 'title',\n      });\n      this.title = title;\n    }\n  }\n\n  protected drawDescription(): void {\n    const props = this.options;\n    const range = this.layerBBox;\n    if (this.description) {\n      this.description.destroy();\n      this.description = null;\n    }\n\n    if (isTextUsable(props.description)) {\n      const width = this.width;\n      const theme = this.theme;\n      let topMargin = 0;\n\n      if (this.title) {\n        const titleBBox = this.title.getBBox();\n        topMargin += titleBBox.minY + titleBBox.height;\n        topMargin += theme.description.padding[0];\n      } else {\n        // 无title的情况下使用title的上padding\n        topMargin += range.minY + theme.title.padding[0];\n      }\n\n      const description = new TextDescription({\n        leftMargin: range.minX + theme.description.padding[3],\n        topMargin,\n        rightMargin: range.maxX - theme.title.padding[1],\n        text: props.description.text,\n        style: mix(theme.description, props.description.style),\n        wrapperWidth: width - theme.description.padding[3] - theme.description.padding[1],\n        container: this.container.addGroup() as any,\n        theme,\n        index: 1,\n        plot: this as any,\n        alignTo: props.description.alignTo,\n        name: 'description',\n      });\n      this.description = description;\n    }\n  }\n\n  protected getViewRange() {\n    if (!this.layerBBox) {\n      this.layerBBox = new BBox(this.x, this.y, this.width, this.height);\n    }\n    let viewMinX = this.layerBBox.minX;\n    let viewMaxX = this.layerBBox.maxX;\n    let viewMinY = this.layerBBox.minY;\n    let viewMaxY = this.layerBBox.maxY;\n    const components = [this.title, this.description];\n\n    each(components, (component) => {\n      if (component) {\n        const { position } = component;\n        const { minX, maxX, minY, maxY } = component.getBBox();\n        if (maxY >= viewMinY && maxY <= viewMaxY && position === 'top') {\n          viewMinY = maxY;\n        }\n        if (minY >= viewMinY && minY <= viewMaxY && position === 'bottom') {\n          viewMaxY = minY;\n        }\n        if (maxX > viewMinX && maxX <= viewMaxX && position === 'left') {\n          viewMinX = maxX;\n        }\n        if (minX >= viewMinX && maxX <= viewMaxX && position === 'right') {\n          viewMaxX = minX;\n        }\n      }\n    });\n    return new BBox(viewMinX, viewMinY, viewMaxX - viewMinX, viewMaxY - viewMinY);\n  }\n\n  protected getMockData(index: number) {\n    const { xField, yField } = this.options as any;\n    const mock = {};\n    mock[xField] = 'null';\n    mock[yField[index]] = 0;\n    return [mock];\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}