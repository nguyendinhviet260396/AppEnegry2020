{"ast":null,"code":"import * as types from './../constants/alarm';\nconst inittialState = {\n  listAlarm: [],\n  listEmailAlarm: [{\n    id: 1,\n    name: 'việt nguyễn',\n    email: 'vietnguyen940@gmail.com',\n    time: '2020:11:25 19:15:45'\n  }, {\n    id: 2,\n    name: 'việt nguyễn',\n    email: 'vietnguyen940@gmail.com',\n    time: '2020:11:25 19:15:45'\n  }, {\n    id: 3,\n    name: 'việt nguyễn',\n    email: 'vietnguyen940@gmail.com',\n    time: '2020:11:25 19:15:45'\n  }, {\n    id: 4,\n    name: 'việt nguyễn',\n    email: 'vietnguyen940@gmail.com',\n    time: '2020:11:25 19:15:45'\n  }]\n};\n\nconst reducer = (state = inittialState, action) => {\n  switch (action.type) {\n    case types.FETCH_ALARM:\n      {\n        return { ...state\n        };\n      }\n\n    case types.FETCH_ALARM_SUCCESS:\n      {\n        const {\n          data\n        } = action.payload;\n        return { ...state,\n          listAlarm: data\n        };\n      }\n\n    case types.FETCH_ALARM_FAILED:\n      {\n        return { ...state\n        };\n      }\n\n    case types.ADD_EMAIL_ALARM:\n      {\n        return { ...state\n        };\n      }\n\n    case types.ADD_EMAIL_ALARM_SUCCESS:\n      {\n        const {\n          data\n        } = action.payload;\n        return { ...state,\n          listAlarm: data\n        };\n      }\n\n    case types.ADD_EMAIL_ALARM_FAILED:\n      {\n        return { ...state\n        };\n      }\n\n    case types.REFESH_EMAIL_ALARM:\n      {\n        return { ...state\n        };\n      }\n\n    case types.REFESH_EMAIL_ALARM_SUCCESS:\n      {\n        const {\n          data\n        } = action.payload;\n        return { ...state,\n          listeEmailAlarm: data\n        };\n      }\n\n    case types.REFESH_EMAIL_ALARM_FAILED:\n      {\n        return { ...state\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/vietn/Desktop/AppEnegry2020/frontend/src/reducers/alarm.js"],"names":["types","inittialState","listAlarm","listEmailAlarm","id","name","email","time","reducer","state","action","type","FETCH_ALARM","FETCH_ALARM_SUCCESS","data","payload","FETCH_ALARM_FAILED","ADD_EMAIL_ALARM","ADD_EMAIL_ALARM_SUCCESS","ADD_EMAIL_ALARM_FAILED","REFESH_EMAIL_ALARM","REFESH_EMAIL_ALARM_SUCCESS","listeEmailAlarm","REFESH_EMAIL_ALARM_FAILED"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,sBAAvB;AACC,MAAMC,aAAa,GAAE;AACjBC,EAAAA,SAAS,EAAC,EADO;AAEjBC,EAAAA,cAAc,EAAC,CAAC;AACbC,IAAAA,EAAE,EAAE,CADS;AAEbC,IAAAA,IAAI,EAAE,aAFO;AAGbC,IAAAA,KAAK,EAAE,yBAHM;AAIbC,IAAAA,IAAI,EAAE;AAJO,GAAD,EAMd;AACEH,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,aAFR;AAGEC,IAAAA,KAAK,EAAE,yBAHT;AAIEC,IAAAA,IAAI,EAAE;AAJR,GANc,EAYd;AACEH,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,aAFR;AAGEC,IAAAA,KAAK,EAAE,yBAHT;AAIEC,IAAAA,IAAI,EAAE;AAJR,GAZc,EAkBd;AACEH,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,aAFR;AAGEC,IAAAA,KAAK,EAAE,yBAHT;AAIEC,IAAAA,IAAI,EAAE;AAJR,GAlBc;AAFE,CAArB;;AA4BA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAACR,aAAP,EAAqBS,MAArB,KAA8B;AAC1C,UAAQA,MAAM,CAACC,IAAf;AACG,SAAKX,KAAK,CAACY,WAAX;AAAuB;AAClB,eAAO,EACH,GAAGH;AADA,SAAP;AAGJ;;AACD,SAAKT,KAAK,CAACa,mBAAX;AAAgC;AAC3B,cAAM;AAACC,UAAAA;AAAD,YAASJ,MAAM,CAACK,OAAtB;AACA,eAAO,EACH,GAAGN,KADA;AAEHP,UAAAA,SAAS,EAACY;AAFP,SAAP;AAIJ;;AACD,SAAKd,KAAK,CAACgB,kBAAX;AAA+B;AAC1B,eAAO,EACH,GAAGP;AADA,SAAP;AAGJ;;AACD,SAAKT,KAAK,CAACiB,eAAX;AAA2B;AACvB,eAAO,EACH,GAAGR;AADA,SAAP;AAGH;;AACD,SAAKT,KAAK,CAACkB,uBAAX;AAAoC;AAChC,cAAM;AAACJ,UAAAA;AAAD,YAASJ,MAAM,CAACK,OAAtB;AACA,eAAO,EACH,GAAGN,KADA;AAEHP,UAAAA,SAAS,EAACY;AAFP,SAAP;AAIH;;AACD,SAAKd,KAAK,CAACmB,sBAAX;AAAmC;AAC/B,eAAO,EACH,GAAGV;AADA,SAAP;AAGH;;AACD,SAAKT,KAAK,CAACoB,kBAAX;AAA8B;AAC1B,eAAO,EACP,GAAGX;AADI,SAAP;AAGH;;AACD,SAAKT,KAAK,CAACqB,0BAAX;AAAuC;AACnC,cAAM;AAACP,UAAAA;AAAD,YAASJ,MAAM,CAACK,OAAtB;AACA,eAAO,EACP,GAAGN,KADI;AAEPa,UAAAA,eAAe,EAACR;AAFT,SAAP;AAIH;;AACD,SAAKd,KAAK,CAACuB,yBAAX;AAAsC;AAClC,eAAO,EACP,GAAGd;AADI,SAAP;AAGH;;AACD;AACI,aAAOA,KAAP;AArDP;AAuDH,CAxDD;;AAyDA,eAAeD,OAAf","sourcesContent":["import * as types from './../constants/alarm';\r\n const inittialState ={\r\n     listAlarm:[],\r\n     listEmailAlarm:[{\r\n        id: 1,\r\n        name: 'việt nguyễn',\r\n        email: 'vietnguyen940@gmail.com',\r\n        time: '2020:11:25 19:15:45',\r\n      },\r\n      {\r\n        id: 2,\r\n        name: 'việt nguyễn',\r\n        email: 'vietnguyen940@gmail.com',\r\n        time: '2020:11:25 19:15:45',\r\n      },\r\n      {\r\n        id: 3,\r\n        name: 'việt nguyễn',\r\n        email: 'vietnguyen940@gmail.com',\r\n        time: '2020:11:25 19:15:45',\r\n      },\r\n      {\r\n        id: 4,\r\n        name: 'việt nguyễn',\r\n        email: 'vietnguyen940@gmail.com',\r\n        time: '2020:11:25 19:15:45',\r\n      },],\r\n };\r\n\r\n const reducer = (state=inittialState,action)=>{\r\n     switch (action.type) {\r\n        case types.FETCH_ALARM:{\r\n             return {\r\n                 ...state,\r\n             };\r\n        }\r\n        case types.FETCH_ALARM_SUCCESS: {\r\n             const {data} = action.payload;\r\n             return {\r\n                 ...state,\r\n                 listAlarm:data,\r\n             };\r\n        }\r\n        case types.FETCH_ALARM_FAILED: {\r\n             return {\r\n                 ...state,\r\n             };\r\n        }\r\n        case types.ADD_EMAIL_ALARM:{\r\n            return {\r\n                ...state,\r\n        };\r\n        }\r\n        case types.ADD_EMAIL_ALARM_SUCCESS: {\r\n            const {data} = action.payload;\r\n            return {\r\n                ...state,\r\n                listAlarm:data,\r\n            };\r\n        }\r\n        case types.ADD_EMAIL_ALARM_FAILED: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case types.REFESH_EMAIL_ALARM:{\r\n            return {\r\n            ...state,\r\n            };\r\n        }\r\n        case types.REFESH_EMAIL_ALARM_SUCCESS: {\r\n            const {data} = action.payload;\r\n            return {\r\n            ...state,\r\n            listeEmailAlarm:data,\r\n            };\r\n        }\r\n        case types.REFESH_EMAIL_ALARM_FAILED: {\r\n            return {\r\n            ...state,\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n     }\r\n }\r\n export default reducer;"]},"metadata":{},"sourceType":"module"}