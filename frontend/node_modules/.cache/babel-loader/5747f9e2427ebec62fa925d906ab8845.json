{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { deepMix } from '@antv/util';\nimport BasePlot from '../../base/plot';\nimport HeatmapLayer from './layer';\n\nvar Heatmap =\n/** @class */\nfunction (_super) {\n  __extends(Heatmap, _super);\n\n  function Heatmap() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Heatmap.prototype.createLayers = function (props) {\n    var layerProps = deepMix({}, props);\n    layerProps.type = 'heatmap';\n\n    _super.prototype.createLayers.call(this, layerProps);\n  };\n\n  Heatmap.prototype.changeShape = function (type) {\n    var layer = this.layers[0];\n    layer.changeShape(type);\n  };\n\n  Heatmap.prototype.mappingSize = function (field) {\n    var layer = this.layers[0];\n    layer.mappingSize(field);\n  };\n\n  Heatmap.prototype.disableMappingSize = function () {\n    var layer = this.layers[0];\n    layer.disableMappingSize();\n  };\n\n  Heatmap.prototype.getSizeScale = function () {\n    var layer = this.layers[0];\n    return layer.getSizeScale();\n  };\n\n  Heatmap.getDefaultOptions = HeatmapLayer.getDefaultOptions;\n  return Heatmap;\n}(BasePlot);\n\nexport default Heatmap;","map":{"version":3,"sources":["../../../src/plots/heatmap/index.ts"],"names":[],"mappings":";AAAA,SAAS,OAAT,QAAwB,YAAxB;AACA,OAAO,QAAP,MAAqC,iBAArC;AACA,OAAO,YAAP,MAAiD,SAAjD;;AAIA,IAAA,OAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAqC,EAAA,SAAA,CAAA,OAAA,EAAA,MAAA,CAAA;;AAArC,WAAA,OAAA,GAAA;;AA4BC;;AAzBQ,EAAA,OAAA,CAAA,SAAA,CAAA,YAAA,GAAP,UAAoB,KAApB,EAAyB;AACvB,QAAM,UAAU,GAAG,OAAO,CAAC,EAAD,EAAK,KAAL,CAA1B;AACA,IAAA,UAAU,CAAC,IAAX,GAAkB,SAAlB;;AACA,IAAA,MAAA,CAAA,SAAA,CAAM,YAAN,CAAkB,IAAlB,CAAkB,IAAlB,EAAmB,UAAnB;AACD,GAJM;;AAMA,EAAA,OAAA,CAAA,SAAA,CAAA,WAAA,GAAP,UAAmB,IAAnB,EAA+B;AAC7B,QAAM,KAAK,GAAQ,KAAK,MAAL,CAAY,CAAZ,CAAnB;AACA,IAAA,KAAK,CAAC,WAAN,CAAkB,IAAlB;AACD,GAHM;;AAKA,EAAA,OAAA,CAAA,SAAA,CAAA,WAAA,GAAP,UAAmB,KAAnB,EAAgC;AAC9B,QAAM,KAAK,GAAQ,KAAK,MAAL,CAAY,CAAZ,CAAnB;AACA,IAAA,KAAK,CAAC,WAAN,CAAkB,KAAlB;AACD,GAHM;;AAKA,EAAA,OAAA,CAAA,SAAA,CAAA,kBAAA,GAAP,YAAA;AACE,QAAM,KAAK,GAAQ,KAAK,MAAL,CAAY,CAAZ,CAAnB;AACA,IAAA,KAAK,CAAC,kBAAN;AACD,GAHM;;AAKA,EAAA,OAAA,CAAA,SAAA,CAAA,YAAA,GAAP,YAAA;AACE,QAAM,KAAK,GAAQ,KAAK,MAAL,CAAY,CAAZ,CAAnB;AACA,WAAO,KAAK,CAAC,YAAN,EAAP;AACD,GAHM;;AAvBO,EAAA,OAAA,CAAA,iBAAA,GAA2D,YAAY,CAAC,iBAAxE;AA2BhB,SAAA,OAAA;AAAC,CA5BD,CAAqC,QAArC,CAAA;;eAAqB,O","sourcesContent":["import { deepMix } from '@antv/util';\nimport BasePlot, { PlotConfig } from '../../base/plot';\nimport HeatmapLayer, { HeatmapLayerConfig } from './layer';\n\nexport interface HeatmapConfig extends HeatmapLayerConfig, PlotConfig {}\n\nexport default class Heatmap extends BasePlot<HeatmapConfig> {\n  public static getDefaultOptions: typeof HeatmapLayer.getDefaultOptions = HeatmapLayer.getDefaultOptions;\n\n  public createLayers(props) {\n    const layerProps = deepMix({}, props);\n    layerProps.type = 'heatmap';\n    super.createLayers(layerProps);\n  }\n\n  public changeShape(type: string) {\n    const layer: any = this.layers[0];\n    layer.changeShape(type);\n  }\n\n  public mappingSize(field: string) {\n    const layer: any = this.layers[0];\n    layer.mappingSize(field);\n  }\n\n  public disableMappingSize() {\n    const layer: any = this.layers[0];\n    layer.disableMappingSize();\n  }\n\n  public getSizeScale() {\n    const layer: any = this.layers[0];\n    return layer.getSizeScale();\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}