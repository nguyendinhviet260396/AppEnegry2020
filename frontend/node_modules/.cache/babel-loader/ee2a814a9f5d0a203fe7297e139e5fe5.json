{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { each, clone } from '@antv/util';\nimport PieBaseLabel from './base-label';\nimport { getOverlapInfo } from './utils';\nimport { distBetweenPoints } from '../../../../util/math';\nexport function percent2Number(value) {\n  var percentage = Number(value.endsWith('%') ? value.slice(0, -1) : value);\n  return percentage / 100;\n}\n\nvar PieInnerLabel =\n/** @class */\nfunction (_super) {\n  __extends(PieInnerLabel, _super);\n\n  function PieInnerLabel() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /** @override 不能大于0 */\n\n\n  PieInnerLabel.prototype.adjustOption = function (options) {\n    _super.prototype.adjustOption.call(this, options);\n\n    if (options.offset > 0) {\n      options.offset = 0;\n    }\n  };\n\n  PieInnerLabel.prototype.adjustItem = function (item) {\n    item.textAlign = 'middle';\n  };\n  /** @override 不绘制拉线 */\n\n\n  PieInnerLabel.prototype.drawLines = function () {\n    return;\n  };\n\n  PieInnerLabel.prototype.layout = function (labels, shapeInfos) {\n    var _this = this;\n\n    labels.forEach(function (label, idx) {\n      if (idx > 0) {\n        each(labels.slice(0, idx), function (prevLabel) {\n          _this.resolveCollision(label, prevLabel, shapeInfos[idx]);\n        });\n      }\n    });\n  };\n\n  PieInnerLabel.prototype.getDefaultOptions = function () {\n    var theme = this.plot.theme;\n    var labelStyle = theme.label.style;\n    return {\n      offsetX: 0,\n      offsetY: 0,\n      offset: '-30%',\n      style: __assign(__assign({}, labelStyle), {\n        textAlign: 'center',\n        textBaseline: 'middle'\n      })\n    };\n  };\n  /** label 碰撞调整 */\n\n\n  PieInnerLabel.prototype.resolveCollision = function (label, prev, shapeInfo) {\n    var center = this.getCoordinate().center;\n    var angle = shapeInfo.angle;\n    var box = label.getBBox();\n    var prevBBox = prev.getBBox();\n    var pos = {\n      x: (box.minX + box.maxX) / 2,\n      y: (box.minY + box.maxY) / 2\n    }; // 两种调整方案\n\n    /** 先偏移 x 方向 -> 再计算 y 位置 */\n\n    var pos1 = clone(pos);\n    /** 先偏移 y 方向 -> 再计算 x 位置 */\n\n    var pos2 = clone(pos); // check overlap\n\n    if (prev.get('id') !== label.get('id')) {\n      var _a = getOverlapInfo(box, prevBBox),\n          xOverlap = _a.xOverlap,\n          yOverlap = _a.yOverlap;\n\n      if (xOverlap) {\n        pos1.x = pos.x + xOverlap;\n        pos1.y = pos.y + Math.tan(angle) * xOverlap;\n      }\n\n      if (yOverlap) {\n        // fix issue-460\n        var yMover = yOverlap;\n\n        if (pos.y < center.y) {\n          // 上方label优先往上偏移\n          yMover = yMover < 0 ? yMover : prevBBox.minY - box.maxY;\n        } else {\n          // 下方label优先往下偏移\n          yMover = yMover > 0 ? yMover : prevBBox.maxY - box.minY;\n        }\n\n        pos2.y = pos.y + yMover;\n        pos2.x = pos.x + yMover / Math.tan(angle);\n      }\n\n      var dist1 = distBetweenPoints(pos, pos1);\n      var dist2 = distBetweenPoints(pos, pos2);\n      var actualPos = dist1 < dist2 ? pos1 : pos2; // 取偏移距离最小的\n\n      label.attr('x', actualPos.x);\n      label.attr('y', actualPos.y);\n    }\n  };\n\n  return PieInnerLabel;\n}(PieBaseLabel);\n\nexport default PieInnerLabel;","map":{"version":3,"sources":["../../../../../src/plots/pie/component/label/inner-label.ts"],"names":[],"mappings":"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","sourcesContent":["import { IShape } from '../../../../dependents';\nimport { each, clone } from '@antv/util';\nimport PieBaseLabel, { LabelItem, PieLabelConfig } from './base-label';\nimport { getOverlapInfo } from './utils';\nimport { distBetweenPoints } from '../../../../util/math';\n\nexport function percent2Number(value: string): number {\n  const percentage = Number(value.endsWith('%') ? value.slice(0, -1) : value);\n  return percentage / 100;\n}\n\nexport default class PieInnerLabel extends PieBaseLabel {\n  /** @override 不能大于0 */\n  protected adjustOption(options: PieLabelConfig) {\n    super.adjustOption(options);\n    if (options.offset > 0) {\n      options.offset = 0;\n    }\n  }\n\n  protected adjustItem(item: LabelItem) {\n    item.textAlign = 'middle';\n  }\n\n  /** @override 不绘制拉线 */\n  protected drawLines() {\n    return;\n  }\n\n  protected layout(labels: IShape[], shapeInfos: LabelItem[]) {\n    labels.forEach((label, idx) => {\n      if (idx > 0) {\n        each(labels.slice(0, idx), (prevLabel) => {\n          this.resolveCollision(label, prevLabel, shapeInfos[idx]);\n        });\n      }\n    });\n  }\n\n  protected getDefaultOptions() {\n    const { theme } = this.plot;\n    const labelStyle = theme.label.style;\n    return {\n      offsetX: 0,\n      offsetY: 0,\n      offset: '-30%',\n      style: {\n        ...labelStyle,\n        textAlign: 'center',\n        textBaseline: 'middle',\n      },\n    };\n  }\n\n  /** label 碰撞调整 */\n  protected resolveCollision(label: IShape, prev: IShape, shapeInfo: LabelItem): void {\n    const { center } = this.getCoordinate();\n    const angle = shapeInfo.angle;\n    const box = label.getBBox();\n    const prevBBox = prev.getBBox();\n    const pos = { x: (box.minX + box.maxX) / 2, y: (box.minY + box.maxY) / 2 };\n    // 两种调整方案\n    /** 先偏移 x 方向 -> 再计算 y 位置 */\n    const pos1 = clone(pos);\n    /** 先偏移 y 方向 -> 再计算 x 位置 */\n    const pos2 = clone(pos);\n    // check overlap\n    if (prev.get('id') !== label.get('id')) {\n      const { xOverlap, yOverlap } = getOverlapInfo(box, prevBBox);\n      if (xOverlap) {\n        pos1.x = pos.x + xOverlap;\n        pos1.y = pos.y + Math.tan(angle) * xOverlap;\n      }\n      if (yOverlap) {\n        // fix issue-460\n        let yMover = yOverlap;\n        if (pos.y < center.y) {\n          // 上方label优先往上偏移\n          yMover = yMover < 0 ? yMover : prevBBox.minY - box.maxY;\n        } else {\n          // 下方label优先往下偏移\n          yMover = yMover > 0 ? yMover : prevBBox.maxY - box.minY;\n        }\n        pos2.y = pos.y + yMover;\n        pos2.x = pos.x + yMover / Math.tan(angle);\n      }\n\n      const dist1 = distBetweenPoints(pos, pos1);\n      const dist2 = distBetweenPoints(pos, pos2);\n      const actualPos = dist1 < dist2 ? pos1 : pos2;\n      // 取偏移距离最小的\n      label.attr('x', actualPos.x);\n      label.attr('y', actualPos.y);\n    }\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}