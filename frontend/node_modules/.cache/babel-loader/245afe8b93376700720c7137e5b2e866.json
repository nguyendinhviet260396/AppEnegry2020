{"ast":null,"code":"import { createStore, compose, applyMiddleware } from 'redux';\nimport rootReducer from './../reducers/index';\nimport createSagaMiddleware from 'redux-saga';\nimport thunk from 'redux-thunk';\nimport rootSaga from './../sagas/index';\nconst composeEnhancers = process.env.NODE_ENV !== 'production' && typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n  shouldHotReload: false\n}) : compose;\nconst sagaMiddleware = createSagaMiddleware();\n\nconst configureStore = () => {\n  const middlewares = [thunk, sagaMiddleware];\n  const enhancers = [applyMiddleware(...middlewares)];\n  const store = createStore(rootReducer, composeEnhancers(...enhancers));\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nexport default configureStore;","map":{"version":3,"sources":["C:/Users/vietn/Desktop/AppEnnegry/frontend/src/redux/configureStore.js"],"names":["createStore","compose","applyMiddleware","rootReducer","createSagaMiddleware","thunk","rootSaga","composeEnhancers","process","env","NODE_ENV","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","shouldHotReload","sagaMiddleware","configureStore","middlewares","enhancers","store","run"],"mappings":"AAAA,SAAQA,WAAR,EAAoBC,OAApB,EAA4BC,eAA5B,QAAkD,OAAlD;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AAKA,MAAMC,gBAAgB,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IACrB,OAAOC,MAAP,KAAkB,QADG,IAErBA,MAAM,CAACC,oCAFc,GAGnBD,MAAM,CAACC,oCAAP,CAA4C;AAC1CC,EAAAA,eAAe,EAAE;AADyB,CAA5C,CAHmB,GAMpBZ,OANL;AAOA,MAAMa,cAAc,GAAGV,oBAAoB,EAA3C;;AACA,MAAMW,cAAc,GAAC,MAAI;AACrB,QAAMC,WAAW,GAAG,CAACX,KAAD,EAAQS,cAAR,CAApB;AACA,QAAMG,SAAS,GAAG,CAACf,eAAe,CAAC,GAAGc,WAAJ,CAAhB,CAAlB;AACA,QAAME,KAAK,GAAGlB,WAAW,CAACG,WAAD,EAAaI,gBAAgB,CAAC,GAAGU,SAAJ,CAA7B,CAAzB;AACAH,EAAAA,cAAc,CAACK,GAAf,CAAmBb,QAAnB;AACA,SAAOY,KAAP;AACH,CAND;;AAOA,eAAeH,cAAf","sourcesContent":["import {createStore,compose,applyMiddleware} from 'redux';\r\nimport rootReducer from './../reducers/index';\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport thunk from 'redux-thunk';\r\nimport rootSaga from './../sagas/index';\r\n\r\n\r\n\r\n\r\nconst composeEnhancers = process.env.NODE_ENV !== 'production'&&\r\n    typeof window === 'object' && \r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n        shouldHotReload: false,\r\n    })\r\n    :compose;\r\nconst sagaMiddleware = createSagaMiddleware()\r\nconst configureStore=()=>{\r\n    const middlewares = [thunk, sagaMiddleware];\r\n    const enhancers = [applyMiddleware(...middlewares)];\r\n    const store = createStore(rootReducer,composeEnhancers(...enhancers));\r\n    sagaMiddleware.run(rootSaga)\r\n    return store;\r\n}\r\nexport default configureStore;"]},"metadata":{},"sourceType":"module"}