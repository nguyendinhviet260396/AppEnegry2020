{"ast":null,"code":"import { assign } from '@antv/util';\n\nvar ElementParser =\n/** @class */\nfunction () {\n  function ElementParser(cfg) {\n    assign(this, cfg);\n    this.init();\n  }\n\n  ElementParser.prototype.init = function () {\n    this.config = {\n      type: this.type,\n      position: {\n        fields: this.positionFields\n      }\n    };\n  };\n\n  return ElementParser;\n}();\n\nexport default ElementParser;","map":{"version":3,"sources":["../../src/geoms/base.ts"],"names":[],"mappings":"AAAA,SAAS,MAAT,QAAuB,YAAvB;;AAGA,IAAA,aAAA;AAAA;AAAA,YAAA;AAQE,WAAA,aAAA,CAAY,GAAZ,EAAe;AACb,IAAA,MAAM,CAAC,IAAD,EAAO,GAAP,CAAN;AACA,SAAK,IAAL;AACD;;AAEM,EAAA,aAAA,CAAA,SAAA,CAAA,IAAA,GAAP,YAAA;AACE,SAAK,MAAL,GAAc;AACZ,MAAA,IAAI,EAAE,KAAK,IADC;AAEZ,MAAA,QAAQ,EAAE;AACR,QAAA,MAAM,EAAE,KAAK;AADL;AAFE,KAAd;AAMD,GAPM;;AAQT,SAAA,aAAA;AAAC,CArBD,EAAA","sourcesContent":["import { assign } from '@antv/util';\nimport { ElementOption } from '../interface/config';\n\nexport default class ElementParser {\n  public plot: any;\n  public type: string;\n  public config: ElementOption;\n  public style: any;\n  private positionFields: string[];\n  private widthRatio: { [key: string]: number };\n\n  constructor(cfg) {\n    assign(this, cfg);\n    this.init();\n  }\n\n  public init() {\n    this.config = {\n      type: this.type,\n      position: {\n        fields: this.positionFields,\n      },\n    };\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}