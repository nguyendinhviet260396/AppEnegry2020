{"ast":null,"code":"import { each, set, has, isEmpty, deepMix } from '@antv/util';\n/**\n * 所有的 plot theme object，每个图类型只会存在一个 theme\n */\n\nvar PLOT_THEME_MAP = {};\n/**\n * 将 主题 转换为 G2 主题配置\n * @param type plotType\n */\n\nexport function convertThemeToG2Theme(type\n/** plot style */\n, theme) {\n  var styleMapShape = {\n    lineStyle: 'line.line',\n    columnStyle: 'interval.rect',\n    pointStyle: 'point.circle'\n  };\n  var g2Theme = {};\n\n  if (type === 'area') {\n    styleMapShape = {\n      areaStyle: 'area.area',\n      lineStyle: 'area.line',\n      pointStyle: 'point.circle'\n    };\n  }\n\n  var geometryTheme = {};\n  each(theme, function (style, styleKey) {\n    var _a;\n\n    if (has(styleMapShape, styleKey)) {\n      var shapePath_1 = styleMapShape[styleKey];\n      each(style, function (v, k) {\n        set(geometryTheme, shapePath_1 + \".\" + [k === 'normal' ? 'default' : k === 'disable' ? 'inactive' : k] + \".style\", v);\n      });\n    } else {\n      /** styleMap 找不到，直接放入 G2 theme */\n      g2Theme = deepMix({}, g2Theme, (_a = {}, _a[styleKey] = style, _a));\n    }\n  });\n\n  if (!isEmpty(geometryTheme)) {\n    g2Theme = deepMix({}, g2Theme, {\n      geometries: geometryTheme\n    });\n  }\n\n  return g2Theme;\n}\n/**\n * 注册新的图表主题\n * @param type\n * @param theme\n */\n\nexport function registerTheme(type, theme) {\n  PLOT_THEME_MAP[type.toLowerCase()] = convertThemeToG2Theme(type, theme);\n}\n/**\n * 根据类型获取主题\n * @param type plotType, such as line, column, bar, pie, bullet, radar and so on\n */\n\nexport function getTheme(type) {\n  return PLOT_THEME_MAP[type.toLowerCase()] || {};\n}","map":{"version":3,"sources":["../../src/theme/theme.ts"],"names":[],"mappings":"AAAA,SAAS,IAAT,EAAe,GAAf,EAAoB,GAApB,EAAyB,OAAzB,EAAkC,OAAlC,QAAiD,YAAjD;AAGA;;;;AAGA,IAAM,cAAc,GAA4B,EAAhD;AAEA;;;;;AAIA,OAAM,SAAU,qBAAV,CAAgC;AAAa;AAA7C,EAAgE,KAAhE,EAA0F;AAC9F,MAAI,aAAa,GAAW;AAC1B,IAAA,SAAS,EAAE,WADe;AAE1B,IAAA,WAAW,EAAE,eAFa;AAG1B,IAAA,UAAU,EAAE;AAHc,GAA5B;AAKA,MAAI,OAAO,GAAG,EAAd;;AACA,MAAI,IAAI,KAAK,MAAb,EAAqB;AACnB,IAAA,aAAa,GAAG;AACd,MAAA,SAAS,EAAE,WADG;AAEd,MAAA,SAAS,EAAE,WAFG;AAGd,MAAA,UAAU,EAAE;AAHE,KAAhB;AAKD;;AACD,MAAM,aAAa,GAAG,EAAtB;AACA,EAAA,IAAI,CAAC,KAAD,EAAQ,UAAC,KAAD,EAAQ,QAAR,EAAgB;;;AAC1B,QAAI,GAAG,CAAC,aAAD,EAAgB,QAAhB,CAAP,EAAkC;AAChC,UAAM,WAAS,GAAG,aAAa,CAAC,QAAD,CAA/B;AACA,MAAA,IAAI,CAAC,KAAD,EAAQ,UAAC,CAAD,EAAI,CAAJ,EAAK;AACf,QAAA,GAAG,CAAC,aAAD,EAAmB,WAAS,GAAA,GAAT,GAAa,CAAC,CAAC,KAAK,QAAN,GAAiB,SAAjB,GAA6B,CAAC,KAAK,SAAN,GAAkB,UAAlB,GAA+B,CAA7D,CAAb,GAA4E,QAA/F,EAAyG,CAAzG,CAAH;AACD,OAFG,CAAJ;AAGD,KALD,MAKO;AACL;AACA,MAAA,OAAO,GAAG,OAAO,CAAC,EAAD,EAAK,OAAL,GAAY,EAAA,GAAA,EAAA,EAAI,EAAA,CAAC,QAAD,CAAA,GAAY,KAAhB,EAAqB,EAAjC,EAAjB;AACD;AACF,GAVG,CAAJ;;AAWA,MAAI,CAAC,OAAO,CAAC,aAAD,CAAZ,EAA6B;AAC3B,IAAA,OAAO,GAAG,OAAO,CAAC,EAAD,EAAK,OAAL,EAAc;AAAE,MAAA,UAAU,EAAE;AAAd,KAAd,CAAjB;AACD;;AACD,SAAO,OAAP;AACD;AAED;;;;;;AAKA,OAAM,SAAU,aAAV,CAAwB,IAAxB,EAAsC,KAAtC,EAAgE;AACpE,EAAA,cAAc,CAAC,IAAI,CAAC,WAAL,EAAD,CAAd,GAAqC,qBAAqB,CAAC,IAAD,EAAO,KAAP,CAA1D;AACD;AAED;;;;;AAIA,OAAM,SAAU,QAAV,CAAmB,IAAnB,EAA+B;AACnC,SAAO,cAAc,CAAC,IAAI,CAAC,WAAL,EAAD,CAAd,IAAsC,EAA7C;AACD","sourcesContent":["import { each, set, has, isEmpty, deepMix } from '@antv/util';\nimport { G2PlotTheme, G2Theme, Style } from './interface';\n\n/**\n * 所有的 plot theme object，每个图类型只会存在一个 theme\n */\nconst PLOT_THEME_MAP: Record<string, G2Theme> = {};\n\n/**\n * 将 主题 转换为 G2 主题配置\n * @param type plotType\n */\nexport function convertThemeToG2Theme(type: string /** plot style */, theme: G2PlotTheme | Style): G2Theme {\n  let styleMapShape: object = {\n    lineStyle: 'line.line',\n    columnStyle: 'interval.rect',\n    pointStyle: 'point.circle', // point 可能是其他shape，如square等\n  };\n  let g2Theme = {};\n  if (type === 'area') {\n    styleMapShape = {\n      areaStyle: 'area.area',\n      lineStyle: 'area.line', // todo area-smooth怎么配置\n      pointStyle: 'point.circle',\n    };\n  }\n  const geometryTheme = {};\n  each(theme, (style, styleKey) => {\n    if (has(styleMapShape, styleKey)) {\n      const shapePath = styleMapShape[styleKey];\n      each(style, (v, k) => {\n        set(geometryTheme, `${shapePath}.${[k === 'normal' ? 'default' : k === 'disable' ? 'inactive' : k]}.style`, v);\n      });\n    } else {\n      /** styleMap 找不到，直接放入 G2 theme */\n      g2Theme = deepMix({}, g2Theme, { [styleKey]: style });\n    }\n  });\n  if (!isEmpty(geometryTheme)) {\n    g2Theme = deepMix({}, g2Theme, { geometries: geometryTheme });\n  }\n  return g2Theme;\n}\n\n/**\n * 注册新的图表主题\n * @param type\n * @param theme\n */\nexport function registerTheme(type: string, theme: G2PlotTheme | Style) {\n  PLOT_THEME_MAP[type.toLowerCase()] = convertThemeToG2Theme(type, theme);\n}\n\n/**\n * 根据类型获取主题\n * @param type plotType, such as line, column, bar, pie, bullet, radar and so on\n */\nexport function getTheme(type: string): G2Theme {\n  return PLOT_THEME_MAP[type.toLowerCase()] || {};\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}