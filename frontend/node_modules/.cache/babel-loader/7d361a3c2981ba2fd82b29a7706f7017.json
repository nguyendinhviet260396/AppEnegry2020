{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vietn\\\\Desktop\\\\AppEnnegry\\\\frontend\\\\src\\\\containers\\\\AnalyticsPage\\\\index.js\";\nimport React, { Component } from 'react';\nimport { withStyles, Button } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport Grid from '@material-ui/core/Grid';\nimport renderTextField from '../../components/FormHelper/TextField/index';\nimport styles from './styles';\n\nclass Analytics extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleCloseForm = () => {};\n\n    this.handleSubmitForm = data => {\n      //const {name,email,password,operator}= data;\n      console.log(data);\n    };\n  }\n\n  render() {\n    const {\n      handleSubmit\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit(this.handleSubmitForm),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 1,\n      className: \"mr-3 p-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      className: \"textAlign: center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"font-weight-bolder \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 33\n      }\n    }, \"Analytics Devices\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sx: 12,\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      id: \"devicename\",\n      label: \"Device Name\",\n      name: \"devicename\",\n      inputProps: {\n        style: {\n          fontSize: 15\n        }\n      } // font size of input text\n      ,\n      InputLabelProps: {\n        style: {\n          fontSize: 15\n        }\n      } // font size of input label\n      ,\n      type: \"text\",\n      size: \"small\",\n      component: renderTextField // value={userEditting ? userEditting.name :''}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sx: 12,\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      id: \"fromdate\",\n      label: \"From Date\",\n      name: \"fromdate\",\n      inputProps: {\n        style: {\n          fontSize: 15\n        }\n      } // font size of input text\n      // InputLabelProps={{}} // font size of input label\n      ,\n      type: \"date\",\n      InputLabelProps: {\n        shrink: true,\n        style: {\n          fontSize: 15\n        }\n      },\n      size: \"small\",\n      component: renderTextField // value={userEditting ? userEditting.name :''}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sx: 12,\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      id: \"todate\",\n      label: \"Todate\",\n      name: \"todate\",\n      inputProps: {\n        style: {\n          fontSize: 15\n        }\n      } // font size of input text\n      // InputLabelProps={{style: {fontSize: 12}}} // font size of input label\n      ,\n      type: \"date\",\n      InputLabelProps: {\n        shrink: true,\n        style: {\n          fontSize: 15\n        }\n      },\n      size: \"small\",\n      component: renderTextField // value={userEditting ? userEditting.name :''}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sx: 12,\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      id: \"type\",\n      label: \"Type Analytics\",\n      name: \"type\",\n      inputProps: {\n        style: {\n          fontSize: 15\n        }\n      } // font size of input text\n      ,\n      InputLabelProps: {\n        style: {\n          fontSize: 15\n        }\n      } // font size of input label\n      ,\n      type: \"text\",\n      size: \"small\",\n      component: renderTextField // value={userEditting ? userEditting.name :''}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      className: \"mt-3\",\n      color: \"primary\",\n      variant: \"contained\",\n      type: \"submit\",\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 29\n      }\n    }, \"apply\"))), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 1,\n      className: \" mr-4 p-4 \",\n      style: {\n        border: '2px solid #00BFFF',\n        minHeight: '500px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"font-weight-bolder h6\",\n      style: {\n        height: 'fit-content',\n        maxHeight: '40vh'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }\n    }, \" Result of Analytics Devices\")), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 1,\n      className: \"mr-3 p-4 \",\n      style: {\n        minHeight: '265px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }));\n  }\n\n}\n\nAnalytics.propTypes = {\n  classes: PropTypes.object,\n  handleSubmit: PropTypes.func,\n  invalid: PropTypes.bool,\n  submitting: PropTypes.bool,\n  onButton: PropTypes.bool,\n  infauth: PropTypes.string,\n  userEditting: PropTypes.object,\n  authActionCreators: PropTypes.shape({\n    onButtonSubmit: PropTypes.func,\n    authSignup: PropTypes.func,\n    offButtonSubmit: PropTypes.func\n  })\n};\nconst FORM_ANALYTICS = \"TASK_ANALYTICS\";\nconst withReduxForm = reduxForm({\n  form: FORM_ANALYTICS\n});\n\nconst mapStateToProps = state => {\n  return {// onButton:state.auth.onButton,\n    // initialValues:state.auth.userEditting,\n    // userEditting :state.auth.userEditting,\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {// authActionCreators:bindActionCreators(authActions,dispatch),\n    // modalActionCreators:bindActionCreators(modalActions,dispatch),\n  };\n};\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\nexport default compose(withStyles(styles), withConnect, withReduxForm)(Analytics);","map":{"version":3,"sources":["C:/Users/vietn/Desktop/AppEnnegry/frontend/src/containers/AnalyticsPage/index.js"],"names":["React","Component","withStyles","Button","PropTypes","compose","connect","Field","reduxForm","Grid","renderTextField","styles","Analytics","handleCloseForm","handleSubmitForm","data","console","log","render","handleSubmit","props","style","fontSize","shrink","border","minHeight","height","maxHeight","propTypes","classes","object","func","invalid","bool","submitting","onButton","infauth","string","userEditting","authActionCreators","shape","onButtonSubmit","authSignup","offButtonSubmit","FORM_ANALYTICS","withReduxForm","form","mapStateToProps","state","mapDispatchToProps","dispatch","withConnect"],"mappings":"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","sourcesContent":["\r\nimport React, { Component } from 'react';\r\nimport { withStyles, Button} from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport {compose} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport { Field, reduxForm } from 'redux-form'; \r\nimport Grid from '@material-ui/core/Grid';\r\nimport renderTextField from '../../components/FormHelper/TextField/index';\r\nimport styles from './styles';\r\n\r\nclass Analytics extends Component {\r\n    \r\n    handleCloseForm=()=>{\r\n    }\r\n    handleSubmitForm = data => {\r\n        //const {name,email,password,operator}= data;\r\n        console.log(data)\r\n\r\n    };\r\n    render() {\r\n        const {\r\n            handleSubmit}=this.props; \r\n        return(\r\n                <div className=\"p-3\">\r\n                    <form onSubmit={handleSubmit(this.handleSubmitForm)}>\r\n                        <Grid container spacing={1} className=\"mr-3 p-4\">\r\n                            <Grid item xs={12}  className=\"textAlign: center\" >\r\n                                <label className=\"font-weight-bolder \">Analytics Devices</label>\r\n                            </Grid>\r\n                            <Grid item sx={12} md={3}>\r\n                                <Field\r\n                                    id=\"devicename\"\r\n                                    label=\"Device Name\"\r\n                                    name=\"devicename\"\r\n                                    inputProps={{style: {fontSize: 15}}} // font size of input text\r\n                                    InputLabelProps={{style: {fontSize: 15}}} // font size of input label\r\n                                    type=\"text\"  \r\n                                    size=\"small\"\r\n                                    component={renderTextField}\r\n                                    // value={userEditting ? userEditting.name :''}\r\n                                    />\r\n                            </Grid>\r\n                            <Grid item sx={12} md={3}>\r\n                                <Field\r\n                                    id=\"fromdate\"\r\n                                    label=\"From Date\"\r\n                                    name=\"fromdate\"\r\n                                    inputProps={{style: {fontSize: 15}}} // font size of input text\r\n                                    // InputLabelProps={{}} // font size of input label\r\n                                    type=\"date\"\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    style: {fontSize: 15}\r\n                                    }}\r\n                                    size=\"small\"\r\n                                    component={renderTextField}\r\n                                    // value={userEditting ? userEditting.name :''}\r\n                                    />\r\n                            </Grid>\r\n                            <Grid item sx={12} md={3}>\r\n                                <Field\r\n                                    id=\"todate\"\r\n                                    label=\"Todate\"\r\n                                    name=\"todate\"\r\n                                    inputProps={{style: {fontSize: 15}}} // font size of input text\r\n                                    // InputLabelProps={{style: {fontSize: 12}}} // font size of input label\r\n                                    type=\"date\"\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                        style: {fontSize: 15}\r\n                                        }}\r\n                                    size=\"small\"\r\n                                    component={renderTextField}\r\n                                    // value={userEditting ? userEditting.name :''}\r\n                                    />\r\n                            </Grid>\r\n                            <Grid item sx={12} md={3}>\r\n                                <Field\r\n                                    id=\"type\"\r\n                                    label=\"Type Analytics\"\r\n                                    name=\"type\"\r\n                                    inputProps={{style: {fontSize: 15}}} // font size of input text\r\n                                    InputLabelProps={{style: {fontSize: 15}}} // font size of input label\r\n                                    type=\"text\"\r\n                                    size=\"small\"\r\n                                    component={renderTextField}\r\n                                    // value={userEditting ? userEditting.name :''}\r\n                                    />\r\n                            </Grid>\r\n                            <Button\r\n                                className=\"mt-3\"\r\n                                color = \"primary\"\r\n                                variant=\"contained\"\r\n                                type=\"submit\"\r\n                                size='small'\r\n                                >\r\n                                    apply\r\n                            </Button>\r\n                        </Grid>\r\n                    </form>\r\n                    <Grid container spacing={1} className=\" mr-4 p-4 \" style={{border: '2px solid #00BFFF',minHeight:'500px'}}>\r\n                        <label className=\"font-weight-bolder h6\" style={{height:'fit-content',maxHeight:'40vh' }}> Result of Analytics Devices</label>\r\n                    </Grid>\r\n                    <Grid container spacing={1} className=\"mr-3 p-4 \" style={{minHeight:'265px'}}>\r\n                    </Grid>\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\nAnalytics.propTypes={\r\n    classes:PropTypes.object,\r\n    handleSubmit:PropTypes.func,\r\n    invalid:PropTypes.bool,\r\n    submitting:PropTypes.bool,\r\n    onButton:PropTypes.bool,\r\n    infauth:PropTypes.string,\r\n    userEditting:PropTypes.object,\r\n    authActionCreators:PropTypes.shape({\r\n        onButtonSubmit:PropTypes.func,\r\n        authSignup:PropTypes.func,\r\n        offButtonSubmit:PropTypes.func,\r\n        \r\n    }),\r\n}\r\n\r\nconst FORM_ANALYTICS =\"TASK_ANALYTICS\";\r\nconst withReduxForm = reduxForm({\r\n    form: FORM_ANALYTICS,\r\n});\r\nconst mapStateToProps=state=>{\r\n    return{\r\n        // onButton:state.auth.onButton,\r\n        // initialValues:state.auth.userEditting,\r\n        // userEditting :state.auth.userEditting,\r\n    }\r\n};\r\nconst mapDispatchToProps=(dispatch,props)=>{\r\n    return{\r\n        // authActionCreators:bindActionCreators(authActions,dispatch),\r\n        // modalActionCreators:bindActionCreators(modalActions,dispatch),\r\n    }\r\n};\r\nconst withConnect=connect(mapStateToProps,mapDispatchToProps);\r\nexport default compose(\r\n    withStyles(styles),\r\n    withConnect,\r\n    withReduxForm,\r\n)(Analytics);\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}