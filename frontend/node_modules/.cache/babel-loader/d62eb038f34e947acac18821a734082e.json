{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { each } from '@antv/util';\nimport EventEmitter from '@antv/event-emitter';\n\nvar HeatmapBackground =\n/** @class */\nfunction (_super) {\n  __extends(HeatmapBackground, _super);\n\n  function HeatmapBackground(cfg) {\n    var _this = _super.call(this) || this;\n\n    _this.options = cfg;\n    _this.view = _this.options.view;\n\n    _this.init();\n\n    return _this;\n  }\n\n  HeatmapBackground.prototype.init = function () {\n    var coord = this.getCoordinate();\n    this.width = coord.getWidth();\n    this.height = coord.getHeight();\n    this.x = coord.start.x;\n    this.y = coord.end.y;\n    this.container = this.view.backgroundGroup.addGroup({});\n  };\n\n  HeatmapBackground.prototype.render = function () {\n    if (this.options.type === 'color') {\n      this.renderColorBackground();\n    } else if (this.options.type === 'image') {\n      this.renderImageBackground();\n    } else if (this.options.callback) {\n      var callbackCfg = {\n        x: this.x,\n        y: this.y,\n        width: this.width,\n        height: this.height,\n        container: this.container\n      };\n      this.options.callback(callbackCfg);\n    }\n  };\n\n  HeatmapBackground.prototype.renderColorBackground = function () {\n    this.container.addShape('rect', {\n      attrs: {\n        x: this.x,\n        y: this.y,\n        width: this.width,\n        height: this.height,\n        fill: this.options.value\n      },\n      name: 'heatmap-background'\n    });\n  };\n\n  HeatmapBackground.prototype.renderImageBackground = function () {\n    this.container.addShape('image', {\n      attrs: {\n        x: this.x,\n        y: this.y,\n        width: this.width,\n        height: this.height,\n        img: this.options.src\n      },\n      name: 'heatmap-background'\n    });\n  };\n\n  HeatmapBackground.prototype.clear = function () {\n    if (this.container) {\n      this.container.clear();\n      this.emit('background:clear');\n    }\n  };\n\n  HeatmapBackground.prototype.destroy = function () {\n    if (this.container) {\n      this.container.remove(); // 使用callback定制的html background需要自己监听销毁事件自行销毁\n\n      this.emit('background:destroy');\n    }\n  };\n\n  HeatmapBackground.prototype.getCoordinate = function () {\n    var coordinate;\n    each(this.view.geometries, function (geom) {\n      if (geom.type === 'heatmap') {\n        coordinate = geom.coordinate;\n      }\n    });\n    return coordinate;\n  };\n\n  return HeatmapBackground;\n}(EventEmitter);\n\nexport default HeatmapBackground;","map":{"version":3,"sources":["../../../../src/plots/density-heatmap/components/background.ts"],"names":[],"mappings":"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","sourcesContent":["import { each } from '@antv/util';\nimport { View, IGroup } from '../../../dependents';\nimport EventEmitter from '@antv/event-emitter';\n\nexport interface HeatmapBackgroundConfig {\n  visible?: boolean;\n  type?: string;\n  value?: any;\n  src?: string;\n  callback?: Function;\n}\n\nexport interface IHeatmapBackground extends HeatmapBackgroundConfig {\n  view: View;\n  plot: any;\n}\n\nexport default class HeatmapBackground extends EventEmitter {\n  public options: IHeatmapBackground;\n  public container: IGroup;\n  protected view: View;\n  protected x: number;\n  protected y: number;\n  protected width: number;\n  protected height: number;\n\n  constructor(cfg: IHeatmapBackground) {\n    super();\n    this.options = cfg;\n    this.view = this.options.view;\n    this.init();\n  }\n\n  public init() {\n    const coord = this.getCoordinate();\n    this.width = coord.getWidth();\n    this.height = coord.getHeight();\n    this.x = coord.start.x;\n    this.y = coord.end.y;\n    this.container = this.view.backgroundGroup.addGroup({});\n  }\n\n  public render() {\n    if (this.options.type === 'color') {\n      this.renderColorBackground();\n    } else if (this.options.type === 'image') {\n      this.renderImageBackground();\n    } else if (this.options.callback) {\n      const callbackCfg = {\n        x: this.x,\n        y: this.y,\n        width: this.width,\n        height: this.height,\n        container: this.container,\n      };\n      this.options.callback(callbackCfg);\n    }\n  }\n\n  public renderColorBackground() {\n    this.container.addShape('rect', {\n      attrs: {\n        x: this.x,\n        y: this.y,\n        width: this.width,\n        height: this.height,\n        fill: this.options.value,\n      },\n      name: 'heatmap-background',\n    });\n  }\n\n  public renderImageBackground() {\n    this.container.addShape('image', {\n      attrs: {\n        x: this.x,\n        y: this.y,\n        width: this.width,\n        height: this.height,\n        img: this.options.src,\n      },\n      name: 'heatmap-background',\n    });\n  }\n\n  public clear() {\n    if (this.container) {\n      this.container.clear();\n      this.emit('background:clear');\n    }\n  }\n\n  public destroy() {\n    if (this.container) {\n      this.container.remove();\n      // 使用callback定制的html background需要自己监听销毁事件自行销毁\n      this.emit('background:destroy');\n    }\n  }\n\n  private getCoordinate() {\n    let coordinate;\n    each(this.view.geometries, (geom) => {\n      if (geom.type === 'heatmap') {\n        coordinate = geom.coordinate;\n      }\n    });\n    return coordinate;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}