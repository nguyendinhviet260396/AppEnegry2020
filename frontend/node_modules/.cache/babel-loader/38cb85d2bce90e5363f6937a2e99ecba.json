{"ast":null,"code":"import { each, clone, deepMix } from '@antv/util';\nimport { groupTransform, transform } from '../../../util/g-util';\nvar ulMatrix = [1, 0, 0, 0, 1, 0, 0, 0, 1];\nvar duration = 400;\nvar easing = 'easeQuadInOut';\nexport function drillingDown(target, view, callback) {\n  var rect = getRect(target);\n  var range = getRange(view);\n  var xRatio = range.width / rect.width;\n  var yRatio = range.height / rect.height;\n  var offsetX = (range.minX - rect.minX) * xRatio;\n  var offsetY = (range.minY - rect.minY) * yRatio;\n  var transformMatrix = transform([['s', xRatio, yRatio], ['t', offsetX, offsetY]]);\n  var geometry = view.geometries[0];\n  hideLabel(geometry);\n  var tem_container = view.backgroundGroup.addGroup();\n  tem_container.set('zIndex', -100);\n  tem_container.setClip({\n    type: 'rect',\n    attrs: {\n      x: range.minX,\n      y: range.minY,\n      width: range.width,\n      height: range.height\n    }\n  });\n  var tem_shapes = getTemShapes(geometry, tem_container);\n  geometry.container.set('visible', false);\n  view.canvas.draw();\n  callback();\n  window.setTimeout(function () {\n    each(tem_shapes, function (shape, index) {\n      if (index === 0) {\n        shape.animate({\n          matrix: transformMatrix\n        }, duration, easing, function () {\n          tem_container.remove();\n          view.canvas.draw();\n        });\n      } else {\n        shape.animate(transform, duration);\n      }\n    });\n    geometry = view.geometries[0];\n    hideLabel(geometry);\n    var shapes = geometry.getShapes();\n    each(shapes, function (shape) {\n      shape.attr('opacity', 0);\n      shape.animate({\n        opacity: 1\n      }, duration, easing);\n    });\n    var container = geometry.container;\n    container.stopAnimate();\n    container.set('visible', true);\n    container.attr('matrix', clone(ulMatrix));\n    groupTransform(container, [['s', rect.width / range.width, rect.height / range.height], ['t', rect.minX, rect.minY]]);\n    var matrix = clone(ulMatrix);\n    geometry.container.animate({\n      matrix: matrix\n    }, duration, easing, function () {\n      showLabel(geometry);\n    });\n    view.canvas.draw();\n  }, 16);\n}\n\nfunction getTemShapes(geometry, container) {\n  var shapes = geometry.getShapes();\n  var tem_shapes = [];\n  each(shapes, function (shape) {\n    var s = container.addShape('path', {\n      attrs: deepMix({}, shape.attrs, {\n        capture: false\n      })\n    });\n    tem_shapes.push(s);\n  });\n  return tem_shapes;\n}\n\nexport function rollingUp(name, view, callback) {\n  var geometry = view.geometries[0];\n  hideLabel(geometry);\n  var container = geometry.container;\n  container.attr('matrix', clone(ulMatrix));\n  var tem_container = view.backgroundGroup.addGroup();\n  tem_container.set('zIndex', -100);\n  var tem_shapes = getTemShapes(geometry, tem_container);\n  container.set('visible', false);\n  view.canvas.draw();\n  callback();\n  geometry = view.geometries[0];\n  hideLabel(geometry);\n  container = geometry.container;\n  var shape = findShapeByName(geometry.getShapes(), name); //根据name获得上一级shape\n\n  var rect = getRect(shape);\n  var range = getRange(view);\n  var containerParent = container.get('parent');\n\n  if (!containerParent.get('clipShape')) {\n    container.setClip({\n      type: 'rect',\n      attrs: {\n        x: range.minX,\n        y: range.minY,\n        width: range.width,\n        height: range.height\n      }\n    });\n  }\n\n  shrinkTemp(tem_container, tem_shapes, rect, range);\n  var xRatio = range.width / rect.width;\n  var yRatio = range.height / rect.height;\n  var offsetX = (range.minX - rect.minX) * xRatio;\n  var offsetY = (range.minY - rect.minY) * yRatio;\n  var transformMatrix = transform([['s', xRatio, yRatio], ['t', offsetX, offsetY]]);\n  container.setMatrix(transformMatrix);\n  container.set('visible', true);\n  container.animate({\n    matrix: ulMatrix\n  }, duration, easing, function () {\n    showLabel(geometry);\n  });\n}\n\nfunction findShapeByName(shapes, n) {\n  var shape;\n  each(shapes, function (s) {\n    var name = s.get('origin').data.name;\n\n    if (name === n) {\n      shape = s;\n    }\n  });\n  return shape;\n}\n\nfunction getRange(view) {\n  var viewRange = view.coordinateBBox;\n  var range = {\n    minX: viewRange.minX,\n    minY: viewRange.minY,\n    centerX: (viewRange.maxX - viewRange.minX) / 2,\n    centerY: (viewRange.maxY - viewRange.minY) / 2,\n    width: viewRange.width,\n    height: viewRange.height\n  };\n  return range;\n}\n\nfunction getRect(shape) {\n  var path = shape.attr('path');\n  var x0 = path[0][1];\n  var y1 = path[0][2];\n  var x1 = path[1][1];\n  var y0 = path[2][2];\n  var rect = {\n    minX: x0,\n    minY: y0,\n    centerX: (x1 - x0) / 2,\n    centerY: (y1 - y0) / 2,\n    width: Math.abs(x1 - x0),\n    height: Math.abs(y1 - y0)\n  };\n  return rect;\n}\n\nfunction shrinkTemp(container, shapes, rect, range) {\n  var xRatio = rect.width / range.width;\n  var yRatio = rect.height / range.height;\n  var transformMatrix = transform([['s', xRatio, yRatio], ['t', rect.minX, rect.minY]]);\n  container.animate({\n    matrix: transformMatrix\n  }, duration, easing, function () {\n    container.remove();\n  });\n  each(shapes, function (shape) {\n    shape.animate({\n      opacity: 0\n    }, duration, easing);\n  });\n}\n\nfunction hideLabel(geometry) {\n  var labelContainer = geometry.labelsContainer;\n  labelContainer.set('visible', false);\n}\n\nfunction showLabel(geometry) {\n  var labelContainer = geometry.labelsContainer;\n  labelContainer.set('visible', true);\n}","map":{"version":3,"sources":["../../../../src/plots/treemap/interaction/animation.ts"],"names":[],"mappings":"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","sourcesContent":["import { each, clone, deepMix } from '@antv/util';\nimport { groupTransform, transform } from '../../../util/g-util';\n\nconst ulMatrix = [1, 0, 0, 0, 1, 0, 0, 0, 1];\nconst duration = 400;\nconst easing = 'easeQuadInOut';\n\nexport function drillingDown(target, view, callback) {\n  const rect = getRect(target);\n  const range = getRange(view);\n  const xRatio = range.width / rect.width;\n  const yRatio = range.height / rect.height;\n  const offsetX = (range.minX - rect.minX) * xRatio;\n  const offsetY = (range.minY - rect.minY) * yRatio;\n\n  const transformMatrix = transform([\n    ['s', xRatio, yRatio],\n    ['t', offsetX, offsetY],\n  ]);\n\n  let geometry = view.geometries[0];\n  hideLabel(geometry);\n  const tem_container = view.backgroundGroup.addGroup();\n  tem_container.set('zIndex', -100);\n  tem_container.setClip({\n    type: 'rect',\n    attrs: {\n      x: range.minX,\n      y: range.minY,\n      width: range.width,\n      height: range.height,\n    },\n  });\n  const tem_shapes = getTemShapes(geometry, tem_container);\n  geometry.container.set('visible', false);\n  view.canvas.draw();\n  callback();\n  window.setTimeout(() => {\n    each(tem_shapes, (shape, index) => {\n      if (index === 0) {\n        shape.animate({ matrix: transformMatrix }, duration, easing, () => {\n          tem_container.remove();\n          view.canvas.draw();\n        });\n      } else {\n        shape.animate(transform, duration);\n      }\n    });\n    geometry = view.geometries[0];\n    hideLabel(geometry);\n    const shapes = geometry.getShapes();\n    each(shapes, (shape) => {\n      shape.attr('opacity', 0);\n      shape.animate(\n        {\n          opacity: 1,\n        },\n        duration,\n        easing\n      );\n    });\n    const container = geometry.container;\n    container.stopAnimate();\n    container.set('visible', true);\n    container.attr('matrix', clone(ulMatrix));\n    groupTransform(container, [\n      ['s', rect.width / range.width, rect.height / range.height],\n      ['t', rect.minX, rect.minY],\n    ]);\n    const matrix = clone(ulMatrix);\n    geometry.container.animate(\n      {\n        matrix,\n      },\n      duration,\n      easing,\n      () => {\n        showLabel(geometry);\n      }\n    );\n    view.canvas.draw();\n  }, 16);\n}\n\nfunction getTemShapes(geometry, container) {\n  const shapes = geometry.getShapes();\n  const tem_shapes = [];\n  each(shapes, (shape) => {\n    const s = container.addShape('path', {\n      attrs: deepMix({}, shape.attrs, { capture: false }),\n    });\n    tem_shapes.push(s);\n  });\n  return tem_shapes;\n}\n\nexport function rollingUp(name, view, callback) {\n  let geometry = view.geometries[0];\n  hideLabel(geometry);\n  let container = geometry.container;\n  container.attr('matrix', clone(ulMatrix));\n  const tem_container = view.backgroundGroup.addGroup();\n  tem_container.set('zIndex', -100);\n  const tem_shapes = getTemShapes(geometry, tem_container);\n  container.set('visible', false);\n  view.canvas.draw();\n  callback();\n  geometry = view.geometries[0];\n  hideLabel(geometry);\n  container = geometry.container;\n  const shape = findShapeByName(geometry.getShapes(), name); //根据name获得上一级shape\n  const rect = getRect(shape);\n  const range = getRange(view);\n  const containerParent = container.get('parent');\n  if (!containerParent.get('clipShape')) {\n    container.setClip({\n      type: 'rect',\n      attrs: {\n        x: range.minX,\n        y: range.minY,\n        width: range.width,\n        height: range.height,\n      },\n    });\n  }\n  shrinkTemp(tem_container, tem_shapes, rect, range);\n  const xRatio = range.width / rect.width;\n  const yRatio = range.height / rect.height;\n  const offsetX = (range.minX - rect.minX) * xRatio;\n  const offsetY = (range.minY - rect.minY) * yRatio;\n  const transformMatrix = transform([\n    ['s', xRatio, yRatio],\n    ['t', offsetX, offsetY],\n  ]);\n  container.setMatrix(transformMatrix);\n  container.set('visible', true);\n  container.animate(\n    {\n      matrix: ulMatrix,\n    },\n    duration,\n    easing,\n    () => {\n      showLabel(geometry);\n    }\n  );\n}\n\nfunction findShapeByName(shapes, n) {\n  let shape;\n  each(shapes, (s) => {\n    const { name } = s.get('origin').data;\n    if (name === n) {\n      shape = s;\n    }\n  });\n  return shape;\n}\n\nfunction getRange(view) {\n  const viewRange = view.coordinateBBox;\n  const range = {\n    minX: viewRange.minX,\n    minY: viewRange.minY,\n    centerX: (viewRange.maxX - viewRange.minX) / 2,\n    centerY: (viewRange.maxY - viewRange.minY) / 2,\n    width: viewRange.width,\n    height: viewRange.height,\n  };\n  return range;\n}\n\nfunction getRect(shape) {\n  const path = shape.attr('path');\n  const x0 = path[0][1];\n  const y1 = path[0][2];\n  const x1 = path[1][1];\n  const y0 = path[2][2];\n  const rect = {\n    minX: x0,\n    minY: y0,\n    centerX: (x1 - x0) / 2,\n    centerY: (y1 - y0) / 2,\n    width: Math.abs(x1 - x0),\n    height: Math.abs(y1 - y0),\n  };\n  return rect;\n}\n\nfunction shrinkTemp(container, shapes, rect, range) {\n  const xRatio = rect.width / range.width;\n  const yRatio = rect.height / range.height;\n  const transformMatrix = transform([\n    ['s', xRatio, yRatio],\n    ['t', rect.minX, rect.minY],\n  ]);\n  container.animate({ matrix: transformMatrix }, duration, easing, () => {\n    container.remove();\n  });\n  each(shapes, (shape) => {\n    shape.animate(\n      {\n        opacity: 0,\n      },\n      duration,\n      easing\n    );\n  });\n}\n\nfunction hideLabel(geometry) {\n  const labelContainer = geometry.labelsContainer;\n  labelContainer.set('visible', false);\n}\n\nfunction showLabel(geometry) {\n  const labelContainer = geometry.labelsContainer;\n  labelContainer.set('visible', true);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}