{"ast":null,"code":"/**\n * 下划线转驼峰命名\n */\nexport var camelCase = function camelCase(name) {\n  return name.charAt(0).toUpperCase() + name.slice(1).replace(/-(\\w)/g, function (_, n) {\n    return n.toUpperCase();\n  });\n};\n/**\n * 获取对象差异\n * @param {source} object 原始对象\n * @param {target} object 目标对象\n */\n\nexport var checkChanged = function checkChanged(source, target) {\n  return JSON.stringify(source) === JSON.stringify(target);\n};\n/**\n * 判断两数组是否完全相同\n * @param {source} [] 原数组\n * @param {target} [] 目标数组\n */\n\nexport var sameArray = function sameArray(source, target) {\n  return new Set(source.concat(target)).size === source.length;\n};\nexport var isType = function isType(value, type) {\n  var toString = {}.toString;\n  return toString.call(value) === '[object ' + type + ']';\n};\nexport var clone = function clone(source) {\n  if (!source) {\n    return source;\n  }\n\n  var target = {};\n\n  for (var k in source) {\n    target[k] = source[k];\n  }\n\n  return target;\n};","map":{"version":3,"sources":["C:/Users/vietn/Desktop/AppEnegry2020/frontend/node_modules/@ant-design/charts/es/util/utils.js"],"names":["camelCase","name","charAt","toUpperCase","slice","replace","_","n","checkChanged","source","target","JSON","stringify","sameArray","Set","concat","size","length","isType","value","type","toString","call","clone","k"],"mappings":"AAAA;;;AAGA,OAAO,IAAIA,SAAS,GAAG,SAASA,SAAT,CAAmBC,IAAnB,EAAyB;AAC9C,SAAOA,IAAI,CAACC,MAAL,CAAY,CAAZ,EAAeC,WAAf,KAA+BF,IAAI,CAACG,KAAL,CAAW,CAAX,EAAcC,OAAd,CAAsB,QAAtB,EAAgC,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AACpF,WAAOA,CAAC,CAACJ,WAAF,EAAP;AACD,GAFqC,CAAtC;AAGD,CAJM;AAKP;;;;;;AAMA,OAAO,IAAIK,YAAY,GAAG,SAASA,YAAT,CAAsBC,MAAtB,EAA8BC,MAA9B,EAAsC;AAC9D,SAAOC,IAAI,CAACC,SAAL,CAAeH,MAAf,MAA2BE,IAAI,CAACC,SAAL,CAAeF,MAAf,CAAlC;AACD,CAFM;AAGP;;;;;;AAMA,OAAO,IAAIG,SAAS,GAAG,SAASA,SAAT,CAAmBJ,MAAnB,EAA2BC,MAA3B,EAAmC;AACxD,SAAO,IAAII,GAAJ,CAAQL,MAAM,CAACM,MAAP,CAAcL,MAAd,CAAR,EAA+BM,IAA/B,KAAwCP,MAAM,CAACQ,MAAtD;AACD,CAFM;AAGP,OAAO,IAAIC,MAAM,GAAG,SAASA,MAAT,CAAgBC,KAAhB,EAAuBC,IAAvB,EAA6B;AAC/C,MAAIC,QAAQ,GAAG,GAAGA,QAAlB;AACA,SAAOA,QAAQ,CAACC,IAAT,CAAcH,KAAd,MAAyB,aAAaC,IAAb,GAAoB,GAApD;AACD,CAHM;AAIP,OAAO,IAAIG,KAAK,GAAG,SAASA,KAAT,CAAed,MAAf,EAAuB;AACxC,MAAI,CAACA,MAAL,EAAa;AACX,WAAOA,MAAP;AACD;;AAED,MAAIC,MAAM,GAAG,EAAb;;AAEA,OAAK,IAAIc,CAAT,IAAcf,MAAd,EAAsB;AACpBC,IAAAA,MAAM,CAACc,CAAD,CAAN,GAAYf,MAAM,CAACe,CAAD,CAAlB;AACD;;AAED,SAAOd,MAAP;AACD,CAZM","sourcesContent":["/**\n * 下划线转驼峰命名\n */\nexport var camelCase = function camelCase(name) {\n  return name.charAt(0).toUpperCase() + name.slice(1).replace(/-(\\w)/g, function (_, n) {\n    return n.toUpperCase();\n  });\n};\n/**\n * 获取对象差异\n * @param {source} object 原始对象\n * @param {target} object 目标对象\n */\n\nexport var checkChanged = function checkChanged(source, target) {\n  return JSON.stringify(source) === JSON.stringify(target);\n};\n/**\n * 判断两数组是否完全相同\n * @param {source} [] 原数组\n * @param {target} [] 目标数组\n */\n\nexport var sameArray = function sameArray(source, target) {\n  return new Set(source.concat(target)).size === source.length;\n};\nexport var isType = function isType(value, type) {\n  var toString = {}.toString;\n  return toString.call(value) === '[object ' + type + ']';\n};\nexport var clone = function clone(source) {\n  if (!source) {\n    return source;\n  }\n\n  var target = {};\n\n  for (var k in source) {\n    target[k] = source[k];\n  }\n\n  return target;\n};"]},"metadata":{},"sourceType":"module"}