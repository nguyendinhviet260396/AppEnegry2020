{"ast":null,"code":"import { isNil } from '@antv/util';\nexport var combineFormatter = function combineFormatter() {\n  var formatters = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    formatters[_i] = arguments[_i];\n  }\n\n  return function (text, item, idx) {\n    return formatters.reduce(function (curText, formatter) {\n      return formatter(curText, item, idx);\n    }, text);\n  };\n};\nexport var getNoopFormatter = function getNoopFormatter() {\n  return function (text) {\n    return text;\n  };\n};\nexport var getPrecisionFormatter = function getPrecisionFormatter(precision) {\n  return function (text) {\n    var num = Number(text);\n    return isNaN(num) || isNil(precision) ? text : num.toFixed(precision);\n  };\n};\nexport var getSuffixFormatter = function getSuffixFormatter(suffix) {\n  return function (text) {\n    return isNil(suffix) ? text : text + \" \" + suffix;\n  };\n};","map":{"version":3,"sources":["../../src/util/formatter.ts"],"names":[],"mappings":"AAAA,SAAS,KAAT,QAAsB,YAAtB;AAGA,OAAO,IAAM,gBAAgB,GAAG,SAAnB,gBAAmB,GAAA;AAAC,MAAA,UAAA,GAAA,EAAA;;OAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAA0B;AAA1B,IAAA,UAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AAA+B,SAAA,UAAC,IAAD,EAAe,IAAf,EAA0B,GAA1B,EAA6B;AAC3F,WAAA,UAAU,CAAC,MAAX,CAAkB,UAAC,OAAD,EAAU,SAAV,EAAmB;AAAK,aAAA,SAAS,CAAC,OAAD,EAAU,IAAV,EAAT,GAAS,CAAT;AAA6B,KAAvE,EAAyE,IAAzE,CAAA;AAA8E,GADhB;AACgB,CADzE;AAGP,OAAO,IAAM,gBAAgB,GAAG,SAAnB,gBAAmB,GAAA;AAAM,SAAA,UAAC,IAAD,EAAa;AAAK,WAAA,IAAA;AAAlB,GAAA;AAAsB,CAArD;AAEP,OAAO,IAAM,qBAAqB,GAAG,SAAxB,qBAAwB,CAAC,SAAD,EAAmB;AAAK,SAAA,UAAC,IAAD,EAAa;AACxE,QAAM,GAAG,GAAG,MAAM,CAAC,IAAD,CAAlB;AACA,WAAO,KAAK,CAAC,GAAD,CAAL,IAAc,KAAK,CAAC,SAAD,CAAnB,GAAiC,IAAjC,GAAwC,GAAG,CAAC,OAAJ,CAAY,SAAZ,CAA/C;AAF2D,GAAA;AAG5D,CAHM;AAKP,OAAO,IAAM,kBAAkB,GAAG,SAArB,kBAAqB,CAAC,MAAD,EAAgB;AAAK,SAAA,UAAC,IAAD,EAAa;AAClE,WAAO,KAAK,CAAC,MAAD,CAAL,GAAgB,IAAhB,GAA0B,IAAI,GAAA,GAAJ,GAAQ,MAAzC;AADqD,GAAA;AAEtD,CAFM","sourcesContent":["import { isNil } from '@antv/util';\nimport { Formatter } from '../interface/config';\n\nexport const combineFormatter = (...formatters: Formatter[]) => (text: string, item: any, idx) =>\n  formatters.reduce((curText, formatter) => formatter(curText, item, idx), text);\n\nexport const getNoopFormatter = () => (text: string) => text;\n\nexport const getPrecisionFormatter = (precision?: number) => (text: string) => {\n  const num = Number(text);\n  return isNaN(num) || isNil(precision) ? text : num.toFixed(precision);\n};\n\nexport const getSuffixFormatter = (suffix?: string) => (text: string) => {\n  return isNil(suffix) ? text : `${text} ${suffix}`;\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}