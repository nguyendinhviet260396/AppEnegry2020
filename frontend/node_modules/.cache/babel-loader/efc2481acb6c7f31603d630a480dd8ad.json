{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\n/**\n * Create By Bruce Too\n * On 2020-02-17\n */\n\nimport { deepMix } from '@antv/util';\nimport { registerPlotType } from '../../base/global';\nimport ViewLayer from '../../base/view-layer';\nimport { getComponent } from '../../components/factory';\nimport { getGeom } from '../../geoms/factory';\nimport * as EventParser from './event';\nvar G2_GEOM_MAP = {\n  rose: 'interval'\n};\nvar PLOT_GEOM_MAP = {\n  rose: 'column'\n};\n\nvar RoseLayer =\n/** @class */\nfunction (_super) {\n  __extends(RoseLayer, _super);\n\n  function RoseLayer() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = 'rose';\n    return _this;\n  }\n\n  RoseLayer.getDefaultOptions = function () {\n    return deepMix({}, _super.getDefaultOptions.call(this), {\n      width: 400,\n      height: 400,\n      title: {\n        visible: false\n      },\n      description: {\n        visible: false\n      },\n      forceFit: true,\n      padding: 'auto',\n      radius: 0.8,\n      innerRadius: 0,\n      label: {\n        visible: true,\n        type: 'inner',\n        autoRotate: true,\n        adjustColor: false\n      },\n      legend: {\n        visible: true,\n        position: 'right'\n      },\n      tooltip: {\n        visible: true,\n        shared: false,\n        showCrosshairs: false,\n        showMarkers: false\n      },\n      columnStyle: {\n        stroke: 'white',\n        lineWidth: 1\n      },\n      xAxis: {\n        visible: false,\n        line: {\n          visible: false\n        },\n        tickLine: {\n          visible: false\n        },\n        grid: {\n          visible: true,\n          alignTick: false,\n          style: {\n            lineWidth: 0.5\n          }\n        },\n        label: {\n          offset: 5,\n          autoRotate: true\n        }\n      },\n      yAxis: {\n        visible: false\n      }\n    });\n  };\n\n  RoseLayer.prototype.getOptions = function (props) {\n    var options = _super.prototype.getOptions.call(this, props);\n\n    var columnStyle = props.sectorStyle;\n    var xField = props.categoryField;\n    var yField = props.radiusField;\n    return deepMix({}, options, {\n      columnStyle: columnStyle,\n      xField: xField,\n      yField: yField\n    });\n  };\n\n  RoseLayer.prototype.getRadiusScale = function () {\n    var radiusField = this.options.radiusField;\n\n    if (radiusField) {\n      this.view.getScaleByField(radiusField);\n    }\n  };\n\n  RoseLayer.prototype.getAngleScale = function () {\n    var categoryField = this.options.categoryField;\n\n    if (categoryField) {\n      this.view.getScaleByField(categoryField);\n    }\n  };\n\n  RoseLayer.prototype.geometryParser = function (dim, type) {\n    if (dim === 'g2') {\n      return G2_GEOM_MAP[type];\n    }\n\n    return PLOT_GEOM_MAP[type];\n  };\n\n  RoseLayer.prototype.scale = function () {\n    // super.scale();\n    var props = this.options;\n    var scales = {};\n    scales[props.radiusField] = {};\n    scales[props.categoryField] = {\n      type: 'cat'\n    };\n    this.setConfig('scales', scales);\n  };\n  /** 不显示坐标轴 */\n\n  /*protected axis() {\n    super.axis();\n    const options = this.options;\n    if (!options.stackField && !options.groupField) {\n      this.setConfig('axes', false);\n    }\n  }*/\n\n\n  RoseLayer.prototype.coord = function () {\n    var props = this.options;\n    var coordConfig = {\n      type: 'polar',\n      cfg: {\n        radius: props.radius,\n        innerRadius: props.innerRadius || 0\n      }\n    };\n    this.setConfig('coordinate', coordConfig);\n  };\n\n  RoseLayer.prototype.addGeometry = function () {\n    var options = this.options;\n    var rose = getGeom('interval', 'main', {\n      plot: this,\n      positionFields: [options.categoryField, options.radiusField],\n      widthRatio: {\n        rose: 1\n      }\n    });\n    rose.label = this.extractLabel();\n    rose.adjust = this.adjustRoseAdjust();\n    this.rose = rose;\n\n    if (options.tooltip && (options.tooltip.fields || options.tooltip.formatter)) {\n      this.geometryTooltip();\n    }\n\n    this.setConfig('geometry', rose);\n  };\n\n  RoseLayer.prototype.adjustRoseAdjust = function () {\n    return;\n  };\n\n  RoseLayer.prototype.geometryTooltip = function () {\n    this.rose.tooltip = {};\n    var tooltipOptions = this.options.tooltip;\n\n    if (tooltipOptions.fields) {\n      this.rose.tooltip.fields = tooltipOptions.fields;\n    }\n\n    if (tooltipOptions.formatter) {\n      this.rose.tooltip.callback = tooltipOptions.formatter;\n\n      if (!tooltipOptions.fields) {\n        this.rose.tooltip.fields = [this.options.radiusField, this.options.categoryField, this.options.colorField];\n      }\n    }\n  };\n\n  RoseLayer.prototype.animation = function () {\n    _super.prototype.animation.call(this);\n\n    var props = this.options;\n\n    if (props.animation === false) {\n      /** 关闭动画 */\n      this.rose.animate = false;\n    }\n  };\n\n  RoseLayer.prototype.annotation = function () {\n    return;\n  };\n\n  RoseLayer.prototype.parseEvents = function () {\n    _super.prototype.parseEvents.call(this, EventParser);\n  };\n\n  RoseLayer.prototype.extractLabel = function () {\n    var options = this.options;\n\n    if (!options.label || !options.label.visible) {\n      return false;\n    }\n\n    var label = deepMix({}, options.label);\n    this.adjustLabelOptions(label);\n    var fields = [options.categoryField, options.radiusField];\n    var labelConfig = getComponent('label', __assign({\n      plot: this,\n      labelType: 'polar',\n      fields: fields\n    }, label));\n    return labelConfig;\n  };\n\n  RoseLayer.prototype.adjustLabelOptions = function (labelOptions) {\n    var radiusField = this.options.radiusField;\n\n    if (labelOptions) {\n      var offset = labelOptions.offset,\n          type = labelOptions.type,\n          content = labelOptions.content;\n\n      if (type === 'inner') {\n        labelOptions.offset = offset < 0 ? offset : -10;\n      } else if (type === 'outer') {\n        labelOptions.offset = offset >= 0 ? offset : 10;\n      }\n\n      if (!content) {\n        // 默认显示 数值\n        labelOptions.content = function (text, item) {\n          return \"\" + item._origin[radiusField];\n        };\n      }\n    }\n  };\n\n  return RoseLayer;\n}(ViewLayer);\n\nexport default RoseLayer;\nregisterPlotType('rose', RoseLayer);","map":{"version":3,"sources":["../../../src/plots/rose/layer.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Create By Bruce Too\n * On 2020-02-17\n */\nimport { deepMix } from '@antv/util';\nimport { registerPlotType } from '../../base/global';\nimport { LayerConfig } from '../..';\nimport ViewLayer, { ViewConfig } from '../../base/view-layer';\nimport { getComponent } from '../../components/factory';\nimport { getGeom } from '../../geoms/factory';\nimport { Label } from '../..';\nimport * as EventParser from './event';\nimport { GraphicStyle } from '../../interface/config';\n\nexport interface RoseViewConfig extends ViewConfig {\n  radiusField: string;\n  categoryField: string;\n  colorField?: string;\n  radius?: number;\n  innerRadius?: number;\n  /** 每个扇形切片的样式 */\n  sectorStyle?: GraphicStyle | ((...args: any[]) => GraphicStyle);\n  label?: RoseLabel;\n}\n\ntype RoseLabel = ViewConfig['label'] & {\n  type: 'outer' | 'inner';\n  /** 自动调整颜色 */\n  adjustColor?: boolean;\n  /** 自动旋转 */\n  autoRotate?: boolean;\n  // label的内容，如果不配置，读取scale中的第一个field对应的值  G2 4.0 就这样实现的\n  content?: string | ((...args: any[]) => string);\n};\n\nexport interface RoseLayerConfig extends RoseViewConfig, LayerConfig {}\n\nconst G2_GEOM_MAP = {\n  rose: 'interval',\n};\n\nconst PLOT_GEOM_MAP = {\n  rose: 'column',\n};\n\nexport default class RoseLayer<T extends RoseLayerConfig = RoseLayerConfig> extends ViewLayer<T> {\n  public static getDefaultOptions(): any {\n    return deepMix({}, super.getDefaultOptions(), {\n      width: 400,\n      height: 400,\n      title: {\n        visible: false,\n      },\n      description: {\n        visible: false,\n      },\n      forceFit: true,\n      padding: 'auto',\n      radius: 0.8,\n      innerRadius: 0,\n      label: {\n        visible: true,\n        type: 'inner',\n        autoRotate: true,\n        adjustColor: false,\n      },\n      legend: {\n        visible: true,\n        position: 'right',\n      },\n      tooltip: {\n        visible: true,\n        shared: false,\n        showCrosshairs: false,\n        showMarkers: false,\n      },\n      columnStyle: {\n        stroke: 'white',\n        lineWidth: 1,\n      },\n      xAxis: {\n        visible: false,\n        line: {\n          visible: false,\n        },\n        tickLine: {\n          visible: false,\n        },\n        grid: {\n          visible: true,\n          alignTick: false,\n          style: {\n            lineWidth: 0.5,\n          },\n        },\n        label: {\n          offset: 5,\n          autoRotate: true,\n        },\n      },\n      yAxis: {\n        visible: false,\n      },\n    });\n  }\n\n  public rose: any;\n  public type: string = 'rose';\n\n  public getOptions(props: T) {\n    const options = super.getOptions(props);\n    const columnStyle = props.sectorStyle;\n    const xField = props.categoryField;\n    const yField = props.radiusField;\n    return deepMix({}, options, { columnStyle, xField, yField });\n  }\n\n  public getRadiusScale() {\n    const { radiusField } = this.options;\n    if (radiusField) {\n      this.view.getScaleByField(radiusField);\n    }\n  }\n\n  public getAngleScale() {\n    const { categoryField } = this.options;\n    if (categoryField) {\n      this.view.getScaleByField(categoryField);\n    }\n  }\n\n  protected geometryParser(dim, type) {\n    if (dim === 'g2') {\n      return G2_GEOM_MAP[type];\n    }\n    return PLOT_GEOM_MAP[type];\n  }\n\n  protected scale() {\n    // super.scale();\n    const props = this.options;\n    const scales = {};\n    scales[props.radiusField] = {};\n    scales[props.categoryField] = { type: 'cat' };\n    this.setConfig('scales', scales);\n  }\n\n  /** 不显示坐标轴 */\n  /*protected axis() {\n    super.axis();\n    const options = this.options;\n    if (!options.stackField && !options.groupField) {\n      this.setConfig('axes', false);\n    }\n  }*/\n\n  protected coord() {\n    const props = this.options;\n    const coordConfig = {\n      type: 'polar',\n      cfg: {\n        radius: props.radius,\n        innerRadius: props.innerRadius || 0,\n      },\n    };\n    this.setConfig('coordinate', coordConfig as any);\n  }\n\n  protected addGeometry() {\n    const options = this.options;\n    const rose = getGeom('interval', 'main', {\n      plot: this,\n      positionFields: [options.categoryField, options.radiusField],\n      widthRatio: {\n        rose: 1,\n      },\n    });\n    rose.label = this.extractLabel();\n    rose.adjust = this.adjustRoseAdjust();\n    this.rose = rose;\n    if (options.tooltip && (options.tooltip.fields || options.tooltip.formatter)) {\n      this.geometryTooltip();\n    }\n    this.setConfig('geometry', rose);\n  }\n\n  protected adjustRoseAdjust() {\n    return;\n  }\n\n  protected geometryTooltip() {\n    this.rose.tooltip = {};\n    const tooltipOptions: any = this.options.tooltip;\n    if (tooltipOptions.fields) {\n      this.rose.tooltip.fields = tooltipOptions.fields;\n    }\n    if (tooltipOptions.formatter) {\n      this.rose.tooltip.callback = tooltipOptions.formatter;\n      if (!tooltipOptions.fields) {\n        this.rose.tooltip.fields = [this.options.radiusField, this.options.categoryField, this.options.colorField];\n      }\n    }\n  }\n\n  protected animation() {\n    super.animation();\n    const props = this.options;\n    if (props.animation === false) {\n      /** 关闭动画 */\n      this.rose.animate = false;\n    }\n  }\n\n  protected annotation() {\n    return;\n  }\n\n  protected parseEvents() {\n    super.parseEvents(EventParser);\n  }\n\n  protected extractLabel() {\n    const options = this.options;\n    if (!options.label || !options.label.visible) {\n      return false;\n    }\n    const label = deepMix({}, options.label as Label);\n    this.adjustLabelOptions(label);\n    const fields = [options.categoryField, options.radiusField];\n    const labelConfig = getComponent('label', {\n      plot: this,\n      labelType: 'polar',\n      fields,\n      ...label,\n    });\n    return labelConfig;\n  }\n\n  private adjustLabelOptions(labelOptions: RoseLabel) {\n    const { radiusField } = this.options;\n    if (labelOptions) {\n      const { offset, type, content } = labelOptions;\n      if (type === 'inner') {\n        labelOptions.offset = offset < 0 ? offset : -10;\n      } else if (type === 'outer') {\n        labelOptions.offset = offset >= 0 ? offset : 10;\n      }\n      if (!content) {\n        // 默认显示 数值\n        labelOptions.content = (text, item) => `${item._origin[radiusField]}`;\n      }\n    }\n  }\n}\n\nregisterPlotType('rose', RoseLayer);\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}