{"ast":null,"code":"import{createStore,compose,applyMiddleware}from'redux';import rootReducer from'./../reducers/index';import createSagaMiddleware from'redux-saga';import thunk from'redux-thunk';import rootSaga from'./../sagas/index';var composeEnhancers=process.env.NODE_ENV!=='production'&&typeof window==='object'&&window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__?window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({shouldHotReload:false}):compose;var sagaMiddleware=createSagaMiddleware();var configureStore=function configureStore(){var middlewares=[thunk,sagaMiddleware];var enhancers=[applyMiddleware.apply(void 0,middlewares)];var store=createStore(rootReducer,composeEnhancers.apply(void 0,enhancers));sagaMiddleware.run(rootSaga);return store;};export default configureStore;","map":{"version":3,"sources":["C:/Users/vietn/Desktop/AppEnnegry/frontend/src/redux/configureStore.js"],"names":["createStore","compose","applyMiddleware","rootReducer","createSagaMiddleware","thunk","rootSaga","composeEnhancers","process","env","NODE_ENV","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","shouldHotReload","sagaMiddleware","configureStore","middlewares","enhancers","store","run"],"mappings":"AAAA,OAAQA,WAAR,CAAoBC,OAApB,CAA4BC,eAA5B,KAAkD,OAAlD,CACA,MAAOC,CAAAA,WAAP,KAAwB,qBAAxB,CACA,MAAOC,CAAAA,oBAAP,KAAiC,YAAjC,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,kBAArB,CAKA,GAAMC,CAAAA,gBAAgB,CAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,YAAzB,EACrB,MAAOC,CAAAA,MAAP,GAAkB,QADG,EAErBA,MAAM,CAACC,oCAFc,CAGnBD,MAAM,CAACC,oCAAP,CAA4C,CAC1CC,eAAe,CAAE,KADyB,CAA5C,CAHmB,CAMpBZ,OANL,CAOA,GAAMa,CAAAA,cAAc,CAAGV,oBAAoB,EAA3C,CACA,GAAMW,CAAAA,cAAc,CAAC,QAAfA,CAAAA,cAAe,EAAI,CACrB,GAAMC,CAAAA,WAAW,CAAG,CAACX,KAAD,CAAQS,cAAR,CAApB,CACA,GAAMG,CAAAA,SAAS,CAAG,CAACf,eAAe,MAAf,QAAmBc,WAAnB,CAAD,CAAlB,CACA,GAAME,CAAAA,KAAK,CAAGlB,WAAW,CAACG,WAAD,CAAaI,gBAAgB,MAAhB,QAAoBU,SAApB,CAAb,CAAzB,CACAH,cAAc,CAACK,GAAf,CAAmBb,QAAnB,EACA,MAAOY,CAAAA,KAAP,CACH,CAND,CAOA,cAAeH,CAAAA,cAAf","sourcesContent":["import {createStore,compose,applyMiddleware} from 'redux';\r\nimport rootReducer from './../reducers/index';\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport thunk from 'redux-thunk';\r\nimport rootSaga from './../sagas/index';\r\n\r\n\r\n\r\n\r\nconst composeEnhancers = process.env.NODE_ENV !== 'production'&&\r\n    typeof window === 'object' && \r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n        shouldHotReload: false,\r\n    })\r\n    :compose;\r\nconst sagaMiddleware = createSagaMiddleware()\r\nconst configureStore=()=>{\r\n    const middlewares = [thunk, sagaMiddleware];\r\n    const enhancers = [applyMiddleware(...middlewares)];\r\n    const store = createStore(rootReducer,composeEnhancers(...enhancers));\r\n    sagaMiddleware.run(rootSaga)\r\n    return store;\r\n}\r\nexport default configureStore;"]},"metadata":{},"sourceType":"module"}