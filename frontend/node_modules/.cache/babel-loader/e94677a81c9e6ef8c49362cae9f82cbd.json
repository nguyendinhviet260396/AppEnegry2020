{"ast":null,"code":"import * as types from './../constants/weather';\nimport moment from 'moment';\nconst inittialState = {\n  listWeather: []\n};\n\nconst reducer = (state = inittialState, action) => {\n  switch (action.type) {\n    case types.REFESH_WEATHER:\n      {\n        return { ...state\n        };\n      }\n\n    case types.REFESH_WEATHER_SUCCESS:\n      {\n        const {\n          data\n        } = action.payload;\n        const new_data = [{\n          \"name\": data.name,\n          \"country\": data.sys.country,\n          \"temp\": data.main.temp,\n          \"humi\": data.main.humidity,\n          \"wind_speed\": data.wind.speed,\n          \"sunrise\": moment.unix(data.sys.sunrise).format(\"HH:MM:SS\"),\n          \"sunset\": moment.unix(data.sys.sunset).format(\"HH:MM:SS\"),\n          \"description\": data.weather[0].main\n        }];\n        return { ...state,\n          listWeather: new_data\n        };\n      }\n\n    case types.REFESH_WEATHER_FAILED:\n      {\n        return { ...state\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/vietn/Desktop/AppEnegry2020/frontend/src/reducers/weather.js"],"names":["types","moment","inittialState","listWeather","reducer","state","action","type","REFESH_WEATHER","REFESH_WEATHER_SUCCESS","data","payload","new_data","name","sys","country","main","temp","humidity","wind","speed","unix","sunrise","format","sunset","weather","REFESH_WEATHER_FAILED"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,wBAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEC,MAAMC,aAAa,GAAE;AACjBC,EAAAA,WAAW,EAAC;AADK,CAArB;;AAIA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAACH,aAAP,EAAqBI,MAArB,KAA8B;AAC1C,UAAQA,MAAM,CAACC,IAAf;AACG,SAAKP,KAAK,CAACQ,cAAX;AAA0B;AACrB,eAAO,EACH,GAAGH;AADA,SAAP;AAGJ;;AACD,SAAKL,KAAK,CAACS,sBAAX;AAAmC;AAC9B,cAAM;AAACC,UAAAA;AAAD,YAASJ,MAAM,CAACK,OAAtB;AACA,cAAMC,QAAQ,GAAE,CAAC;AACb,kBAAOF,IAAI,CAACG,IADC;AAEb,qBAAUH,IAAI,CAACI,GAAL,CAASC,OAFN;AAGb,kBAAOL,IAAI,CAACM,IAAL,CAAUC,IAHJ;AAIb,kBAAOP,IAAI,CAACM,IAAL,CAAUE,QAJJ;AAKb,wBAAaR,IAAI,CAACS,IAAL,CAAUC,KALV;AAMb,qBAAUnB,MAAM,CAACoB,IAAP,CAAYX,IAAI,CAACI,GAAL,CAASQ,OAArB,EAA8BC,MAA9B,CAAqC,UAArC,CANG;AAOb,oBAAStB,MAAM,CAACoB,IAAP,CAAYX,IAAI,CAACI,GAAL,CAASU,MAArB,EAA6BD,MAA7B,CAAoC,UAApC,CAPI;AAQb,yBAAcb,IAAI,CAACe,OAAL,CAAa,CAAb,EAAgBT;AARjB,SAAD,CAAhB;AAUA,eAAO,EACH,GAAGX,KADA;AAEHF,UAAAA,WAAW,EAACS;AAFT,SAAP;AAIJ;;AACD,SAAKZ,KAAK,CAAC0B,qBAAX;AAAkC;AAC7B,eAAO,EACH,GAAGrB;AADA,SAAP;AAGJ;;AACD;AACI,aAAOA,KAAP;AA7BP;AA+BH,CAhCD;;AAiCA,eAAeD,OAAf","sourcesContent":["import * as types from './../constants/weather';\r\nimport moment from 'moment';\r\n\r\n const inittialState ={\r\n     listWeather:[],\r\n };\r\n\r\n const reducer = (state=inittialState,action)=>{\r\n     switch (action.type) {\r\n        case types.REFESH_WEATHER:{\r\n             return {\r\n                 ...state,\r\n             };\r\n        }\r\n        case types.REFESH_WEATHER_SUCCESS: {\r\n             const {data} = action.payload;\r\n             const new_data =[{\r\n                 \"name\":data.name,\r\n                 \"country\":data.sys.country,\r\n                 \"temp\":data.main.temp,\r\n                 \"humi\":data.main.humidity,\r\n                 \"wind_speed\":data.wind.speed,\r\n                 \"sunrise\":moment.unix(data.sys.sunrise).format(\"HH:MM:SS\"),\r\n                 \"sunset\":moment.unix(data.sys.sunset).format(\"HH:MM:SS\"),\r\n                 \"description\":data.weather[0].main\r\n             }];\r\n             return {\r\n                 ...state,\r\n                 listWeather:new_data,\r\n             };\r\n        }\r\n        case types.REFESH_WEATHER_FAILED: {\r\n             return {\r\n                 ...state,\r\n             };\r\n        }\r\n        default:\r\n            return state;\r\n     }\r\n }\r\n export default reducer;"]},"metadata":{},"sourceType":"module"}