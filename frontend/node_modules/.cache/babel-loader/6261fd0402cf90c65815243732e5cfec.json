{"ast":null,"code":"import { __extends, __spreadArrays } from \"tslib\";\nimport { deepMix, isEmpty, mapValues, get, each, assign, isFunction, mix, map, flatten, reduce, findIndex, isString, contains, hasKey } from '@antv/util';\nimport { View, VIEW_LIFE_CIRCLE } from '../dependents';\nimport TextDescription from '../components/description';\nimport { getLabelComponent } from '../components/label/base';\nimport { getComponent } from '../components/factory';\nimport BaseInteraction from '../interaction/index';\nimport { EVENT_MAP, onEvent } from '../util/event';\nimport PaddingController from './controller/padding';\nimport StateController from './controller/state';\nimport ThemeController from './controller/theme';\nimport Layer from './layer';\nimport { isTextUsable } from '../util/common';\nimport BBox, { DIRECTION } from '../util/bbox';\nimport { VIEW_LAYER_LIFE_CYCLE } from './constants';\n\nvar ViewLayer =\n/** @class */\nfunction (_super) {\n  __extends(ViewLayer, _super);\n\n  function ViewLayer(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.interactions = [];\n    _this.labels = [];\n    _this.options = _this.getOptions(props);\n    _this.initialOptions = deepMix({}, _this.options);\n    _this.paddingController = new PaddingController({\n      plot: _this\n    });\n    _this.stateController = new StateController({\n      plot: _this\n    });\n    _this.themeController = new ThemeController();\n    return _this;\n  }\n\n  ViewLayer.getDefaultOptions = function () {\n    return {\n      renderer: 'canvas',\n      title: {\n        visible: false,\n        alignTo: 'left',\n        text: ''\n      },\n      description: {\n        visible: false,\n        text: '',\n        alignTo: 'left'\n      },\n      padding: 'auto',\n      legend: {\n        visible: true,\n        position: 'bottom-center'\n      },\n      tooltip: {\n        visible: true,\n        shared: true,\n        showCrosshairs: true,\n        crosshairs: {\n          type: 'x'\n        },\n        offset: 20\n      },\n      xAxis: {\n        visible: true,\n        grid: {\n          visible: false\n        },\n        line: {\n          visible: true\n        },\n        tickLine: {\n          visible: true\n        },\n        label: {\n          visible: true,\n          autoRotate: true,\n          autoHide: true\n        },\n        title: {\n          visible: false,\n          spacing: 12\n        }\n      },\n      yAxis: {\n        visible: true,\n        grid: {\n          visible: true\n        },\n        line: {\n          visible: false\n        },\n        tickLine: {\n          visible: false\n        },\n        label: {\n          visible: true,\n          autoHide: true,\n          autoRotate: false\n        },\n        title: {\n          autoRotate: true,\n          visible: false,\n          spacing: 12\n        }\n      },\n      label: {\n        visible: false\n      },\n      interactions: [{\n        type: 'tooltip'\n      }, {\n        type: 'legend-active'\n      }, {\n        type: 'legend-filter'\n      }],\n      animation: true\n    };\n  };\n\n  ViewLayer.prototype.getOptions = function (props) {\n    var curOptions = this.options || {};\n\n    var options = _super.prototype.getOptions.call(this, props); // @ts-ignore\n\n\n    var defaultOptions = this.constructor.getDefaultOptions(props); // interactions 需要合并去重下，如果有更新 interactions，需要去掉当前的 interactions 配置\n\n    var interactions = reduce(flatten(map([options, defaultOptions, hasKey(props, 'interactions') ? props : curOptions], function (src) {\n      return get(src, 'interactions', []);\n    })), function (result, cur) {\n      var idx = findIndex(result, function (item) {\n        return item.type === cur.type;\n      });\n\n      if (idx >= 0) {\n        result.splice(idx, 1);\n      }\n\n      return __spreadArrays(result, [cur]);\n    }, []);\n    return deepMix({}, options, defaultOptions, curOptions, props, {\n      interactions: interactions\n    });\n  };\n\n  ViewLayer.prototype.beforeInit = function () {\n    this.emit(VIEW_LAYER_LIFE_CYCLE.BEFORE_INIT);\n\n    _super.prototype.beforeInit.call(this);\n  };\n\n  ViewLayer.prototype.init = function () {\n    var _this = this;\n\n    _super.prototype.init.call(this);\n\n    this.theme = this.themeController.getTheme(this.options, this.type);\n    this.config = {\n      data: this.processData(this.options.data),\n      scales: {},\n      legends: {},\n      tooltip: {\n        showTitle: true\n      },\n      axes: {},\n      coordinate: {\n        type: 'cartesian'\n      },\n      geometries: [],\n      annotations: [],\n      interactions: [],\n      theme: this.theme,\n      panelRange: {},\n      animate: {},\n      views: []\n    };\n    this.paddingController.clear();\n    this.drawTitle();\n    this.drawDescription(); // 有些interaction要调整配置项，所以顺序提前\n\n    this.interaction();\n    this.coord();\n    this.scale();\n    this.axis();\n    this.tooltip();\n    this.legend();\n    this.addGeometry();\n    this.annotation();\n    this.animation();\n    this.viewRange = this.getViewRange();\n    var region = this.viewRangeToRegion(this.viewRange);\n    this.view = new View({\n      parent: null,\n      canvas: this.canvas,\n      backgroundGroup: this.container.addGroup(),\n      middleGroup: this.container.addGroup(),\n      foregroundGroup: this.container.addGroup(),\n      padding: this.paddingController.getPadding(),\n      theme: this.theme,\n      options: this.config,\n      limitInPlot: this.isLimitInPlot(),\n      region: region\n    });\n    this.applyInteractions();\n    this.view.on(VIEW_LIFE_CIRCLE.AFTER_RENDER, function () {\n      _this.afterRender();\n    });\n  };\n\n  ViewLayer.prototype.afterInit = function () {\n    _super.prototype.afterInit.call(this);\n\n    if (!this.view || this.view.destroyed) {\n      return;\n    }\n\n    if (this.options.padding !== 'auto') {\n      this.parseEvents();\n    }\n\n    this.emit(VIEW_LAYER_LIFE_CYCLE.AFTER_INIT);\n  };\n\n  ViewLayer.prototype.afterRender = function () {\n    var _a, _b;\n\n    if (!this.view || this.view.destroyed) {\n      return;\n    }\n\n    var options = this.options;\n    var padding = options.padding ? options.padding : this.config.theme.padding;\n    /** defaultState */\n\n    if (options.defaultState && padding !== 'auto') {\n      this.stateController.defaultStates(options.defaultState);\n    }\n    /** autopadding */\n\n\n    if (padding === 'auto') {\n      this.paddingController.processAutoPadding();\n    }\n\n    if (((_b = (_a = options.tooltip) === null || _a === void 0 ? void 0 : _a.custom) === null || _b === void 0 ? void 0 : _b.onChange) && options.padding !== 'auto') {\n      this.customTooltip();\n    }\n  };\n  /** 完整生命周期渲染 */\n\n\n  ViewLayer.prototype.render = function () {\n    this.emit(VIEW_LAYER_LIFE_CYCLE.BEFORE_RENDER);\n\n    _super.prototype.render.call(this);\n\n    var data = this.options.data;\n\n    if (!isEmpty(data)) {\n      this.view.render();\n    }\n\n    this.emit(VIEW_LAYER_LIFE_CYCLE.AFTER_RENDER);\n  };\n  /** 画布重绘 */\n\n\n  ViewLayer.prototype.repaint = function () {\n    if (this.canvas) {\n      this.canvas.draw();\n    }\n  };\n\n  ViewLayer.prototype.getScaleByField = function (field) {\n    return this.view.getScaleByField(field);\n  };\n\n  ViewLayer.prototype.getXScale = function () {\n    var xField = this.options.xField;\n\n    if (xField) {\n      return this.view.getScaleByField(xField);\n    }\n  };\n\n  ViewLayer.prototype.getYScale = function () {\n    var yField = this.options.yField;\n\n    if (yField) {\n      return this.view.getScaleByField(yField);\n    }\n  };\n\n  ViewLayer.prototype.getColorScale = function () {\n    var options = this.options;\n\n    if (contains(options, 'colorField')) {\n      return this.view.getScaleByField(options);\n    }\n  };\n\n  ViewLayer.prototype.getShapes = function () {\n    var geometries = this.view.geometries;\n    var shapes = {}; // todo: geometry 类型转译\n\n    each(geometries, function (geom) {\n      var type = geom.type;\n      shapes[type] = geom.getShapes();\n    });\n    return shapes;\n  };\n  /** 销毁 */\n\n\n  ViewLayer.prototype.destroy = function () {\n    this.doDestroy();\n\n    _super.prototype.destroy.call(this);\n  };\n  /** 更新配置项 */\n\n\n  ViewLayer.prototype.updateConfig = function (cfg) {\n    this.doDestroy();\n\n    if (!cfg.padding && this.initialOptions.padding && this.initialOptions.padding === 'auto') {\n      cfg.padding = 'auto';\n    }\n\n    this.options = this.getOptions(cfg);\n    this.processOptions(this.options);\n  };\n\n  ViewLayer.prototype.changeData = function (data) {\n    this.emit(VIEW_LAYER_LIFE_CYCLE.BEFORE_CHANGE_DATA);\n    var isEmptyBefore = isEmpty(this.options.data);\n    this.options.data = this.processData(data); // 如果之前没有 data\n\n    if (isEmptyBefore) {\n      this.options.padding = this.initialOptions.padding || 'auto';\n      this.view.data(this.options.data);\n      this.view.render();\n    } else {\n      this.view.changeData(this.options.data);\n    }\n\n    this.emit(VIEW_LAYER_LIFE_CYCLE.AFTER_CHANGE_DATA);\n  }; // plot 不断销毁重建，需要一个api获取最新的plot\n\n\n  ViewLayer.prototype.getPlot = function () {\n    return this.view;\n  };\n  /**\n   * 获取已渲染的数据标签组件\n   */\n\n\n  ViewLayer.prototype.getLabels = function () {\n    return this.labels;\n  }; // 获取对应的G2 Theme\n\n\n  ViewLayer.prototype.getTheme = function () {\n    if (!this.theme) {\n      return this.themeController.getTheme(this.options, this.type);\n    }\n\n    return this.theme;\n  };\n\n  ViewLayer.prototype.getResponsiveTheme = function () {\n    return this.themeController.getResponsiveTheme(this.type);\n  }; // 获取对应的Plot Theme\n\n\n  ViewLayer.prototype.getPlotTheme = function () {\n    return this.themeController.getPlotTheme(this.options, this.type);\n  };\n\n  ViewLayer.prototype.getInteractions = function () {\n    return this.interactions;\n  }; // 绑定一个外部的stateManager\n\n\n  ViewLayer.prototype.bindStateManager = function (stateManager, cfg) {\n    this.stateController.bindStateManager(stateManager, cfg);\n  }; // 响应状态量更新的快捷方法\n\n\n  ViewLayer.prototype.setActive = function (condition, style) {\n    this.stateController.setState({\n      type: 'active',\n      condition: condition,\n      style: style\n    });\n  };\n\n  ViewLayer.prototype.setSelected = function (condition, style) {\n    this.stateController.setState({\n      type: 'selected',\n      condition: condition,\n      style: style\n    });\n  };\n\n  ViewLayer.prototype.setDisable = function (condition, style) {\n    this.stateController.setState({\n      type: 'disable',\n      condition: condition,\n      style: style\n    });\n  };\n\n  ViewLayer.prototype.setDefault = function (condition, style) {\n    this.stateController.setState({\n      type: 'default',\n      condition: condition,\n      style: style\n    });\n  }; // 获取 ViewLayer 的数据项\n\n\n  ViewLayer.prototype.getData = function (start, end) {\n    return this.processData((this.options.data || []).slice(start, end));\n  };\n\n  ViewLayer.prototype.processData = function (data) {\n    return data;\n  };\n\n  ViewLayer.prototype.scale = function () {\n    /** scale meta配置 */\n    // 1. this.config.scales中已有子图形在处理xAxis/yAxis是写入的xField/yField对应的scale信息，这里再检查用户设置的meta，将meta信息合并到默认的scale中\n    // 2. 同时xAxis/yAxis中的type优先级更高，覆盖meta中的type配置\n    var scaleTypes = mapValues(this.config.scales, function (scaleConfig) {\n      var type = scaleConfig.type;\n      return type ? {\n        type: type\n      } : {};\n    });\n    var scales = deepMix({}, this.config.scales, this.options.meta || {}, scaleTypes);\n    this.setConfig('scales', scales);\n  };\n\n  ViewLayer.prototype.axis = function () {\n    var xAxis_parser = getComponent('axis', {\n      plot: this,\n      dim: 'x'\n    });\n    var yAxis_parser = getComponent('axis', {\n      plot: this,\n      dim: 'y'\n    });\n    var axesConfig = {};\n    axesConfig[this.options.xField] = xAxis_parser;\n    axesConfig[this.options.yField] = yAxis_parser;\n    /** 存储坐标轴配置项到config */\n\n    this.setConfig('axes', axesConfig);\n  };\n\n  ViewLayer.prototype.tooltip = function () {\n    var _a, _b;\n\n    if (this.options.tooltip.visible === false) {\n      this.setConfig('tooltip', false);\n      return;\n    }\n\n    var tooltipOptions = get(this.options, 'tooltip');\n\n    if ((_a = tooltipOptions.custom) === null || _a === void 0 ? void 0 : _a.container) {\n      tooltipOptions.container = tooltipOptions.custom.container;\n    }\n\n    if ((_b = tooltipOptions.custom) === null || _b === void 0 ? void 0 : _b.customContent) {\n      tooltipOptions.customContent = tooltipOptions.custom.customContent;\n    }\n\n    this.setConfig('tooltip', deepMix({}, tooltipOptions));\n    deepMix(this.config.theme.tooltip, this.options.tooltip.domStyles);\n  };\n\n  ViewLayer.prototype.createTooltipContainer = function () {\n    var container = document.createElement('div');\n    container.className = 'g2-tooltip';\n    return container;\n  };\n\n  ViewLayer.prototype.customTooltip = function () {\n    var customContentCfg = this.options.tooltip.custom;\n    var container;\n\n    if (customContentCfg.container) {\n      container = isString(customContentCfg.container) ? document.getElementById(customContentCfg.container) : customContentCfg.container;\n    }\n\n    if (!container) {\n      container = this.createTooltipContainer();\n    }\n\n    this.view.on('tooltip:show', function (ev) {\n      if (customContentCfg === null || customContentCfg === void 0 ? void 0 : customContentCfg.onChange) {\n        customContentCfg.onChange(container, ev);\n      }\n    });\n    this.view.hideTooltip();\n    this.view.on('tooltip:change', function (ev) {\n      customContentCfg.onChange(container, ev);\n    });\n  };\n\n  ViewLayer.prototype.getLegendPosition = function (position) {\n    var positionList = position.split('-'); // G2 4.0 兼容 XXX-center 到 XXX 的场景\n\n    if (positionList && positionList.length > 1 && positionList[1] === 'center') {\n      return positionList[0];\n    }\n\n    return position;\n  };\n\n  ViewLayer.prototype.legend = function () {\n    var _a;\n\n    if (this.options.legend.visible === false) {\n      this.setConfig('legends', false);\n      return;\n    }\n\n    var options = deepMix({}, this.theme.legend, this.options.legend);\n    var legendConfig = {\n      position: this.getLegendPosition(get(options, 'position')),\n      offsetX: get(options, 'offsetX'),\n      offsetY: get(options, 'offsetY'),\n      flipPage: get(options, 'flipPage'),\n      marker: get(options, 'marker'),\n      title: ((_a = options.title) === null || _a === void 0 ? void 0 : _a.visible) ? get(options, 'title') : null,\n      itemName: get(options, 'text')\n    };\n    this.setConfig('legends', legendConfig);\n  };\n\n  ViewLayer.prototype.annotation = function () {\n    var _this = this;\n\n    var config = [];\n\n    if (this.config.coordinate.type === 'cartesian' && this.options.guideLine) {\n      each(this.options.guideLine, function (line) {\n        var guideLine = getComponent('guideLine', {\n          plot: _this,\n          cfg: line\n        });\n        config.push(guideLine);\n      });\n    }\n\n    this.setConfig('annotations', config);\n  };\n\n  ViewLayer.prototype.interaction = function () {\n    var _this = this;\n\n    var _a = this.options.interactions,\n        interactions = _a === void 0 ? [] : _a;\n    each(interactions, function (interaction) {\n      var type = interaction.type;\n\n      if (type === 'slider' || type === 'scrollbar') {\n        var axisConfig = {\n          label: {\n            autoHide: true,\n            autoRotate: false\n          }\n        };\n        _this.options.xAxis = deepMix({}, _this.options.xAxis, axisConfig);\n      }\n\n      _this.setConfig('interaction', interaction);\n    });\n  };\n\n  ViewLayer.prototype.animation = function () {\n    if (this.options.animation === false) {\n      this.setConfig('animate', false);\n    }\n  };\n\n  ViewLayer.prototype.applyInteractions = function () {\n    var _this = this;\n\n    var range = BBox.fromBBoxObject(this.layerBBox); // 临时去掉 title/description 的占用\n\n    var titleOrDesc = this.title || this.description;\n    var extraBBox = new BBox(range.minX, range.minY, range.width, titleOrDesc ? titleOrDesc.getBBox().maxY : 0);\n    range = range.cut(extraBBox, DIRECTION.TOP);\n    var _a = this.options.interactions,\n        interactions = _a === void 0 ? [] : _a;\n\n    if (this.interactions) {\n      this.interactions.forEach(function (inst) {\n        inst.destroy();\n      });\n    }\n\n    this.interactions = [];\n    interactions.forEach(function (interaction) {\n      var Ctor = BaseInteraction.getInteraction(interaction.type, _this.type);\n\n      if (Ctor) {\n        var inst = new Ctor({\n          view: _this.view\n        }, _this, Ctor.getInteractionRange(range, interaction.cfg), interaction.cfg);\n        inst.render();\n\n        _this.interactions.push(inst);\n      }\n    });\n  };\n  /** 设置G2 config，带有类型推导 */\n\n\n  ViewLayer.prototype.setConfig = function (key, config) {\n    if (key === 'geometry') {\n      this.config.geometries.push(config);\n      return;\n    }\n\n    if (key === 'interaction') {\n      this.config.interactions.push(config);\n      return;\n    }\n\n    if (config === false) {\n      this.config[key] = false;\n      return;\n    }\n\n    assign(this.config[key], config);\n  };\n\n  ViewLayer.prototype.parseEvents = function (eventParser) {\n    var _this = this;\n\n    var options = this.options;\n\n    if (options.events) {\n      _super.prototype.parseEvents.call(this, options.events);\n\n      var eventmap_1 = eventParser ? eventParser.EVENT_MAP : EVENT_MAP;\n      each(options.events, function (e, k) {\n        if (isFunction(e)) {\n          var eventName = eventmap_1[k] || k;\n          var handler = e;\n          onEvent(_this, eventName, handler);\n        }\n      });\n    }\n  };\n\n  ViewLayer.prototype.drawTitle = function () {\n    var props = this.options;\n    var range = this.layerBBox;\n\n    if (this.title) {\n      this.title.destroy();\n      this.title = null;\n    }\n\n    if (isTextUsable(props.title)) {\n      var width = this.width;\n      var theme = this.config.theme;\n      var title = new TextDescription({\n        leftMargin: range.minX + theme.title.padding[3],\n        rightMargin: range.maxX - theme.title.padding[1],\n        topMargin: range.minY + theme.title.padding[0],\n        text: props.title.text,\n        style: mix(theme.title, props.title.style),\n        wrapperWidth: width - theme.title.padding[3] - theme.title.padding[1],\n        container: this.container.addGroup(),\n        theme: theme,\n        index: isTextUsable(props.description) ? 0 : 1,\n        plot: this,\n        alignTo: props.title.alignTo,\n        name: 'title'\n      });\n      this.title = title;\n      this.paddingController.registerPadding(title, 'outer');\n    }\n  };\n\n  ViewLayer.prototype.drawDescription = function () {\n    var props = this.options;\n    var range = this.layerBBox;\n\n    if (this.description) {\n      this.description.destroy();\n      this.description = null;\n    }\n\n    if (isTextUsable(props.description)) {\n      var width = this.width;\n      var theme = this.config.theme;\n      var topMargin = 0;\n\n      if (this.title) {\n        var titleBBox = this.title.getBBox();\n        topMargin += titleBBox.minY + titleBBox.height;\n        topMargin += theme.description.padding[0];\n      } else {\n        // 无title的情况下使用title的上padding\n        topMargin += range.minY + theme.title.padding[0];\n      }\n\n      var description = new TextDescription({\n        leftMargin: range.minX + theme.description.padding[3],\n        topMargin: topMargin,\n        rightMargin: range.maxX - theme.title.padding[1],\n        text: props.description.text,\n        style: mix(theme.description, props.description.style),\n        wrapperWidth: width - theme.description.padding[3] - theme.description.padding[1],\n        container: this.container.addGroup(),\n        theme: theme,\n        index: 1,\n        plot: this,\n        alignTo: props.description.alignTo,\n        name: 'description'\n      });\n      this.description = description;\n      this.paddingController.registerPadding(description, 'outer');\n    }\n  };\n\n  ViewLayer.prototype.doRenderLabel = function (geometry, label) {\n    each(this.labels, function (item) {\n      item.destroy();\n    });\n    this.labels = [];\n    var config = {\n      layer: this,\n      container: geometry.labelsContainer,\n      geometry: geometry,\n      label: label\n    };\n    var Ctor = getLabelComponent(label.type);\n\n    if (Ctor) {\n      var label_1 = new Ctor(config);\n      label_1.init();\n      label_1.render();\n      this.labels.push(label_1);\n    }\n  };\n  /** 抽取destroy和updateConfig共有代码为_destroy方法 */\n\n\n  ViewLayer.prototype.doDestroy = function () {\n    this.doDestroyInteractions();\n    this.doDestroyLabels();\n    /** 销毁g2.view实例 */\n\n    if (!this.view.destroyed) {\n      this.view.destroy();\n    }\n  };\n\n  ViewLayer.prototype.doDestroyInteractions = function () {\n    // 移除注册的 interactions\n    if (this.interactions) {\n      this.interactions.forEach(function (inst) {\n        inst.destroy();\n      });\n    }\n\n    this.interactions = [];\n  };\n\n  ViewLayer.prototype.doDestroyLabels = function () {\n    // 移除各 geometry 的 label\n    each(this.labels, function (label) {\n      label.destroy();\n    });\n    this.labels = [];\n  };\n\n  ViewLayer.prototype.getViewRange = function () {\n    var _this = this; // 有 Range 的 Interaction 参与 ViewMargin 计算\n\n\n    var _a = this.options.interactions,\n        interactions = _a === void 0 ? [] : _a; // const layerBBox = this.layerBBox;\n\n    var layerBBox = this.paddingController.processOuterPadding();\n    interactions.forEach(function (interaction) {\n      var Ctor = BaseInteraction.getInteraction(interaction.type, _this.type);\n      var range = Ctor && Ctor.getInteractionRange(layerBBox, interaction.cfg);\n      var position = '';\n\n      if (range) {\n        // 先只考虑 Range 靠边的情况\n        if (range.maxY === layerBBox.maxY && range.minY > layerBBox.minY) {\n          // margin[2] += range.height;\n          position = 'bottom';\n        } else if (range.maxX === layerBBox.maxX && range.minX > layerBBox.minX) {\n          // margin[1] += range.width;\n          position = 'right';\n        } else if (range.minX === layerBBox.minX && range.maxX > layerBBox.maxX) {\n          // margin[3] += range.width;\n          position = 'left';\n        } else if (range.minY === layerBBox.minY && range.maxY < layerBBox.maxY) {\n          // margin[0] += range.height;\n          position = 'top';\n        }\n\n        _this.paddingController.registerPadding({\n          interaction: interaction.type,\n          name: interaction.type,\n          getBBox: function getBBox() {\n            return range;\n          },\n          position: position\n        }, 'outer');\n      }\n    });\n    var viewRange = this.paddingController.processOuterPadding();\n    return viewRange;\n  };\n\n  ViewLayer.prototype.isLimitInPlot = function () {\n    var yAxisOptions = this.options.yAxis;\n\n    if (hasKey(yAxisOptions, 'max') || hasKey(yAxisOptions, 'min') || hasKey(yAxisOptions, 'maxLimit') || hasKey(yAxisOptions, 'minLimit')) {\n      return true;\n    }\n\n    return false;\n  };\n\n  ViewLayer.prototype.viewRangeToRegion = function (viewRange) {\n    var _a = this,\n        x = _a.x,\n        y = _a.y,\n        width = _a.width,\n        height = _a.height;\n\n    var start = {\n      x: 0,\n      y: 0\n    },\n        end = {\n      x: 1,\n      y: 1\n    };\n    start.x = viewRange.minX / (x + width);\n    start.y = viewRange.minY / (y + height);\n    end.x = viewRange.maxX / (x + width);\n    end.y = viewRange.maxY / (y + height);\n    return {\n      start: start,\n      end: end\n    };\n  };\n\n  return ViewLayer;\n}(Layer);\n\nexport default ViewLayer;","map":{"version":3,"sources":["../../src/base/view-layer.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  deepMix,\n  isEmpty,\n  mapValues,\n  get,\n  each,\n  assign,\n  isFunction,\n  mix,\n  map,\n  flatten,\n  reduce,\n  findIndex,\n  isString,\n  contains,\n  hasKey,\n} from '@antv/util';\nimport { View, Geometry, VIEW_LIFE_CIRCLE } from '../dependents';\nimport TextDescription from '../components/description';\nimport BaseLabel, { LabelComponentConfig, getLabelComponent } from '../components/label/base';\nimport { getComponent } from '../components/factory';\nimport Interaction from '../interaction/core';\nimport BaseInteraction, { InteractionCtor } from '../interaction/index';\nimport {\n  IValueAxis,\n  Axis,\n  IDescription,\n  IInteractions,\n  ITitle,\n  Label,\n  Legend,\n  StateConfig,\n  Tooltip,\n  DataItem,\n  Animation,\n  Meta,\n  GuideLineConfig,\n  CustomTooltipConfig,\n} from '../interface/config';\nimport { G2Config } from '../interface/config';\nimport { EVENT_MAP, onEvent } from '../util/event';\nimport PaddingController from './controller/padding';\nimport StateController from './controller/state';\nimport ThemeController from './controller/theme';\nimport Layer, { LayerConfig } from './layer';\nimport { isTextUsable } from '../util/common';\nimport { LooseMap } from '../interface/types';\nimport BBox, { DIRECTION } from '../util/bbox';\nimport { VIEW_LAYER_LIFE_CYCLE } from './constants';\n\nexport interface ViewConfig {\n  renderer?: string;\n  data?: DataItem[];\n  meta?: LooseMap<Meta>;\n  padding?: number | number[] | string;\n  xField?: string;\n  yField?: string;\n  color?: string | string[] | {};\n  xAxis?: Axis;\n  yAxis?: Axis;\n  label?: Label | any;\n  tooltip?: Tooltip;\n  legend?: Legend;\n  animation?: Animation | boolean;\n  theme?: LooseMap | string;\n  responsiveTheme?: {} | string;\n  interactions?: IInteractions[];\n  responsive?: boolean;\n  title?: ITitle;\n  description?: IDescription;\n  guideLine?: GuideLineConfig[];\n  events?: {\n    [k: string]: ((...args: any[]) => any) | boolean;\n  };\n  defaultState?: {\n    active?: StateConfig;\n    inActive?: StateConfig;\n    selected?: StateConfig;\n    disabled?: StateConfig;\n  };\n  name?: string;\n}\n\nexport interface ViewLayerConfig extends ViewConfig, LayerConfig {}\n\nexport default abstract class ViewLayer<T extends ViewLayerConfig = ViewLayerConfig> extends Layer<T> {\n  public static getDefaultOptions(): Partial<ViewConfig> {\n    return {\n      renderer: 'canvas',\n      title: {\n        visible: false,\n        alignTo: 'left',\n        text: '',\n      },\n      description: {\n        visible: false,\n        text: '',\n        alignTo: 'left',\n      },\n      padding: 'auto',\n      legend: {\n        visible: true,\n        position: 'bottom-center',\n      },\n      tooltip: {\n        visible: true,\n        shared: true,\n        showCrosshairs: true,\n        crosshairs: {\n          type: 'x',\n        },\n        offset: 20,\n      },\n      xAxis: {\n        visible: true,\n        grid: {\n          visible: false,\n        },\n        line: {\n          visible: true,\n        },\n        tickLine: {\n          visible: true,\n        },\n        label: {\n          visible: true,\n          autoRotate: true,\n          autoHide: true,\n        },\n        title: {\n          visible: false,\n          spacing: 12,\n        },\n      },\n      yAxis: {\n        visible: true,\n        grid: {\n          visible: true,\n        },\n        line: {\n          visible: false,\n        },\n        tickLine: {\n          visible: false,\n        },\n        label: {\n          visible: true,\n          autoHide: true,\n          autoRotate: false,\n        },\n        title: {\n          autoRotate: true,\n          visible: false,\n          spacing: 12,\n        },\n      },\n      label: {\n        visible: false,\n      },\n      interactions: [{ type: 'tooltip' }, { type: 'legend-active' }, { type: 'legend-filter' }],\n      animation: true,\n    };\n  }\n  public type: string;\n  public view: View;\n  public theme: any;\n  public initialOptions: T;\n  public title: TextDescription;\n  public description: TextDescription;\n  public viewRange: BBox;\n  protected paddingController: PaddingController;\n  protected stateController: StateController;\n  protected themeController: ThemeController;\n  public config: G2Config;\n  protected interactions: Interaction[] = [];\n  protected labels: BaseLabel[] = [];\n\n  constructor(props: T) {\n    super(props);\n    this.options = this.getOptions(props);\n    this.initialOptions = deepMix({}, this.options);\n    this.paddingController = new PaddingController({\n      plot: this,\n    });\n    this.stateController = new StateController({\n      plot: this,\n    });\n    this.themeController = new ThemeController();\n  }\n\n  public getOptions(props: Partial<T>): T {\n    const curOptions = this.options || {};\n    const options = super.getOptions(props);\n    // @ts-ignore\n    const defaultOptions = this.constructor.getDefaultOptions(props);\n    // interactions 需要合并去重下，如果有更新 interactions，需要去掉当前的 interactions 配置\n    const interactions = reduce(\n      flatten(\n        map([options, defaultOptions, hasKey(props, 'interactions') ? props : curOptions], (src) =>\n          get(src, 'interactions', [])\n        )\n      ),\n      (result, cur) => {\n        const idx = findIndex(result, (item) => item.type === cur.type);\n        if (idx >= 0) {\n          result.splice(idx, 1);\n        }\n        return [...result, cur];\n      },\n      []\n    );\n    return deepMix({}, options, defaultOptions, curOptions, props, { interactions });\n  }\n\n  public beforeInit() {\n    this.emit(VIEW_LAYER_LIFE_CYCLE.BEFORE_INIT);\n    super.beforeInit();\n  }\n\n  public init() {\n    super.init();\n    this.theme = this.themeController.getTheme(this.options, this.type);\n    this.config = {\n      data: this.processData(this.options.data),\n      scales: {},\n      legends: {},\n      tooltip: {\n        showTitle: true,\n      },\n      axes: {},\n      coordinate: { type: 'cartesian' },\n      geometries: [],\n      annotations: [],\n      interactions: [],\n      theme: this.theme,\n      panelRange: {},\n      animate: {} as any,\n      views: [],\n    };\n\n    this.paddingController.clear();\n\n    this.drawTitle();\n    this.drawDescription();\n    // 有些interaction要调整配置项，所以顺序提前\n    this.interaction();\n    this.coord();\n    this.scale();\n    this.axis();\n    this.tooltip();\n    this.legend();\n    this.addGeometry();\n    this.annotation();\n    this.animation();\n\n    this.viewRange = this.getViewRange();\n    const region = this.viewRangeToRegion(this.viewRange);\n    this.view = new View({\n      parent: null,\n      canvas: this.canvas,\n      backgroundGroup: this.container.addGroup(),\n      middleGroup: this.container.addGroup(),\n      foregroundGroup: this.container.addGroup(),\n      padding: this.paddingController.getPadding(),\n      theme: this.theme,\n      options: this.config,\n      limitInPlot: this.isLimitInPlot(),\n      region,\n    });\n    this.applyInteractions();\n    this.view.on(VIEW_LIFE_CIRCLE.AFTER_RENDER, () => {\n      this.afterRender();\n    });\n  }\n\n  public afterInit() {\n    super.afterInit();\n    if (!this.view || this.view.destroyed) {\n      return;\n    }\n    if (this.options.padding !== 'auto') {\n      this.parseEvents();\n    }\n    this.emit(VIEW_LAYER_LIFE_CYCLE.AFTER_INIT);\n  }\n\n  public afterRender() {\n    if (!this.view || this.view.destroyed) {\n      return;\n    }\n    const { options } = this;\n    const padding = options.padding ? options.padding : this.config.theme.padding;\n    /** defaultState */\n    if (options.defaultState && padding !== 'auto') {\n      this.stateController.defaultStates(options.defaultState);\n    }\n    /** autopadding */\n    if (padding === 'auto') {\n      this.paddingController.processAutoPadding();\n    }\n    if (options.tooltip?.custom?.onChange && options.padding !== 'auto') {\n      this.customTooltip();\n    }\n  }\n\n  /** 完整生命周期渲染 */\n  public render(): void {\n    this.emit(VIEW_LAYER_LIFE_CYCLE.BEFORE_RENDER);\n    super.render();\n    const { data } = this.options;\n    if (!isEmpty(data)) {\n      this.view.render();\n    }\n    this.emit(VIEW_LAYER_LIFE_CYCLE.AFTER_RENDER);\n  }\n\n  /** 画布重绘 */\n  public repaint(): void {\n    if (this.canvas) {\n      this.canvas.draw();\n    }\n  }\n\n  public getScaleByField(field: string) {\n    return this.view.getScaleByField(field);\n  }\n\n  public getXScale() {\n    const { xField } = this.options;\n    if (xField) {\n      return this.view.getScaleByField(xField);\n    }\n  }\n\n  public getYScale() {\n    const { yField } = this.options;\n    if (yField) {\n      return this.view.getScaleByField(yField);\n    }\n  }\n\n  public getColorScale() {\n    const options: any = this.options;\n    if (contains(options, 'colorField')) {\n      return this.view.getScaleByField(options);\n    }\n  }\n\n  public getShapes() {\n    const geometries = this.view.geometries;\n    const shapes = {};\n    // todo: geometry 类型转译\n    each(geometries, (geom) => {\n      const { type } = geom;\n      shapes[type] = geom.getShapes();\n    });\n    return shapes;\n  }\n\n  /** 销毁 */\n  public destroy(): void {\n    this.doDestroy();\n    super.destroy();\n  }\n\n  /** 更新配置项 */\n  public updateConfig(cfg: Partial<T>): void {\n    this.doDestroy();\n    if (!cfg.padding && this.initialOptions.padding && this.initialOptions.padding === 'auto') {\n      cfg.padding = 'auto';\n    }\n    this.options = this.getOptions(cfg);\n    this.processOptions(this.options);\n  }\n\n  public changeData(data: DataItem[]): void {\n    this.emit(VIEW_LAYER_LIFE_CYCLE.BEFORE_CHANGE_DATA);\n    const isEmptyBefore = isEmpty(this.options.data);\n    this.options.data = this.processData(data);\n\n    // 如果之前没有 data\n    if (isEmptyBefore) {\n      this.options.padding = this.initialOptions.padding || 'auto';\n      this.view.data(this.options.data);\n      this.view.render();\n    } else {\n      this.view.changeData(this.options.data);\n    }\n\n    this.emit(VIEW_LAYER_LIFE_CYCLE.AFTER_CHANGE_DATA);\n  }\n\n  // plot 不断销毁重建，需要一个api获取最新的plot\n  public getPlot() {\n    return this.view;\n  }\n\n  /**\n   * 获取已渲染的数据标签组件\n   */\n  public getLabels() {\n    return this.labels;\n  }\n\n  // 获取对应的G2 Theme\n  public getTheme() {\n    if (!this.theme) {\n      return this.themeController.getTheme(this.options, this.type);\n    }\n    return this.theme;\n  }\n\n  public getResponsiveTheme() {\n    return this.themeController.getResponsiveTheme(this.type);\n  }\n\n  // 获取对应的Plot Theme\n  public getPlotTheme() {\n    return this.themeController.getPlotTheme(this.options, this.type);\n  }\n\n  public getInteractions() {\n    return this.interactions;\n  }\n\n  // 绑定一个外部的stateManager\n  public bindStateManager(stateManager, cfg): void {\n    this.stateController.bindStateManager(stateManager, cfg);\n  }\n\n  // 响应状态量更新的快捷方法\n  public setActive(condition, style) {\n    this.stateController.setState({ type: 'active', condition, style });\n  }\n\n  public setSelected(condition, style) {\n    this.stateController.setState({ type: 'selected', condition, style });\n  }\n\n  public setDisable(condition, style) {\n    this.stateController.setState({ type: 'disable', condition, style });\n  }\n\n  public setDefault(condition, style) {\n    this.stateController.setState({ type: 'default', condition, style });\n  }\n\n  // 获取 ViewLayer 的数据项\n  public getData(start?: number, end?: number): object[] {\n    return this.processData((this.options.data || []).slice(start, end));\n  }\n\n  protected processData(data?: DataItem[]): DataItem[] | undefined {\n    return data;\n  }\n\n  protected abstract coord(): void;\n\n  protected scale(): void {\n    /** scale meta配置 */\n    // 1. this.config.scales中已有子图形在处理xAxis/yAxis是写入的xField/yField对应的scale信息，这里再检查用户设置的meta，将meta信息合并到默认的scale中\n    // 2. 同时xAxis/yAxis中的type优先级更高，覆盖meta中的type配置\n    const scaleTypes = mapValues(this.config.scales, (scaleConfig: any) => {\n      const type = scaleConfig.type;\n      return type ? { type } : {};\n    });\n    const scales = deepMix({}, this.config.scales, this.options.meta || {}, scaleTypes);\n\n    this.setConfig('scales', scales);\n  }\n\n  protected axis(): void {\n    const xAxis_parser = getComponent('axis', {\n      plot: this,\n      dim: 'x',\n    });\n    const yAxis_parser = getComponent('axis', {\n      plot: this,\n      dim: 'y',\n    });\n    const axesConfig = {};\n    axesConfig[this.options.xField] = xAxis_parser;\n    axesConfig[this.options.yField] = yAxis_parser;\n    /** 存储坐标轴配置项到config */\n    this.setConfig('axes', axesConfig);\n  }\n\n  protected tooltip(): void {\n    if (this.options.tooltip.visible === false) {\n      this.setConfig('tooltip', false);\n      return;\n    }\n    const tooltipOptions = get(this.options, 'tooltip');\n    if (tooltipOptions.custom?.container) {\n      tooltipOptions.container = tooltipOptions.custom.container;\n    }\n    if (tooltipOptions.custom?.customContent) {\n      tooltipOptions.customContent = tooltipOptions.custom.customContent;\n    }\n    this.setConfig('tooltip', deepMix({}, tooltipOptions));\n\n    deepMix(this.config.theme.tooltip, this.options.tooltip.domStyles);\n  }\n\n  private createTooltipContainer() {\n    const container = document.createElement('div');\n    container.className = 'g2-tooltip';\n    return container;\n  }\n\n  protected customTooltip() {\n    const customContentCfg = this.options.tooltip.custom;\n    let container;\n    if (customContentCfg.container) {\n      container = isString(customContentCfg.container)\n        ? document.getElementById(customContentCfg.container)\n        : customContentCfg.container;\n    }\n    if (!container) {\n      container = this.createTooltipContainer();\n    }\n    this.view.on('tooltip:show', (ev: CustomTooltipConfig) => {\n      if (customContentCfg?.onChange) {\n        customContentCfg.onChange(container, ev);\n      }\n    });\n    this.view.hideTooltip();\n    this.view.on('tooltip:change', (ev: CustomTooltipConfig) => {\n      customContentCfg.onChange(container, ev);\n    });\n  }\n\n  protected getLegendPosition(position: string): any {\n    const positionList = position.split('-');\n    // G2 4.0 兼容 XXX-center 到 XXX 的场景\n    if (positionList && positionList.length > 1 && positionList[1] === 'center') {\n      return positionList[0];\n    }\n    return position;\n  }\n\n  protected legend(): void {\n    if (this.options.legend.visible === false) {\n      this.setConfig('legends', false);\n      return;\n    }\n    const options = deepMix({}, this.theme.legend, this.options.legend);\n    const legendConfig = {\n      position: this.getLegendPosition(get(options, 'position')),\n      offsetX: get(options, 'offsetX'),\n      offsetY: get(options, 'offsetY'),\n      flipPage: get(options, 'flipPage'),\n      marker: get(options, 'marker'),\n      title: options.title?.visible ? get(options, 'title') : null,\n      itemName: get(options, 'text'),\n    };\n\n    this.setConfig('legends', legendConfig);\n  }\n\n  protected annotation() {\n    const config = [];\n    if (this.config.coordinate.type === 'cartesian' && this.options.guideLine) {\n      each(this.options.guideLine, (line) => {\n        const guideLine = getComponent('guideLine', {\n          plot: this,\n          cfg: line,\n        });\n        config.push(guideLine);\n      });\n    }\n    this.setConfig('annotations', config);\n  }\n\n  protected abstract addGeometry(): void;\n  protected abstract geometryParser(dim: string, type: string): string;\n\n  protected interaction() {\n    const { interactions = [] } = this.options;\n    each(interactions, (interaction) => {\n      const { type } = interaction;\n      if (type === 'slider' || type === 'scrollbar') {\n        const axisConfig = {\n          label: {\n            autoHide: true,\n            autoRotate: false,\n          },\n        };\n        this.options.xAxis = deepMix({}, this.options.xAxis, axisConfig);\n      }\n      this.setConfig('interaction', interaction);\n    });\n  }\n\n  protected animation() {\n    if (this.options.animation === false) {\n      this.setConfig('animate', false);\n    }\n  }\n\n  protected applyInteractions(): void {\n    let range = BBox.fromBBoxObject(this.layerBBox);\n\n    // 临时去掉 title/description 的占用\n    const titleOrDesc = this.title || this.description;\n    const extraBBox = new BBox(range.minX, range.minY, range.width, titleOrDesc ? titleOrDesc.getBBox().maxY : 0);\n    range = range.cut(extraBBox, DIRECTION.TOP);\n\n    const { interactions = [] } = this.options;\n    if (this.interactions) {\n      this.interactions.forEach((inst) => {\n        inst.destroy();\n      });\n    }\n    this.interactions = [];\n    interactions.forEach((interaction) => {\n      const Ctor: InteractionCtor | undefined = BaseInteraction.getInteraction(interaction.type, this.type);\n      if (Ctor) {\n        const inst: BaseInteraction = new Ctor(\n          { view: this.view },\n          this,\n          Ctor.getInteractionRange(range, interaction.cfg),\n          interaction.cfg\n        );\n        inst.render();\n        this.interactions.push(inst);\n      }\n    });\n  }\n\n  /** 设置G2 config，带有类型推导 */\n  protected setConfig<K extends keyof G2Config>(key: K, config: G2Config[K] | boolean): void {\n    if (key === 'geometry') {\n      this.config.geometries.push(config as G2Config['geometry']);\n      return;\n    }\n    if (key === 'interaction') {\n      this.config.interactions.push(config as any);\n      return;\n    }\n    if (config === false) {\n      this.config[key] = false;\n      return;\n    }\n    assign(this.config[key], config);\n  }\n\n  protected parseEvents(eventParser?): void {\n    const { options } = this;\n    if (options.events) {\n      super.parseEvents(options.events);\n      const eventmap = eventParser ? eventParser.EVENT_MAP : EVENT_MAP;\n      each(options.events, (e, k) => {\n        if (isFunction(e)) {\n          const eventName = eventmap[k] || k;\n          const handler = e;\n          onEvent(this, eventName, handler);\n        }\n      });\n    }\n  }\n\n  protected drawTitle(): void {\n    const props = this.options;\n    const range = this.layerBBox;\n    if (this.title) {\n      this.title.destroy();\n      this.title = null;\n    }\n\n    if (isTextUsable(props.title)) {\n      const width = this.width;\n      const theme = this.config.theme;\n      const title = new TextDescription({\n        leftMargin: range.minX + theme.title.padding[3],\n        rightMargin: range.maxX - theme.title.padding[1],\n        topMargin: range.minY + theme.title.padding[0],\n        text: props.title.text,\n        style: mix(theme.title, props.title.style),\n        wrapperWidth: width - theme.title.padding[3] - theme.title.padding[1],\n        container: this.container.addGroup() as any,\n        theme,\n        index: isTextUsable(props.description) ? 0 : 1,\n        plot: this,\n        alignTo: props.title.alignTo,\n        name: 'title',\n      });\n      this.title = title;\n      this.paddingController.registerPadding(title, 'outer');\n    }\n  }\n\n  protected drawDescription(): void {\n    const props = this.options;\n    const range = this.layerBBox;\n    if (this.description) {\n      this.description.destroy();\n      this.description = null;\n    }\n\n    if (isTextUsable(props.description)) {\n      const width = this.width;\n      const theme = this.config.theme;\n      let topMargin = 0;\n\n      if (this.title) {\n        const titleBBox = this.title.getBBox();\n        topMargin += titleBBox.minY + titleBBox.height;\n        topMargin += theme.description.padding[0];\n      } else {\n        // 无title的情况下使用title的上padding\n        topMargin += range.minY + theme.title.padding[0];\n      }\n\n      const description = new TextDescription({\n        leftMargin: range.minX + theme.description.padding[3],\n        topMargin,\n        rightMargin: range.maxX - theme.title.padding[1],\n        text: props.description.text,\n        style: mix(theme.description, props.description.style),\n        wrapperWidth: width - theme.description.padding[3] - theme.description.padding[1],\n        container: this.container.addGroup() as any,\n        theme,\n        index: 1,\n        plot: this,\n        alignTo: props.description.alignTo,\n        name: 'description',\n      });\n      this.description = description;\n      this.paddingController.registerPadding(description, 'outer');\n    }\n  }\n\n  protected doRenderLabel(geometry: Geometry, label: Label) {\n    each(this.labels, (item) => {\n      item.destroy();\n    });\n    this.labels = [];\n    const config: LabelComponentConfig = {\n      layer: this,\n      container: geometry.labelsContainer,\n      geometry,\n      label,\n    };\n    const Ctor = getLabelComponent(label.type);\n    if (Ctor) {\n      const label = new Ctor(config);\n      label.init();\n      label.render();\n      this.labels.push(label);\n    }\n  }\n\n  /** 抽取destroy和updateConfig共有代码为_destroy方法 */\n  private doDestroy() {\n    this.doDestroyInteractions();\n    this.doDestroyLabels();\n    /** 销毁g2.view实例 */\n    if (!this.view.destroyed) {\n      this.view.destroy();\n    }\n  }\n\n  private doDestroyInteractions() {\n    // 移除注册的 interactions\n    if (this.interactions) {\n      this.interactions.forEach((inst) => {\n        inst.destroy();\n      });\n    }\n    this.interactions = [];\n  }\n\n  private doDestroyLabels() {\n    // 移除各 geometry 的 label\n    each(this.labels, (label: BaseLabel) => {\n      label.destroy();\n    });\n    this.labels = [];\n  }\n\n  protected getViewRange() {\n    // 有 Range 的 Interaction 参与 ViewMargin 计算\n    const { interactions = [] } = this.options;\n    // const layerBBox = this.layerBBox;\n    const layerBBox = this.paddingController.processOuterPadding();\n    interactions.forEach((interaction) => {\n      const Ctor: InteractionCtor | undefined = BaseInteraction.getInteraction(interaction.type, this.type);\n      const range: BBox | undefined = Ctor && Ctor.getInteractionRange(layerBBox, interaction.cfg);\n      let position = '';\n      if (range) {\n        // 先只考虑 Range 靠边的情况\n        if (range.maxY === layerBBox.maxY && range.minY > layerBBox.minY) {\n          // margin[2] += range.height;\n          position = 'bottom';\n        } else if (range.maxX === layerBBox.maxX && range.minX > layerBBox.minX) {\n          // margin[1] += range.width;\n          position = 'right';\n        } else if (range.minX === layerBBox.minX && range.maxX > layerBBox.maxX) {\n          // margin[3] += range.width;\n          position = 'left';\n        } else if (range.minY === layerBBox.minY && range.maxY < layerBBox.maxY) {\n          // margin[0] += range.height;\n          position = 'top';\n        }\n        this.paddingController.registerPadding(\n          {\n            interaction: interaction.type,\n            name: interaction.type,\n            getBBox: () => {\n              return range;\n            },\n            position,\n          },\n          'outer'\n        );\n      }\n    });\n    const viewRange = this.paddingController.processOuterPadding();\n    return viewRange;\n  }\n\n  protected isLimitInPlot() {\n    const yAxisOptions = this.options.yAxis as IValueAxis;\n    if (\n      hasKey(yAxisOptions, 'max') ||\n      hasKey(yAxisOptions, 'min') ||\n      hasKey(yAxisOptions, 'maxLimit') ||\n      hasKey(yAxisOptions, 'minLimit')\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  private viewRangeToRegion(viewRange) {\n    const { x, y, width, height } = this;\n    const start = { x: 0, y: 0 },\n      end = { x: 1, y: 1 };\n    start.x = viewRange.minX / (x + width);\n    start.y = viewRange.minY / (y + height);\n    end.x = viewRange.maxX / (x + width);\n    end.y = viewRange.maxY / (y + height);\n\n    return {\n      start,\n      end,\n    };\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}