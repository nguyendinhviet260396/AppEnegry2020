{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { ext } from '@antv/matrix-util';\nimport { deepMix, isString } from '@antv/util';\nimport { getEndPoint, getLabelRotate, getAngleByPoint, getOverlapArea, near } from './utils';\nimport { getEllipsisText } from '../../../../util/text';\n/** label text和line距离 4px */\n\nexport var CROOK_DISTANCE = 4;\nexport function percent2Number(value) {\n  var percentage = Number(value.endsWith('%') ? value.slice(0, -1) : value);\n  return percentage / 100;\n}\n/**\n * 超出panel边界的标签默认隐藏\n */\n\nfunction checkInPanel(label, panel) {\n  var box = label.getBBox(); //  横向溢出 暂不隐藏\n\n  if (!(panel.y <= box.y && panel.y + panel.height >= box.y + box.height)) {\n    label.get('parent').set('visible', false);\n  }\n}\n\nvar PieBaseLabel =\n/** @class */\nfunction () {\n  function PieBaseLabel(plot, cfg) {\n    this.destroyed = false;\n    this.plot = plot;\n    this.coordinateBBox = this.plot.view.coordinateBBox;\n    var options = deepMix(this.getDefaultOptions(), cfg, {});\n    this.adjustOption(options);\n    this.options = options;\n    this.init();\n  }\n  /** 处理标签遮挡问题 */\n\n\n  PieBaseLabel.prototype.adjustOverlap = function (labels, panel) {\n    // clearOverlap;\n    for (var i = 1; i < labels.length; i++) {\n      var label = labels[i];\n      var overlapArea = 0;\n\n      for (var j = i - 1; j >= 0; j--) {\n        var prev = labels[j]; // fix: start draw point.x is error when textAlign is right\n\n        var prevBox = prev.getBBox();\n        var currBox = label.getBBox(); // if the previous one is invisible, skip\n\n        if (prev.get('parent').get('visible')) {\n          overlapArea = getOverlapArea(prevBox, currBox);\n\n          if (!near(overlapArea, 0)) {\n            label.get('parent').set('visible', false);\n            break;\n          }\n        }\n      }\n    }\n\n    labels.forEach(function (label) {\n      return checkInPanel(label, panel);\n    });\n  }; // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  PieBaseLabel.prototype.adjustItem = function (item) {\n    return;\n  };\n\n  PieBaseLabel.prototype.init = function () {\n    var _this = this;\n\n    this.container = this.getGeometry().labelsContainer;\n    this.plot.view.on('beforerender', function () {\n      _this.clear();\n\n      _this.plot.canvas.draw();\n    });\n  };\n\n  PieBaseLabel.prototype.render = function () {\n    // 先清空 再重新渲染（避免双次绘制）\n    this.clear();\n    this.initArcPoints();\n    this.drawTexts();\n    this.drawLines();\n  };\n\n  PieBaseLabel.prototype.clear = function () {\n    if (this.container) {\n      this.container.clear();\n    }\n  };\n\n  PieBaseLabel.prototype.hide = function () {\n    this.container.set('visible', false);\n    this.plot.canvas.draw();\n  };\n\n  PieBaseLabel.prototype.show = function () {\n    this.container.set('visible', true);\n    this.plot.canvas.draw();\n  };\n\n  PieBaseLabel.prototype.destroy = function () {\n    if (this.container) {\n      this.container.remove();\n    }\n\n    this.destroyed = true;\n  };\n\n  PieBaseLabel.prototype.getFilteredSum = function () {\n    var angleField = this.plot.options.angleField;\n    var filteredData = this.plot.view.filteredData || [];\n    return filteredData.reduce(function (pre, filteredDataItem) {\n      return pre + filteredDataItem[angleField];\n    }, 0);\n  };\n  /** 绘制文本 */\n\n\n  PieBaseLabel.prototype.drawTexts = function () {\n    var _this = this;\n\n    var _a = this.options,\n        style = _a.style,\n        formatter = _a.formatter,\n        autoRotate = _a.autoRotate,\n        offsetX = _a.offsetX,\n        offsetY = _a.offsetY,\n        adjustPosition = _a.adjustPosition,\n        allowOverlap = _a.allowOverlap;\n    var shapeInfos = this.getItems();\n    var shapes = [];\n    shapeInfos.map(function (shapeInfo, idx) {\n      var attrs = deepMix({}, shapeInfo, style);\n\n      var filteredSum = _this.getFilteredSum();\n\n      var angleField = _this.plot.options.angleField;\n      var percent = shapeInfo.origin[angleField] / filteredSum;\n      var content = formatter ? formatter(shapeInfo.name, {\n        _origin: shapeInfo.origin,\n        percent: percent\n      }, idx) : shapeInfo.name;\n\n      var itemGroup = _this.container.addGroup({\n        name: 'itemGroup',\n        index: idx,\n        capture: false\n      });\n\n      var textShape = itemGroup.addShape('text', {\n        attrs: deepMix({}, attrs, {\n          x: shapeInfo.x + offsetX,\n          y: shapeInfo.y + offsetY,\n          text: content\n        })\n      });\n      textShape.set('id', \"text-\" + shapeInfo.name + \"-\" + idx);\n      shapes.push(textShape);\n    });\n    shapes.forEach(function (shape) {\n      var panelBox = _this.coordinateBBox;\n\n      _this.adjustText(shape, panelBox);\n    });\n\n    if (adjustPosition) {\n      this.layout(shapes, shapeInfos, this.coordinateBBox);\n    }\n\n    if (!allowOverlap) {\n      this.adjustOverlap(shapes, this.coordinateBBox);\n    }\n\n    shapes.forEach(function (label, idx) {\n      if (autoRotate) {\n        _this.rotateLabel(label, getLabelRotate(shapeInfos[idx].angle));\n      }\n    });\n  };\n\n  PieBaseLabel.prototype.adjustText = function (label, panelBox) {\n    var box = label.getBBox();\n    var width = box.width;\n    var deltaWidth = 0;\n\n    if (box.maxX > panelBox.maxX) {\n      width = panelBox.maxX - box.minX;\n    } else if (box.minX < panelBox.minX) {\n      width = box.maxX - panelBox.minX;\n    }\n\n    if (label.attr('textAlign') === 'left') {\n      label.attr('x', Math.max(box.x - deltaWidth, 0));\n    } else if (label.attr('textAlign') === 'right') {\n      label.attr('x', Math.max(box.maxX - deltaWidth, 0));\n    }\n\n    if (width !== box.width) {\n      var font_1 = {};\n      ['fontSize', 'fontFamily', 'fontWeight'].forEach(function (k) {\n        font_1[k] = label.attr(k);\n      });\n      var ellipsisTexts = label.attr('text').split('\\n').map(function (t) {\n        return getEllipsisText(t, width, font_1);\n      });\n      label.attr('text', ellipsisTexts.join('\\n'));\n    }\n  };\n  /** 绘制拉线 */\n\n\n  PieBaseLabel.prototype.drawLines = function () {\n    var _this = this;\n\n    if (this.options.line.visible) {\n      var itemGroups = this.container.get('children');\n      var center_1 = this.getCoordinate().center;\n      itemGroups.forEach(function (labelGroup, idx) {\n        var label = labelGroup.get('children')[0];\n        var anchor = _this.arcPoints[idx];\n        var inLeft = anchor.x < center_1.x; // 拉线 和 label 之间的距离\n\n        var distance = _this.options.offset > 4 ? 4 : 0;\n\n        var path = _this.getLinePath(label, anchor, distance);\n\n        var style = _this.options.line;\n        labelGroup.addShape('path', {\n          attrs: __assign({\n            path: path,\n            stroke: anchor.color\n          }, style)\n        }); // 由于拉线的存在 label 需要进行偏移\n\n        label.attr('x', label.attr('x') + (inLeft ? -distance : distance));\n      });\n    }\n  };\n  /** 获取label leader-line, 默认 not smooth */\n\n\n  PieBaseLabel.prototype.getLinePath = function (label, anchor, distance) {\n    var smooth = this.options.line ? this.options.line.smooth : false;\n    var angle = anchor.angle;\n\n    var _a = this.getCoordinate(),\n        center = _a.center,\n        radius = _a.radius;\n\n    var breakAt = getEndPoint(center, angle, radius + distance);\n\n    if (distance < 4) {\n      breakAt = anchor;\n    }\n\n    var inLeft = anchor.x < center.x;\n    var box = label.getBBox();\n    var labelPosition = {\n      x: inLeft ? box.maxX : box.minX,\n      y: box.y + box.height / 2\n    };\n    var smoothPath = ['C', // 1st control point (of the curve)\n    labelPosition.x + // 4 gives the connector a little horizontal bend\n    (inLeft ? 1 : -1) * (distance < 4 ? distance / 2 : 4), labelPosition.y, 2 * breakAt.x - anchor.x, 2 * breakAt.y - anchor.y, breakAt.x, breakAt.y];\n    var straightPath = ['L',\n    /** pointy break */\n    breakAt.x, breakAt.y];\n    var linePath = smooth ? smoothPath : straightPath;\n    var path = ['M', labelPosition.x, labelPosition.y].concat(linePath).concat('L', anchor.x, anchor.y);\n    return path.join(',');\n  };\n\n  PieBaseLabel.prototype.getGeometry = function () {\n    return this.plot.view.geometries[0];\n  };\n\n  PieBaseLabel.prototype.getCoordinate = function () {\n    var coordinate = this.getGeometry().coordinate;\n    var center = coordinate.getCenter(); // @ts-ignore\n\n    var radius = coordinate.getRadius();\n    var startAngle = coordinate.startAngle;\n    return {\n      center: center,\n      radius: radius,\n      startAngle: startAngle\n    };\n  };\n\n  PieBaseLabel.prototype.adjustOption = function (options) {\n    var offset = options.offset;\n    var radius = this.getCoordinate().radius;\n\n    if (isString(offset)) {\n      offset = radius * percent2Number(offset);\n    }\n\n    options.offset = offset;\n  };\n\n  PieBaseLabel.prototype.rotateLabel = function (label, angle) {\n    var x = label.attr('x');\n    var y = label.attr('y');\n    var matrix = ext.transform(label.getMatrix(), [['t', -x, -y], ['r', angle], ['t', x, y]]);\n    label.setMatrix(matrix);\n  };\n\n  PieBaseLabel.prototype.getItems = function () {\n    var _this = this;\n\n    var offset = this.options.offset;\n\n    var _a = this.getCoordinate(),\n        center = _a.center,\n        radius = _a.radius;\n\n    var items = this.arcPoints.map(function (anchor) {\n      var point = getEndPoint(center, anchor.angle, radius + offset);\n\n      var item = __assign(__assign({}, anchor), point);\n\n      _this.adjustItem(item);\n\n      return item;\n    });\n    return items;\n  }; // 初始化圆弧上锚点\n\n\n  PieBaseLabel.prototype.initArcPoints = function () {\n    var _this = this;\n\n    var angleField = this.plot.options.angleField;\n    var elements = this.getGeometry().elements;\n    var coord = this.getCoordinate();\n    var center = coord.center,\n        radius = coord.radius;\n    var startAngle = this.getCoordinate().startAngle; // 位置信息使用 positionScale\n\n    var positionScales = this.getGeometry().attributes.position.scales;\n    var scale = positionScales[1];\n    var scaleField = scale.field;\n    var anchors = elements.map(function (ele) {\n      var origin = ele.shape.get('origin');\n      var color = origin.color;\n      var originData = origin.data[0] || origin.data;\n      var endAngle = startAngle + Math.PI * 2 * scale.scale(originData[scaleField]);\n      var angle = (startAngle + endAngle) / 2;\n      var point = getEndPoint(center, angle, radius);\n      startAngle = endAngle; // 标签名 使用 angleField\n\n      var name = scale.getText(originData[angleField]);\n      var textAlign = point.x > center.x ? 'left' : 'right';\n      return {\n        x: point.x,\n        y: point.y,\n        color: color,\n        name: name,\n        origin: originData,\n        // 实际的角度\n        angle: getAngleByPoint(_this.getGeometry().coordinate, point),\n        textAlign: textAlign\n      };\n    });\n    this.arcPoints = anchors;\n  };\n\n  return PieBaseLabel;\n}();\n\nexport default PieBaseLabel;","map":{"version":3,"sources":["../../../../../src/plots/pie/component/label/base-label.ts"],"names":[],"mappings":";AACA,SAAS,GAAT,QAAoB,mBAApB;AACA,SAAS,OAAT,EAAkB,QAAlB,QAAkC,YAAlC;AACA,SAAS,WAAT,EAAsB,cAAtB,EAAsC,eAAtC,EAAuD,cAAvD,EAAuE,IAAvE,QAAmF,SAAnF;AAGA,SAAS,eAAT,QAAgC,uBAAhC;AAEA;;AACA,OAAO,IAAM,cAAc,GAAG,CAAvB;AAEP,OAAM,SAAU,cAAV,CAAyB,KAAzB,EAAsC;AAC1C,MAAM,UAAU,GAAG,MAAM,CAAC,KAAK,CAAC,QAAN,CAAe,GAAf,IAAsB,KAAK,CAAC,KAAN,CAAY,CAAZ,EAAe,CAAC,CAAhB,CAAtB,GAA2C,KAA5C,CAAzB;AACA,SAAO,UAAU,GAAG,GAApB;AACD;AAED;;;;AAGA,SAAS,YAAT,CAAsB,KAAtB,EAAqC,KAArC,EAAgD;AAC9C,MAAM,GAAG,GAAG,KAAK,CAAC,OAAN,EAAZ,CAD8C,CAE9C;;AACA,MAAI,EAAE,KAAK,CAAC,CAAN,IAAW,GAAG,CAAC,CAAf,IAAoB,KAAK,CAAC,CAAN,GAAU,KAAK,CAAC,MAAhB,IAA0B,GAAG,CAAC,CAAJ,GAAQ,GAAG,CAAC,MAA5D,CAAJ,EAAyE;AACvE,IAAA,KAAK,CAAC,GAAN,CAAU,QAAV,EAAoB,GAApB,CAAwB,SAAxB,EAAmC,KAAnC;AACD;AACF;;AAmCD,IAAA,YAAA;AAAA;AAAA,YAAA;AASE,WAAA,YAAA,CAAY,IAAZ,EAA4B,GAA5B,EAA+C;AAPxC,SAAA,SAAA,GAAqB,KAArB;AAQL,SAAK,IAAL,GAAY,IAAZ;AACA,SAAK,cAAL,GAAsB,KAAK,IAAL,CAAU,IAAV,CAAe,cAArC;AACA,QAAM,OAAO,GAAG,OAAO,CAAC,KAAK,iBAAL,EAAD,EAA2B,GAA3B,EAAgC,EAAhC,CAAvB;AACA,SAAK,YAAL,CAAkB,OAAlB;AACA,SAAK,OAAL,GAAe,OAAf;AACA,SAAK,IAAL;AACD;AAID;;;AACU,EAAA,YAAA,CAAA,SAAA,CAAA,aAAA,GAAV,UAAwB,MAAxB,EAA0C,KAA1C,EAAqD;AACnD;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAAM,CAAC,MAA3B,EAAmC,CAAC,EAApC,EAAwC;AACtC,UAAM,KAAK,GAAG,MAAM,CAAC,CAAD,CAApB;AACA,UAAI,WAAW,GAAG,CAAlB;;AACA,WAAK,IAAI,CAAC,GAAG,CAAC,GAAG,CAAjB,EAAoB,CAAC,IAAI,CAAzB,EAA4B,CAAC,EAA7B,EAAiC;AAC/B,YAAM,IAAI,GAAG,MAAM,CAAC,CAAD,CAAnB,CAD+B,CAE/B;;AACA,YAAM,OAAO,GAAG,IAAI,CAAC,OAAL,EAAhB;AACA,YAAM,OAAO,GAAG,KAAK,CAAC,OAAN,EAAhB,CAJ+B,CAK/B;;AACA,YAAI,IAAI,CAAC,GAAL,CAAS,QAAT,EAAmB,GAAnB,CAAuB,SAAvB,CAAJ,EAAuC;AACrC,UAAA,WAAW,GAAG,cAAc,CAAC,OAAD,EAAU,OAAV,CAA5B;;AACA,cAAI,CAAC,IAAI,CAAC,WAAD,EAAc,CAAd,CAAT,EAA2B;AACzB,YAAA,KAAK,CAAC,GAAN,CAAU,QAAV,EAAoB,GAApB,CAAwB,SAAxB,EAAmC,KAAnC;AACA;AACD;AACF;AACF;AACF;;AACD,IAAA,MAAM,CAAC,OAAP,CAAe,UAAC,KAAD,EAAM;AAAK,aAAA,YAAY,CAAC,KAAD,EAAZ,KAAY,CAAZ;AAA0B,KAApD;AACD,GArBS,CArBZ,CA4CE;;;AACU,EAAA,YAAA,CAAA,SAAA,CAAA,UAAA,GAAV,UAAqB,IAArB,EAAoC;AAClC;AACD,GAFS;;AAIA,EAAA,YAAA,CAAA,SAAA,CAAA,IAAA,GAAV,YAAA;AAAA,QAAA,KAAA,GAAA,IAAA;;AACE,SAAK,SAAL,GAAiB,KAAK,WAAL,GAAmB,eAApC;AACA,SAAK,IAAL,CAAU,IAAV,CAAe,EAAf,CAAkB,cAAlB,EAAkC,YAAA;AAChC,MAAA,KAAI,CAAC,KAAL;;AACA,MAAA,KAAI,CAAC,IAAL,CAAU,MAAV,CAAiB,IAAjB;AACD,KAHD;AAID,GANS;;AAQH,EAAA,YAAA,CAAA,SAAA,CAAA,MAAA,GAAP,YAAA;AACE;AACA,SAAK,KAAL;AACA,SAAK,aAAL;AACA,SAAK,SAAL;AACA,SAAK,SAAL;AACD,GANM;;AAQA,EAAA,YAAA,CAAA,SAAA,CAAA,KAAA,GAAP,YAAA;AACE,QAAI,KAAK,SAAT,EAAoB;AAClB,WAAK,SAAL,CAAe,KAAf;AACD;AACF,GAJM;;AAMA,EAAA,YAAA,CAAA,SAAA,CAAA,IAAA,GAAP,YAAA;AACE,SAAK,SAAL,CAAe,GAAf,CAAmB,SAAnB,EAA8B,KAA9B;AACA,SAAK,IAAL,CAAU,MAAV,CAAiB,IAAjB;AACD,GAHM;;AAKA,EAAA,YAAA,CAAA,SAAA,CAAA,IAAA,GAAP,YAAA;AACE,SAAK,SAAL,CAAe,GAAf,CAAmB,SAAnB,EAA8B,IAA9B;AACA,SAAK,IAAL,CAAU,MAAV,CAAiB,IAAjB;AACD,GAHM;;AAKA,EAAA,YAAA,CAAA,SAAA,CAAA,OAAA,GAAP,YAAA;AACE,QAAI,KAAK,SAAT,EAAoB;AAClB,WAAK,SAAL,CAAe,MAAf;AACD;;AACD,SAAK,SAAL,GAAiB,IAAjB;AACD,GALM;;AAOC,EAAA,YAAA,CAAA,SAAA,CAAA,cAAA,GAAR,YAAA;AACU,QAAA,UAAU,GAAK,KAAK,IAAL,CAAU,OAAV,CAAL,UAAV;AACR,QAAM,YAAY,GAAI,KAAK,IAAL,CAAU,IAAV,CAAuB,YAAvB,IAAuC,EAA7D;AACA,WAAO,YAAY,CAAC,MAAb,CAAoB,UAAC,GAAD,EAAM,gBAAN,EAAsB;AAC/C,aAAO,GAAG,GAAG,gBAAgB,CAAC,UAAD,CAA7B;AACD,KAFM,EAEJ,CAFI,CAAP;AAGD,GANO;AAQR;;;AACU,EAAA,YAAA,CAAA,SAAA,CAAA,SAAA,GAAV,YAAA;AAAA,QAAA,KAAA,GAAA,IAAA;;AACQ,QAAA,EAAA,GAAmF,KAAK,OAAxF;AAAA,QAAE,KAAK,GAAA,EAAA,CAAA,KAAP;AAAA,QAAS,SAAS,GAAA,EAAA,CAAA,SAAlB;AAAA,QAAoB,UAAU,GAAA,EAAA,CAAA,UAA9B;AAAA,QAAgC,OAAO,GAAA,EAAA,CAAA,OAAvC;AAAA,QAAyC,OAAO,GAAA,EAAA,CAAA,OAAhD;AAAA,QAAkD,cAAc,GAAA,EAAA,CAAA,cAAhE;AAAA,QAAkE,YAAY,GAAA,EAAA,CAAA,YAA9E;AACN,QAAM,UAAU,GAAG,KAAK,QAAL,EAAnB;AACA,QAAM,MAAM,GAAa,EAAzB;AACA,IAAA,UAAU,CAAC,GAAX,CAAe,UAAC,SAAD,EAAY,GAAZ,EAAe;AAC5B,UAAM,KAAK,GAAG,OAAO,CAAC,EAAD,EAAK,SAAL,EAAgB,KAAhB,CAArB;;AACA,UAAM,WAAW,GAAG,KAAI,CAAC,cAAL,EAApB;;AACQ,UAAA,UAAU,GAAK,KAAI,CAAC,IAAL,CAAU,OAAV,CAAL,UAAV;AACR,UAAM,OAAO,GAAG,SAAS,CAAC,MAAV,CAAiB,UAAjB,IAA+B,WAA/C;AACA,UAAM,OAAO,GAAG,SAAS,GACrB,SAAS,CACP,SAAS,CAAC,IADH,EAEP;AACE,QAAA,OAAO,EAAE,SAAS,CAAC,MADrB;AAEE,QAAA,OAAO,EAAA;AAFT,OAFO,EAMP,GANO,CADY,GASrB,SAAS,CAAC,IATd;;AAUA,UAAM,SAAS,GAAG,KAAI,CAAC,SAAL,CAAe,QAAf,CAAwB;AACxC,QAAA,IAAI,EAAE,WADkC;AAExC,QAAA,KAAK,EAAE,GAFiC;AAGxC,QAAA,OAAO,EAAE;AAH+B,OAAxB,CAAlB;;AAKA,UAAM,SAAS,GAAG,SAAS,CAAC,QAAV,CAAmB,MAAnB,EAA2B;AAC3C,QAAA,KAAK,EAAE,OAAO,CAAC,EAAD,EAAK,KAAL,EAAY;AACxB,UAAA,CAAC,EAAE,SAAS,CAAC,CAAV,GAAc,OADO;AAExB,UAAA,CAAC,EAAE,SAAS,CAAC,CAAV,GAAc,OAFO;AAGxB,UAAA,IAAI,EAAE;AAHkB,SAAZ;AAD6B,OAA3B,CAAlB;AAOA,MAAA,SAAS,CAAC,GAAV,CAAc,IAAd,EAAoB,UAAQ,SAAS,CAAC,IAAlB,GAAsB,GAAtB,GAA0B,GAA9C;AACA,MAAA,MAAM,CAAC,IAAP,CAAY,SAAZ;AACD,KA7BD;AA8BA,IAAA,MAAM,CAAC,OAAP,CAAe,UAAC,KAAD,EAAM;AACnB,UAAM,QAAQ,GAAG,KAAI,CAAC,cAAtB;;AACA,MAAA,KAAI,CAAC,UAAL,CAAgB,KAAhB,EAAuB,QAAvB;AACD,KAHD;;AAIA,QAAI,cAAJ,EAAoB;AAClB,WAAK,MAAL,CAAY,MAAZ,EAAoB,UAApB,EAAgC,KAAK,cAArC;AACD;;AACD,QAAI,CAAC,YAAL,EAAmB;AACjB,WAAK,aAAL,CAAmB,MAAnB,EAA2B,KAAK,cAAhC;AACD;;AACD,IAAA,MAAM,CAAC,OAAP,CAAe,UAAC,KAAD,EAAQ,GAAR,EAAW;AACxB,UAAI,UAAJ,EAAgB;AACd,QAAA,KAAI,CAAC,WAAL,CAAiB,KAAjB,EAAwB,cAAc,CAAC,UAAU,CAAC,GAAD,CAAV,CAAgB,KAAjB,CAAtC;AACD;AACF,KAJD;AAKD,GAjDS;;AAmDF,EAAA,YAAA,CAAA,SAAA,CAAA,UAAA,GAAR,UAAmB,KAAnB,EAAkC,QAAlC,EAAgD;AAC9C,QAAM,GAAG,GAAG,KAAK,CAAC,OAAN,EAAZ;AACA,QAAI,KAAK,GAAG,GAAG,CAAC,KAAhB;AACA,QAAM,UAAU,GAAG,CAAnB;;AACA,QAAI,GAAG,CAAC,IAAJ,GAAW,QAAQ,CAAC,IAAxB,EAA8B;AAC5B,MAAA,KAAK,GAAG,QAAQ,CAAC,IAAT,GAAgB,GAAG,CAAC,IAA5B;AACD,KAFD,MAEO,IAAI,GAAG,CAAC,IAAJ,GAAW,QAAQ,CAAC,IAAxB,EAA8B;AACnC,MAAA,KAAK,GAAG,GAAG,CAAC,IAAJ,GAAW,QAAQ,CAAC,IAA5B;AACD;;AACD,QAAI,KAAK,CAAC,IAAN,CAAW,WAAX,MAA4B,MAAhC,EAAwC;AACtC,MAAA,KAAK,CAAC,IAAN,CAAW,GAAX,EAAgB,IAAI,CAAC,GAAL,CAAS,GAAG,CAAC,CAAJ,GAAQ,UAAjB,EAA6B,CAA7B,CAAhB;AACD,KAFD,MAEO,IAAI,KAAK,CAAC,IAAN,CAAW,WAAX,MAA4B,OAAhC,EAAyC;AAC9C,MAAA,KAAK,CAAC,IAAN,CAAW,GAAX,EAAgB,IAAI,CAAC,GAAL,CAAS,GAAG,CAAC,IAAJ,GAAW,UAApB,EAAgC,CAAhC,CAAhB;AACD;;AACD,QAAI,KAAK,KAAK,GAAG,CAAC,KAAlB,EAAyB;AACvB,UAAM,MAAI,GAAG,EAAb;AACA,OAAC,UAAD,EAAa,YAAb,EAA2B,YAA3B,EAAyC,OAAzC,CAAiD,UAAC,CAAD,EAAE;AACjD,QAAA,MAAI,CAAC,CAAD,CAAJ,GAAU,KAAK,CAAC,IAAN,CAAW,CAAX,CAAV;AACD,OAFD;AAGA,UAAM,aAAa,GAAG,KAAK,CACxB,IADmB,CACd,MADc,EAEnB,KAFmB,CAEb,IAFa,EAGnB,GAHmB,CAGf,UAAC,CAAD,EAAE;AAAK,eAAA,eAAe,CAAC,CAAD,EAAI,KAAJ,EAAf,MAAe,CAAf;AAA+B,OAHvB,CAAtB;AAIA,MAAA,KAAK,CAAC,IAAN,CAAW,MAAX,EAAmB,aAAa,CAAC,IAAd,CAAmB,IAAnB,CAAnB;AACD;AACF,GAzBO;AA2BR;;;AACU,EAAA,YAAA,CAAA,SAAA,CAAA,SAAA,GAAV,YAAA;AAAA,QAAA,KAAA,GAAA,IAAA;;AACE,QAAI,KAAK,OAAL,CAAa,IAAb,CAAkB,OAAtB,EAA+B;AAC7B,UAAM,UAAU,GAAG,KAAK,SAAL,CAAe,GAAf,CAAmB,UAAnB,CAAnB;AACQ,UAAA,QAAM,GAAK,KAAK,aAAL,GAAL,MAAN;AACR,MAAA,UAAU,CAAC,OAAX,CAAmB,UAAC,UAAD,EAAa,GAAb,EAAgB;AACjC,YAAM,KAAK,GAAW,UAAU,CAAC,GAAX,CAAe,UAAf,EAA2B,CAA3B,CAAtB;AACA,YAAM,MAAM,GAAG,KAAI,CAAC,SAAL,CAAe,GAAf,CAAf;AACA,YAAM,MAAM,GAAG,MAAM,CAAC,CAAP,GAAW,QAAM,CAAC,CAAjC,CAHiC,CAIjC;;AACA,YAAM,QAAQ,GAAG,KAAI,CAAC,OAAL,CAAa,MAAb,GAAsB,CAAtB,GAA0B,CAA1B,GAA8B,CAA/C;;AACA,YAAM,IAAI,GAAG,KAAI,CAAC,WAAL,CAAiB,KAAjB,EAAwB,MAAxB,EAAgC,QAAhC,CAAb;;AACA,YAAM,KAAK,GAAG,KAAI,CAAC,OAAL,CAAa,IAA3B;AACA,QAAA,UAAU,CAAC,QAAX,CAAoB,MAApB,EAA4B;AAC1B,UAAA,KAAK,EAAA,QAAA,CAAA;AACH,YAAA,IAAI,EAAA,IADD;AAEH,YAAA,MAAM,EAAE,MAAM,CAAC;AAFZ,WAAA,EAGA,KAHA;AADqB,SAA5B,EARiC,CAejC;;AACA,QAAA,KAAK,CAAC,IAAN,CAAW,GAAX,EAAgB,KAAK,CAAC,IAAN,CAAW,GAAX,KAAmB,MAAM,GAAG,CAAC,QAAJ,GAAe,QAAxC,CAAhB;AACD,OAjBD;AAkBD;AACF,GAvBS;AAyBV;;;AACQ,EAAA,YAAA,CAAA,SAAA,CAAA,WAAA,GAAR,UAAoB,KAApB,EAAmC,MAAnC,EAAsD,QAAtD,EAAsE;AACpE,QAAM,MAAM,GAAG,KAAK,OAAL,CAAa,IAAb,GAAoB,KAAK,OAAL,CAAa,IAAb,CAAkB,MAAtC,GAA+C,KAA9D;AACA,QAAM,KAAK,GAAG,MAAM,CAAC,KAArB;;AACM,QAAA,EAAA,GAAqB,KAAK,aAAL,EAArB;AAAA,QAAE,MAAM,GAAA,EAAA,CAAA,MAAR;AAAA,QAAU,MAAM,GAAA,EAAA,CAAA,MAAhB;;AACN,QAAI,OAAO,GAAG,WAAW,CAAC,MAAD,EAAS,KAAT,EAAgB,MAAM,GAAG,QAAzB,CAAzB;;AACA,QAAI,QAAQ,GAAG,CAAf,EAAkB;AAChB,MAAA,OAAO,GAAG,MAAV;AACD;;AACD,QAAM,MAAM,GAAG,MAAM,CAAC,CAAP,GAAW,MAAM,CAAC,CAAjC;AACA,QAAM,GAAG,GAAG,KAAK,CAAC,OAAN,EAAZ;AACA,QAAM,aAAa,GAAG;AAAE,MAAA,CAAC,EAAE,MAAM,GAAG,GAAG,CAAC,IAAP,GAAc,GAAG,CAAC,IAA7B;AAAmC,MAAA,CAAC,EAAE,GAAG,CAAC,CAAJ,GAAQ,GAAG,CAAC,MAAJ,GAAa;AAA3D,KAAtB;AACA,QAAM,UAAU,GAAG,CACjB,GADiB,EAEjB;AACA,IAAA,aAAa,CAAC,CAAd,GACE;AACA,KAAC,MAAM,GAAG,CAAH,GAAO,CAAC,CAAf,KAAqB,QAAQ,GAAG,CAAX,GAAe,QAAQ,GAAG,CAA1B,GAA8B,CAAnD,CALe,EAMjB,aAAa,CAAC,CANG,EAOjB,IAAI,OAAO,CAAC,CAAZ,GAAgB,MAAM,CAAC,CAPN,EAQjB,IAAI,OAAO,CAAC,CAAZ,GAAgB,MAAM,CAAC,CARN,EASjB,OAAO,CAAC,CATS,EAUjB,OAAO,CAAC,CAVS,CAAnB;AAYA,QAAM,YAAY,GAAG,CAAC,GAAD;AAAM;AAAoB,IAAA,OAAO,CAAC,CAAlC,EAAqC,OAAO,CAAC,CAA7C,CAArB;AACA,QAAM,QAAQ,GAAG,MAAM,GAAG,UAAH,GAAgB,YAAvC;AACA,QAAM,IAAI,GAAG,CAAC,GAAD,EAAM,aAAa,CAAC,CAApB,EAAuB,aAAa,CAAC,CAArC,EAAwC,MAAxC,CAA+C,QAA/C,EAAyD,MAAzD,CAAgE,GAAhE,EAAqE,MAAM,CAAC,CAA5E,EAA+E,MAAM,CAAC,CAAtF,CAAb;AAEA,WAAO,IAAI,CAAC,IAAL,CAAU,GAAV,CAAP;AACD,GA5BO;;AA8BE,EAAA,YAAA,CAAA,SAAA,CAAA,WAAA,GAAV,YAAA;AACE,WAAO,KAAK,IAAL,CAAU,IAAV,CAAe,UAAf,CAA0B,CAA1B,CAAP;AACD,GAFS;;AAIA,EAAA,YAAA,CAAA,SAAA,CAAA,aAAA,GAAV,YAAA;AACE,QAAM,UAAU,GAAG,KAAK,WAAL,GAAmB,UAAtC;AACA,QAAM,MAAM,GAAG,UAAU,CAAC,SAAX,EAAf,CAFF,CAGE;;AACA,QAAM,MAAM,GAAG,UAAU,CAAC,SAAX,EAAf;AACA,QAAM,UAAU,GAAG,UAAU,CAAC,UAA9B;AACA,WAAO;AAAE,MAAA,MAAM,EAAA,MAAR;AAAU,MAAA,MAAM,EAAA,MAAhB;AAAkB,MAAA,UAAU,EAAA;AAA5B,KAAP;AACD,GAPS;;AASA,EAAA,YAAA,CAAA,SAAA,CAAA,YAAA,GAAV,UAAuB,OAAvB,EAA8C;AAC5C,QAAI,MAAM,GAAG,OAAO,CAAC,MAArB;AACQ,QAAA,MAAM,GAAK,KAAK,aAAL,GAAL,MAAN;;AACR,QAAI,QAAQ,CAAC,MAAD,CAAZ,EAAsB;AACpB,MAAA,MAAM,GAAG,MAAM,GAAG,cAAc,CAAC,MAAD,CAAhC;AACD;;AACD,IAAA,OAAO,CAAC,MAAR,GAAiB,MAAjB;AACD,GAPS;;AASF,EAAA,YAAA,CAAA,SAAA,CAAA,WAAA,GAAR,UAAoB,KAApB,EAAmC,KAAnC,EAAwC;AACtC,QAAM,CAAC,GAAG,KAAK,CAAC,IAAN,CAAW,GAAX,CAAV;AACA,QAAM,CAAC,GAAG,KAAK,CAAC,IAAN,CAAW,GAAX,CAAV;AACA,QAAM,MAAM,GAAG,GAAG,CAAC,SAAJ,CAAc,KAAK,CAAC,SAAN,EAAd,EAAiC,CAC9C,CAAC,GAAD,EAAM,CAAC,CAAP,EAAU,CAAC,CAAX,CAD8C,EAE9C,CAAC,GAAD,EAAM,KAAN,CAF8C,EAG9C,CAAC,GAAD,EAAM,CAAN,EAAS,CAAT,CAH8C,CAAjC,CAAf;AAKA,IAAA,KAAK,CAAC,SAAN,CAAgB,MAAhB;AACD,GATO;;AAWA,EAAA,YAAA,CAAA,SAAA,CAAA,QAAA,GAAR,YAAA;AAAA,QAAA,KAAA,GAAA,IAAA;;AACU,QAAA,MAAM,GAAK,KAAK,OAAL,CAAL,MAAN;;AACF,QAAA,EAAA,GAAqB,KAAK,aAAL,EAArB;AAAA,QAAE,MAAM,GAAA,EAAA,CAAA,MAAR;AAAA,QAAU,MAAM,GAAA,EAAA,CAAA,MAAhB;;AACN,QAAM,KAAK,GAAG,KAAK,SAAL,CAAe,GAAf,CAAmB,UAAC,MAAD,EAAO;AACtC,UAAM,KAAK,GAAG,WAAW,CAAC,MAAD,EAAS,MAAM,CAAC,KAAhB,EAAuB,MAAM,GAAG,MAAhC,CAAzB;;AACA,UAAM,IAAI,GAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EAAQ,MAAR,CAAA,EAAmB,KAAnB,CAAV;;AACA,MAAA,KAAI,CAAC,UAAL,CAAgB,IAAhB;;AACA,aAAO,IAAP;AACD,KALa,CAAd;AAMA,WAAO,KAAP;AACD,GAVO,CAzQV,CAqRE;;;AACQ,EAAA,YAAA,CAAA,SAAA,CAAA,aAAA,GAAR,YAAA;AAAA,QAAA,KAAA,GAAA,IAAA;;AACU,QAAA,UAAU,GAAK,KAAK,IAAL,CAAU,OAAV,CAAL,UAAV;AACR,QAAM,QAAQ,GAAG,KAAK,WAAL,GAAmB,QAApC;AACA,QAAM,KAAK,GAAG,KAAK,aAAL,EAAd;AACQ,QAAA,MAAM,GAAa,KAAK,CAAlB,MAAN;AAAA,QAAQ,MAAM,GAAK,KAAK,CAAV,MAAd;AACF,QAAA,UAAU,GAAK,KAAK,aAAL,GAAL,UAAV,CALR,CAME;;AACA,QAAM,cAAc,GAAG,KAAK,WAAL,GAAmB,UAAnB,CAA8B,QAA9B,CAAuC,MAA9D;AACA,QAAM,KAAK,GAAG,cAAc,CAAC,CAAD,CAA5B;AACA,QAAM,UAAU,GAAG,KAAK,CAAC,KAAzB;AACA,QAAM,OAAO,GAAG,QAAQ,CAAC,GAAT,CAAa,UAAC,GAAD,EAAI;AAC/B,UAAM,MAAM,GAAG,GAAG,CAAC,KAAJ,CAAU,GAAV,CAAc,QAAd,CAAf;AACA,UAAM,KAAK,GAAG,MAAM,CAAC,KAArB;AACA,UAAM,UAAU,GAAG,MAAM,CAAC,IAAP,CAAY,CAAZ,KAAkB,MAAM,CAAC,IAA5C;AACA,UAAM,QAAQ,GAAG,UAAU,GAAG,IAAI,CAAC,EAAL,GAAU,CAAV,GAAc,KAAK,CAAC,KAAN,CAAY,UAAU,CAAC,UAAD,CAAtB,CAA5C;AACA,UAAM,KAAK,GAAG,CAAC,UAAU,GAAG,QAAd,IAA0B,CAAxC;AACA,UAAM,KAAK,GAAG,WAAW,CAAC,MAAD,EAAS,KAAT,EAAgB,MAAhB,CAAzB;AACA,MAAA,UAAU,GAAG,QAAb,CAP+B,CAQ/B;;AACA,UAAM,IAAI,GAAG,KAAK,CAAC,OAAN,CAAc,UAAU,CAAC,UAAD,CAAxB,CAAb;AACA,UAAM,SAAS,GAAG,KAAK,CAAC,CAAN,GAAU,MAAM,CAAC,CAAjB,GAAqB,MAArB,GAA8B,OAAhD;AAEA,aAAO;AACL,QAAA,CAAC,EAAE,KAAK,CAAC,CADJ;AAEL,QAAA,CAAC,EAAE,KAAK,CAAC,CAFJ;AAGL,QAAA,KAAK,EAAA,KAHA;AAIL,QAAA,IAAI,EAAA,IAJC;AAKL,QAAA,MAAM,EAAE,UALH;AAML;AACA,QAAA,KAAK,EAAE,eAAe,CAAC,KAAI,CAAC,WAAL,GAAmB,UAApB,EAAgC,KAAhC,CAPjB;AAQL,QAAA,SAAS,EAAA;AARJ,OAAP;AAUD,KAtBe,CAAhB;AAuBA,SAAK,SAAL,GAAiB,OAAjB;AACD,GAlCO;;AAmCV,SAAA,YAAA;AAAC,CAzTD,EAAA","sourcesContent":["import { IGroup, IShape, BBox } from '../../../../dependents';\nimport { ext } from '@antv/matrix-util';\nimport { deepMix, isString } from '@antv/util';\nimport { getEndPoint, getLabelRotate, getAngleByPoint, getOverlapArea, near } from './utils';\nimport { Label, TextStyle } from '../../../../interface/config';\nimport PieLayer from '../../layer';\nimport { getEllipsisText } from '../../../../util/text';\n\n/** label text和line距离 4px */\nexport const CROOK_DISTANCE = 4;\n\nexport function percent2Number(value: string): number {\n  const percentage = Number(value.endsWith('%') ? value.slice(0, -1) : value);\n  return percentage / 100;\n}\n\n/**\n * 超出panel边界的标签默认隐藏\n */\nfunction checkInPanel(label: IShape, panel: BBox): void {\n  const box = label.getBBox();\n  //  横向溢出 暂不隐藏\n  if (!(panel.y <= box.y && panel.y + panel.height >= box.y + box.height)) {\n    label.get('parent').set('visible', false);\n  }\n}\n\nexport interface LabelItem {\n  x: number;\n  y: number;\n  color: string;\n  origin: object;\n  name: string;\n  angle: number;\n  textAlign: string;\n  textBaseline?: string;\n}\n\nexport interface PieLabelConfig extends Label {\n  visible: boolean;\n  formatter?: (text: string | number | undefined | null, item: any, idx: number, ...extras: any[]) => string;\n  /** whether */\n  adjustPosition?: boolean;\n  /** allow label overlap */\n  allowOverlap?: boolean;\n  autoRotate?: boolean;\n  labelHeight?: number;\n  offset?: number | string;\n  offsetX?: number;\n  offsetY?: number;\n  /** label leader-line */\n  line?: {\n    visible?: boolean;\n    smooth?: boolean;\n    stroke?: string;\n    lineWidth?: number;\n  };\n  style?: TextStyle;\n}\n\nexport default abstract class PieBaseLabel {\n  public options: PieLabelConfig & { offset: number };\n  public destroyed: boolean = false;\n  protected plot: PieLayer;\n  protected coordinateBBox: BBox;\n  protected container: IGroup;\n  /** 圆弧上的锚点 */\n  protected arcPoints: LabelItem[];\n\n  constructor(plot: PieLayer, cfg: PieLabelConfig) {\n    this.plot = plot;\n    this.coordinateBBox = this.plot.view.coordinateBBox;\n    const options = deepMix(this.getDefaultOptions(), cfg, {});\n    this.adjustOption(options);\n    this.options = options;\n    this.init();\n  }\n\n  protected abstract getDefaultOptions();\n  protected abstract layout(labels: IShape[], shapeInfos: LabelItem[], panelBox: BBox);\n  /** 处理标签遮挡问题 */\n  protected adjustOverlap(labels: IShape[], panel: BBox): void {\n    // clearOverlap;\n    for (let i = 1; i < labels.length; i++) {\n      const label = labels[i];\n      let overlapArea = 0;\n      for (let j = i - 1; j >= 0; j--) {\n        const prev = labels[j];\n        // fix: start draw point.x is error when textAlign is right\n        const prevBox = prev.getBBox();\n        const currBox = label.getBBox();\n        // if the previous one is invisible, skip\n        if (prev.get('parent').get('visible')) {\n          overlapArea = getOverlapArea(prevBox, currBox);\n          if (!near(overlapArea, 0)) {\n            label.get('parent').set('visible', false);\n            break;\n          }\n        }\n      }\n    }\n    labels.forEach((label) => checkInPanel(label, panel));\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  protected adjustItem(item: LabelItem): void {\n    return;\n  }\n\n  protected init() {\n    this.container = this.getGeometry().labelsContainer;\n    this.plot.view.on('beforerender', () => {\n      this.clear();\n      this.plot.canvas.draw();\n    });\n  }\n\n  public render() {\n    // 先清空 再重新渲染（避免双次绘制）\n    this.clear();\n    this.initArcPoints();\n    this.drawTexts();\n    this.drawLines();\n  }\n\n  public clear() {\n    if (this.container) {\n      this.container.clear();\n    }\n  }\n\n  public hide() {\n    this.container.set('visible', false);\n    this.plot.canvas.draw();\n  }\n\n  public show() {\n    this.container.set('visible', true);\n    this.plot.canvas.draw();\n  }\n\n  public destroy() {\n    if (this.container) {\n      this.container.remove();\n    }\n    this.destroyed = true;\n  }\n\n  private getFilteredSum() {\n    const { angleField } = this.plot.options;\n    const filteredData = (this.plot.view as any).filteredData || [];\n    return filteredData.reduce((pre, filteredDataItem) => {\n      return pre + filteredDataItem[angleField];\n    }, 0);\n  }\n\n  /** 绘制文本 */\n  protected drawTexts() {\n    const { style, formatter, autoRotate, offsetX, offsetY, adjustPosition, allowOverlap } = this.options;\n    const shapeInfos = this.getItems();\n    const shapes: IShape[] = [];\n    shapeInfos.map((shapeInfo, idx) => {\n      const attrs = deepMix({}, shapeInfo, style);\n      const filteredSum = this.getFilteredSum();\n      const { angleField } = this.plot.options;\n      const percent = shapeInfo.origin[angleField] / filteredSum;\n      const content = formatter\n        ? formatter(\n            shapeInfo.name,\n            {\n              _origin: shapeInfo.origin,\n              percent,\n            },\n            idx\n          )\n        : shapeInfo.name;\n      const itemGroup = this.container.addGroup({\n        name: 'itemGroup',\n        index: idx,\n        capture: false, // 不捕获事件，否则鼠标 hover 到图形会失焦\n      });\n      const textShape = itemGroup.addShape('text', {\n        attrs: deepMix({}, attrs, {\n          x: shapeInfo.x + offsetX,\n          y: shapeInfo.y + offsetY,\n          text: content,\n        }),\n      });\n      textShape.set('id', `text-${shapeInfo.name}-${idx}`);\n      shapes.push(textShape);\n    });\n    shapes.forEach((shape) => {\n      const panelBox = this.coordinateBBox;\n      this.adjustText(shape, panelBox);\n    });\n    if (adjustPosition) {\n      this.layout(shapes, shapeInfos, this.coordinateBBox);\n    }\n    if (!allowOverlap) {\n      this.adjustOverlap(shapes, this.coordinateBBox);\n    }\n    shapes.forEach((label, idx) => {\n      if (autoRotate) {\n        this.rotateLabel(label, getLabelRotate(shapeInfos[idx].angle));\n      }\n    });\n  }\n\n  private adjustText(label: IShape, panelBox: BBox) {\n    const box = label.getBBox();\n    let width = box.width;\n    const deltaWidth = 0;\n    if (box.maxX > panelBox.maxX) {\n      width = panelBox.maxX - box.minX;\n    } else if (box.minX < panelBox.minX) {\n      width = box.maxX - panelBox.minX;\n    }\n    if (label.attr('textAlign') === 'left') {\n      label.attr('x', Math.max(box.x - deltaWidth, 0));\n    } else if (label.attr('textAlign') === 'right') {\n      label.attr('x', Math.max(box.maxX - deltaWidth, 0));\n    }\n    if (width !== box.width) {\n      const font = {};\n      ['fontSize', 'fontFamily', 'fontWeight'].forEach((k) => {\n        font[k] = label.attr(k);\n      });\n      const ellipsisTexts = label\n        .attr('text')\n        .split('\\n')\n        .map((t) => getEllipsisText(t, width, font));\n      label.attr('text', ellipsisTexts.join('\\n'));\n    }\n  }\n\n  /** 绘制拉线 */\n  protected drawLines() {\n    if (this.options.line.visible) {\n      const itemGroups = this.container.get('children');\n      const { center } = this.getCoordinate();\n      itemGroups.forEach((labelGroup, idx) => {\n        const label: IShape = labelGroup.get('children')[0];\n        const anchor = this.arcPoints[idx];\n        const inLeft = anchor.x < center.x;\n        // 拉线 和 label 之间的距离\n        const distance = this.options.offset > 4 ? 4 : 0;\n        const path = this.getLinePath(label, anchor, distance);\n        const style = this.options.line;\n        labelGroup.addShape('path', {\n          attrs: {\n            path,\n            stroke: anchor.color,\n            ...style,\n          },\n        });\n        // 由于拉线的存在 label 需要进行偏移\n        label.attr('x', label.attr('x') + (inLeft ? -distance : distance));\n      });\n    }\n  }\n\n  /** 获取label leader-line, 默认 not smooth */\n  private getLinePath(label: IShape, anchor: LabelItem, distance: number): string {\n    const smooth = this.options.line ? this.options.line.smooth : false;\n    const angle = anchor.angle;\n    const { center, radius } = this.getCoordinate();\n    let breakAt = getEndPoint(center, angle, radius + distance);\n    if (distance < 4) {\n      breakAt = anchor;\n    }\n    const inLeft = anchor.x < center.x;\n    const box = label.getBBox();\n    const labelPosition = { x: inLeft ? box.maxX : box.minX, y: box.y + box.height / 2 };\n    const smoothPath = [\n      'C', // soft break\n      // 1st control point (of the curve)\n      labelPosition.x +\n        // 4 gives the connector a little horizontal bend\n        (inLeft ? 1 : -1) * (distance < 4 ? distance / 2 : 4),\n      labelPosition.y, //\n      2 * breakAt.x - anchor.x, // 2nd control point\n      2 * breakAt.y - anchor.y, //\n      breakAt.x, // end of the curve\n      breakAt.y, //\n    ];\n    const straightPath = ['L', /** pointy break */ breakAt.x, breakAt.y];\n    const linePath = smooth ? smoothPath : straightPath;\n    const path = ['M', labelPosition.x, labelPosition.y].concat(linePath).concat('L', anchor.x, anchor.y);\n\n    return path.join(',');\n  }\n\n  protected getGeometry() {\n    return this.plot.view.geometries[0];\n  }\n\n  protected getCoordinate() {\n    const coordinate = this.getGeometry().coordinate;\n    const center = coordinate.getCenter();\n    // @ts-ignore\n    const radius = coordinate.getRadius();\n    const startAngle = coordinate.startAngle;\n    return { center, radius, startAngle };\n  }\n\n  protected adjustOption(options: PieLabelConfig): void {\n    let offset = options.offset;\n    const { radius } = this.getCoordinate();\n    if (isString(offset)) {\n      offset = radius * percent2Number(offset);\n    }\n    options.offset = offset;\n  }\n\n  private rotateLabel(label: IShape, angle): void {\n    const x = label.attr('x');\n    const y = label.attr('y');\n    const matrix = ext.transform(label.getMatrix(), [\n      ['t', -x, -y],\n      ['r', angle],\n      ['t', x, y],\n    ]);\n    label.setMatrix(matrix);\n  }\n\n  private getItems(): LabelItem[] {\n    const { offset } = this.options;\n    const { center, radius } = this.getCoordinate();\n    const items = this.arcPoints.map((anchor) => {\n      const point = getEndPoint(center, anchor.angle, radius + offset);\n      const item = { ...anchor, ...point };\n      this.adjustItem(item);\n      return item;\n    });\n    return items;\n  }\n\n  // 初始化圆弧上锚点\n  private initArcPoints(): void {\n    const { angleField } = this.plot.options;\n    const elements = this.getGeometry().elements;\n    const coord = this.getCoordinate();\n    const { center, radius } = coord;\n    let { startAngle } = this.getCoordinate();\n    // 位置信息使用 positionScale\n    const positionScales = this.getGeometry().attributes.position.scales;\n    const scale = positionScales[1];\n    const scaleField = scale.field;\n    const anchors = elements.map((ele) => {\n      const origin = ele.shape.get('origin');\n      const color = origin.color;\n      const originData = origin.data[0] || origin.data;\n      const endAngle = startAngle + Math.PI * 2 * scale.scale(originData[scaleField]);\n      const angle = (startAngle + endAngle) / 2;\n      const point = getEndPoint(center, angle, radius);\n      startAngle = endAngle;\n      // 标签名 使用 angleField\n      const name = scale.getText(originData[angleField]);\n      const textAlign = point.x > center.x ? 'left' : 'right';\n\n      return {\n        x: point.x,\n        y: point.y,\n        color,\n        name,\n        origin: originData,\n        // 实际的角度\n        angle: getAngleByPoint(this.getGeometry().coordinate, point),\n        textAlign,\n      };\n    });\n    this.arcPoints = anchors;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}