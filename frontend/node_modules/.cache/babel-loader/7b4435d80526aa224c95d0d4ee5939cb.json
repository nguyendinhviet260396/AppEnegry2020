{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { each, isArray, deepMix, clone } from '@antv/util';\nimport BBox from '../../../util/bbox';\nvar LABEL_MARGIN = 4;\nvar ACTIVE_OPACITY = 1;\nvar DEACTIVE_OPACITY = 0.1;\n\nvar HeatmapLegend =\n/** @class */\nfunction () {\n  function HeatmapLegend(cfg) {\n    this.destroyed = false;\n    this.dataSlides = {};\n    var defaultOptions = this.getDefaultOptions();\n\n    if (cfg.plot.options.theme && cfg.plot.options.theme === 'dark') {\n      defaultOptions = this.getDarkOptions();\n    }\n\n    this.options = deepMix({}, defaultOptions, cfg);\n    this.view = this.options.view;\n    this.afterRender = true;\n    this.init();\n  }\n\n  HeatmapLegend.prototype.init = function () {\n    this.layout = this.getLayout();\n    this.width = this.options.width ? this.options.width : this.getDefaultWidth();\n    this.height = this.options.height ? this.options.height : this.getDefaultHeight();\n    var plotContainer = this.options.plot.container;\n    this.container = plotContainer.addGroup();\n  };\n\n  HeatmapLegend.prototype.render = function () {\n    var scales = this.getScales();\n    var colorField = this.options.plot.options.colorField;\n    this.colorScale = scales[colorField];\n    var _a = this.colorScale,\n        min = _a.min,\n        max = _a.max;\n    var color = this.options.plot.options.color;\n\n    if (this.layout === 'horizontal') {\n      this.renderHorizontal(min, max, color);\n    } else {\n      this.renderVertical(min, max, color);\n    }\n\n    this.legendLayout();\n    this.addInteraction();\n    this.options.plot.canvas.draw();\n  };\n\n  HeatmapLegend.prototype.hide = function () {\n    this.container.set('visible', false);\n    this.options.plot.canvas.draw();\n  };\n\n  HeatmapLegend.prototype.show = function () {\n    this.container.set('visible', true);\n    this.options.plot.canvas.draw();\n  };\n\n  HeatmapLegend.prototype.clear = function () {\n    if (this.container) {\n      this.container.clear();\n    }\n  };\n\n  HeatmapLegend.prototype.destroy = function () {\n    if (this.container) {\n      this.container.remove();\n    }\n\n    this.destroyed = true;\n  };\n\n  HeatmapLegend.prototype.getBBox = function () {\n    var origin_bbox = this.container.getBBox();\n    return new BBox(this.x, this.y, origin_bbox.width, origin_bbox.height);\n  };\n\n  HeatmapLegend.prototype.renderVertical = function (min, max, colors) {\n    var _this = this;\n\n    var gridWidth = this.width;\n    var gridHeight = this.height / colors.length;\n    var gridLineContainer = this.container.addGroup();\n    var gridColors = clone(colors).reverse();\n    var valueStep = (max - min) / colors.length; // 绘制色彩格子\n\n    each(gridColors, function (c, i) {\n      var y = gridHeight * i; // 记录每个grid代表的区间信息用于legend交互\n\n      var appendInfo = {\n        to: max - valueStep * i,\n        from: max - valueStep * (i + 1)\n      };\n\n      var rect = _this.container.addShape('rect', {\n        attrs: {\n          x: 0,\n          y: y,\n          width: gridWidth,\n          height: gridHeight,\n          fill: c,\n          opacity: ACTIVE_OPACITY,\n          cursor: 'pointer'\n        },\n        name: 'legend'\n      });\n\n      rect.set('info', appendInfo);\n\n      var dataSlide = _this.getDataSlide(appendInfo);\n\n      _this.dataSlides[appendInfo.from + \"-\" + appendInfo.to] = {\n        mode: 'active',\n        data: dataSlide\n      };\n      gridLineContainer.addShape('path', {\n        attrs: __assign({\n          path: [['M', 0, y + gridHeight], ['L', gridWidth, y + gridHeight]]\n        }, _this.options.gridlineStyle)\n      });\n    }); // 绘制两边的label\n\n    this.container.addShape('text', {\n      attrs: __assign({\n        text: max,\n        x: gridWidth / 2,\n        y: -LABEL_MARGIN,\n        textAlign: 'center',\n        textBaseline: 'bottom'\n      }, this.options.text.style),\n      name: 'legend-label'\n    });\n    this.container.addShape('text', {\n      attrs: __assign(__assign({\n        text: min,\n        x: gridWidth / 2,\n        y: this.height + LABEL_MARGIN,\n        textAlign: 'center',\n        textBaseline: 'top'\n      }, this.options.text.style), {\n        name: 'legend-label'\n      })\n    }); // 绘制包围线\n\n    gridLineContainer.addShape('path', {\n      attrs: __assign({\n        path: [['M', 0, 0], ['L', this.width, 0], ['L', this.width, this.height], ['L', 0, this.height], ['L', 0, 0]]\n      }, this.options.gridlineStyle)\n    });\n  };\n\n  HeatmapLegend.prototype.renderHorizontal = function (min, max, colors) {\n    var _this = this;\n\n    var gridWidth = this.width / colors.length;\n    var gridHeight = this.height;\n    var gridLineContainer = this.container.addGroup();\n    var valueStep = (max - min) / colors.length; // 绘制色彩格子\n\n    each(colors, function (c, i) {\n      var x = gridWidth * i; // 记录每个grid代表的区间信息用于legend交互\n\n      var appendInfo = {\n        from: valueStep * i,\n        to: valueStep * (i + 1)\n      };\n\n      var rect = _this.container.addShape('rect', {\n        attrs: {\n          x: x,\n          y: 0,\n          width: gridWidth,\n          height: gridHeight,\n          fill: c,\n          opacity: 0.8,\n          cursor: 'pointer'\n        },\n        name: 'legend'\n      });\n\n      rect.set('info', appendInfo);\n      gridLineContainer.addShape('path', {\n        attrs: __assign({\n          path: [['M', x + gridWidth, 0], ['L', x + gridWidth, gridHeight]]\n        }, _this.options.gridlineStyle)\n      });\n    }); // 绘制两边的label\n\n    this.container.addShape('text', {\n      attrs: __assign(__assign({\n        text: min,\n        x: -LABEL_MARGIN,\n        y: gridHeight / 2\n      }, this.options.text.style), {\n        textAlign: 'right',\n        textBaseline: 'middle'\n      }),\n      name: 'legend-label'\n    });\n    this.container.addShape('text', {\n      attrs: __assign({\n        text: max,\n        x: this.width + LABEL_MARGIN,\n        y: gridHeight / 2,\n        textAlign: 'left',\n        textBaseline: 'middle'\n      }, this.options.text.style),\n      name: 'legend-label'\n    }); // 绘制包围线\n\n    gridLineContainer.addShape('path', {\n      attrs: __assign({\n        path: [['M', 0, 0], ['L', this.width, 0], ['L', this.width, this.height], ['L', 0, this.height], ['L', 0, 0]]\n      }, this.options.gridlineStyle)\n    });\n  };\n\n  HeatmapLegend.prototype.getLayout = function () {\n    var positions = this.options.position.split('-');\n    this.position = positions[0];\n\n    if (positions[0] === 'left' || positions[0] === 'right') {\n      return 'vertical';\n    }\n\n    return 'horizontal';\n  };\n\n  HeatmapLegend.prototype.getDefaultWidth = function () {\n    if (this.layout === 'horizontal') {\n      var width = this.options.plot.options.width;\n      return width * 0.5;\n    }\n\n    return 10;\n  };\n\n  HeatmapLegend.prototype.getDefaultHeight = function () {\n    if (this.layout === 'vertical') {\n      var height = this.options.plot.options.height;\n      return height * 0.5;\n    }\n\n    return 10;\n  };\n\n  HeatmapLegend.prototype.legendLayout = function () {\n    var _this = this;\n\n    var bleeding = this.options.plot.getPlotTheme().bleeding;\n\n    if (isArray(bleeding)) {\n      each(bleeding, function (it, index) {\n        if (typeof bleeding[index] === 'function') {\n          bleeding[index] = bleeding[index](_this.options.plot.options);\n        }\n      });\n    }\n\n    var bbox = this.container.getBBox();\n    var x = 0;\n    var y = 0;\n    var positions = this.options.position.split('-');\n    var plotWidth = this.options.plot.width;\n    var plotHeight = this.options.plot.height; // 先确定x\n\n    if (positions[0] === 'left') {\n      x = bleeding[3];\n    } else if (positions[0] === 'right') {\n      x = plotWidth - bleeding[1] - bbox.width;\n    } else if (positions[1] === 'center') {\n      x = (plotWidth - bbox.width) / 2;\n    } else if (positions[1] === 'left') {\n      x = bleeding[3];\n    } else if (positions[1] === 'right') {\n      x = this.options.plot.width - bleeding[1] - bbox.width;\n    } // 再确定y\n\n\n    if (positions[0] === 'bottom') {\n      y = plotHeight - bleeding[2] - bbox.height;\n    } else if (positions[0] === 'top') {\n      y = this.getTopPosition(bleeding);\n    } else if (positions[1] === 'center') {\n      y = (plotHeight - bbox.height) / 2;\n    } else if (positions[1] === 'top') {\n      y = bleeding[0];\n    } else if (positions[1] === 'bottom') {\n      y = plotHeight - bleeding[2] - bbox.height;\n    }\n\n    this.x = x;\n    this.y = y;\n    this.container.translate(x, y);\n  };\n\n  HeatmapLegend.prototype.getDefaultOptions = function () {\n    return {\n      text: {\n        style: {\n          fontSize: 12,\n          fill: 'rgba(0, 0, 0, 0.45)'\n        }\n      },\n      gridlineStyle: {\n        lineWidth: 1,\n        stroke: 'rgba(0, 0, 0, 0.45)'\n      }\n    };\n  };\n\n  HeatmapLegend.prototype.getDarkOptions = function () {\n    return {\n      text: {\n        style: {\n          fontSize: 12,\n          fill: 'rgba(255, 255, 255, 0.45)'\n        }\n      },\n      gridlineStyle: {\n        lineWidth: 1,\n        stroke: 'rgba(255, 255, 255, 0.25)'\n      }\n    };\n  };\n\n  HeatmapLegend.prototype.addInteraction = function () {\n    var _this = this;\n\n    var colorField = this.options.plot.options.colorField;\n    this.container.on('click', function (ev) {\n      var target = ev.target;\n\n      if (target.get('name') === 'legend') {\n        var appendInfo = target.get('info');\n        var targetInfo = appendInfo.from + \"-\" + appendInfo.to;\n        var relativeData = _this.dataSlides[targetInfo];\n\n        if (relativeData.mode === 'active') {\n          relativeData.mode = 'deactive';\n          target.stopAnimate();\n          target.animate({\n            opacity: DEACTIVE_OPACITY\n          }, 200);\n        } else {\n          relativeData.mode = 'active';\n          target.stopAnimate();\n          target.animate({\n            opacity: ACTIVE_OPACITY\n          }, 200);\n        }\n\n        var filteredData = _this.getFilteredData();\n\n        if (filteredData.length > 0) {\n          _this.view.changeData(filteredData); //this.view.set('data', filteredData);\n\n\n          _this.view.scale(colorField, {\n            min: _this.colorScale.min,\n            max: _this.colorScale.max,\n            nice: _this.colorScale.nice\n          });\n\n          _this.view.render();\n        }\n      }\n    });\n  };\n\n  HeatmapLegend.prototype.getFilteredData = function () {\n    var filteredData = [];\n    each(this.dataSlides, function (s) {\n      if (s.mode == 'active') {\n        filteredData.push.apply(filteredData, s.data);\n      }\n    });\n    return filteredData;\n  }; //预先对数据进行分组\n\n\n  HeatmapLegend.prototype.getDataSlide = function (range) {\n    var slide = [];\n    var _a = this.options.plot.options,\n        colorField = _a.colorField,\n        data = _a.data;\n    each(data, function (d) {\n      var value = d[colorField];\n\n      if (value >= range.from && value < range.to) {\n        slide.push(d);\n      }\n    });\n    return slide;\n  };\n\n  HeatmapLegend.prototype.getTopPosition = function (bleeding) {\n    if (this.options.plot.description) {\n      var bbox = this.options.plot.description.getBBox();\n      return bbox.maxY + 10;\n    } else if (this.options.plot.title) {\n      var bbox = this.options.plot.title.getBBox();\n      return bbox.maxY + 10;\n    }\n\n    return bleeding[0];\n  };\n\n  HeatmapLegend.prototype.getScales = function () {\n    var scales;\n    each(this.view.geometries, function (geom) {\n      if (geom.type === 'heatmap') {\n        scales = geom.scales;\n      }\n    });\n    return scales;\n  };\n\n  return HeatmapLegend;\n}();\n\nexport default HeatmapLegend;","map":{"version":3,"sources":["../../../../src/plots/density-heatmap/components/legend.ts"],"names":[],"mappings":";AAAA,SAAS,IAAT,EAAe,OAAf,EAAwB,OAAxB,EAAiC,KAAjC,QAA8C,YAA9C;AAEA,OAAO,IAAP,MAAiB,oBAAjB;AAGA,IAAM,YAAY,GAAG,CAArB;AACA,IAAM,cAAc,GAAG,CAAvB;AACA,IAAM,gBAAgB,GAAG,GAAzB;;AAoBA,IAAA,aAAA;AAAA;AAAA,YAAA;AAeE,WAAA,aAAA,CAAY,GAAZ,EAA+B;AAXxB,SAAA,SAAA,GAAqB,KAArB;AAQG,SAAA,UAAA,GAAkB,EAAlB;AAIR,QAAI,cAAc,GAAG,KAAK,iBAAL,EAArB;;AACA,QAAI,GAAG,CAAC,IAAJ,CAAS,OAAT,CAAiB,KAAjB,IAA0B,GAAG,CAAC,IAAJ,CAAS,OAAT,CAAiB,KAAjB,KAA2B,MAAzD,EAAiE;AAC/D,MAAA,cAAc,GAAG,KAAK,cAAL,EAAjB;AACD;;AACD,SAAK,OAAL,GAAe,OAAO,CAAC,EAAD,EAAK,cAAL,EAAqB,GAArB,CAAtB;AACA,SAAK,IAAL,GAAY,KAAK,OAAL,CAAa,IAAzB;AACA,SAAK,WAAL,GAAmB,IAAnB;AACA,SAAK,IAAL;AACD;;AAEM,EAAA,aAAA,CAAA,SAAA,CAAA,IAAA,GAAP,YAAA;AACE,SAAK,MAAL,GAAc,KAAK,SAAL,EAAd;AACA,SAAK,KAAL,GAAa,KAAK,OAAL,CAAa,KAAb,GAAqB,KAAK,OAAL,CAAa,KAAlC,GAA0C,KAAK,eAAL,EAAvD;AACA,SAAK,MAAL,GAAc,KAAK,OAAL,CAAa,MAAb,GAAsB,KAAK,OAAL,CAAa,MAAnC,GAA4C,KAAK,gBAAL,EAA1D;AACA,QAAM,aAAa,GAAG,KAAK,OAAL,CAAa,IAAb,CAAkB,SAAxC;AACA,SAAK,SAAL,GAAiB,aAAa,CAAC,QAAd,EAAjB;AACD,GANM;;AAQA,EAAA,aAAA,CAAA,SAAA,CAAA,MAAA,GAAP,YAAA;AACE,QAAM,MAAM,GAAG,KAAK,SAAL,EAAf;AACA,QAAM,UAAU,GAAG,KAAK,OAAL,CAAa,IAAb,CAAkB,OAAlB,CAA0B,UAA7C;AACA,SAAK,UAAL,GAAkB,MAAM,CAAC,UAAD,CAAxB;AACM,QAAA,EAAA,GAAe,KAAK,UAApB;AAAA,QAAE,GAAG,GAAA,EAAA,CAAA,GAAL;AAAA,QAAO,GAAG,GAAA,EAAA,CAAA,GAAV;AACE,QAAA,KAAK,GAAK,KAAK,OAAL,CAAa,IAAb,CAAkB,OAAlB,CAAL,KAAL;;AACR,QAAI,KAAK,MAAL,KAAgB,YAApB,EAAkC;AAChC,WAAK,gBAAL,CAAsB,GAAtB,EAA2B,GAA3B,EAAgC,KAAhC;AACD,KAFD,MAEO;AACL,WAAK,cAAL,CAAoB,GAApB,EAAyB,GAAzB,EAA8B,KAA9B;AACD;;AACD,SAAK,YAAL;AACA,SAAK,cAAL;AACA,SAAK,OAAL,CAAa,IAAb,CAAkB,MAAlB,CAAyB,IAAzB;AACD,GAdM;;AAgBA,EAAA,aAAA,CAAA,SAAA,CAAA,IAAA,GAAP,YAAA;AACE,SAAK,SAAL,CAAe,GAAf,CAAmB,SAAnB,EAA8B,KAA9B;AACA,SAAK,OAAL,CAAa,IAAb,CAAkB,MAAlB,CAAyB,IAAzB;AACD,GAHM;;AAKA,EAAA,aAAA,CAAA,SAAA,CAAA,IAAA,GAAP,YAAA;AACE,SAAK,SAAL,CAAe,GAAf,CAAmB,SAAnB,EAA8B,IAA9B;AACA,SAAK,OAAL,CAAa,IAAb,CAAkB,MAAlB,CAAyB,IAAzB;AACD,GAHM;;AAKA,EAAA,aAAA,CAAA,SAAA,CAAA,KAAA,GAAP,YAAA;AACE,QAAI,KAAK,SAAT,EAAoB;AAClB,WAAK,SAAL,CAAe,KAAf;AACD;AACF,GAJM;;AAMA,EAAA,aAAA,CAAA,SAAA,CAAA,OAAA,GAAP,YAAA;AACE,QAAI,KAAK,SAAT,EAAoB;AAClB,WAAK,SAAL,CAAe,MAAf;AACD;;AACD,SAAK,SAAL,GAAiB,IAAjB;AACD,GALM;;AAOA,EAAA,aAAA,CAAA,SAAA,CAAA,OAAA,GAAP,YAAA;AACE,QAAM,WAAW,GAAG,KAAK,SAAL,CAAe,OAAf,EAApB;AACA,WAAO,IAAI,IAAJ,CAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,WAAW,CAAC,KAArC,EAA4C,WAAW,CAAC,MAAxD,CAAP;AACD,GAHM;;AAKG,EAAA,aAAA,CAAA,SAAA,CAAA,cAAA,GAAV,UAAyB,GAAzB,EAA8B,GAA9B,EAAmC,MAAnC,EAAyC;AAAzC,QAAA,KAAA,GAAA,IAAA;;AACE,QAAM,SAAS,GAAG,KAAK,KAAvB;AACA,QAAM,UAAU,GAAG,KAAK,MAAL,GAAc,MAAM,CAAC,MAAxC;AACA,QAAM,iBAAiB,GAAG,KAAK,SAAL,CAAe,QAAf,EAA1B;AACA,QAAM,UAAU,GAAG,KAAK,CAAC,MAAD,CAAL,CAAc,OAAd,EAAnB;AACA,QAAM,SAAS,GAAG,CAAC,GAAG,GAAG,GAAP,IAAc,MAAM,CAAC,MAAvC,CALuC,CAMvC;;AACA,IAAA,IAAI,CAAC,UAAD,EAAa,UAAC,CAAD,EAAI,CAAJ,EAAK;AACpB,UAAM,CAAC,GAAG,UAAU,GAAG,CAAvB,CADoB,CAEpB;;AACA,UAAM,UAAU,GAAG;AAAE,QAAA,EAAE,EAAE,GAAG,GAAG,SAAS,GAAG,CAAxB;AAA2B,QAAA,IAAI,EAAE,GAAG,GAAG,SAAS,IAAI,CAAC,GAAG,CAAR;AAAhD,OAAnB;;AACA,UAAM,IAAI,GAAG,KAAI,CAAC,SAAL,CAAe,QAAf,CAAwB,MAAxB,EAAgC;AAC3C,QAAA,KAAK,EAAE;AACL,UAAA,CAAC,EAAE,CADE;AAEL,UAAA,CAAC,EAAA,CAFI;AAGL,UAAA,KAAK,EAAE,SAHF;AAIL,UAAA,MAAM,EAAE,UAJH;AAKL,UAAA,IAAI,EAAE,CALD;AAML,UAAA,OAAO,EAAE,cANJ;AAOL,UAAA,MAAM,EAAE;AAPH,SADoC;AAU3C,QAAA,IAAI,EAAE;AAVqC,OAAhC,CAAb;;AAYA,MAAA,IAAI,CAAC,GAAL,CAAS,MAAT,EAAiB,UAAjB;;AACA,UAAM,SAAS,GAAG,KAAI,CAAC,YAAL,CAAkB,UAAlB,CAAlB;;AACA,MAAA,KAAI,CAAC,UAAL,CAAmB,UAAU,CAAC,IAAX,GAAe,GAAf,GAAmB,UAAU,CAAC,EAAjD,IAAyD;AAAE,QAAA,IAAI,EAAE,QAAR;AAAkB,QAAA,IAAI,EAAE;AAAxB,OAAzD;AACA,MAAA,iBAAiB,CAAC,QAAlB,CAA2B,MAA3B,EAAmC;AACjC,QAAA,KAAK,EAAA,QAAA,CAAA;AACH,UAAA,IAAI,EAAE,CACJ,CAAC,GAAD,EAAM,CAAN,EAAS,CAAC,GAAG,UAAb,CADI,EAEJ,CAAC,GAAD,EAAM,SAAN,EAAiB,CAAC,GAAG,UAArB,CAFI;AADH,SAAA,EAKA,KAAI,CAAC,OAAL,CAAa,aALb;AAD4B,OAAnC;AASD,KA5BG,CAAJ,CAPuC,CAoCvC;;AACA,SAAK,SAAL,CAAe,QAAf,CAAwB,MAAxB,EAAgC;AAC9B,MAAA,KAAK,EAAA,QAAA,CAAA;AACH,QAAA,IAAI,EAAE,GADH;AAEH,QAAA,CAAC,EAAE,SAAS,GAAG,CAFZ;AAGH,QAAA,CAAC,EAAE,CAAC,YAHD;AAIH,QAAA,SAAS,EAAE,QAJR;AAKH,QAAA,YAAY,EAAE;AALX,OAAA,EAMA,KAAK,OAAL,CAAa,IAAb,CAAkB,KANlB,CADyB;AAS9B,MAAA,IAAI,EAAE;AATwB,KAAhC;AAWA,SAAK,SAAL,CAAe,QAAf,CAAwB,MAAxB,EAAgC;AAC9B,MAAA,KAAK,EAAA,QAAA,CAAA,QAAA,CAAA;AACH,QAAA,IAAI,EAAE,GADH;AAEH,QAAA,CAAC,EAAE,SAAS,GAAG,CAFZ;AAGH,QAAA,CAAC,EAAE,KAAK,MAAL,GAAc,YAHd;AAIH,QAAA,SAAS,EAAE,QAJR;AAKH,QAAA,YAAY,EAAE;AALX,OAAA,EAMA,KAAK,OAAL,CAAa,IAAb,CAAkB,KANlB,CAAA,EAMuB;AAC1B,QAAA,IAAI,EAAE;AADoB,OANvB;AADyB,KAAhC,EAhDuC,CA2DvC;;AACA,IAAA,iBAAiB,CAAC,QAAlB,CAA2B,MAA3B,EAAmC;AACjC,MAAA,KAAK,EAAA,QAAA,CAAA;AACH,QAAA,IAAI,EAAE,CACJ,CAAC,GAAD,EAAM,CAAN,EAAS,CAAT,CADI,EAEJ,CAAC,GAAD,EAAM,KAAK,KAAX,EAAkB,CAAlB,CAFI,EAGJ,CAAC,GAAD,EAAM,KAAK,KAAX,EAAkB,KAAK,MAAvB,CAHI,EAIJ,CAAC,GAAD,EAAM,CAAN,EAAS,KAAK,MAAd,CAJI,EAKJ,CAAC,GAAD,EAAM,CAAN,EAAS,CAAT,CALI;AADH,OAAA,EAQA,KAAK,OAAL,CAAa,aARb;AAD4B,KAAnC;AAYD,GAxES;;AA0EA,EAAA,aAAA,CAAA,SAAA,CAAA,gBAAA,GAAV,UAA2B,GAA3B,EAAgC,GAAhC,EAAqC,MAArC,EAA2C;AAA3C,QAAA,KAAA,GAAA,IAAA;;AACE,QAAM,SAAS,GAAG,KAAK,KAAL,GAAa,MAAM,CAAC,MAAtC;AACA,QAAM,UAAU,GAAG,KAAK,MAAxB;AACA,QAAM,iBAAiB,GAAG,KAAK,SAAL,CAAe,QAAf,EAA1B;AACA,QAAM,SAAS,GAAG,CAAC,GAAG,GAAG,GAAP,IAAc,MAAM,CAAC,MAAvC,CAJyC,CAKzC;;AACA,IAAA,IAAI,CAAC,MAAD,EAAS,UAAC,CAAD,EAAI,CAAJ,EAAK;AAChB,UAAM,CAAC,GAAG,SAAS,GAAG,CAAtB,CADgB,CAEhB;;AACA,UAAM,UAAU,GAAG;AAAE,QAAA,IAAI,EAAE,SAAS,GAAG,CAApB;AAAuB,QAAA,EAAE,EAAE,SAAS,IAAI,CAAC,GAAG,CAAR;AAApC,OAAnB;;AACA,UAAM,IAAI,GAAG,KAAI,CAAC,SAAL,CAAe,QAAf,CAAwB,MAAxB,EAAgC;AAC3C,QAAA,KAAK,EAAE;AACL,UAAA,CAAC,EAAA,CADI;AAEL,UAAA,CAAC,EAAE,CAFE;AAGL,UAAA,KAAK,EAAE,SAHF;AAIL,UAAA,MAAM,EAAE,UAJH;AAKL,UAAA,IAAI,EAAE,CALD;AAML,UAAA,OAAO,EAAE,GANJ;AAOL,UAAA,MAAM,EAAE;AAPH,SADoC;AAU3C,QAAA,IAAI,EAAE;AAVqC,OAAhC,CAAb;;AAYA,MAAA,IAAI,CAAC,GAAL,CAAS,MAAT,EAAiB,UAAjB;AACA,MAAA,iBAAiB,CAAC,QAAlB,CAA2B,MAA3B,EAAmC;AACjC,QAAA,KAAK,EAAA,QAAA,CAAA;AACH,UAAA,IAAI,EAAE,CACJ,CAAC,GAAD,EAAM,CAAC,GAAG,SAAV,EAAqB,CAArB,CADI,EAEJ,CAAC,GAAD,EAAM,CAAC,GAAG,SAAV,EAAqB,UAArB,CAFI;AADH,SAAA,EAKA,KAAI,CAAC,OAAL,CAAa,aALb;AAD4B,OAAnC;AASD,KA1BG,CAAJ,CANyC,CAiCzC;;AACA,SAAK,SAAL,CAAe,QAAf,CAAwB,MAAxB,EAAgC;AAC9B,MAAA,KAAK,EAAA,QAAA,CAAA,QAAA,CAAA;AACH,QAAA,IAAI,EAAE,GADH;AAEH,QAAA,CAAC,EAAE,CAAC,YAFD;AAGH,QAAA,CAAC,EAAE,UAAU,GAAG;AAHb,OAAA,EAIA,KAAK,OAAL,CAAa,IAAb,CAAkB,KAJlB,CAAA,EAIuB;AAC1B,QAAA,SAAS,EAAE,OADe;AAE1B,QAAA,YAAY,EAAE;AAFY,OAJvB,CADyB;AAS9B,MAAA,IAAI,EAAE;AATwB,KAAhC;AAWA,SAAK,SAAL,CAAe,QAAf,CAAwB,MAAxB,EAAgC;AAC9B,MAAA,KAAK,EAAA,QAAA,CAAA;AACH,QAAA,IAAI,EAAE,GADH;AAEH,QAAA,CAAC,EAAE,KAAK,KAAL,GAAa,YAFb;AAGH,QAAA,CAAC,EAAE,UAAU,GAAG,CAHb;AAIH,QAAA,SAAS,EAAE,MAJR;AAKH,QAAA,YAAY,EAAE;AALX,OAAA,EAMA,KAAK,OAAL,CAAa,IAAb,CAAkB,KANlB,CADyB;AAS9B,MAAA,IAAI,EAAE;AATwB,KAAhC,EA7CyC,CAwDzC;;AACA,IAAA,iBAAiB,CAAC,QAAlB,CAA2B,MAA3B,EAAmC;AACjC,MAAA,KAAK,EAAA,QAAA,CAAA;AACH,QAAA,IAAI,EAAE,CACJ,CAAC,GAAD,EAAM,CAAN,EAAS,CAAT,CADI,EAEJ,CAAC,GAAD,EAAM,KAAK,KAAX,EAAkB,CAAlB,CAFI,EAGJ,CAAC,GAAD,EAAM,KAAK,KAAX,EAAkB,KAAK,MAAvB,CAHI,EAIJ,CAAC,GAAD,EAAM,CAAN,EAAS,KAAK,MAAd,CAJI,EAKJ,CAAC,GAAD,EAAM,CAAN,EAAS,CAAT,CALI;AADH,OAAA,EAQA,KAAK,OAAL,CAAa,aARb;AAD4B,KAAnC;AAYD,GArES;;AAuEA,EAAA,aAAA,CAAA,SAAA,CAAA,SAAA,GAAV,YAAA;AACE,QAAM,SAAS,GAAG,KAAK,OAAL,CAAa,QAAb,CAAsB,KAAtB,CAA4B,GAA5B,CAAlB;AACA,SAAK,QAAL,GAAgB,SAAS,CAAC,CAAD,CAAzB;;AACA,QAAI,SAAS,CAAC,CAAD,CAAT,KAAiB,MAAjB,IAA2B,SAAS,CAAC,CAAD,CAAT,KAAiB,OAAhD,EAAyD;AACvD,aAAO,UAAP;AACD;;AACD,WAAO,YAAP;AACD,GAPS;;AASA,EAAA,aAAA,CAAA,SAAA,CAAA,eAAA,GAAV,YAAA;AACE,QAAI,KAAK,MAAL,KAAgB,YAApB,EAAkC;AACxB,UAAA,KAAK,GAAK,KAAK,OAAL,CAAa,IAAb,CAAkB,OAAlB,CAAL,KAAL;AACR,aAAO,KAAK,GAAG,GAAf;AACD;;AACD,WAAO,EAAP;AACD,GANS;;AAQA,EAAA,aAAA,CAAA,SAAA,CAAA,gBAAA,GAAV,YAAA;AACE,QAAI,KAAK,MAAL,KAAgB,UAApB,EAAgC;AACtB,UAAA,MAAM,GAAK,KAAK,OAAL,CAAa,IAAb,CAAkB,OAAlB,CAAL,MAAN;AACR,aAAO,MAAM,GAAG,GAAhB;AACD;;AACD,WAAO,EAAP;AACD,GANS;;AAQA,EAAA,aAAA,CAAA,SAAA,CAAA,YAAA,GAAV,YAAA;AAAA,QAAA,KAAA,GAAA,IAAA;;AACU,QAAA,QAAQ,GAAK,KAAK,OAAL,CAAa,IAAb,CAAkB,YAAlB,GAAL,QAAR;;AACR,QAAI,OAAO,CAAC,QAAD,CAAX,EAAuB;AACrB,MAAA,IAAI,CAAC,QAAD,EAAW,UAAC,EAAD,EAAK,KAAL,EAAU;AACvB,YAAI,OAAO,QAAQ,CAAC,KAAD,CAAf,KAA2B,UAA/B,EAA2C;AACzC,UAAA,QAAQ,CAAC,KAAD,CAAR,GAAkB,QAAQ,CAAC,KAAD,CAAR,CAAgB,KAAI,CAAC,OAAL,CAAa,IAAb,CAAkB,OAAlC,CAAlB;AACD;AACF,OAJG,CAAJ;AAKD;;AACD,QAAM,IAAI,GAAG,KAAK,SAAL,CAAe,OAAf,EAAb;AACA,QAAI,CAAC,GAAG,CAAR;AACA,QAAI,CAAC,GAAG,CAAR;AACA,QAAM,SAAS,GAAG,KAAK,OAAL,CAAa,QAAb,CAAsB,KAAtB,CAA4B,GAA5B,CAAlB;AACA,QAAM,SAAS,GAAG,KAAK,OAAL,CAAa,IAAb,CAAkB,KAApC;AACA,QAAM,UAAU,GAAG,KAAK,OAAL,CAAa,IAAb,CAAkB,MAArC,CAdF,CAeE;;AACA,QAAI,SAAS,CAAC,CAAD,CAAT,KAAiB,MAArB,EAA6B;AAC3B,MAAA,CAAC,GAAG,QAAQ,CAAC,CAAD,CAAZ;AACD,KAFD,MAEO,IAAI,SAAS,CAAC,CAAD,CAAT,KAAiB,OAArB,EAA8B;AACnC,MAAA,CAAC,GAAG,SAAS,GAAG,QAAQ,CAAC,CAAD,CAApB,GAA0B,IAAI,CAAC,KAAnC;AACD,KAFM,MAEA,IAAI,SAAS,CAAC,CAAD,CAAT,KAAiB,QAArB,EAA+B;AACpC,MAAA,CAAC,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,KAAlB,IAA2B,CAA/B;AACD,KAFM,MAEA,IAAI,SAAS,CAAC,CAAD,CAAT,KAAiB,MAArB,EAA6B;AAClC,MAAA,CAAC,GAAG,QAAQ,CAAC,CAAD,CAAZ;AACD,KAFM,MAEA,IAAI,SAAS,CAAC,CAAD,CAAT,KAAiB,OAArB,EAA8B;AACnC,MAAA,CAAC,GAAG,KAAK,OAAL,CAAa,IAAb,CAAkB,KAAlB,GAA0B,QAAQ,CAAC,CAAD,CAAlC,GAAwC,IAAI,CAAC,KAAjD;AACD,KA1BH,CA2BE;;;AACA,QAAI,SAAS,CAAC,CAAD,CAAT,KAAiB,QAArB,EAA+B;AAC7B,MAAA,CAAC,GAAG,UAAU,GAAG,QAAQ,CAAC,CAAD,CAArB,GAA2B,IAAI,CAAC,MAApC;AACD,KAFD,MAEO,IAAI,SAAS,CAAC,CAAD,CAAT,KAAiB,KAArB,EAA4B;AACjC,MAAA,CAAC,GAAG,KAAK,cAAL,CAAoB,QAApB,CAAJ;AACD,KAFM,MAEA,IAAI,SAAS,CAAC,CAAD,CAAT,KAAiB,QAArB,EAA+B;AACpC,MAAA,CAAC,GAAG,CAAC,UAAU,GAAG,IAAI,CAAC,MAAnB,IAA6B,CAAjC;AACD,KAFM,MAEA,IAAI,SAAS,CAAC,CAAD,CAAT,KAAiB,KAArB,EAA4B;AACjC,MAAA,CAAC,GAAG,QAAQ,CAAC,CAAD,CAAZ;AACD,KAFM,MAEA,IAAI,SAAS,CAAC,CAAD,CAAT,KAAiB,QAArB,EAA+B;AACpC,MAAA,CAAC,GAAG,UAAU,GAAG,QAAQ,CAAC,CAAD,CAArB,GAA2B,IAAI,CAAC,MAApC;AACD;;AAED,SAAK,CAAL,GAAS,CAAT;AACA,SAAK,CAAL,GAAS,CAAT;AAEA,SAAK,SAAL,CAAe,SAAf,CAAyB,CAAzB,EAA4B,CAA5B;AACD,GA5CS;;AA8CA,EAAA,aAAA,CAAA,SAAA,CAAA,iBAAA,GAAV,YAAA;AACE,WAAO;AACL,MAAA,IAAI,EAAE;AACJ,QAAA,KAAK,EAAE;AACL,UAAA,QAAQ,EAAE,EADL;AAEL,UAAA,IAAI,EAAE;AAFD;AADH,OADD;AAOL,MAAA,aAAa,EAAE;AACb,QAAA,SAAS,EAAE,CADE;AAEb,QAAA,MAAM,EAAE;AAFK;AAPV,KAAP;AAYD,GAbS;;AAeA,EAAA,aAAA,CAAA,SAAA,CAAA,cAAA,GAAV,YAAA;AACE,WAAO;AACL,MAAA,IAAI,EAAE;AACJ,QAAA,KAAK,EAAE;AACL,UAAA,QAAQ,EAAE,EADL;AAEL,UAAA,IAAI,EAAE;AAFD;AADH,OADD;AAOL,MAAA,aAAa,EAAE;AACb,QAAA,SAAS,EAAE,CADE;AAEb,QAAA,MAAM,EAAE;AAFK;AAPV,KAAP;AAYD,GAbS;;AAeA,EAAA,aAAA,CAAA,SAAA,CAAA,cAAA,GAAV,YAAA;AAAA,QAAA,KAAA,GAAA,IAAA;;AACU,QAAA,UAAU,GAAK,KAAK,OAAL,CAAa,IAAb,CAAkB,OAAlB,CAAL,UAAV;AACR,SAAK,SAAL,CAAe,EAAf,CAAkB,OAAlB,EAA2B,UAAC,EAAD,EAAG;AACpB,UAAA,MAAM,GAAK,EAAE,CAAP,MAAN;;AACR,UAAI,MAAM,CAAC,GAAP,CAAW,MAAX,MAAuB,QAA3B,EAAqC;AACnC,YAAM,UAAU,GAAG,MAAM,CAAC,GAAP,CAAW,MAAX,CAAnB;AACA,YAAM,UAAU,GAAM,UAAU,CAAC,IAAX,GAAe,GAAf,GAAmB,UAAU,CAAC,EAApD;AACA,YAAM,YAAY,GAAG,KAAI,CAAC,UAAL,CAAgB,UAAhB,CAArB;;AACA,YAAI,YAAY,CAAC,IAAb,KAAsB,QAA1B,EAAoC;AAClC,UAAA,YAAY,CAAC,IAAb,GAAoB,UAApB;AACA,UAAA,MAAM,CAAC,WAAP;AACA,UAAA,MAAM,CAAC,OAAP,CACE;AACE,YAAA,OAAO,EAAE;AADX,WADF,EAIE,GAJF;AAMD,SATD,MASO;AACL,UAAA,YAAY,CAAC,IAAb,GAAoB,QAApB;AACA,UAAA,MAAM,CAAC,WAAP;AACA,UAAA,MAAM,CAAC,OAAP,CACE;AACE,YAAA,OAAO,EAAE;AADX,WADF,EAIE,GAJF;AAMD;;AACD,YAAM,YAAY,GAAG,KAAI,CAAC,eAAL,EAArB;;AACA,YAAI,YAAY,CAAC,MAAb,GAAsB,CAA1B,EAA6B;AAC3B,UAAA,KAAI,CAAC,IAAL,CAAU,UAAV,CAAqB,YAArB,EAD2B,CAE3B;;;AACA,UAAA,KAAI,CAAC,IAAL,CAAU,KAAV,CAAgB,UAAhB,EAA4B;AAC1B,YAAA,GAAG,EAAE,KAAI,CAAC,UAAL,CAAgB,GADK;AAE1B,YAAA,GAAG,EAAE,KAAI,CAAC,UAAL,CAAgB,GAFK;AAG1B,YAAA,IAAI,EAAE,KAAI,CAAC,UAAL,CAAgB;AAHI,WAA5B;;AAKA,UAAA,KAAI,CAAC,IAAL,CAAU,MAAV;AACD;AACF;AACF,KArCD;AAsCD,GAxCS;;AA0CA,EAAA,aAAA,CAAA,SAAA,CAAA,eAAA,GAAV,YAAA;AACE,QAAM,YAAY,GAAG,EAArB;AACA,IAAA,IAAI,CAAC,KAAK,UAAN,EAAkB,UAAC,CAAD,EAAE;AACtB,UAAI,CAAC,CAAC,IAAF,IAAU,QAAd,EAAwB;AACtB,QAAA,YAAY,CAAC,IAAb,CAAiB,KAAjB,CAAA,YAAA,EAAqB,CAAC,CAAC,IAAvB;AACD;AACF,KAJG,CAAJ;AAKA,WAAO,YAAP;AACD,GARS,CA9WZ,CAwXE;;;AACU,EAAA,aAAA,CAAA,SAAA,CAAA,YAAA,GAAV,UAAuB,KAAvB,EAA4B;AAC1B,QAAM,KAAK,GAAG,EAAd;AACM,QAAA,EAAA,GAAuB,KAAK,OAAL,CAAa,IAAb,CAAkB,OAAzC;AAAA,QAAE,UAAU,GAAA,EAAA,CAAA,UAAZ;AAAA,QAAc,IAAI,GAAA,EAAA,CAAA,IAAlB;AACN,IAAA,IAAI,CAAC,IAAD,EAAO,UAAC,CAAD,EAAE;AACX,UAAM,KAAK,GAAG,CAAC,CAAC,UAAD,CAAf;;AACA,UAAI,KAAK,IAAI,KAAK,CAAC,IAAf,IAAuB,KAAK,GAAG,KAAK,CAAC,EAAzC,EAA6C;AAC3C,QAAA,KAAK,CAAC,IAAN,CAAW,CAAX;AACD;AACF,KALG,CAAJ;AAMA,WAAO,KAAP;AACD,GAVS;;AAYF,EAAA,aAAA,CAAA,SAAA,CAAA,cAAA,GAAR,UAAuB,QAAvB,EAA+B;AAC7B,QAAI,KAAK,OAAL,CAAa,IAAb,CAAkB,WAAtB,EAAmC;AACjC,UAAM,IAAI,GAAG,KAAK,OAAL,CAAa,IAAb,CAAkB,WAAlB,CAA8B,OAA9B,EAAb;AACA,aAAO,IAAI,CAAC,IAAL,GAAY,EAAnB;AACD,KAHD,MAGO,IAAI,KAAK,OAAL,CAAa,IAAb,CAAkB,KAAtB,EAA6B;AAClC,UAAM,IAAI,GAAG,KAAK,OAAL,CAAa,IAAb,CAAkB,KAAlB,CAAwB,OAAxB,EAAb;AACA,aAAO,IAAI,CAAC,IAAL,GAAY,EAAnB;AACD;;AACD,WAAO,QAAQ,CAAC,CAAD,CAAf;AACD,GATO;;AAWA,EAAA,aAAA,CAAA,SAAA,CAAA,SAAA,GAAR,YAAA;AACE,QAAI,MAAJ;AACA,IAAA,IAAI,CAAC,KAAK,IAAL,CAAU,UAAX,EAAuB,UAAC,IAAD,EAAK;AAC9B,UAAI,IAAI,CAAC,IAAL,KAAc,SAAlB,EAA6B;AAC3B,QAAA,MAAM,GAAG,IAAI,CAAC,MAAd;AACD;AACF,KAJG,CAAJ;AAKA,WAAO,MAAP;AACD,GARO;;AASV,SAAA,aAAA;AAAC,CAzZD,EAAA","sourcesContent":["import { each, isArray, deepMix, clone } from '@antv/util';\nimport { View, IGroup } from '../../../dependents';\nimport BBox from '../../../util/bbox';\nimport { LegendPosition } from '../../../interface/config';\n\nconst LABEL_MARGIN = 4;\nconst ACTIVE_OPACITY = 1;\nconst DEACTIVE_OPACITY = 0.1;\n\nexport interface HeatmapLegendConfig {\n  visible?: boolean;\n  position?: LegendPosition;\n  width?: number;\n  height?: number;\n  text?: {\n    style?: any;\n    formatter?: () => string;\n  };\n  gridlineStyle?: any;\n  triggerOn?: string;\n}\n\nexport interface IHeatmapLegend extends HeatmapLegendConfig {\n  view: View;\n  plot: any;\n}\n\nexport default class HeatmapLegend {\n  public options: IHeatmapLegend;\n  public container: IGroup;\n  public afterRender: boolean;\n  public destroyed: boolean = false;\n  protected view: View;\n  protected layout: string;\n  protected width: number;\n  protected height: number;\n  protected position: string;\n  protected x: number;\n  protected y: number;\n  protected dataSlides: any = {};\n  protected colorScale: any;\n\n  constructor(cfg: IHeatmapLegend) {\n    let defaultOptions = this.getDefaultOptions();\n    if (cfg.plot.options.theme && cfg.plot.options.theme === 'dark') {\n      defaultOptions = this.getDarkOptions();\n    }\n    this.options = deepMix({}, defaultOptions, cfg);\n    this.view = this.options.view;\n    this.afterRender = true;\n    this.init();\n  }\n\n  public init() {\n    this.layout = this.getLayout();\n    this.width = this.options.width ? this.options.width : this.getDefaultWidth();\n    this.height = this.options.height ? this.options.height : this.getDefaultHeight();\n    const plotContainer = this.options.plot.container;\n    this.container = plotContainer.addGroup();\n  }\n\n  public render() {\n    const scales = this.getScales();\n    const colorField = this.options.plot.options.colorField;\n    this.colorScale = scales[colorField];\n    const { min, max } = this.colorScale;\n    const { color } = this.options.plot.options;\n    if (this.layout === 'horizontal') {\n      this.renderHorizontal(min, max, color);\n    } else {\n      this.renderVertical(min, max, color);\n    }\n    this.legendLayout();\n    this.addInteraction();\n    this.options.plot.canvas.draw();\n  }\n\n  public hide() {\n    this.container.set('visible', false);\n    this.options.plot.canvas.draw();\n  }\n\n  public show() {\n    this.container.set('visible', true);\n    this.options.plot.canvas.draw();\n  }\n\n  public clear() {\n    if (this.container) {\n      this.container.clear();\n    }\n  }\n\n  public destroy() {\n    if (this.container) {\n      this.container.remove();\n    }\n    this.destroyed = true;\n  }\n\n  public getBBox() {\n    const origin_bbox = this.container.getBBox();\n    return new BBox(this.x, this.y, origin_bbox.width, origin_bbox.height);\n  }\n\n  protected renderVertical(min, max, colors) {\n    const gridWidth = this.width;\n    const gridHeight = this.height / colors.length;\n    const gridLineContainer = this.container.addGroup();\n    const gridColors = clone(colors).reverse();\n    const valueStep = (max - min) / colors.length;\n    // 绘制色彩格子\n    each(gridColors, (c, i) => {\n      const y = gridHeight * i;\n      // 记录每个grid代表的区间信息用于legend交互\n      const appendInfo = { to: max - valueStep * i, from: max - valueStep * (i + 1) };\n      const rect = this.container.addShape('rect', {\n        attrs: {\n          x: 0,\n          y,\n          width: gridWidth,\n          height: gridHeight,\n          fill: c,\n          opacity: ACTIVE_OPACITY,\n          cursor: 'pointer',\n        },\n        name: 'legend',\n      });\n      rect.set('info', appendInfo);\n      const dataSlide = this.getDataSlide(appendInfo);\n      this.dataSlides[`${appendInfo.from}-${appendInfo.to}`] = { mode: 'active', data: dataSlide };\n      gridLineContainer.addShape('path', {\n        attrs: {\n          path: [\n            ['M', 0, y + gridHeight],\n            ['L', gridWidth, y + gridHeight],\n          ],\n          ...this.options.gridlineStyle,\n        },\n      });\n    });\n    // 绘制两边的label\n    this.container.addShape('text', {\n      attrs: {\n        text: max,\n        x: gridWidth / 2,\n        y: -LABEL_MARGIN,\n        textAlign: 'center',\n        textBaseline: 'bottom',\n        ...this.options.text.style,\n      },\n      name: 'legend-label',\n    });\n    this.container.addShape('text', {\n      attrs: {\n        text: min,\n        x: gridWidth / 2,\n        y: this.height + LABEL_MARGIN,\n        textAlign: 'center',\n        textBaseline: 'top',\n        ...this.options.text.style,\n        name: 'legend-label',\n      },\n    });\n    // 绘制包围线\n    gridLineContainer.addShape('path', {\n      attrs: {\n        path: [\n          ['M', 0, 0],\n          ['L', this.width, 0],\n          ['L', this.width, this.height],\n          ['L', 0, this.height],\n          ['L', 0, 0],\n        ],\n        ...this.options.gridlineStyle,\n      },\n    });\n  }\n\n  protected renderHorizontal(min, max, colors) {\n    const gridWidth = this.width / colors.length;\n    const gridHeight = this.height;\n    const gridLineContainer = this.container.addGroup();\n    const valueStep = (max - min) / colors.length;\n    // 绘制色彩格子\n    each(colors, (c, i) => {\n      const x = gridWidth * i;\n      // 记录每个grid代表的区间信息用于legend交互\n      const appendInfo = { from: valueStep * i, to: valueStep * (i + 1) };\n      const rect = this.container.addShape('rect', {\n        attrs: {\n          x,\n          y: 0,\n          width: gridWidth,\n          height: gridHeight,\n          fill: c,\n          opacity: 0.8,\n          cursor: 'pointer',\n        },\n        name: 'legend',\n      });\n      rect.set('info', appendInfo);\n      gridLineContainer.addShape('path', {\n        attrs: {\n          path: [\n            ['M', x + gridWidth, 0],\n            ['L', x + gridWidth, gridHeight],\n          ],\n          ...this.options.gridlineStyle,\n        },\n      });\n    });\n    // 绘制两边的label\n    this.container.addShape('text', {\n      attrs: {\n        text: min,\n        x: -LABEL_MARGIN,\n        y: gridHeight / 2,\n        ...this.options.text.style,\n        textAlign: 'right',\n        textBaseline: 'middle',\n      },\n      name: 'legend-label',\n    });\n    this.container.addShape('text', {\n      attrs: {\n        text: max,\n        x: this.width + LABEL_MARGIN,\n        y: gridHeight / 2,\n        textAlign: 'left',\n        textBaseline: 'middle',\n        ...this.options.text.style,\n      },\n      name: 'legend-label',\n    });\n    // 绘制包围线\n    gridLineContainer.addShape('path', {\n      attrs: {\n        path: [\n          ['M', 0, 0],\n          ['L', this.width, 0],\n          ['L', this.width, this.height],\n          ['L', 0, this.height],\n          ['L', 0, 0],\n        ],\n        ...this.options.gridlineStyle,\n      },\n    });\n  }\n\n  protected getLayout() {\n    const positions = this.options.position.split('-');\n    this.position = positions[0];\n    if (positions[0] === 'left' || positions[0] === 'right') {\n      return 'vertical';\n    }\n    return 'horizontal';\n  }\n\n  protected getDefaultWidth() {\n    if (this.layout === 'horizontal') {\n      const { width } = this.options.plot.options;\n      return width * 0.5;\n    }\n    return 10;\n  }\n\n  protected getDefaultHeight() {\n    if (this.layout === 'vertical') {\n      const { height } = this.options.plot.options;\n      return height * 0.5;\n    }\n    return 10;\n  }\n\n  protected legendLayout() {\n    const { bleeding } = this.options.plot.getPlotTheme();\n    if (isArray(bleeding)) {\n      each(bleeding, (it, index) => {\n        if (typeof bleeding[index] === 'function') {\n          bleeding[index] = bleeding[index](this.options.plot.options);\n        }\n      });\n    }\n    const bbox = this.container.getBBox();\n    let x = 0;\n    let y = 0;\n    const positions = this.options.position.split('-');\n    const plotWidth = this.options.plot.width;\n    const plotHeight = this.options.plot.height;\n    // 先确定x\n    if (positions[0] === 'left') {\n      x = bleeding[3];\n    } else if (positions[0] === 'right') {\n      x = plotWidth - bleeding[1] - bbox.width;\n    } else if (positions[1] === 'center') {\n      x = (plotWidth - bbox.width) / 2;\n    } else if (positions[1] === 'left') {\n      x = bleeding[3];\n    } else if (positions[1] === 'right') {\n      x = this.options.plot.width - bleeding[1] - bbox.width;\n    }\n    // 再确定y\n    if (positions[0] === 'bottom') {\n      y = plotHeight - bleeding[2] - bbox.height;\n    } else if (positions[0] === 'top') {\n      y = this.getTopPosition(bleeding);\n    } else if (positions[1] === 'center') {\n      y = (plotHeight - bbox.height) / 2;\n    } else if (positions[1] === 'top') {\n      y = bleeding[0];\n    } else if (positions[1] === 'bottom') {\n      y = plotHeight - bleeding[2] - bbox.height;\n    }\n\n    this.x = x;\n    this.y = y;\n\n    this.container.translate(x, y);\n  }\n\n  protected getDefaultOptions() {\n    return {\n      text: {\n        style: {\n          fontSize: 12,\n          fill: 'rgba(0, 0, 0, 0.45)',\n        },\n      },\n      gridlineStyle: {\n        lineWidth: 1,\n        stroke: 'rgba(0, 0, 0, 0.45)',\n      },\n    };\n  }\n\n  protected getDarkOptions() {\n    return {\n      text: {\n        style: {\n          fontSize: 12,\n          fill: 'rgba(255, 255, 255, 0.45)',\n        },\n      },\n      gridlineStyle: {\n        lineWidth: 1,\n        stroke: 'rgba(255, 255, 255, 0.25)',\n      },\n    };\n  }\n\n  protected addInteraction() {\n    const { colorField } = this.options.plot.options;\n    this.container.on('click', (ev) => {\n      const { target } = ev;\n      if (target.get('name') === 'legend') {\n        const appendInfo = target.get('info');\n        const targetInfo = `${appendInfo.from}-${appendInfo.to}`;\n        const relativeData = this.dataSlides[targetInfo];\n        if (relativeData.mode === 'active') {\n          relativeData.mode = 'deactive';\n          target.stopAnimate();\n          target.animate(\n            {\n              opacity: DEACTIVE_OPACITY,\n            },\n            200\n          );\n        } else {\n          relativeData.mode = 'active';\n          target.stopAnimate();\n          target.animate(\n            {\n              opacity: ACTIVE_OPACITY,\n            },\n            200\n          );\n        }\n        const filteredData = this.getFilteredData();\n        if (filteredData.length > 0) {\n          this.view.changeData(filteredData);\n          //this.view.set('data', filteredData);\n          this.view.scale(colorField, {\n            min: this.colorScale.min,\n            max: this.colorScale.max,\n            nice: this.colorScale.nice,\n          } as any);\n          this.view.render();\n        }\n      }\n    });\n  }\n\n  protected getFilteredData() {\n    const filteredData = [];\n    each(this.dataSlides, (s) => {\n      if (s.mode == 'active') {\n        filteredData.push(...s.data);\n      }\n    });\n    return filteredData;\n  }\n\n  //预先对数据进行分组\n  protected getDataSlide(range) {\n    const slide = [];\n    const { colorField, data } = this.options.plot.options;\n    each(data, (d) => {\n      const value = d[colorField];\n      if (value >= range.from && value < range.to) {\n        slide.push(d);\n      }\n    });\n    return slide;\n  }\n\n  private getTopPosition(bleeding) {\n    if (this.options.plot.description) {\n      const bbox = this.options.plot.description.getBBox();\n      return bbox.maxY + 10;\n    } else if (this.options.plot.title) {\n      const bbox = this.options.plot.title.getBBox();\n      return bbox.maxY + 10;\n    }\n    return bleeding[0];\n  }\n\n  private getScales() {\n    let scales;\n    each(this.view.geometries, (geom) => {\n      if (geom.type === 'heatmap') {\n        scales = geom.scales;\n      }\n    });\n    return scales;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}