{"ast":null,"code":"import { useRef, useEffect } from 'react';\nimport { getGraphSize, processMinimap } from '../graph/util';\nimport { isObject, isString } from '@antv/util';\nexport default function useInit(graphInstance, config, container) {\n  var graphHook = useRef();\n  var data = config.data,\n      nodeStyle = config.nodeStyle,\n      nodeAnchorPoints = config.nodeAnchorPoints,\n      nodeType = config.nodeType,\n      edgeType = config.edgeType,\n      edgeStyle = config.edgeStyle,\n      width = config.width,\n      height = config.height,\n      layout = config.layout,\n      minimapCfg = config.minimapCfg,\n      behaviors = config.behaviors,\n      nodeLabelCfg = config.nodeLabelCfg,\n      edgeLabelCfg = config.edgeLabelCfg;\n  var minimap;\n  useEffect(function () {\n    if (graphInstance && !graphInstance.destroyed) {\n      graphInstance.changeData(data);\n      graphInstance.layout();\n    }\n  }, [data]);\n  useEffect(function () {\n    if (graphInstance && !graphInstance.destroyed) {\n      graphInstance.getNodes().forEach(function (node) {\n        graphInstance.updateItem(node, {\n          type: nodeType,\n          style: nodeStyle,\n          anchorPoints: nodeAnchorPoints,\n          labelCfg: nodeLabelCfg\n        });\n      });\n    }\n  }, [nodeStyle, nodeAnchorPoints, nodeType]);\n  useEffect(function () {\n    if (graphInstance && !graphInstance.destroyed) {\n      graphInstance.getEdges().forEach(function (edge) {\n        graphInstance.updateItem(edge, {\n          type: edgeType,\n          style: edgeStyle,\n          labelCfg: edgeLabelCfg\n        });\n      });\n    }\n  }, [edgeStyle, edgeType]);\n  useEffect(function () {\n    if (graphInstance && !graphInstance.destroyed) {\n      var graphSize = getGraphSize(width, height, container);\n      graphInstance.changeSize(graphSize[0], graphSize[1]);\n    }\n  }, [container, width, height]);\n  useEffect(function () {\n    if (graphInstance && !graphInstance.destroyed) {\n      graphInstance.updateLayout(layout);\n    }\n  }, [layout]);\n  useEffect(function () {\n    if (!minimapCfg || !graphInstance || graphInstance.destroyed) {\n      return;\n    }\n\n    if (minimapCfg.show) {\n      minimap = processMinimap(minimapCfg, graphInstance);\n      minimap && minimap.updateCanvas();\n    } else {\n      var _minimap = graphInstance.get('plugins')[0];\n      _minimap && graphInstance.removePlugin(_minimap);\n    }\n  }, [minimapCfg]);\n  useEffect(function () {\n    if (graphInstance && !graphInstance.destroyed) {\n      var _graphInstance$get = graphInstance.get('modes'),\n          defaultMode = _graphInstance$get.default;\n\n      var removingBehaviors = [];\n      defaultMode.forEach(function (be) {\n        if (isObject(be)) {\n          removingBehaviors.push(be.type);\n        } else if (isString(be)) {\n          removingBehaviors.push(be);\n        }\n      });\n      graphInstance.removeBehaviors(removingBehaviors, 'default');\n      graphInstance.addBehaviors(behaviors, 'default');\n    }\n  }, [behaviors]);\n  useEffect(function () {\n    graphHook.current = graphInstance;\n\n    if (graphInstance && !graphInstance.destroyed) {\n      return function () {\n        graphInstance.destroy();\n        graphInstance = undefined;\n      };\n    }\n\n    return;\n  }, []);\n  return {\n    graphHook: graphHook\n  };\n}","map":{"version":3,"sources":["C:/Users/vietn/Desktop/AppEnegry2020/frontend/node_modules/@ant-design/charts/es/hooks/useGraph.js"],"names":["useRef","useEffect","getGraphSize","processMinimap","isObject","isString","useInit","graphInstance","config","container","graphHook","data","nodeStyle","nodeAnchorPoints","nodeType","edgeType","edgeStyle","width","height","layout","minimapCfg","behaviors","nodeLabelCfg","edgeLabelCfg","minimap","destroyed","changeData","getNodes","forEach","node","updateItem","type","style","anchorPoints","labelCfg","getEdges","edge","graphSize","changeSize","updateLayout","show","updateCanvas","_minimap","get","removePlugin","_graphInstance$get","defaultMode","default","removingBehaviors","be","push","removeBehaviors","addBehaviors","current","destroy","undefined"],"mappings":"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","sourcesContent":["import { useRef, useEffect } from 'react';\nimport { getGraphSize, processMinimap } from '../graph/util';\nimport { isObject, isString } from '@antv/util';\nexport default function useInit(graphInstance, config, container) {\n  var graphHook = useRef();\n  var data = config.data,\n      nodeStyle = config.nodeStyle,\n      nodeAnchorPoints = config.nodeAnchorPoints,\n      nodeType = config.nodeType,\n      edgeType = config.edgeType,\n      edgeStyle = config.edgeStyle,\n      width = config.width,\n      height = config.height,\n      layout = config.layout,\n      minimapCfg = config.minimapCfg,\n      behaviors = config.behaviors,\n      nodeLabelCfg = config.nodeLabelCfg,\n      edgeLabelCfg = config.edgeLabelCfg;\n  var minimap;\n  useEffect(function () {\n    if (graphInstance && !graphInstance.destroyed) {\n      graphInstance.changeData(data);\n      graphInstance.layout();\n    }\n  }, [data]);\n  useEffect(function () {\n    if (graphInstance && !graphInstance.destroyed) {\n      graphInstance.getNodes().forEach(function (node) {\n        graphInstance.updateItem(node, {\n          type: nodeType,\n          style: nodeStyle,\n          anchorPoints: nodeAnchorPoints,\n          labelCfg: nodeLabelCfg\n        });\n      });\n    }\n  }, [nodeStyle, nodeAnchorPoints, nodeType]);\n  useEffect(function () {\n    if (graphInstance && !graphInstance.destroyed) {\n      graphInstance.getEdges().forEach(function (edge) {\n        graphInstance.updateItem(edge, {\n          type: edgeType,\n          style: edgeStyle,\n          labelCfg: edgeLabelCfg\n        });\n      });\n    }\n  }, [edgeStyle, edgeType]);\n  useEffect(function () {\n    if (graphInstance && !graphInstance.destroyed) {\n      var graphSize = getGraphSize(width, height, container);\n      graphInstance.changeSize(graphSize[0], graphSize[1]);\n    }\n  }, [container, width, height]);\n  useEffect(function () {\n    if (graphInstance && !graphInstance.destroyed) {\n      graphInstance.updateLayout(layout);\n    }\n  }, [layout]);\n  useEffect(function () {\n    if (!minimapCfg || !graphInstance || graphInstance.destroyed) {\n      return;\n    }\n\n    if (minimapCfg.show) {\n      minimap = processMinimap(minimapCfg, graphInstance);\n      minimap && minimap.updateCanvas();\n    } else {\n      var _minimap = graphInstance.get('plugins')[0];\n      _minimap && graphInstance.removePlugin(_minimap);\n    }\n  }, [minimapCfg]);\n  useEffect(function () {\n    if (graphInstance && !graphInstance.destroyed) {\n      var _graphInstance$get = graphInstance.get('modes'),\n          defaultMode = _graphInstance$get.default;\n\n      var removingBehaviors = [];\n      defaultMode.forEach(function (be) {\n        if (isObject(be)) {\n          removingBehaviors.push(be.type);\n        } else if (isString(be)) {\n          removingBehaviors.push(be);\n        }\n      });\n      graphInstance.removeBehaviors(removingBehaviors, 'default');\n      graphInstance.addBehaviors(behaviors, 'default');\n    }\n  }, [behaviors]);\n  useEffect(function () {\n    graphHook.current = graphInstance;\n\n    if (graphInstance && !graphInstance.destroyed) {\n      return function () {\n        graphInstance.destroy();\n        graphInstance = undefined;\n      };\n    }\n\n    return;\n  }, []);\n  return {\n    graphHook: graphHook\n  };\n}"]},"metadata":{},"sourceType":"module"}