{"ast":null,"code":"import { registerShape } from '../../../../dependents';\nimport { isArray, each, isNumber, mix } from '@antv/util';\nimport { getGlobalTheme } from '../../../../theme';\nimport { transform } from '../../../../util/g-util';\nvar globalTheme = getGlobalTheme();\nvar ShapeUtil = {\n  splitPoints: function splitPoints(obj) {\n    var points = [];\n    var x = obj.x;\n    var y = obj.y;\n    y = isArray(y) ? y : [y];\n    each(y, function (yItem, index) {\n      var point = {\n        x: isArray(x) ? x[index] : x,\n        y: yItem\n      };\n      points.push(point);\n    });\n    return points;\n  },\n  addFillAttrs: function addFillAttrs(attrs, cfg) {\n    if (cfg.color && !attrs.fill) {\n      attrs.fill = cfg.color;\n    }\n\n    if (isNumber(cfg.opacity)) {\n      attrs.opacity = attrs.fillOpacity = cfg.opacity;\n    }\n  },\n  addStrokeAttrs: function addStrokeAttrs(attrs, cfg) {\n    if (cfg.color && !attrs.stroke) {\n      attrs.stroke = cfg.color;\n    }\n\n    if (isNumber(cfg.opacity)) {\n      attrs.opacity = attrs.strokeOpacity = cfg.opacity;\n    }\n  }\n};\nvar ValueUtil = {\n  lerp: function lerp(a, b, factor) {\n    return (1 - factor) * a + factor * b;\n  }\n};\n\nvar getFillAttrs = function getFillAttrs(cfg) {\n  var defaultAttrs = {\n    lineWidth: 0,\n    fill: globalTheme.color,\n    fillOpacity: 0.85\n  };\n  var attrs = mix({}, defaultAttrs, cfg.style);\n  ShapeUtil.addFillAttrs(attrs, cfg);\n\n  if (cfg.color && !attrs.stroke) {\n    attrs.stroke = attrs.stroke || cfg.color;\n  }\n\n  return attrs;\n};\n\nvar getLineAttrs = function getLineAttrs(cfg) {\n  var defaultAttrs = {\n    fill: '#fff',\n    stroke: globalTheme.color,\n    fillOpacity: 0,\n    lineWidth: 2\n  };\n  var attrs = mix({}, defaultAttrs, cfg.style);\n  ShapeUtil.addStrokeAttrs(attrs, cfg);\n  return attrs;\n};\n/**\n * 用贝塞尔曲线模拟正弦波\n * Using Bezier curves to fit sine wave.\n * There is 4 control points for each curve of wave,\n * which is at 1/4 wave length of the sine wave.\n *\n * The control points for a wave from (a) to (d) are a-b-c-d:\n *          c *----* d\n *     b *\n *       |\n * ... a * ..................\n *\n * whose positions are a: (0, 0), b: (0.5, 0.5), c: (1, 1), d: (PI / 2, 1)\n *\n * @param {number} x          x position of the left-most point (a)\n * @param {number} stage      0-3, stating which part of the wave it is\n * @param {number} waveLength wave length of the sine wave\n * @param {number} amplitude  wave amplitude\n * @return {Array} 正弦片段曲线\n */\n\n\nfunction getWaterWavePositions(x, stage, waveLength, amplitude) {\n  if (stage === 0) {\n    return [[x + 1 / 2 * waveLength / Math.PI / 2, amplitude / 2], [x + 1 / 2 * waveLength / Math.PI, amplitude], [x + waveLength / 4, amplitude]];\n  }\n\n  if (stage === 1) {\n    return [[x + 1 / 2 * waveLength / Math.PI / 2 * (Math.PI - 2), amplitude], [x + 1 / 2 * waveLength / Math.PI / 2 * (Math.PI - 1), amplitude / 2], [x + waveLength / 4, 0]];\n  }\n\n  if (stage === 2) {\n    return [[x + 1 / 2 * waveLength / Math.PI / 2, -amplitude / 2], [x + 1 / 2 * waveLength / Math.PI, -amplitude], [x + waveLength / 4, -amplitude]];\n  }\n\n  return [[x + 1 / 2 * waveLength / Math.PI / 2 * (Math.PI - 2), -amplitude], [x + 1 / 2 * waveLength / Math.PI / 2 * (Math.PI - 1), -amplitude / 2], [x + waveLength / 4, 0]];\n}\n/**\n * 获取水波路径\n * @param  {number} radius          半径\n * @param  {number} waterLevel      水位\n * @param  {number} waveLength      波长\n * @param  {number} phase           相位\n * @param  {number} amplitude       震幅\n * @param  {number} cx              圆心x\n * @param  {number} cy              圆心y\n * @return {Array}  path            路径\n * @reference http://gitlab.alipay-inc.com/datavis/g6/blob/1.2.0/src/graph/utils/path.js#L135\n */\n\n\nfunction getWaterWavePath(radius, waterLevel, waveLength, phase, amplitude, cx, cy) {\n  var curves = Math.ceil(2 * radius / waveLength * 4) * 2;\n  var path = [];\n  var _phase = phase; // map phase to [-Math.PI * 2, 0]\n\n  while (_phase < -Math.PI * 2) {\n    _phase += Math.PI * 2;\n  }\n\n  while (_phase > 0) {\n    _phase -= Math.PI * 2;\n  }\n\n  _phase = _phase / Math.PI / 2 * waveLength;\n  var left = cx - radius + _phase - radius * 2;\n  /**\n   * top-left corner as start point\n   *\n   * draws this point\n   *  |\n   * \\|/\n   *  ~~~~~~~~\n   *  |      |\n   *  +------+\n   */\n\n  path.push(['M', left, waterLevel]);\n  /**\n   * top wave\n   *\n   * ~~~~~~~~ <- draws this sine wave\n   * |      |\n   * +------+\n   */\n\n  var waveRight = 0;\n\n  for (var c = 0; c < curves; ++c) {\n    var stage = c % 4;\n    var pos = getWaterWavePositions(c * waveLength / 4, stage, waveLength, amplitude);\n    path.push(['C', pos[0][0] + left, -pos[0][1] + waterLevel, pos[1][0] + left, -pos[1][1] + waterLevel, pos[2][0] + left, -pos[2][1] + waterLevel]);\n\n    if (c === curves - 1) {\n      waveRight = pos[2][0];\n    }\n  }\n  /**\n   * top-right corner\n   *\n   *                       ~~~~~~~~\n   * 3. draws this line -> |      | <- 1. draws this line\n   *                       +------+\n   *                          ^\n   *                          |\n   *                  2. draws this line\n   */\n\n\n  path.push(['L', waveRight + left, cy + radius]);\n  path.push(['L', left, cy + radius]);\n  path.push(['L', left, waterLevel]);\n  return path;\n}\n/**\n * 添加水波\n * @param {number} x           中心x\n * @param {number} y           中心y\n * @param {number} level       水位等级 0～1\n * @param {number} waveCount   水波数\n * @param {number} colors      色值\n * @param {number} group       图组\n * @param {number} clip        用于剪切的图形\n * @param {number} radius      绘制图形的高度\n */\n\n\nfunction addWaterWave(x, y, level, waveCount, color, group, clip, radius) {\n  var bbox = clip.getBBox();\n  var width = bbox.maxX - bbox.minX;\n  var height = bbox.maxY - bbox.minY;\n  var duration = 5000;\n\n  for (var i = 0; i < waveCount; i++) {\n    var factor = waveCount <= 1 ? 0 : i / (waveCount - 1);\n    var wave = group.addShape('path', {\n      attrs: {\n        path: getWaterWavePath(radius, bbox.minY + height * level, width / 4, 0, width / ValueUtil.lerp(56, 64, factor), x, y),\n        fill: color,\n        opacity: ValueUtil.lerp(0.6, 0.3, factor)\n      }\n    });\n    /*wave.setClip({\n      type:'circle',\n      attrs: clip.attrs\n    })*/\n    // FIXME wave animation error in svg\n    // if (Global.renderer === 'canvas') {\n\n    var matrix = transform([['t', width / 2, 0]]);\n    wave.animate({\n      matrix: matrix\n    }, {\n      duration: ValueUtil.lerp(duration, 0.7 * duration, factor),\n      repeat: true\n    }); //}\n  }\n}\n\nregisterShape('interval', 'liquid-fill-gauge', {\n  draw: function draw(cfg, container) {\n    var cy = 0.5;\n    var minX = Infinity;\n    each(cfg.points, function (p) {\n      if (p.x < minX) {\n        minX = p.x;\n      }\n    });\n    var cx = 0.5;\n    var cp = this.parsePoint({\n      x: cx,\n      y: cy\n    });\n    var minP = this.parsePoint({\n      x: minX,\n      y: 0.5\n    });\n    var xWidth = cp.x - minP.x;\n    var radius = Math.min(xWidth, minP.y);\n    var fill = getFillAttrs(cfg).fill;\n    var waves = container.addGroup({\n      name: 'waves',\n      attrs: {\n        x: cp.x,\n        y: cp.y\n      }\n    });\n    waves.setClip({\n      type: 'circle',\n      attrs: {\n        x: cp.x,\n        y: cp.y,\n        r: radius\n      }\n    });\n    var clipCircle = waves.get('clipShape');\n    addWaterWave(cp.x, cp.y, 1 - cfg.points[1].y, // cfg.y / (2 * cp.y),\n    3, fill, waves, clipCircle, radius * 4);\n    container.addShape('circle', {\n      name: 'wrap',\n      attrs: mix(getLineAttrs(cfg), {\n        x: cp.x,\n        y: cp.y,\n        r: radius,\n        fill: 'transparent'\n      })\n    });\n    return waves[0];\n  }\n});","map":{"version":3,"sources":["../../../../../src/plots/liquid/geometry/shape/liquid.ts"],"names":[],"mappings":"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","sourcesContent":["import { registerShape } from '../../../../dependents';\nimport { isArray, each, isNumber, mix } from '@antv/util';\nimport { getGlobalTheme } from '../../../../theme';\nimport { transform } from '../../../../util/g-util';\n\nconst globalTheme = getGlobalTheme();\n\nconst ShapeUtil = {\n  splitPoints(obj) {\n    const points = [];\n    const x = obj.x;\n    let y = obj.y;\n    y = isArray(y) ? y : [y];\n    each(y, (yItem, index) => {\n      const point = {\n        x: isArray(x) ? x[index] : x,\n        y: yItem,\n      };\n      points.push(point);\n    });\n    return points;\n  },\n  addFillAttrs(attrs, cfg) {\n    if (cfg.color && !attrs.fill) {\n      attrs.fill = cfg.color;\n    }\n    if (isNumber(cfg.opacity)) {\n      attrs.opacity = attrs.fillOpacity = cfg.opacity;\n    }\n  },\n  addStrokeAttrs(attrs, cfg) {\n    if (cfg.color && !attrs.stroke) {\n      attrs.stroke = cfg.color;\n    }\n    if (isNumber(cfg.opacity)) {\n      attrs.opacity = attrs.strokeOpacity = cfg.opacity;\n    }\n  },\n};\n\nconst ValueUtil = {\n  lerp(a, b, factor) {\n    return (1 - factor) * a + factor * b;\n  },\n};\n\nconst getFillAttrs = (cfg) => {\n  const defaultAttrs = {\n    lineWidth: 0,\n    fill: globalTheme.color,\n    fillOpacity: 0.85,\n  };\n  const attrs = mix({}, defaultAttrs, cfg.style);\n  ShapeUtil.addFillAttrs(attrs, cfg);\n  if (cfg.color && !attrs.stroke) {\n    attrs.stroke = attrs.stroke || cfg.color;\n  }\n  return attrs;\n};\n\nconst getLineAttrs = (cfg) => {\n  const defaultAttrs = {\n    fill: '#fff',\n    stroke: globalTheme.color,\n    fillOpacity: 0,\n    lineWidth: 2,\n  };\n  const attrs = mix({}, defaultAttrs, cfg.style);\n  ShapeUtil.addStrokeAttrs(attrs, cfg);\n  return attrs;\n};\n\n/**\n * 用贝塞尔曲线模拟正弦波\n * Using Bezier curves to fit sine wave.\n * There is 4 control points for each curve of wave,\n * which is at 1/4 wave length of the sine wave.\n *\n * The control points for a wave from (a) to (d) are a-b-c-d:\n *          c *----* d\n *     b *\n *       |\n * ... a * ..................\n *\n * whose positions are a: (0, 0), b: (0.5, 0.5), c: (1, 1), d: (PI / 2, 1)\n *\n * @param {number} x          x position of the left-most point (a)\n * @param {number} stage      0-3, stating which part of the wave it is\n * @param {number} waveLength wave length of the sine wave\n * @param {number} amplitude  wave amplitude\n * @return {Array} 正弦片段曲线\n */\nfunction getWaterWavePositions(x, stage, waveLength, amplitude) {\n  if (stage === 0) {\n    return [\n      [x + ((1 / 2) * waveLength) / Math.PI / 2, amplitude / 2],\n      [x + ((1 / 2) * waveLength) / Math.PI, amplitude],\n      [x + waveLength / 4, amplitude],\n    ];\n  }\n  if (stage === 1) {\n    return [\n      [x + (((1 / 2) * waveLength) / Math.PI / 2) * (Math.PI - 2), amplitude],\n      [x + (((1 / 2) * waveLength) / Math.PI / 2) * (Math.PI - 1), amplitude / 2],\n      [x + waveLength / 4, 0],\n    ];\n  }\n  if (stage === 2) {\n    return [\n      [x + ((1 / 2) * waveLength) / Math.PI / 2, -amplitude / 2],\n      [x + ((1 / 2) * waveLength) / Math.PI, -amplitude],\n      [x + waveLength / 4, -amplitude],\n    ];\n  }\n  return [\n    [x + (((1 / 2) * waveLength) / Math.PI / 2) * (Math.PI - 2), -amplitude],\n    [x + (((1 / 2) * waveLength) / Math.PI / 2) * (Math.PI - 1), -amplitude / 2],\n    [x + waveLength / 4, 0],\n  ];\n}\n/**\n * 获取水波路径\n * @param  {number} radius          半径\n * @param  {number} waterLevel      水位\n * @param  {number} waveLength      波长\n * @param  {number} phase           相位\n * @param  {number} amplitude       震幅\n * @param  {number} cx              圆心x\n * @param  {number} cy              圆心y\n * @return {Array}  path            路径\n * @reference http://gitlab.alipay-inc.com/datavis/g6/blob/1.2.0/src/graph/utils/path.js#L135\n */\nfunction getWaterWavePath(radius, waterLevel, waveLength, phase, amplitude, cx, cy) {\n  const curves = Math.ceil(((2 * radius) / waveLength) * 4) * 2;\n  const path = [];\n  let _phase = phase;\n\n  // map phase to [-Math.PI * 2, 0]\n  while (_phase < -Math.PI * 2) {\n    _phase += Math.PI * 2;\n  }\n  while (_phase > 0) {\n    _phase -= Math.PI * 2;\n  }\n  _phase = (_phase / Math.PI / 2) * waveLength;\n\n  const left = cx - radius + _phase - radius * 2;\n  /**\n   * top-left corner as start point\n   *\n   * draws this point\n   *  |\n   * \\|/\n   *  ~~~~~~~~\n   *  |      |\n   *  +------+\n   */\n  path.push(['M', left, waterLevel]);\n\n  /**\n   * top wave\n   *\n   * ~~~~~~~~ <- draws this sine wave\n   * |      |\n   * +------+\n   */\n  let waveRight = 0;\n  for (let c = 0; c < curves; ++c) {\n    const stage = c % 4;\n    const pos = getWaterWavePositions((c * waveLength) / 4, stage, waveLength, amplitude);\n    path.push([\n      'C',\n      pos[0][0] + left,\n      -pos[0][1] + waterLevel,\n      pos[1][0] + left,\n      -pos[1][1] + waterLevel,\n      pos[2][0] + left,\n      -pos[2][1] + waterLevel,\n    ]);\n\n    if (c === curves - 1) {\n      waveRight = pos[2][0];\n    }\n  }\n\n  /**\n   * top-right corner\n   *\n   *                       ~~~~~~~~\n   * 3. draws this line -> |      | <- 1. draws this line\n   *                       +------+\n   *                          ^\n   *                          |\n   *                  2. draws this line\n   */\n  path.push(['L', waveRight + left, cy + radius]);\n  path.push(['L', left, cy + radius]);\n  path.push(['L', left, waterLevel]);\n  return path;\n}\n\n/**\n * 添加水波\n * @param {number} x           中心x\n * @param {number} y           中心y\n * @param {number} level       水位等级 0～1\n * @param {number} waveCount   水波数\n * @param {number} colors      色值\n * @param {number} group       图组\n * @param {number} clip        用于剪切的图形\n * @param {number} radius      绘制图形的高度\n */\nfunction addWaterWave(x, y, level, waveCount, color, group, clip, radius) {\n  const bbox = clip.getBBox();\n  const width = bbox.maxX - bbox.minX;\n  const height = bbox.maxY - bbox.minY;\n  const duration = 5000;\n  for (let i = 0; i < waveCount; i++) {\n    const factor = waveCount <= 1 ? 0 : i / (waveCount - 1);\n    const wave = group.addShape('path', {\n      attrs: {\n        path: getWaterWavePath(\n          radius,\n          bbox.minY + height * level,\n          width / 4,\n          0,\n          width / ValueUtil.lerp(56, 64, factor),\n          x,\n          y\n        ),\n        fill: color,\n        opacity: ValueUtil.lerp(0.6, 0.3, factor),\n      },\n    });\n    /*wave.setClip({\n      type:'circle',\n      attrs: clip.attrs\n    })*/\n    // FIXME wave animation error in svg\n    // if (Global.renderer === 'canvas') {\n    const matrix = transform([['t', width / 2, 0]]);\n    wave.animate(\n      { matrix },\n      {\n        duration: ValueUtil.lerp(duration, 0.7 * duration, factor),\n        repeat: true,\n      }\n    );\n    //}\n  }\n}\n\nregisterShape('interval', 'liquid-fill-gauge', {\n  draw(cfg: any, container) {\n    const cy = 0.5;\n    let minX = Infinity;\n    each(cfg.points, (p: any) => {\n      if (p.x < minX) {\n        minX = p.x;\n      }\n    });\n    const cx = 0.5;\n    const cp = this.parsePoint({ x: cx, y: cy });\n    const minP = this.parsePoint({ x: minX, y: 0.5 });\n    const xWidth = cp.x - minP.x;\n    const radius = Math.min(xWidth, minP.y);\n    const { fill } = getFillAttrs(cfg);\n    const waves = container.addGroup({\n      name: 'waves',\n      attrs: {\n        x: cp.x,\n        y: cp.y,\n      },\n    });\n    waves.setClip({\n      type: 'circle',\n      attrs: {\n        x: cp.x,\n        y: cp.y,\n        r: radius,\n      },\n    });\n    const clipCircle = waves.get('clipShape');\n    addWaterWave(\n      cp.x,\n      cp.y,\n      1 - cfg.points[1].y, // cfg.y / (2 * cp.y),\n      3,\n      fill,\n      waves,\n      clipCircle,\n      radius * 4\n    );\n    container.addShape('circle', {\n      name: 'wrap',\n      attrs: mix(getLineAttrs(cfg), {\n        x: cp.x,\n        y: cp.y,\n        r: radius,\n        fill: 'transparent',\n      }),\n    });\n    return waves[0];\n  },\n});\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}