{"ast":null,"code":"var Gesture =\n/** @class */\nfunction () {\n  function Gesture(gm) {\n    this.EVENT = 'gesture';\n    this.gm = gm;\n  }\n  /**\n   * 处理事件\n   * @param ev\n   */\n\n\n  Gesture.prototype.do = function (ev) {\n    var type = ev.type;\n\n    switch (type) {\n      case 'touchstart':\n        this.onTouchStart(ev);\n        break;\n\n      case 'touchmove':\n        this.onTouchMove(ev);\n        break;\n\n      case 'touchend':\n        this.onTouchEnd(ev);\n        break;\n\n      case 'touchcancel':\n        this.onTouchCancel(ev);\n        break;\n\n      default:\n        return;\n    }\n  };\n  /**\n   * 触发事件\n   * @param e\n   */\n\n\n  Gesture.prototype.emit = function (e) {\n    this.gm.emit(this.EVENT, e);\n  };\n\n  return Gesture;\n}();\n\nexport { Gesture };","map":{"version":3,"sources":["../../src/gestures/gesture.ts"],"names":[],"mappings":"AAwBA,IAAA,OAAA;AAAA;AAAA,YAAA;AAKE,WAAA,OAAA,CAAY,EAAZ,EAAkB;AAJC,SAAA,KAAA,GAAQ,SAAR;AAKjB,SAAK,EAAL,GAAU,EAAV;AACD;AAED;;;;;;AAIO,EAAA,OAAA,CAAA,SAAA,CAAA,EAAA,GAAP,UAAU,EAAV,EAAmB;AACT,QAAA,IAAA,GAAA,EAAA,CAAA,IAAA;;AAER,YAAQ,IAAR;AACE,WAAK,YAAL;AACE,aAAK,YAAL,CAAkB,EAAlB;AACA;;AACF,WAAK,WAAL;AACE,aAAK,WAAL,CAAiB,EAAjB;AACA;;AACF,WAAK,UAAL;AACE,aAAK,UAAL,CAAgB,EAAhB;AACA;;AACF,WAAK,aAAL;AACE,aAAK,aAAL,CAAmB,EAAnB;AACA;;AACF;AACE;AAdJ;AAgBD,GAnBM;AAqBP;;;;;;AAIU,EAAA,OAAA,CAAA,SAAA,CAAA,IAAA,GAAV,UAAe,CAAf,EAA8B;AAC5B,SAAK,EAAL,CAAQ,IAAR,CAAa,KAAK,KAAlB,EAAyB,CAAzB;AACD,GAFS;;AAQZ,SAAA,OAAA;AAAC,CA9CD,EAAA","sourceRoot":"","sourcesContent":["var Gesture = /** @class */ (function () {\n    function Gesture(gm) {\n        this.EVENT = 'gesture';\n        this.gm = gm;\n    }\n    /**\n     * 处理事件\n     * @param ev\n     */\n    Gesture.prototype.do = function (ev) {\n        var type = ev.type;\n        switch (type) {\n            case 'touchstart':\n                this.onTouchStart(ev);\n                break;\n            case 'touchmove':\n                this.onTouchMove(ev);\n                break;\n            case 'touchend':\n                this.onTouchEnd(ev);\n                break;\n            case 'touchcancel':\n                this.onTouchCancel(ev);\n                break;\n            default:\n                return;\n        }\n    };\n    /**\n     * 触发事件\n     * @param e\n     */\n    Gesture.prototype.emit = function (e) {\n        this.gm.emit(this.EVENT, e);\n    };\n    return Gesture;\n}());\nexport { Gesture };\n//# sourceMappingURL=gesture.js.map"]},"metadata":{},"sourceType":"module"}