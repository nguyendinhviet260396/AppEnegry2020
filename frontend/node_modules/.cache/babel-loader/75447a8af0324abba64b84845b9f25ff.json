{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { isString, isFunction, isArray, isObject, get } from '@antv/util';\nimport ElementParser from '../base';\nvar COLOR_MAPPER = ['colorField', 'stackField', 'groupField'];\n\nvar IntervalParser =\n/** @class */\nfunction (_super) {\n  __extends(IntervalParser, _super);\n\n  function IntervalParser() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  IntervalParser.prototype.init = function () {\n    this.type = 'interval';\n\n    _super.prototype.init.call(this);\n\n    var props = this.plot.options;\n\n    if (this._needParserColor()) {\n      this.parseColor();\n    }\n\n    if (!this.config.color) {\n      this.config.color = {\n        values: ['#5b8ff9']\n      };\n    }\n\n    var sizeProps = this._getSizeProps(props);\n\n    if (sizeProps) {\n      this.parseSize(sizeProps);\n    }\n\n    var styleProps = this._getStyleProps(props);\n\n    if (styleProps) {\n      this.parseStyle(styleProps);\n    }\n  };\n\n  IntervalParser.prototype.parseColor = function () {\n    var props = this.plot.options;\n\n    var colorField = this._getColorMappingField(props);\n\n    var config = {};\n\n    if (colorField) {\n      config.fields = colorField;\n    }\n\n    if (props.color) {\n      if (isString(props.color)) {\n        config.values = [props.color];\n      } else if (isFunction(props.color)) {\n        config.callback = props.color;\n      } else if (isArray(props.color)) {\n        if (colorField) {\n          config.values = props.color;\n        } else {\n          if (props.color.length > 0) {\n            config.values = [props.color[0]];\n          }\n        }\n      } else if (isObject(props.color)) {\n        config.fields = colorField;\n\n        config.callback = function (d) {\n          return props.color[d];\n        };\n      }\n    }\n\n    this.config.color = config;\n  };\n\n  IntervalParser.prototype.parseSize = function (sizeProps) {\n    var props = this.plot.options;\n    var config = {};\n\n    if (isFunction(props[sizeProps])) {\n      config.fields = [this.config.position.fields];\n      config.callback = props[sizeProps];\n    } else {\n      config.values = [props[sizeProps]];\n    }\n\n    this.config.size = config;\n  };\n\n  IntervalParser.prototype.parseStyle = function (styleProps) {\n    var props = this.plot.options;\n    var color = this.config.color;\n    var style = this.plot.options[styleProps];\n    var config = {};\n\n    if (isFunction(style)) {\n      config.fields = (color === null || color === void 0 ? void 0 : color.fields) || [props.xField, props.yField];\n      config.callback = style;\n    } else {\n      config.cfg = style;\n    }\n\n    this.config.style = config;\n  };\n\n  IntervalParser.prototype._getSizeProps = function (props) {\n    var sizeMapper = ['columnSize', 'barSize'];\n\n    for (var _i = 0, sizeMapper_1 = sizeMapper; _i < sizeMapper_1.length; _i++) {\n      var m = sizeMapper_1[_i];\n\n      if (get(props, m)) {\n        return m;\n      }\n    }\n  };\n\n  IntervalParser.prototype._getStyleProps = function (props) {\n    var sizeMapper = ['columnStyle', 'barStyle', 'pieStyle', 'ringStyle'];\n\n    for (var _i = 0, sizeMapper_2 = sizeMapper; _i < sizeMapper_2.length; _i++) {\n      var m = sizeMapper_2[_i];\n\n      if (get(props, m)) {\n        return m;\n      }\n    }\n  };\n\n  IntervalParser.prototype._getColorMappingField = function (props) {\n    /**如果有colorFiled或stackField配置项(后者为堆叠interval)，则参与colorMapping的字段为对应值\n     * 如没有特别设定，则一般是callback中的传参，传入位置映射的字段\n     */\n    for (var _i = 0, COLOR_MAPPER_1 = COLOR_MAPPER; _i < COLOR_MAPPER_1.length; _i++) {\n      var m = COLOR_MAPPER_1[_i];\n\n      if (get(props, m)) {\n        return [props[m]];\n      }\n    }\n  };\n\n  IntervalParser.prototype._needParserColor = function () {\n    var props = this.plot.options;\n\n    if (props.color) {\n      return true;\n    }\n\n    for (var _i = 0, COLOR_MAPPER_2 = COLOR_MAPPER; _i < COLOR_MAPPER_2.length; _i++) {\n      var m = COLOR_MAPPER_2[_i];\n\n      if (props[m]) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  return IntervalParser;\n}(ElementParser);\n\nexport default IntervalParser;","map":{"version":3,"sources":["../../../src/geoms/interval/main.ts"],"names":[],"mappings":"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","sourcesContent":["import { isString, isFunction, isArray, isObject, get } from '@antv/util';\nimport ElementParser from '../base';\n\nconst COLOR_MAPPER = ['colorField', 'stackField', 'groupField'];\n\nexport default class IntervalParser extends ElementParser {\n  public init() {\n    this.type = 'interval';\n    super.init();\n    const props = this.plot.options;\n    if (this._needParserColor()) {\n      this.parseColor();\n    }\n    if (!this.config.color) {\n      this.config.color = { values: ['#5b8ff9'] };\n    }\n    const sizeProps = this._getSizeProps(props);\n    if (sizeProps) {\n      this.parseSize(sizeProps);\n    }\n    const styleProps = this._getStyleProps(props);\n    if (styleProps) {\n      this.parseStyle(styleProps);\n    }\n  }\n\n  public parseColor() {\n    const props = this.plot.options;\n    const colorField = this._getColorMappingField(props);\n    const config: any = {};\n    if (colorField) {\n      config.fields = colorField;\n    }\n    if (props.color) {\n      if (isString(props.color)) {\n        config.values = [props.color];\n      } else if (isFunction(props.color)) {\n        config.callback = props.color;\n      } else if (isArray(props.color)) {\n        if (colorField) {\n          config.values = props.color;\n        } else {\n          if (props.color.length > 0) {\n            config.values = [props.color[0]];\n          }\n        }\n      } else if (isObject(props.color)) {\n        config.fields = colorField;\n        config.callback = (d) => {\n          return props.color[d];\n        };\n      }\n    }\n    this.config.color = config;\n  }\n\n  public parseSize(sizeProps) {\n    const props = this.plot.options;\n    const config: any = {};\n    if (isFunction(props[sizeProps])) {\n      config.fields = [this.config.position.fields];\n      config.callback = props[sizeProps];\n    } else {\n      config.values = [props[sizeProps]];\n    }\n    this.config.size = config;\n  }\n\n  public parseStyle(styleProps) {\n    const props = this.plot.options;\n    const color = this.config.color;\n    const style = this.plot.options[styleProps];\n    const config: any = {};\n    if (isFunction(style)) {\n      config.fields = color?.fields || [props.xField, props.yField];\n      config.callback = style;\n    } else {\n      config.cfg = style;\n    }\n\n    this.config.style = config;\n  }\n\n  private _getSizeProps(props) {\n    const sizeMapper = ['columnSize', 'barSize'];\n    for (const m of sizeMapper) {\n      if (get(props, m)) {\n        return m;\n      }\n    }\n  }\n\n  private _getStyleProps(props) {\n    const sizeMapper = ['columnStyle', 'barStyle', 'pieStyle', 'ringStyle'];\n    for (const m of sizeMapper) {\n      if (get(props, m)) {\n        return m;\n      }\n    }\n  }\n\n  private _getColorMappingField(props) {\n    /**如果有colorFiled或stackField配置项(后者为堆叠interval)，则参与colorMapping的字段为对应值\n     * 如没有特别设定，则一般是callback中的传参，传入位置映射的字段\n     */\n    for (const m of COLOR_MAPPER) {\n      if (get(props, m)) {\n        return [props[m]];\n      }\n    }\n  }\n\n  private _needParserColor() {\n    const props = this.plot.options;\n    if (props.color) {\n      return true;\n    }\n    for (const m of COLOR_MAPPER) {\n      if (props[m]) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}