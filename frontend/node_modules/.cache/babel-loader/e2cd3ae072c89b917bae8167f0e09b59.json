{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { each, isArray, isFunction, deepMix } from '@antv/util';\nimport BBox from '../../../util/bbox';\n\nvar Quadrant =\n/** @class */\nfunction () {\n  function Quadrant(cfg) {\n    this.quadrantGroups = [];\n    this.regionData = [];\n    this.lineData = [];\n    this.options = cfg;\n    this.view = this.options.view;\n    this.init();\n  }\n\n  Quadrant.prototype.init = function () {\n    var _a = this.options,\n        xBaseline = _a.xBaseline,\n        yBaseline = _a.yBaseline;\n    var coord = this.view.getCoordinate(); // TODO: xBaseline和yBaseline支持百分比\n    // 根据 xBaseline 和 yBaseline 分割象限\n\n    var xScale = this.view.getScaleByField(this.options.plotOptions.xField);\n    var yScale = this.view.getScaleByField(this.options.plotOptions.yField); // 先进行 x 方向的分割\n\n    var xRegion;\n\n    if (xBaseline > xScale.min && xBaseline < xScale.max) {\n      var ratio = (xBaseline - xScale.min) / (xScale.max - xScale.min);\n      xRegion = [new BBox(coord.start.x, coord.end.y, coord.getWidth() * ratio, coord.getHeight()), new BBox(coord.start.x + coord.getWidth() * ratio, coord.end.y, coord.getWidth() * (1 - ratio), coord.getHeight())];\n      var verticalLineData = {\n        start: {\n          x: coord.start.x + coord.getWidth() * ratio,\n          y: coord.end.y\n        },\n        end: {\n          x: coord.start.x + coord.getWidth() * ratio,\n          y: coord.start.y\n        }\n      };\n      this.lineData.push(verticalLineData);\n    } else {\n      xRegion = [new BBox(coord.start.x, coord.end.y, coord.getWidth(), coord.getHeight())];\n    } // 再进行 y 方向的分割\n\n\n    if (yBaseline > yScale.min && yBaseline < yScale.max) {\n      var ratio = (yBaseline - yScale.min) / (yScale.max - yScale.min);\n      var horizontalLineData = {\n        start: {\n          x: coord.start.x,\n          y: coord.start.y - coord.getHeight() * ratio\n        },\n        end: {\n          x: coord.end.x,\n          y: coord.start.y - coord.getHeight() * ratio\n        }\n      };\n      this.lineData.push(horizontalLineData);\n      var topQuadrant = {\n        name: xBaseline <= xScale.min ? 'top-right' : 'top-left',\n        bbox: new BBox(xRegion[0].minX, xRegion[0].minY, xRegion[0].width, xRegion[0].height * (1 - ratio)),\n        index: xBaseline <= xScale.min ? 2 : 0\n      };\n      this.regionData.push(topQuadrant);\n      var bottomQuadrant = {\n        name: xBaseline <= xScale.min ? 'bottom-right' : 'bottom-left',\n        bbox: new BBox(xRegion[0].minX, xRegion[0].minY + xRegion[0].height * (1 - ratio), xRegion[0].width, xRegion[0].height * ratio),\n        index: xBaseline <= xScale.min ? 3 : 1\n      };\n      this.regionData.push(bottomQuadrant); // 四象限齐全\n\n      if (xRegion.length > 1) {\n        var rightTopQuadrant = {\n          name: 'top-right',\n          bbox: new BBox(xRegion[1].minX, xRegion[1].minY, xRegion[1].width, xRegion[1].height * (1 - ratio)),\n          index: 2\n        };\n        this.regionData.push(rightTopQuadrant);\n        var rightBottomQuadrant = {\n          name: 'bottom-right',\n          bbox: new BBox(xRegion[1].minX, xRegion[1].minY + xRegion[1].height * (1 - ratio), xRegion[1].width, xRegion[1].height * ratio),\n          index: 3\n        };\n        this.regionData.push(rightBottomQuadrant);\n      }\n    } else if (xRegion.length === 2) {\n      if (yBaseline <= yScale.min) {\n        var leftTopQuadrant = {\n          name: 'top-left',\n          bbox: xRegion[0],\n          index: 0\n        };\n        this.regionData.push(leftTopQuadrant);\n        var rightTopQuadrant = {\n          name: 'top-right',\n          bbox: xRegion[1],\n          index: 2\n        };\n        this.regionData.push(rightTopQuadrant);\n      } else {\n        var leftBottomQuadrant = {\n          name: 'bottom-left',\n          bbox: xRegion[0],\n          index: 1\n        };\n        this.regionData.push(leftBottomQuadrant);\n        var rightBottomQuadrant = {\n          name: 'bottom-right',\n          bbox: xRegion[1],\n          index: 3\n        };\n        this.regionData.push(rightBottomQuadrant);\n      }\n    } else {\n      // 当前绘制区域全部在一个象限中\n      if (xBaseline <= xScale.min) {\n        if (yBaseline <= yScale.min) {\n          var rightTopQuadrant = {\n            name: 'top-right',\n            bbox: xRegion[0],\n            index: 2\n          };\n          this.regionData.push(rightTopQuadrant);\n        } else {\n          var rightBottomQuadrant = {\n            name: 'bottom-right',\n            bbox: xRegion[0],\n            index: 3\n          };\n          this.regionData.push(rightBottomQuadrant);\n        }\n      } else {\n        if (yBaseline <= yScale.min) {\n          var leftTopQuadrant = {\n            name: 'top-left',\n            bbox: xRegion[0],\n            index: 0\n          };\n          this.regionData.push(leftTopQuadrant);\n        } else {\n          var leftBottomQuadrant = {\n            name: 'bottom-left',\n            bbox: xRegion[0],\n            index: 1\n          };\n          this.regionData.push(leftBottomQuadrant);\n        }\n      }\n    } // 创建container\n\n\n    this.container = this.view.backgroundGroup.addGroup();\n  };\n\n  Quadrant.prototype.render = function () {\n    var _this = this;\n\n    if (this.regionData.length > 0) {\n      var defaultStyle_1 = this.getDefaultStyle();\n      var regionStyle_1 = this.getRegionStyle(this.regionData);\n      each(this.regionData, function (d) {\n        var index = d.index;\n\n        var group = _this.container.addGroup();\n\n        var rect = group.addShape('rect', {\n          attrs: __assign({\n            x: d.bbox.minX,\n            y: d.bbox.minY,\n            width: d.bbox.width,\n            height: d.bbox.height\n          }, regionStyle_1[index]),\n          name: 'quadrant'\n        });\n\n        if (_this.options.label && _this.options.label.text) {\n          var labelOptions = deepMix({}, defaultStyle_1.label, _this.options.label);\n\n          var labelCfg = _this.getLabelConfig(d, labelOptions);\n\n          group.addShape('text', {\n            attrs: __assign({}, labelCfg),\n            name: 'quadrant-label'\n          });\n        } // rect.setSilent('data', d);\n\n\n        rect.set('data', d);\n\n        _this.quadrantGroups.push(group);\n      }); // 绘制象限辅助线\n\n      var lineStyle_1 = deepMix({}, defaultStyle_1.line, this.options.lineStyle);\n      each(this.lineData, function (d) {\n        _this.container.addShape('path', {\n          attrs: __assign({\n            path: [['M', d.start.x, d.start.y], ['L', d.end.x, d.end.y]]\n          }, lineStyle_1),\n          name: 'quadrant-line'\n        });\n      });\n      this.view.canvas.draw();\n    }\n  };\n\n  Quadrant.prototype.clear = function () {\n    if (this.container) {\n      this.container.clear();\n    }\n  };\n\n  Quadrant.prototype.destroy = function () {\n    if (this.container) {\n      this.container.remove();\n    }\n  };\n\n  Quadrant.prototype.getDefaultStyle = function () {\n    return {\n      line: {\n        stroke: '#9ba29a',\n        lineWidth: 1\n      },\n      regionStyle: [{\n        fill: '#000000',\n        opacity: 0.05\n      }, {\n        fill: '#ffffff',\n        opacity: 0\n      }, {\n        fill: '#ffffff',\n        opacity: 0\n      }, {\n        fill: '#000000',\n        opacity: 0.05\n      }],\n      label: {\n        position: 'outter-inner',\n        offset: 10,\n        style: {\n          fontSize: 14,\n          fill: '#ccc'\n        }\n      }\n    };\n  };\n\n  Quadrant.prototype.getRegionStyle = function (regionData) {\n    var defaultStyle = this.getDefaultStyle();\n    var style = defaultStyle.regionStyle;\n\n    if (this.options.regionStyle) {\n      var regionStyle_2 = this.options.regionStyle;\n\n      if (isArray(regionStyle_2)) {\n        style = style.map(function (s, index) {\n          if (regionStyle_2.length > index && regionStyle_2[index]) {\n            return regionStyle_2[index];\n          }\n\n          return s;\n        });\n      } else if (isFunction(regionStyle_2)) {\n        each(regionData, function (d, index) {\n          style[index] = regionStyle_2(d);\n        });\n      }\n    }\n\n    return style;\n  };\n\n  Quadrant.prototype.getLabelConfig = function (region, labelOptions) {\n    var index = region.index;\n    var x = 0;\n    var y = 0;\n    var style = {};\n    var text = labelOptions.text;\n\n    if (isFunction(text)) {\n      text = text(region);\n    } else if (isArray(text)) {\n      text = text[index];\n    }\n\n    var position = labelOptions.position;\n    var pos = position.split('-');\n    var dim = region.name.split('-'); // x方向\n\n    if (dim[1] === 'left') {\n      if (pos[0] === 'inner') {\n        x = region.bbox.maxX - labelOptions.offset;\n        style.textAlign = 'right';\n      }\n\n      if (pos[0] === 'outter') {\n        x = region.bbox.minX + labelOptions.offset;\n        style.textAlign = 'left';\n      }\n    } else if (dim[1] === 'right') {\n      if (pos[0] === 'inner') {\n        x = region.bbox.minX + labelOptions.offset;\n        style.textAlign = 'left';\n      }\n\n      if (pos[0] === 'outter') {\n        x = region.bbox.maxX - labelOptions.offset;\n        style.textAlign = 'right';\n      }\n    } // y方向\n\n\n    if (dim[0] === 'top') {\n      if (pos[1] === 'inner') {\n        y = region.bbox.maxY - labelOptions.offset;\n        style.textBaseline = 'bottom';\n      }\n\n      if (pos[1] === 'outter') {\n        y = region.bbox.minY + labelOptions.offset;\n        style.textBaseline = 'top';\n      }\n    } else if (dim[0] === 'bottom') {\n      if (pos[1] === 'inner') {\n        y = region.bbox.minY + labelOptions.offset;\n        style.textBaseline = 'top';\n      }\n\n      if (pos[1] === 'outter') {\n        y = region.bbox.maxY - labelOptions.offset;\n        style.textBaseline = 'bottom';\n      }\n    }\n\n    style = deepMix({}, labelOptions.style, style);\n    style.lineHeight = style.fontSize;\n    return __assign({\n      x: x,\n      y: y,\n      text: text\n    }, style);\n  };\n\n  return Quadrant;\n}();\n\nexport default Quadrant;","map":{"version":3,"sources":["../../../../src/plots/scatter/components/quadrant.ts"],"names":[],"mappings":";AAAA,SAAS,IAAT,EAAe,OAAf,EAAwB,UAAxB,EAAoC,OAApC,QAAmD,YAAnD;AACA,OAAO,IAAP,MAAiB,oBAAjB;;AAwBA,IAAA,QAAA;AAAA;AAAA,YAAA;AAQE,WAAA,QAAA,CAAY,GAAZ,EAA0B;AALhB,SAAA,cAAA,GAA2B,EAA3B;AAEA,SAAA,UAAA,GAAoB,EAApB;AACA,SAAA,QAAA,GAAkB,EAAlB;AAGR,SAAK,OAAL,GAAe,GAAf;AACA,SAAK,IAAL,GAAY,KAAK,OAAL,CAAa,IAAzB;AACA,SAAK,IAAL;AACD;;AAEM,EAAA,QAAA,CAAA,SAAA,CAAA,IAAA,GAAP,YAAA;AACQ,QAAA,EAAA,GAA2B,KAAK,OAAhC;AAAA,QAAE,SAAS,GAAA,EAAA,CAAA,SAAX;AAAA,QAAa,SAAS,GAAA,EAAA,CAAA,SAAtB;AACN,QAAM,KAAK,GAAG,KAAK,IAAL,CAAU,aAAV,EAAd,CAFF,CAGE;AACA;;AACA,QAAM,MAAM,GAAG,KAAK,IAAL,CAAU,eAAV,CAA0B,KAAK,OAAL,CAAa,WAAb,CAAyB,MAAnD,CAAf;AACA,QAAM,MAAM,GAAG,KAAK,IAAL,CAAU,eAAV,CAA0B,KAAK,OAAL,CAAa,WAAb,CAAyB,MAAnD,CAAf,CANF,CAOE;;AACA,QAAI,OAAJ;;AACA,QAAI,SAAS,GAAG,MAAM,CAAC,GAAnB,IAA0B,SAAS,GAAG,MAAM,CAAC,GAAjD,EAAsD;AACpD,UAAM,KAAK,GAAG,CAAC,SAAS,GAAG,MAAM,CAAC,GAApB,KAA4B,MAAM,CAAC,GAAP,GAAa,MAAM,CAAC,GAAhD,CAAd;AACA,MAAA,OAAO,GAAG,CACR,IAAI,IAAJ,CAAS,KAAK,CAAC,KAAN,CAAY,CAArB,EAAwB,KAAK,CAAC,GAAN,CAAU,CAAlC,EAAqC,KAAK,CAAC,QAAN,KAAmB,KAAxD,EAA+D,KAAK,CAAC,SAAN,EAA/D,CADQ,EAER,IAAI,IAAJ,CACE,KAAK,CAAC,KAAN,CAAY,CAAZ,GAAgB,KAAK,CAAC,QAAN,KAAmB,KADrC,EAEE,KAAK,CAAC,GAAN,CAAU,CAFZ,EAGE,KAAK,CAAC,QAAN,MAAoB,IAAI,KAAxB,CAHF,EAIE,KAAK,CAAC,SAAN,EAJF,CAFQ,CAAV;AASA,UAAM,gBAAgB,GAAG;AACvB,QAAA,KAAK,EAAE;AAAE,UAAA,CAAC,EAAE,KAAK,CAAC,KAAN,CAAY,CAAZ,GAAgB,KAAK,CAAC,QAAN,KAAmB,KAAxC;AAA+C,UAAA,CAAC,EAAE,KAAK,CAAC,GAAN,CAAU;AAA5D,SADgB;AAEvB,QAAA,GAAG,EAAE;AAAE,UAAA,CAAC,EAAE,KAAK,CAAC,KAAN,CAAY,CAAZ,GAAgB,KAAK,CAAC,QAAN,KAAmB,KAAxC;AAA+C,UAAA,CAAC,EAAE,KAAK,CAAC,KAAN,CAAY;AAA9D;AAFkB,OAAzB;AAIA,WAAK,QAAL,CAAc,IAAd,CAAmB,gBAAnB;AACD,KAhBD,MAgBO;AACL,MAAA,OAAO,GAAG,CAAC,IAAI,IAAJ,CAAS,KAAK,CAAC,KAAN,CAAY,CAArB,EAAwB,KAAK,CAAC,GAAN,CAAU,CAAlC,EAAqC,KAAK,CAAC,QAAN,EAArC,EAAuD,KAAK,CAAC,SAAN,EAAvD,CAAD,CAAV;AACD,KA3BH,CA4BE;;;AACA,QAAI,SAAS,GAAG,MAAM,CAAC,GAAnB,IAA0B,SAAS,GAAG,MAAM,CAAC,GAAjD,EAAsD;AACpD,UAAM,KAAK,GAAG,CAAC,SAAS,GAAG,MAAM,CAAC,GAApB,KAA4B,MAAM,CAAC,GAAP,GAAa,MAAM,CAAC,GAAhD,CAAd;AACA,UAAM,kBAAkB,GAAG;AACzB,QAAA,KAAK,EAAE;AAAE,UAAA,CAAC,EAAE,KAAK,CAAC,KAAN,CAAY,CAAjB;AAAoB,UAAA,CAAC,EAAE,KAAK,CAAC,KAAN,CAAY,CAAZ,GAAgB,KAAK,CAAC,SAAN,KAAoB;AAA3D,SADkB;AAEzB,QAAA,GAAG,EAAE;AAAE,UAAA,CAAC,EAAE,KAAK,CAAC,GAAN,CAAU,CAAf;AAAkB,UAAA,CAAC,EAAE,KAAK,CAAC,KAAN,CAAY,CAAZ,GAAgB,KAAK,CAAC,SAAN,KAAoB;AAAzD;AAFoB,OAA3B;AAIA,WAAK,QAAL,CAAc,IAAd,CAAmB,kBAAnB;AACA,UAAM,WAAW,GAAG;AAClB,QAAA,IAAI,EAAE,SAAS,IAAI,MAAM,CAAC,GAApB,GAA0B,WAA1B,GAAwC,UAD5B;AAElB,QAAA,IAAI,EAAE,IAAI,IAAJ,CAAS,OAAO,CAAC,CAAD,CAAP,CAAW,IAApB,EAA0B,OAAO,CAAC,CAAD,CAAP,CAAW,IAArC,EAA2C,OAAO,CAAC,CAAD,CAAP,CAAW,KAAtD,EAA6D,OAAO,CAAC,CAAD,CAAP,CAAW,MAAX,IAAqB,IAAI,KAAzB,CAA7D,CAFY;AAGlB,QAAA,KAAK,EAAE,SAAS,IAAI,MAAM,CAAC,GAApB,GAA0B,CAA1B,GAA8B;AAHnB,OAApB;AAKA,WAAK,UAAL,CAAgB,IAAhB,CAAqB,WAArB;AACA,UAAM,cAAc,GAAG;AACrB,QAAA,IAAI,EAAE,SAAS,IAAI,MAAM,CAAC,GAApB,GAA0B,cAA1B,GAA2C,aAD5B;AAErB,QAAA,IAAI,EAAE,IAAI,IAAJ,CACJ,OAAO,CAAC,CAAD,CAAP,CAAW,IADP,EAEJ,OAAO,CAAC,CAAD,CAAP,CAAW,IAAX,GAAkB,OAAO,CAAC,CAAD,CAAP,CAAW,MAAX,IAAqB,IAAI,KAAzB,CAFd,EAGJ,OAAO,CAAC,CAAD,CAAP,CAAW,KAHP,EAIJ,OAAO,CAAC,CAAD,CAAP,CAAW,MAAX,GAAoB,KAJhB,CAFe;AAQrB,QAAA,KAAK,EAAE,SAAS,IAAI,MAAM,CAAC,GAApB,GAA0B,CAA1B,GAA8B;AARhB,OAAvB;AAUA,WAAK,UAAL,CAAgB,IAAhB,CAAqB,cAArB,EAvBoD,CAwBpD;;AACA,UAAI,OAAO,CAAC,MAAR,GAAiB,CAArB,EAAwB;AACtB,YAAM,gBAAgB,GAAG;AACvB,UAAA,IAAI,EAAE,WADiB;AAEvB,UAAA,IAAI,EAAE,IAAI,IAAJ,CAAS,OAAO,CAAC,CAAD,CAAP,CAAW,IAApB,EAA0B,OAAO,CAAC,CAAD,CAAP,CAAW,IAArC,EAA2C,OAAO,CAAC,CAAD,CAAP,CAAW,KAAtD,EAA6D,OAAO,CAAC,CAAD,CAAP,CAAW,MAAX,IAAqB,IAAI,KAAzB,CAA7D,CAFiB;AAGvB,UAAA,KAAK,EAAE;AAHgB,SAAzB;AAKA,aAAK,UAAL,CAAgB,IAAhB,CAAqB,gBAArB;AACA,YAAM,mBAAmB,GAAG;AAC1B,UAAA,IAAI,EAAE,cADoB;AAE1B,UAAA,IAAI,EAAE,IAAI,IAAJ,CACJ,OAAO,CAAC,CAAD,CAAP,CAAW,IADP,EAEJ,OAAO,CAAC,CAAD,CAAP,CAAW,IAAX,GAAkB,OAAO,CAAC,CAAD,CAAP,CAAW,MAAX,IAAqB,IAAI,KAAzB,CAFd,EAGJ,OAAO,CAAC,CAAD,CAAP,CAAW,KAHP,EAIJ,OAAO,CAAC,CAAD,CAAP,CAAW,MAAX,GAAoB,KAJhB,CAFoB;AAQ1B,UAAA,KAAK,EAAE;AARmB,SAA5B;AAUA,aAAK,UAAL,CAAgB,IAAhB,CAAqB,mBAArB;AACD;AACF,KA5CD,MA4CO,IAAI,OAAO,CAAC,MAAR,KAAmB,CAAvB,EAA0B;AAC/B,UAAI,SAAS,IAAI,MAAM,CAAC,GAAxB,EAA6B;AAC3B,YAAM,eAAe,GAAG;AACtB,UAAA,IAAI,EAAE,UADgB;AAEtB,UAAA,IAAI,EAAE,OAAO,CAAC,CAAD,CAFS;AAGtB,UAAA,KAAK,EAAE;AAHe,SAAxB;AAKA,aAAK,UAAL,CAAgB,IAAhB,CAAqB,eAArB;AACA,YAAM,gBAAgB,GAAG;AACvB,UAAA,IAAI,EAAE,WADiB;AAEvB,UAAA,IAAI,EAAE,OAAO,CAAC,CAAD,CAFU;AAGvB,UAAA,KAAK,EAAE;AAHgB,SAAzB;AAKA,aAAK,UAAL,CAAgB,IAAhB,CAAqB,gBAArB;AACD,OAbD,MAaO;AACL,YAAM,kBAAkB,GAAG;AACzB,UAAA,IAAI,EAAE,aADmB;AAEzB,UAAA,IAAI,EAAE,OAAO,CAAC,CAAD,CAFY;AAGzB,UAAA,KAAK,EAAE;AAHkB,SAA3B;AAKA,aAAK,UAAL,CAAgB,IAAhB,CAAqB,kBAArB;AACA,YAAM,mBAAmB,GAAG;AAC1B,UAAA,IAAI,EAAE,cADoB;AAE1B,UAAA,IAAI,EAAE,OAAO,CAAC,CAAD,CAFa;AAG1B,UAAA,KAAK,EAAE;AAHmB,SAA5B;AAKA,aAAK,UAAL,CAAgB,IAAhB,CAAqB,mBAArB;AACD;AACF,KA5BM,MA4BA;AACL;AACA,UAAI,SAAS,IAAI,MAAM,CAAC,GAAxB,EAA6B;AAC3B,YAAI,SAAS,IAAI,MAAM,CAAC,GAAxB,EAA6B;AAC3B,cAAM,gBAAgB,GAAG;AACvB,YAAA,IAAI,EAAE,WADiB;AAEvB,YAAA,IAAI,EAAE,OAAO,CAAC,CAAD,CAFU;AAGvB,YAAA,KAAK,EAAE;AAHgB,WAAzB;AAKA,eAAK,UAAL,CAAgB,IAAhB,CAAqB,gBAArB;AACD,SAPD,MAOO;AACL,cAAM,mBAAmB,GAAG;AAC1B,YAAA,IAAI,EAAE,cADoB;AAE1B,YAAA,IAAI,EAAE,OAAO,CAAC,CAAD,CAFa;AAG1B,YAAA,KAAK,EAAE;AAHmB,WAA5B;AAKA,eAAK,UAAL,CAAgB,IAAhB,CAAqB,mBAArB;AACD;AACF,OAhBD,MAgBO;AACL,YAAI,SAAS,IAAI,MAAM,CAAC,GAAxB,EAA6B;AAC3B,cAAM,eAAe,GAAG;AACtB,YAAA,IAAI,EAAE,UADgB;AAEtB,YAAA,IAAI,EAAE,OAAO,CAAC,CAAD,CAFS;AAGtB,YAAA,KAAK,EAAE;AAHe,WAAxB;AAKA,eAAK,UAAL,CAAgB,IAAhB,CAAqB,eAArB;AACD,SAPD,MAOO;AACL,cAAM,kBAAkB,GAAG;AACzB,YAAA,IAAI,EAAE,aADmB;AAEzB,YAAA,IAAI,EAAE,OAAO,CAAC,CAAD,CAFY;AAGzB,YAAA,KAAK,EAAE;AAHkB,WAA3B;AAKA,eAAK,UAAL,CAAgB,IAAhB,CAAqB,kBAArB;AACD;AACF;AACF,KAxIH,CAyIE;;;AACA,SAAK,SAAL,GAAiB,KAAK,IAAL,CAAU,eAAV,CAA0B,QAA1B,EAAjB;AACD,GA3IM;;AA6IA,EAAA,QAAA,CAAA,SAAA,CAAA,MAAA,GAAP,YAAA;AAAA,QAAA,KAAA,GAAA,IAAA;;AACE,QAAI,KAAK,UAAL,CAAgB,MAAhB,GAAyB,CAA7B,EAAgC;AAC9B,UAAM,cAAY,GAAG,KAAK,eAAL,EAArB;AACA,UAAM,aAAW,GAAG,KAAK,cAAL,CAAoB,KAAK,UAAzB,CAApB;AACA,MAAA,IAAI,CAAC,KAAK,UAAN,EAAkB,UAAC,CAAD,EAAE;AACd,YAAA,KAAK,GAAK,CAAC,CAAN,KAAL;;AACR,YAAM,KAAK,GAAG,KAAI,CAAC,SAAL,CAAe,QAAf,EAAd;;AACA,YAAM,IAAI,GAAG,KAAK,CAAC,QAAN,CAAe,MAAf,EAAuB;AAClC,UAAA,KAAK,EAAA,QAAA,CAAA;AACH,YAAA,CAAC,EAAE,CAAC,CAAC,IAAF,CAAO,IADP;AAEH,YAAA,CAAC,EAAE,CAAC,CAAC,IAAF,CAAO,IAFP;AAGH,YAAA,KAAK,EAAE,CAAC,CAAC,IAAF,CAAO,KAHX;AAIH,YAAA,MAAM,EAAE,CAAC,CAAC,IAAF,CAAO;AAJZ,WAAA,EAKA,aAAW,CAAC,KAAD,CALX,CAD6B;AAQlC,UAAA,IAAI,EAAE;AAR4B,SAAvB,CAAb;;AAUA,YAAI,KAAI,CAAC,OAAL,CAAa,KAAb,IAAsB,KAAI,CAAC,OAAL,CAAa,KAAb,CAAmB,IAA7C,EAAmD;AACjD,cAAM,YAAY,GAAG,OAAO,CAAC,EAAD,EAAK,cAAY,CAAC,KAAlB,EAAyB,KAAI,CAAC,OAAL,CAAa,KAAtC,CAA5B;;AACA,cAAM,QAAQ,GAAG,KAAI,CAAC,cAAL,CAAoB,CAApB,EAAuB,YAAvB,CAAjB;;AACA,UAAA,KAAK,CAAC,QAAN,CAAe,MAAf,EAAuB;AACrB,YAAA,KAAK,EAAA,QAAA,CAAA,EAAA,EACA,QADA,CADgB;AAIrB,YAAA,IAAI,EAAE;AAJe,WAAvB;AAMD,SAtBqB,CAuBtB;;;AACA,QAAA,IAAI,CAAC,GAAL,CAAS,MAAT,EAAiB,CAAjB;;AACA,QAAA,KAAI,CAAC,cAAL,CAAoB,IAApB,CAAyB,KAAzB;AACD,OA1BG,CAAJ,CAH8B,CA+B9B;;AACA,UAAM,WAAS,GAAG,OAAO,CAAC,EAAD,EAAK,cAAY,CAAC,IAAlB,EAAwB,KAAK,OAAL,CAAa,SAArC,CAAzB;AACA,MAAA,IAAI,CAAC,KAAK,QAAN,EAAgB,UAAC,CAAD,EAAE;AACpB,QAAA,KAAI,CAAC,SAAL,CAAe,QAAf,CAAwB,MAAxB,EAAgC;AAC9B,UAAA,KAAK,EAAA,QAAA,CAAA;AACH,YAAA,IAAI,EAAE,CACJ,CAAC,GAAD,EAAM,CAAC,CAAC,KAAF,CAAQ,CAAd,EAAiB,CAAC,CAAC,KAAF,CAAQ,CAAzB,CADI,EAEJ,CAAC,GAAD,EAAM,CAAC,CAAC,GAAF,CAAM,CAAZ,EAAe,CAAC,CAAC,GAAF,CAAM,CAArB,CAFI;AADH,WAAA,EAKA,WALA,CADyB;AAQ9B,UAAA,IAAI,EAAE;AARwB,SAAhC;AAUD,OAXG,CAAJ;AAYA,WAAK,IAAL,CAAU,MAAV,CAAiB,IAAjB;AACD;AACF,GAhDM;;AAkDA,EAAA,QAAA,CAAA,SAAA,CAAA,KAAA,GAAP,YAAA;AACE,QAAI,KAAK,SAAT,EAAoB;AAClB,WAAK,SAAL,CAAe,KAAf;AACD;AACF,GAJM;;AAMA,EAAA,QAAA,CAAA,SAAA,CAAA,OAAA,GAAP,YAAA;AACE,QAAI,KAAK,SAAT,EAAoB;AAClB,WAAK,SAAL,CAAe,MAAf;AACD;AACF,GAJM;;AAMG,EAAA,QAAA,CAAA,SAAA,CAAA,eAAA,GAAV,YAAA;AACE,WAAO;AACL,MAAA,IAAI,EAAE;AACJ,QAAA,MAAM,EAAE,SADJ;AAEJ,QAAA,SAAS,EAAE;AAFP,OADD;AAKL,MAAA,WAAW,EAAE,CACX;AAAE,QAAA,IAAI,EAAE,SAAR;AAAmB,QAAA,OAAO,EAAE;AAA5B,OADW,EAEX;AAAE,QAAA,IAAI,EAAE,SAAR;AAAmB,QAAA,OAAO,EAAE;AAA5B,OAFW,EAGX;AAAE,QAAA,IAAI,EAAE,SAAR;AAAmB,QAAA,OAAO,EAAE;AAA5B,OAHW,EAIX;AAAE,QAAA,IAAI,EAAE,SAAR;AAAmB,QAAA,OAAO,EAAE;AAA5B,OAJW,CALR;AAWL,MAAA,KAAK,EAAE;AACL,QAAA,QAAQ,EAAE,cADL;AAEL,QAAA,MAAM,EAAE,EAFH;AAGL,QAAA,KAAK,EAAE;AACL,UAAA,QAAQ,EAAE,EADL;AAEL,UAAA,IAAI,EAAE;AAFD;AAHF;AAXF,KAAP;AAqBD,GAtBS;;AAwBF,EAAA,QAAA,CAAA,SAAA,CAAA,cAAA,GAAR,UAAuB,UAAvB,EAAiC;AAC/B,QAAM,YAAY,GAAG,KAAK,eAAL,EAArB;AACA,QAAI,KAAK,GAAG,YAAY,CAAC,WAAzB;;AACA,QAAI,KAAK,OAAL,CAAa,WAAjB,EAA8B;AACpB,UAAA,aAAW,GAAK,KAAK,OAAL,CAAL,WAAX;;AACR,UAAI,OAAO,CAAC,aAAD,CAAX,EAA0B;AACxB,QAAA,KAAK,GAAG,KAAK,CAAC,GAAN,CAAU,UAAC,CAAD,EAAI,KAAJ,EAAS;AACzB,cAAI,aAAW,CAAC,MAAZ,GAAqB,KAArB,IAA8B,aAAW,CAAC,KAAD,CAA7C,EAAsD;AACpD,mBAAO,aAAW,CAAC,KAAD,CAAlB;AACD;;AACD,iBAAO,CAAP;AACD,SALO,CAAR;AAMD,OAPD,MAOO,IAAI,UAAU,CAAC,aAAD,CAAd,EAA6B;AAClC,QAAA,IAAI,CAAC,UAAD,EAAa,UAAC,CAAD,EAAI,KAAJ,EAAS;AACxB,UAAA,KAAK,CAAC,KAAD,CAAL,GAAe,aAAW,CAAC,CAAD,CAA1B;AACD,SAFG,CAAJ;AAGD;AACF;;AAED,WAAO,KAAP;AACD,GApBO;;AAsBA,EAAA,QAAA,CAAA,SAAA,CAAA,cAAA,GAAR,UAAuB,MAAvB,EAA+B,YAA/B,EAA2C;AACjC,QAAA,KAAK,GAAK,MAAM,CAAX,KAAL;AACR,QAAI,CAAC,GAAG,CAAR;AACA,QAAI,CAAC,GAAG,CAAR;AACA,QAAI,KAAK,GAAQ,EAAjB;AACA,QAAI,IAAI,GAAG,YAAY,CAAC,IAAxB;;AACA,QAAI,UAAU,CAAC,IAAD,CAAd,EAAsB;AACpB,MAAA,IAAI,GAAG,IAAI,CAAC,MAAD,CAAX;AACD,KAFD,MAEO,IAAI,OAAO,CAAC,IAAD,CAAX,EAAmB;AACxB,MAAA,IAAI,GAAG,IAAI,CAAC,KAAD,CAAX;AACD;;AACO,QAAA,QAAQ,GAAK,YAAY,CAAjB,QAAR;AACR,QAAM,GAAG,GAAG,QAAQ,CAAC,KAAT,CAAe,GAAf,CAAZ;AACA,QAAM,GAAG,GAAG,MAAM,CAAC,IAAP,CAAY,KAAZ,CAAkB,GAAlB,CAAZ,CAbyC,CAczC;;AACA,QAAI,GAAG,CAAC,CAAD,CAAH,KAAW,MAAf,EAAuB;AACrB,UAAI,GAAG,CAAC,CAAD,CAAH,KAAW,OAAf,EAAwB;AACtB,QAAA,CAAC,GAAG,MAAM,CAAC,IAAP,CAAY,IAAZ,GAAmB,YAAY,CAAC,MAApC;AACA,QAAA,KAAK,CAAC,SAAN,GAAkB,OAAlB;AACD;;AACD,UAAI,GAAG,CAAC,CAAD,CAAH,KAAW,QAAf,EAAyB;AACvB,QAAA,CAAC,GAAG,MAAM,CAAC,IAAP,CAAY,IAAZ,GAAmB,YAAY,CAAC,MAApC;AACA,QAAA,KAAK,CAAC,SAAN,GAAkB,MAAlB;AACD;AACF,KATD,MASO,IAAI,GAAG,CAAC,CAAD,CAAH,KAAW,OAAf,EAAwB;AAC7B,UAAI,GAAG,CAAC,CAAD,CAAH,KAAW,OAAf,EAAwB;AACtB,QAAA,CAAC,GAAG,MAAM,CAAC,IAAP,CAAY,IAAZ,GAAmB,YAAY,CAAC,MAApC;AACA,QAAA,KAAK,CAAC,SAAN,GAAkB,MAAlB;AACD;;AACD,UAAI,GAAG,CAAC,CAAD,CAAH,KAAW,QAAf,EAAyB;AACvB,QAAA,CAAC,GAAG,MAAM,CAAC,IAAP,CAAY,IAAZ,GAAmB,YAAY,CAAC,MAApC;AACA,QAAA,KAAK,CAAC,SAAN,GAAkB,OAAlB;AACD;AACF,KAjCwC,CAkCzC;;;AACA,QAAI,GAAG,CAAC,CAAD,CAAH,KAAW,KAAf,EAAsB;AACpB,UAAI,GAAG,CAAC,CAAD,CAAH,KAAW,OAAf,EAAwB;AACtB,QAAA,CAAC,GAAG,MAAM,CAAC,IAAP,CAAY,IAAZ,GAAmB,YAAY,CAAC,MAApC;AACA,QAAA,KAAK,CAAC,YAAN,GAAqB,QAArB;AACD;;AACD,UAAI,GAAG,CAAC,CAAD,CAAH,KAAW,QAAf,EAAyB;AACvB,QAAA,CAAC,GAAG,MAAM,CAAC,IAAP,CAAY,IAAZ,GAAmB,YAAY,CAAC,MAApC;AACA,QAAA,KAAK,CAAC,YAAN,GAAqB,KAArB;AACD;AACF,KATD,MASO,IAAI,GAAG,CAAC,CAAD,CAAH,KAAW,QAAf,EAAyB;AAC9B,UAAI,GAAG,CAAC,CAAD,CAAH,KAAW,OAAf,EAAwB;AACtB,QAAA,CAAC,GAAG,MAAM,CAAC,IAAP,CAAY,IAAZ,GAAmB,YAAY,CAAC,MAApC;AACA,QAAA,KAAK,CAAC,YAAN,GAAqB,KAArB;AACD;;AACD,UAAI,GAAG,CAAC,CAAD,CAAH,KAAW,QAAf,EAAyB;AACvB,QAAA,CAAC,GAAG,MAAM,CAAC,IAAP,CAAY,IAAZ,GAAmB,YAAY,CAAC,MAApC;AACA,QAAA,KAAK,CAAC,YAAN,GAAqB,QAArB;AACD;AACF;;AACD,IAAA,KAAK,GAAG,OAAO,CAAC,EAAD,EAAK,YAAY,CAAC,KAAlB,EAAyB,KAAzB,CAAf;AACA,IAAA,KAAK,CAAC,UAAN,GAAmB,KAAK,CAAC,QAAzB;AACA,WAAA,QAAA,CAAA;AACE,MAAA,CAAC,EAAA,CADH;AAEE,MAAA,CAAC,EAAA,CAFH;AAGE,MAAA,IAAI,EAAA;AAHN,KAAA,EAIK,KAJL,CAAA;AAMD,GA9DO;;AA+DV,SAAA,QAAA;AAAC,CAtUD,EAAA","sourcesContent":["import { each, isArray, isFunction, deepMix } from '@antv/util';\nimport BBox from '../../../util/bbox';\nimport { View, IGroup } from '../../../dependents';\n\ninterface ILabel {\n  position?: string;\n  text: string[] | Function;\n  offset?: number | Function;\n  style?: any;\n}\n\nexport interface QuadrantConfig {\n  visible?: boolean;\n  xBaseline?: number;\n  yBaseline?: number;\n  regionStyle?: any[] | any;\n  lineStyle?: any;\n  label?: ILabel;\n}\n\nexport interface IQuadrant extends QuadrantConfig {\n  view: View;\n  plotOptions: any;\n}\n\nexport default class Quadrant {\n  public options: IQuadrant;\n  protected view: View;\n  protected quadrantGroups: IGroup[] = [];\n  protected container: IGroup;\n  protected regionData: any[] = [];\n  protected lineData: any[] = [];\n\n  constructor(cfg: IQuadrant) {\n    this.options = cfg;\n    this.view = this.options.view;\n    this.init();\n  }\n\n  public init() {\n    const { xBaseline, yBaseline } = this.options;\n    const coord = this.view.getCoordinate();\n    // TODO: xBaseline和yBaseline支持百分比\n    // 根据 xBaseline 和 yBaseline 分割象限\n    const xScale = this.view.getScaleByField(this.options.plotOptions.xField);\n    const yScale = this.view.getScaleByField(this.options.plotOptions.yField);\n    // 先进行 x 方向的分割\n    let xRegion;\n    if (xBaseline > xScale.min && xBaseline < xScale.max) {\n      const ratio = (xBaseline - xScale.min) / (xScale.max - xScale.min);\n      xRegion = [\n        new BBox(coord.start.x, coord.end.y, coord.getWidth() * ratio, coord.getHeight()),\n        new BBox(\n          coord.start.x + coord.getWidth() * ratio,\n          coord.end.y,\n          coord.getWidth() * (1 - ratio),\n          coord.getHeight()\n        ),\n      ];\n      const verticalLineData = {\n        start: { x: coord.start.x + coord.getWidth() * ratio, y: coord.end.y },\n        end: { x: coord.start.x + coord.getWidth() * ratio, y: coord.start.y },\n      };\n      this.lineData.push(verticalLineData);\n    } else {\n      xRegion = [new BBox(coord.start.x, coord.end.y, coord.getWidth(), coord.getHeight())];\n    }\n    // 再进行 y 方向的分割\n    if (yBaseline > yScale.min && yBaseline < yScale.max) {\n      const ratio = (yBaseline - yScale.min) / (yScale.max - yScale.min);\n      const horizontalLineData = {\n        start: { x: coord.start.x, y: coord.start.y - coord.getHeight() * ratio },\n        end: { x: coord.end.x, y: coord.start.y - coord.getHeight() * ratio },\n      };\n      this.lineData.push(horizontalLineData);\n      const topQuadrant = {\n        name: xBaseline <= xScale.min ? 'top-right' : 'top-left',\n        bbox: new BBox(xRegion[0].minX, xRegion[0].minY, xRegion[0].width, xRegion[0].height * (1 - ratio)),\n        index: xBaseline <= xScale.min ? 2 : 0,\n      };\n      this.regionData.push(topQuadrant);\n      const bottomQuadrant = {\n        name: xBaseline <= xScale.min ? 'bottom-right' : 'bottom-left',\n        bbox: new BBox(\n          xRegion[0].minX,\n          xRegion[0].minY + xRegion[0].height * (1 - ratio),\n          xRegion[0].width,\n          xRegion[0].height * ratio\n        ),\n        index: xBaseline <= xScale.min ? 3 : 1,\n      };\n      this.regionData.push(bottomQuadrant);\n      // 四象限齐全\n      if (xRegion.length > 1) {\n        const rightTopQuadrant = {\n          name: 'top-right',\n          bbox: new BBox(xRegion[1].minX, xRegion[1].minY, xRegion[1].width, xRegion[1].height * (1 - ratio)),\n          index: 2,\n        };\n        this.regionData.push(rightTopQuadrant);\n        const rightBottomQuadrant = {\n          name: 'bottom-right',\n          bbox: new BBox(\n            xRegion[1].minX,\n            xRegion[1].minY + xRegion[1].height * (1 - ratio),\n            xRegion[1].width,\n            xRegion[1].height * ratio\n          ),\n          index: 3,\n        };\n        this.regionData.push(rightBottomQuadrant);\n      }\n    } else if (xRegion.length === 2) {\n      if (yBaseline <= yScale.min) {\n        const leftTopQuadrant = {\n          name: 'top-left',\n          bbox: xRegion[0],\n          index: 0,\n        };\n        this.regionData.push(leftTopQuadrant);\n        const rightTopQuadrant = {\n          name: 'top-right',\n          bbox: xRegion[1],\n          index: 2,\n        };\n        this.regionData.push(rightTopQuadrant);\n      } else {\n        const leftBottomQuadrant = {\n          name: 'bottom-left',\n          bbox: xRegion[0],\n          index: 1,\n        };\n        this.regionData.push(leftBottomQuadrant);\n        const rightBottomQuadrant = {\n          name: 'bottom-right',\n          bbox: xRegion[1],\n          index: 3,\n        };\n        this.regionData.push(rightBottomQuadrant);\n      }\n    } else {\n      // 当前绘制区域全部在一个象限中\n      if (xBaseline <= xScale.min) {\n        if (yBaseline <= yScale.min) {\n          const rightTopQuadrant = {\n            name: 'top-right',\n            bbox: xRegion[0],\n            index: 2,\n          };\n          this.regionData.push(rightTopQuadrant);\n        } else {\n          const rightBottomQuadrant = {\n            name: 'bottom-right',\n            bbox: xRegion[0],\n            index: 3,\n          };\n          this.regionData.push(rightBottomQuadrant);\n        }\n      } else {\n        if (yBaseline <= yScale.min) {\n          const leftTopQuadrant = {\n            name: 'top-left',\n            bbox: xRegion[0],\n            index: 0,\n          };\n          this.regionData.push(leftTopQuadrant);\n        } else {\n          const leftBottomQuadrant = {\n            name: 'bottom-left',\n            bbox: xRegion[0],\n            index: 1,\n          };\n          this.regionData.push(leftBottomQuadrant);\n        }\n      }\n    }\n    // 创建container\n    this.container = this.view.backgroundGroup.addGroup();\n  }\n\n  public render() {\n    if (this.regionData.length > 0) {\n      const defaultStyle = this.getDefaultStyle();\n      const regionStyle = this.getRegionStyle(this.regionData);\n      each(this.regionData, (d) => {\n        const { index } = d;\n        const group = this.container.addGroup();\n        const rect = group.addShape('rect', {\n          attrs: {\n            x: d.bbox.minX,\n            y: d.bbox.minY,\n            width: d.bbox.width,\n            height: d.bbox.height,\n            ...regionStyle[index],\n          },\n          name: 'quadrant',\n        });\n        if (this.options.label && this.options.label.text) {\n          const labelOptions = deepMix({}, defaultStyle.label, this.options.label);\n          const labelCfg = this.getLabelConfig(d, labelOptions);\n          group.addShape('text', {\n            attrs: {\n              ...labelCfg,\n            },\n            name: 'quadrant-label',\n          });\n        }\n        // rect.setSilent('data', d);\n        rect.set('data', d);\n        this.quadrantGroups.push(group);\n      });\n\n      // 绘制象限辅助线\n      const lineStyle = deepMix({}, defaultStyle.line, this.options.lineStyle);\n      each(this.lineData, (d) => {\n        this.container.addShape('path', {\n          attrs: {\n            path: [\n              ['M', d.start.x, d.start.y],\n              ['L', d.end.x, d.end.y],\n            ],\n            ...lineStyle,\n          },\n          name: 'quadrant-line',\n        });\n      });\n      this.view.canvas.draw();\n    }\n  }\n\n  public clear() {\n    if (this.container) {\n      this.container.clear();\n    }\n  }\n\n  public destroy() {\n    if (this.container) {\n      this.container.remove();\n    }\n  }\n\n  protected getDefaultStyle() {\n    return {\n      line: {\n        stroke: '#9ba29a',\n        lineWidth: 1,\n      },\n      regionStyle: [\n        { fill: '#000000', opacity: 0.05 },\n        { fill: '#ffffff', opacity: 0 },\n        { fill: '#ffffff', opacity: 0 },\n        { fill: '#000000', opacity: 0.05 },\n      ],\n      label: {\n        position: 'outter-inner',\n        offset: 10,\n        style: {\n          fontSize: 14,\n          fill: '#ccc',\n          // fontWeight: 100\n        },\n      },\n    };\n  }\n\n  private getRegionStyle(regionData) {\n    const defaultStyle = this.getDefaultStyle();\n    let style = defaultStyle.regionStyle;\n    if (this.options.regionStyle) {\n      const { regionStyle } = this.options;\n      if (isArray(regionStyle)) {\n        style = style.map((s, index) => {\n          if (regionStyle.length > index && regionStyle[index]) {\n            return regionStyle[index];\n          }\n          return s;\n        });\n      } else if (isFunction(regionStyle)) {\n        each(regionData, (d, index) => {\n          style[index] = regionStyle(d);\n        });\n      }\n    }\n\n    return style;\n  }\n\n  private getLabelConfig(region, labelOptions) {\n    const { index } = region;\n    let x = 0;\n    let y = 0;\n    let style: any = {};\n    let text = labelOptions.text;\n    if (isFunction(text)) {\n      text = text(region);\n    } else if (isArray(text)) {\n      text = text[index];\n    }\n    const { position } = labelOptions;\n    const pos = position.split('-');\n    const dim = region.name.split('-');\n    // x方向\n    if (dim[1] === 'left') {\n      if (pos[0] === 'inner') {\n        x = region.bbox.maxX - labelOptions.offset;\n        style.textAlign = 'right';\n      }\n      if (pos[0] === 'outter') {\n        x = region.bbox.minX + labelOptions.offset;\n        style.textAlign = 'left';\n      }\n    } else if (dim[1] === 'right') {\n      if (pos[0] === 'inner') {\n        x = region.bbox.minX + labelOptions.offset;\n        style.textAlign = 'left';\n      }\n      if (pos[0] === 'outter') {\n        x = region.bbox.maxX - labelOptions.offset;\n        style.textAlign = 'right';\n      }\n    }\n    // y方向\n    if (dim[0] === 'top') {\n      if (pos[1] === 'inner') {\n        y = region.bbox.maxY - labelOptions.offset;\n        style.textBaseline = 'bottom';\n      }\n      if (pos[1] === 'outter') {\n        y = region.bbox.minY + labelOptions.offset;\n        style.textBaseline = 'top';\n      }\n    } else if (dim[0] === 'bottom') {\n      if (pos[1] === 'inner') {\n        y = region.bbox.minY + labelOptions.offset;\n        style.textBaseline = 'top';\n      }\n      if (pos[1] === 'outter') {\n        y = region.bbox.maxY - labelOptions.offset;\n        style.textBaseline = 'bottom';\n      }\n    }\n    style = deepMix({}, labelOptions.style, style);\n    style.lineHeight = style.fontSize;\n    return {\n      x,\n      y,\n      text,\n      ...style,\n    };\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}