{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\n/**\n * Create By Bruce Too\n * On 2020-02-18\n */\n\nimport { deepMix, get, map, isArray, reduce, has, isFunction, isString, isObject } from '@antv/util';\nimport { registerPlotType } from '../../base/global';\nimport './geometry/shape/waterfall';\nimport ViewLayer from '../../base/view-layer';\nimport { extractScale } from '../../util/scale';\nimport { getComponent } from '../../components/factory';\nimport * as EventParser from './event';\nimport './component/label/waterfall-label';\nimport DiffLabel from './component/label/diff-label';\nimport { getGeometryByType } from '../../util/view';\nvar G2_GEOM_MAP = {\n  waterfall: 'interval'\n};\nvar PLOT_GEOM_MAP = {\n  interval: 'waterfall'\n};\nexport var VALUE_FIELD = '$$value$$';\nexport var IS_TOTAL = '$$total$$';\nexport var INDEX_FIELD = '$$index$$';\n\nvar WaterfallLayer =\n/** @class */\nfunction (_super) {\n  __extends(WaterfallLayer, _super);\n\n  function WaterfallLayer() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = 'watarfall';\n    return _this;\n  }\n\n  WaterfallLayer.getDefaultOptions = function () {\n    return deepMix({}, _super.getDefaultOptions.call(this), {\n      legend: {\n        visible: false,\n        position: 'bottom'\n      },\n      label: {\n        visible: true,\n        adjustPosition: true\n      },\n\n      /** 差值 label */\n      diffLabel: {\n        visible: true\n      },\n\n      /** 迁移线 */\n      leaderLine: {\n        visible: true\n      },\n\n      /** 显示总计 */\n      showTotal: {\n        visible: true,\n        label: '总计值'\n      },\n      waterfallStyle: {\n        /** 默认无描边 */\n        lineWidth: 0\n      },\n      tooltip: {\n        visible: true,\n        shared: true,\n        showCrosshairs: false,\n        showMarkers: false\n      }\n    });\n  };\n\n  WaterfallLayer.prototype.getOptions = function (props) {\n    var options = _super.prototype.getOptions.call(this, props);\n\n    this.adjustLegendOptions(options);\n    this.adjustMeta(options);\n    return options;\n  };\n\n  WaterfallLayer.prototype.afterInit = function () {\n    _super.prototype.afterInit.call(this);\n\n    var options = this.options;\n\n    if (options.diffLabel && options.diffLabel.visible) {\n      this.diffLabel = new DiffLabel({\n        view: this.view,\n        fields: [options.xField, options.yField, VALUE_FIELD],\n        formatter: options.diffLabel.formatter,\n        style: options.diffLabel.style\n      });\n    } else if (this.diffLabel) {\n      this.diffLabel.clear();\n      this.diffLabel = null;\n    }\n  };\n\n  WaterfallLayer.prototype.afterRender = function () {\n    _super.prototype.afterRender.call(this);\n\n    var options = this.options;\n    this.view.on('tooltip:change', function (e) {\n      var items = e.items;\n\n      for (var i = 0; i < items.length; i++) {\n        var item = items[i];\n        var data = get(item, 'data', {}); // 改变 tooltip 显示的name和value\n\n        item.name = data[options.xField];\n        item.value = data[options.yField];\n\n        if (!item.value && data[IS_TOTAL]) {\n          var values = data[VALUE_FIELD];\n          item.value = values[0] - values[1];\n        }\n\n        e.items[i] = item;\n      }\n    });\n    this.renderLabel();\n  };\n\n  WaterfallLayer.prototype.renderLabel = function () {\n    var geometry = getGeometryByType(this.view, 'interval');\n\n    if (this.options.label && this.options.label.visible) {\n      this.doRenderLabel(geometry, __assign({\n        type: 'waterfall'\n      }, this.options.label));\n    }\n  };\n\n  WaterfallLayer.prototype.geometryParser = function (dim, type) {\n    if (dim === 'g2') {\n      return G2_GEOM_MAP[type];\n    }\n\n    return PLOT_GEOM_MAP[type];\n  };\n\n  WaterfallLayer.prototype.interaction = function () {\n    this.setConfig('interactions', [{\n      type: 'tooltip'\n    }, {\n      type: 'active-region'\n    }]);\n  };\n\n  WaterfallLayer.prototype.addGeometry = function () {\n    var options = this.options;\n    var waterfall = {\n      type: 'interval',\n      position: {\n        fields: [options.xField, VALUE_FIELD]\n      },\n      shape: {\n        values: ['waterfall']\n      }\n    };\n    waterfall.style = this._parseStyle();\n    waterfall.color = this._parseColor();\n    this.waterfall = waterfall;\n\n    if (this.options.tooltip && (this.options.tooltip.fields || this.options.tooltip.formatter)) {\n      this.geometryTooltip();\n    }\n\n    this.setConfig('geometry', waterfall);\n  };\n\n  WaterfallLayer.prototype.processData = function (originData) {\n    var _a;\n\n    var plotData = [];\n    var xField = this.options.xField;\n    var yField = this.options.yField;\n    map(originData, function (dataItem, idx) {\n      var _a;\n\n      var value = dataItem[yField];\n\n      if (idx > 0) {\n        var prevValue = plotData[idx - 1][VALUE_FIELD];\n\n        if (isArray(prevValue)) {\n          value = [prevValue[1], dataItem[yField] + prevValue[1]];\n        } else {\n          value = [prevValue, dataItem[yField] + prevValue];\n        }\n      }\n\n      plotData.push(__assign(__assign({}, dataItem), (_a = {}, _a[VALUE_FIELD] = value, _a[INDEX_FIELD] = idx, _a)));\n    });\n\n    if (this.options.showTotal && this.options.showTotal.visible) {\n      var values = map(originData, function (o) {\n        return o[yField];\n      });\n      var totalValue = reduce(values, function (p, n) {\n        return p + n;\n      }, 0);\n      plotData.push((_a = {}, _a[xField] = this.options.showTotal.label, _a[yField] = null, _a[VALUE_FIELD] = [totalValue, 0], _a[INDEX_FIELD] = plotData.length, _a[IS_TOTAL] = true, _a));\n    }\n\n    return plotData;\n  };\n\n  WaterfallLayer.prototype.scale = function () {\n    var options = this.options;\n    var scales = {};\n    /** 配置x-scale */\n\n    scales[options.xField] = {\n      type: 'cat'\n    };\n\n    if (has(options, 'xAxis')) {\n      extractScale(scales[options.xField], options.xAxis);\n    }\n    /** 配置y-scale */\n\n\n    scales[VALUE_FIELD] = {};\n\n    if (has(options, 'yAxis')) {\n      extractScale(scales[VALUE_FIELD], options.yAxis);\n    }\n\n    this.setConfig('scales', scales);\n  };\n  /** @override */\n\n\n  WaterfallLayer.prototype.axis = function () {\n    var xAxis_parser = getComponent('axis', {\n      plot: this,\n      dim: 'x'\n    });\n    var yAxis_parser = getComponent('axis', {\n      plot: this,\n      dim: 'y'\n    });\n    var axesConfig = {};\n    axesConfig[this.options.xField] = xAxis_parser;\n    axesConfig[VALUE_FIELD] = yAxis_parser;\n    /** 存储坐标轴配置项到config */\n\n    this.setConfig('axes', axesConfig);\n  };\n\n  WaterfallLayer.prototype.coord = function () {\n    return;\n  };\n\n  WaterfallLayer.prototype.parseEvents = function () {\n    _super.prototype.parseEvents.call(this, EventParser);\n  };\n\n  WaterfallLayer.prototype.geometryTooltip = function () {\n    this.waterfall.tooltip = {};\n    var tooltipOptions = this.options.tooltip;\n\n    if (tooltipOptions.fields) {\n      this.waterfall.tooltip.fields = tooltipOptions.fields;\n    }\n\n    if (tooltipOptions.formatter) {\n      this.waterfall.tooltip.callback = tooltipOptions.formatter;\n\n      if (!tooltipOptions.fields) {\n        this.waterfall.tooltip.fields = [this.options.xField, VALUE_FIELD];\n      }\n    }\n  };\n  /** 牵引线的样式注入到style中 */\n\n\n  WaterfallLayer.prototype._parseStyle = function () {\n    var style = this.options.waterfallStyle;\n    var leaderLine = this.options.leaderLine;\n    var config = {};\n\n    if (isFunction(style)) {\n      config.callback = function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        return Object.assign({}, style.apply(void 0, args), {\n          leaderLine: leaderLine\n        });\n      };\n    } else {\n      config.cfg = __assign(__assign({}, style), {\n        leaderLine: leaderLine\n      });\n    }\n\n    return config;\n  };\n\n  WaterfallLayer.prototype._parseColor = function () {\n    var _this = this;\n\n    var options = this.options;\n    var _a = this.options,\n        xField = _a.xField,\n        yField = _a.yField;\n    var config = {\n      fields: [xField, yField, VALUE_FIELD, INDEX_FIELD]\n    };\n\n    if (isFunction(options.color)) {\n      config.callback = options.color;\n    } else {\n      var risingColor_1 = '#f4664a';\n      var fallingColor_1 = '#30bf78';\n      var totalColor_1 = 'rgba(0, 0, 0, 0.25)';\n\n      if (isString(options.color)) {\n        risingColor_1 = fallingColor_1 = totalColor_1 = options.color;\n      } else if (isObject(options.color)) {\n        var _b = options.color,\n            rising = _b.rising,\n            falling = _b.falling,\n            total = _b.total;\n        risingColor_1 = rising;\n        fallingColor_1 = falling;\n        totalColor_1 = total;\n      }\n\n      config.callback = function (type, value, values, index) {\n        if (index === _this.options.data.length) {\n          return totalColor_1 || (values[0] >= 0 ? risingColor_1 : fallingColor_1);\n        }\n\n        return (isArray(values) ? values[1] - values[0] : values) >= 0 ? risingColor_1 : fallingColor_1;\n      };\n    }\n\n    return config;\n  };\n  /** 复写 legend 配置, 瀑布图默认无legend */\n\n\n  WaterfallLayer.prototype.adjustLegendOptions = function (options) {\n    var legendOptions = options.legend;\n\n    if (legendOptions) {\n      legendOptions.visible = false;\n    }\n  };\n  /** 复写 meta 配置 */\n\n\n  WaterfallLayer.prototype.adjustMeta = function (options) {\n    var metaOptions = options.meta;\n\n    if (metaOptions) {\n      var valueFieldMeta = metaOptions ? metaOptions[options.yField] : {};\n      valueFieldMeta.alias = valueFieldMeta.alias || options.yField;\n      options.meta[VALUE_FIELD] = valueFieldMeta;\n    }\n  };\n\n  return WaterfallLayer;\n}(ViewLayer);\n\nexport default WaterfallLayer;\nregisterPlotType('waterfall', WaterfallLayer);","map":{"version":3,"sources":["../../../src/plots/waterfall/layer.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Create By Bruce Too\n * On 2020-02-18\n */\nimport { deepMix, get, map, isArray, reduce, has, isFunction, isString, isObject } from '@antv/util';\nimport { registerPlotType } from '../../base/global';\nimport './geometry/shape/waterfall';\nimport { ElementOption, DataItem, LayerConfig } from '../..';\nimport ViewLayer, { ViewConfig } from '../../base/view-layer';\nimport { extractScale } from '../../util/scale';\nimport { AttributeCfg } from '@antv/attr';\nimport { getComponent } from '../../components/factory';\nimport * as EventParser from './event';\nimport './component/label/waterfall-label';\nimport DiffLabel, { DiffLabelcfg } from './component/label/diff-label';\nimport { LineStyle, TextStyle, GraphicStyle } from '../../interface/config';\nimport { getGeometryByType } from '../../util/view';\n\nconst G2_GEOM_MAP = {\n  waterfall: 'interval',\n};\n\nconst PLOT_GEOM_MAP = {\n  interval: 'waterfall',\n};\n\nexport const VALUE_FIELD = '$$value$$';\nexport const IS_TOTAL = '$$total$$';\nexport const INDEX_FIELD = '$$index$$';\n\nexport interface WaterfallViewConfig extends ViewConfig {\n  showTotal?: {\n    visible: boolean;\n    label: string;\n  };\n  /** 差值label */\n  diffLabel?: {\n    visible: boolean;\n    style?: TextStyle;\n    formatter?: DiffLabelcfg['formatter'];\n  };\n  leaderLine?: {\n    visible: boolean;\n    style?: LineStyle;\n  };\n  color?:\n    | string\n    | { rising: string; falling: string; total?: string }\n    | ((type: string, value: number | null, values: number | number[], index: number) => string);\n  waterfallStyle?: GraphicStyle | ((...args: any[]) => GraphicStyle);\n}\n\nexport interface WaterfallLayerConfig extends WaterfallViewConfig, LayerConfig {}\n\nexport default class WaterfallLayer extends ViewLayer<WaterfallLayerConfig> {\n  public waterfall;\n  public type: string = 'watarfall';\n  public diffLabel;\n\n  public static getDefaultOptions(): Partial<WaterfallLayerConfig> {\n    return deepMix({}, super.getDefaultOptions(), {\n      legend: {\n        visible: false,\n        position: 'bottom',\n      },\n      label: {\n        visible: true,\n        adjustPosition: true,\n      },\n      /** 差值 label */\n      diffLabel: {\n        visible: true,\n      },\n      /** 迁移线 */\n      leaderLine: {\n        visible: true,\n      },\n      /** 显示总计 */\n      showTotal: {\n        visible: true,\n        label: '总计值',\n      },\n      waterfallStyle: {\n        /** 默认无描边 */\n        lineWidth: 0,\n      },\n      tooltip: {\n        visible: true,\n        shared: true,\n        showCrosshairs: false,\n        showMarkers: false,\n      },\n    });\n  }\n\n  public getOptions(props: WaterfallLayerConfig) {\n    const options = super.getOptions(props);\n    this.adjustLegendOptions(options);\n    this.adjustMeta(options);\n    return options;\n  }\n\n  public afterInit() {\n    super.afterInit();\n    const options = this.options;\n    if (options.diffLabel && options.diffLabel.visible) {\n      this.diffLabel = new DiffLabel({\n        view: this.view,\n        fields: [options.xField, options.yField, VALUE_FIELD],\n        formatter: options.diffLabel.formatter,\n        style: options.diffLabel.style,\n      });\n    } else if (this.diffLabel) {\n      this.diffLabel.clear();\n      this.diffLabel = null;\n    }\n  }\n\n  public afterRender() {\n    super.afterRender();\n    const options = this.options;\n    this.view.on('tooltip:change', (e) => {\n      const { items } = e;\n      for (let i = 0; i < items.length; i++) {\n        const item = items[i];\n        const data = get(item, 'data', {});\n        // 改变 tooltip 显示的name和value\n        item.name = data[options.xField];\n        item.value = data[options.yField];\n        if (!item.value && data[IS_TOTAL]) {\n          const values = data[VALUE_FIELD];\n          item.value = values[0] - values[1];\n        }\n        e.items[i] = item;\n      }\n    });\n    this.renderLabel();\n  }\n\n  protected renderLabel() {\n    const geometry = getGeometryByType(this.view, 'interval');\n    if (this.options.label && this.options.label.visible) {\n      this.doRenderLabel(geometry, {\n        type: 'waterfall',\n        ...this.options.label,\n      });\n    }\n  }\n\n  protected geometryParser(dim, type) {\n    if (dim === 'g2') {\n      return G2_GEOM_MAP[type];\n    }\n    return PLOT_GEOM_MAP[type];\n  }\n\n  protected interaction() {\n    this.setConfig('interactions', [{ type: 'tooltip' }, { type: 'active-region' }]);\n  }\n\n  protected addGeometry() {\n    const options = this.options;\n    const waterfall: ElementOption = {\n      type: 'interval',\n      position: {\n        fields: [options.xField, VALUE_FIELD],\n      },\n      shape: {\n        values: ['waterfall'],\n      },\n    };\n    waterfall.style = this._parseStyle();\n    waterfall.color = this._parseColor();\n    this.waterfall = waterfall;\n    if (this.options.tooltip && (this.options.tooltip.fields || this.options.tooltip.formatter)) {\n      this.geometryTooltip();\n    }\n    this.setConfig('geometry', waterfall);\n  }\n\n  protected processData(originData?: DataItem[]) {\n    const plotData = [];\n    const xField = this.options.xField;\n    const yField = this.options.yField;\n    map(originData, (dataItem, idx: number) => {\n      let value: any = dataItem[yField];\n      if (idx > 0) {\n        const prevValue = plotData[idx - 1][VALUE_FIELD];\n        if (isArray(prevValue)) {\n          value = [prevValue[1], dataItem[yField] + prevValue[1]];\n        } else {\n          value = [prevValue, dataItem[yField] + prevValue];\n        }\n      }\n      plotData.push({\n        ...dataItem,\n        [VALUE_FIELD]: value,\n        [INDEX_FIELD]: idx,\n      });\n    });\n    if (this.options.showTotal && this.options.showTotal.visible) {\n      const values = map(originData, (o) => o[yField]);\n      const totalValue = reduce(values, (p: number, n: number) => p + n, 0);\n      plotData.push({\n        [xField]: this.options.showTotal.label,\n        [yField]: null,\n        [VALUE_FIELD]: [totalValue, 0],\n        [INDEX_FIELD]: plotData.length,\n        [IS_TOTAL]: true,\n      });\n    }\n    return plotData;\n  }\n\n  protected scale() {\n    const { options } = this;\n    const scales = {};\n    /** 配置x-scale */\n    scales[options.xField] = { type: 'cat' };\n    if (has(options, 'xAxis')) {\n      extractScale(scales[options.xField], options.xAxis);\n    }\n    /** 配置y-scale */\n    scales[VALUE_FIELD] = {};\n    if (has(options, 'yAxis')) {\n      extractScale(scales[VALUE_FIELD], options.yAxis);\n    }\n    this.setConfig('scales', scales);\n  }\n\n  /** @override */\n  protected axis(): void {\n    const xAxis_parser = getComponent('axis', {\n      plot: this,\n      dim: 'x',\n    });\n    const yAxis_parser = getComponent('axis', {\n      plot: this,\n      dim: 'y',\n    });\n    const axesConfig = {};\n    axesConfig[this.options.xField] = xAxis_parser;\n    axesConfig[VALUE_FIELD] = yAxis_parser;\n    /** 存储坐标轴配置项到config */\n    this.setConfig('axes', axesConfig);\n  }\n\n  protected coord() {\n    return;\n  }\n\n  protected parseEvents() {\n    super.parseEvents(EventParser);\n  }\n\n  protected geometryTooltip() {\n    this.waterfall.tooltip = {};\n    const tooltipOptions: any = this.options.tooltip;\n    if (tooltipOptions.fields) {\n      this.waterfall.tooltip.fields = tooltipOptions.fields;\n    }\n    if (tooltipOptions.formatter) {\n      this.waterfall.tooltip.callback = tooltipOptions.formatter;\n      if (!tooltipOptions.fields) {\n        this.waterfall.tooltip.fields = [this.options.xField, VALUE_FIELD];\n      }\n    }\n  }\n\n  /** 牵引线的样式注入到style中 */\n  private _parseStyle(): LineStyle {\n    const style = this.options.waterfallStyle;\n    const leaderLine = this.options.leaderLine;\n    const config: Record<string, any> = {};\n    if (isFunction(style)) {\n      config.callback = (...args) => {\n        return Object.assign({}, style(...args), { leaderLine });\n      };\n    } else {\n      config.cfg = { ...style, leaderLine };\n    }\n\n    return config;\n  }\n\n  private _parseColor(): AttributeCfg {\n    const options = this.options;\n    const { xField, yField } = this.options;\n    const config: any = {\n      fields: [xField, yField, VALUE_FIELD, INDEX_FIELD],\n    };\n    if (isFunction(options.color)) {\n      config.callback = options.color;\n    } else {\n      let risingColor = '#f4664a';\n      let fallingColor = '#30bf78';\n      let totalColor = 'rgba(0, 0, 0, 0.25)';\n      if (isString(options.color)) {\n        risingColor = fallingColor = totalColor = options.color;\n      } else if (isObject(options.color)) {\n        const { rising, falling, total } = options.color;\n        risingColor = rising;\n        fallingColor = falling;\n        totalColor = total;\n      }\n      config.callback = (type, value, values: number | number[], index: number) => {\n        if (index === this.options.data.length) {\n          return totalColor || (values[0] >= 0 ? risingColor : fallingColor);\n        }\n        return (isArray(values) ? values[1] - values[0] : values) >= 0 ? risingColor : fallingColor;\n      };\n    }\n    return config as AttributeCfg;\n  }\n\n  /** 复写 legend 配置, 瀑布图默认无legend */\n  private adjustLegendOptions(options): void {\n    const legendOptions = options.legend;\n    if (legendOptions) {\n      legendOptions.visible = false;\n    }\n  }\n\n  /** 复写 meta 配置 */\n  private adjustMeta(options): void {\n    const metaOptions = options.meta;\n    if (metaOptions) {\n      const valueFieldMeta = metaOptions ? metaOptions[options.yField] : {};\n      valueFieldMeta.alias = valueFieldMeta.alias || options.yField;\n      options.meta[VALUE_FIELD] = valueFieldMeta;\n    }\n  }\n}\n\nregisterPlotType('waterfall', WaterfallLayer);\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}