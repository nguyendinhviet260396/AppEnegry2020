{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { each } from '@antv/util';\nimport Interaction from './core';\n\nvar BaseInteraction =\n/** @class */\nfunction (_super) {\n  __extends(BaseInteraction, _super);\n\n  function BaseInteraction(cfg, viewLayer, interactionRange, interaction) {\n    var _this = _super.call(this, cfg) || this;\n\n    _this.viewLayer = viewLayer;\n    _this.interactionRange = interactionRange;\n    _this.interactionConfig = interaction;\n    _this.disposables = [];\n    return _this;\n  }\n\n  BaseInteraction.registerInteraction = function (type, ctor) {\n    BaseInteraction.GLOBAL_INTERACTION_MAP[type] = ctor;\n  };\n\n  BaseInteraction.registerPlotInteraction = function (plotType, type, ctor) {\n    if (!BaseInteraction.PLOT_INTERACTION_MAP[plotType]) {\n      BaseInteraction.PLOT_INTERACTION_MAP[plotType] = {};\n    }\n\n    BaseInteraction.PLOT_INTERACTION_MAP[plotType][type] = ctor;\n  };\n\n  BaseInteraction.getInteraction = function (type, plotType) {\n    if (plotType && BaseInteraction.PLOT_INTERACTION_MAP[plotType] && BaseInteraction[plotType][type]) {\n      return BaseInteraction.PLOT_INTERACTION_MAP[plotType][type];\n    }\n\n    return BaseInteraction.GLOBAL_INTERACTION_MAP[type];\n  }; // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  BaseInteraction.getInteractionRange = function (layerRange, interaction) {\n    return undefined;\n  };\n\n  BaseInteraction.prototype.destroy = function () {\n    each(this.disposables, function (fn) {\n      fn();\n    });\n    this.disposables = [];\n    this.clear();\n\n    _super.prototype.destroy.call(this);\n  };\n\n  BaseInteraction.prototype.getViewLayer = function () {\n    return this.viewLayer;\n  };\n\n  BaseInteraction.prototype.getRange = function () {\n    return this.interactionRange;\n  };\n\n  BaseInteraction.prototype.getInteractionConfig = function () {\n    return this.interactionConfig;\n  };\n\n  BaseInteraction.prototype.addDisposable = function (fn) {\n    this.disposables.push(fn);\n  };\n\n  BaseInteraction.prototype.render = function () {\n    return;\n  }; // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  BaseInteraction.prototype.start = function (ev) {\n    return;\n  };\n\n  BaseInteraction.GLOBAL_INTERACTION_MAP = {};\n  BaseInteraction.PLOT_INTERACTION_MAP = {};\n  return BaseInteraction;\n}(Interaction);\n\nexport default BaseInteraction;","map":{"version":3,"sources":["../../src/interaction/base.ts"],"names":[],"mappings":"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","sourcesContent":["import { each } from '@antv/util';\nimport { View } from '../dependents';\nimport BBox from '../util/bbox';\nimport Interaction from './core';\nimport ViewLayer from '../base/view-layer';\nimport { IInteractionConfig } from '../interface/config';\n\nexport interface InteractionCtor {\n  new (\n    cfg: { view: View },\n    viewLayer: ViewLayer<any>,\n    interactionRange?: BBox,\n    interaction?: IInteractionConfig\n  ): BaseInteraction;\n  getInteractionRange(layerRange: BBox, interaction?: IInteractionConfig): BBox;\n}\n\ninterface InteractionMap {\n  [type: string]: InteractionCtor;\n}\n\nexport default abstract class BaseInteraction extends Interaction {\n  public static registerInteraction(type: string, ctor: any) {\n    BaseInteraction.GLOBAL_INTERACTION_MAP[type] = ctor;\n  }\n\n  public static registerPlotInteraction(plotType: string, type: string, ctor: any) {\n    if (!BaseInteraction.PLOT_INTERACTION_MAP[plotType]) {\n      BaseInteraction.PLOT_INTERACTION_MAP[plotType] = {};\n    }\n    BaseInteraction.PLOT_INTERACTION_MAP[plotType][type] = ctor;\n  }\n\n  public static getInteraction(type: string, plotType?: string): InteractionCtor | undefined {\n    if (plotType && BaseInteraction.PLOT_INTERACTION_MAP[plotType] && BaseInteraction[plotType][type]) {\n      return BaseInteraction.PLOT_INTERACTION_MAP[plotType][type];\n    }\n    return BaseInteraction.GLOBAL_INTERACTION_MAP[type];\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  public static getInteractionRange(layerRange: BBox, interaction?: IInteractionConfig): BBox | undefined {\n    return undefined;\n  }\n\n  private static GLOBAL_INTERACTION_MAP: InteractionMap = {};\n  private static PLOT_INTERACTION_MAP: { [plot: string]: InteractionMap } = {};\n\n  public type: string;\n  public cfg: any;\n  private interactionConfig: IInteractionConfig;\n  private interactionRange: BBox;\n  private viewLayer: ViewLayer<any>;\n  private disposables: (() => void)[];\n\n  constructor(\n    cfg: { view: View },\n    viewLayer: ViewLayer<any>,\n    interactionRange?: BBox,\n    interaction?: IInteractionConfig\n  ) {\n    super(cfg);\n    this.viewLayer = viewLayer;\n    this.interactionRange = interactionRange;\n    this.interactionConfig = interaction;\n    this.disposables = [];\n  }\n\n  public destroy(): void {\n    each(this.disposables, (fn) => {\n      fn();\n    });\n    this.disposables = [];\n    this.clear();\n    super.destroy();\n  }\n\n  protected getViewLayer(): ViewLayer<any> {\n    return this.viewLayer;\n  }\n\n  protected getRange(): BBox | undefined {\n    return this.interactionRange;\n  }\n\n  protected getInteractionConfig(): IInteractionConfig | undefined {\n    return this.interactionConfig;\n  }\n\n  protected addDisposable(fn: () => void) {\n    this.disposables.push(fn);\n  }\n\n  public render(): void {\n    return;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  protected start(ev: any): void {\n    return;\n  }\n\n  protected abstract clear(): void;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}