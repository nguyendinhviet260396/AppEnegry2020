{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { clamp, deepMix } from '@antv/util';\nimport BaseComponent from './base';\nimport { GM, Wheel } from '../dependents';\nimport { translate, move } from '../util/g-util';\nimport { getEllipsisText } from '../util/text';\nimport BBox from '../util/bbox';\nexport var ELEMENT_NAMES;\n\n(function (ELEMENT_NAMES) {\n  ELEMENT_NAMES[\"TOOLTIP_INDICATOR_INNER\"] = \"tooltip_indicator-inner\";\n  ELEMENT_NAMES[\"TOOLTIP_INDICATOR_TITLE\"] = \"tooltip_indicator-title\";\n  ELEMENT_NAMES[\"TOOLTIP_INDICATOR_BODY\"] = \"tooltip_indicator-body\";\n  ELEMENT_NAMES[\"TOOLTIP_INDICATOR_ITEM_GROUP\"] = \"tooltip_indicator-item-group\";\n  ELEMENT_NAMES[\"TOOLTIP_INDICATOR_ITEM_BACKGROUND\"] = \"tooltip_indicator-item-background\";\n  ELEMENT_NAMES[\"TOOLTIP_INDICATOR_ITEM_LINE\"] = \"tooltip_indicator-item-line\";\n  ELEMENT_NAMES[\"TOOLTIP_INDICATOR_ITEM_TITLE\"] = \"tooltip_indicator-item-title\";\n  ELEMENT_NAMES[\"TOOLTIP_INDICATOR_ITEM_BODY\"] = \"tooltip_indicator-item-body\";\n  ELEMENT_NAMES[\"TOOLTIP_INDICATOR_ITEM_VALUE_GROUP\"] = \"tooltip_indicator-item-value-group\";\n  ELEMENT_NAMES[\"TOOLTIP_INDICATOR_ITEM_NAME\"] = \"tooltip_indicator-item-name\";\n  ELEMENT_NAMES[\"TOOLTIP_INDICATOR_ITEM_VALUE\"] = \"tooltip_indicator-item-value\";\n})(ELEMENT_NAMES || (ELEMENT_NAMES = {}));\n\nexport var EVENTS;\n\n(function (EVENTS) {\n  EVENTS[\"ON_SELECT_ITEM\"] = \"onSelectItem\";\n})(EVENTS || (EVENTS = {}));\n\nvar PADDING;\n\n(function (PADDING) {\n  PADDING[PADDING[\"LARGE\"] = 12] = \"LARGE\";\n  PADDING[PADDING[\"NORMAL\"] = 8] = \"NORMAL\";\n  PADDING[PADDING[\"SMALL\"] = 4] = \"SMALL\";\n})(PADDING || (PADDING = {}));\n\nvar MAX_ITEM_TITLE_WIDTH = 160;\n/** 指标卡图例组件 */\n\nvar TooltipIndicator =\n/** @class */\nfunction (_super) {\n  __extends(TooltipIndicator, _super);\n\n  function TooltipIndicator() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.curX = 0;\n    _this.curY = 0;\n    _this.offsetX = 0;\n    _this.scrollWidth = 0;\n\n    _this.onBodyGroupMousemove = function (evt) {\n      var itemGroup = findTargetAncestor(evt.target, function (target) {\n        return target.get('name') === ELEMENT_NAMES.TOOLTIP_INDICATOR_ITEM_GROUP;\n      });\n\n      if (itemGroup) {\n        var itemData = itemGroup.get('delegateObject');\n\n        _this.doSelectItem(itemData.item.id);\n      }\n    };\n\n    _this.onWheel = function (evt) {\n      var _a = _this.config.width,\n          width = _a === void 0 ? 0 : _a;\n      var deltaX = evt.deltaX;\n      var offsetMin = Math.min(_this.scrollWidth - width, 0) - (_this.scrollWidth / 2 + Math.max(0, (_this.scrollWidth - width) / 2));\n      var offsetMax = Math.max(_this.scrollWidth - width, 0) + _this.scrollWidth / 2 + Math.max(0, (_this.scrollWidth - width) / 2);\n      var newOffsetX = clamp(_this.offsetX + deltaX, offsetMin, offsetMax);\n\n      if (newOffsetX !== _this.offsetX) {\n        translate(_this.bodyGroup, _this.offsetX - newOffsetX, 0);\n        _this.offsetX = newOffsetX;\n      }\n    };\n\n    return _this;\n  }\n\n  TooltipIndicator.prototype.destroy = function () {\n    this.offEvents();\n\n    _super.prototype.destroy.call(this);\n  };\n  /** 选中某一项 */\n\n\n  TooltipIndicator.prototype.selectItem = function (id) {\n    this.doSelectItem(id);\n  };\n  /** 重置选中状态 */\n\n\n  TooltipIndicator.prototype.resetSelect = function () {\n    this.doSelectItem(this.selectedItemId);\n  };\n\n  TooltipIndicator.prototype.initConfig = function (config) {\n    var _a;\n\n    var _b = config.theme,\n        theme = _b === void 0 ? {} : _b;\n    var defaultCfg = {\n      x: 0,\n      y: 0,\n      title: {\n        text: '',\n        spacingY: PADDING.NORMAL,\n        style: {}\n      },\n      line: {\n        spacingX: PADDING.SMALL,\n        width: 2,\n        style: {}\n      },\n      itemTitle: {\n        spacingX: 0,\n        spacingY: PADDING.SMALL,\n        style: {}\n      },\n      itemName: {\n        spacingX: PADDING.NORMAL,\n        spacingY: PADDING.SMALL,\n        style: {}\n      },\n      itemValue: {\n        style: {}\n      },\n      itemBackground: {\n        style: {\n          opacity: 0,\n          fill: '#000'\n        }\n      },\n      itemSpacing: PADDING.LARGE\n    };\n    this.config = deepMix({}, (_a = theme === null || theme === void 0 ? void 0 : theme.components) === null || _a === void 0 ? void 0 : _a.tooltipIndicator, defaultCfg, config);\n    this.selectedItemId = this.config.selectedItem;\n  };\n\n  TooltipIndicator.prototype.renderInner = function (group) {\n    var _this = this;\n\n    this.resetRender();\n    var _a = this.config,\n        items = _a.items,\n        x = _a.x,\n        y = _a.y;\n    var itemGroups = [];\n    var innerGroup = group.addGroup({\n      name: ELEMENT_NAMES.TOOLTIP_INDICATOR_INNER\n    });\n    this.renderTitle(innerGroup);\n    this.bodyGroup = innerGroup.addGroup({\n      name: ELEMENT_NAMES.TOOLTIP_INDICATOR_BODY\n    });\n    items === null || items === void 0 ? void 0 : items.forEach(function (item, index) {\n      itemGroups.push(_this.renderItem(_this.bodyGroup, item, index));\n    });\n    this.layoutItems(innerGroup);\n    move(innerGroup, x, y);\n    this.applyClip(group);\n    this.bindEvents(innerGroup);\n  };\n\n  TooltipIndicator.prototype.renderTitle = function (group) {\n    var title = this.config.title;\n\n    if (title === null || title === void 0 ? void 0 : title.text) {\n      var shape = group.addShape({\n        type: 'text',\n        name: ELEMENT_NAMES.TOOLTIP_INDICATOR_TITLE,\n        attrs: __assign({\n          text: title === null || title === void 0 ? void 0 : title.text,\n          textAlign: 'left',\n          textBaseline: 'top'\n        }, (title === null || title === void 0 ? void 0 : title.style) || {})\n      });\n      var bbox = shape.getBBox();\n      this.curY += bbox.height;\n      this.curY += title.spacingY || 0;\n      return shape;\n    }\n  };\n\n  TooltipIndicator.prototype.renderItem = function (group, item, index) {\n    var itemBackground = this.config.itemBackground;\n    var itemGroup = group.addGroup({\n      name: ELEMENT_NAMES.TOOLTIP_INDICATOR_ITEM_GROUP,\n      delegateObject: {\n        item: item,\n        index: index\n      }\n    });\n    var oldX = this.curX;\n    var oldY = this.curY;\n    var background = itemGroup.addShape({\n      name: ELEMENT_NAMES.TOOLTIP_INDICATOR_ITEM_BACKGROUND,\n      type: 'rect',\n      attrs: __assign({\n        x: this.curX,\n        y: this.curY,\n        width: 1,\n        height: 1\n      }, itemBackground.style || {})\n    });\n    var line = this.renderLine(itemGroup, item);\n    this.renderItemTitle(itemGroup, item);\n    this.renderItemValues(itemGroup, item);\n    var itemGroupBBox = itemGroup.getBBox(); // update line height\n\n    line.attr({\n      y2: line.attr('y1') + itemGroupBBox.height\n    }); // spacing\n\n    this.curX = oldX + itemGroupBBox.width;\n    this.curX += this.config.itemSpacing || 0; // update background\n\n    background.attr({\n      width: this.curX - oldX - background.attr('lineWidth') * 2,\n      height: this.curY - oldY - background.attr('lineWidth') * 2\n    }); // reset Y\n\n    this.curY = oldY;\n    return itemGroup;\n  };\n\n  TooltipIndicator.prototype.renderLine = function (group, item) {\n    var line = this.config.line;\n    var width = line.width || 2;\n\n    var attrs = __assign({\n      x1: this.curX + width / 2,\n      y1: this.curY,\n      x2: this.curX + width / 2,\n      y2: this.curY,\n      lineWidth: width,\n      stroke: item.color\n    }, (line === null || line === void 0 ? void 0 : line.style) || {});\n\n    var shape = group.addShape({\n      name: ELEMENT_NAMES.TOOLTIP_INDICATOR_ITEM_LINE,\n      type: 'line',\n      attrs: attrs\n    });\n    var bbox = shape.getBBox();\n    this.curX += bbox.width;\n    this.curX += line.spacingX || 0;\n    return shape;\n  };\n\n  TooltipIndicator.prototype.renderItemTitle = function (group, item) {\n    var itemTitle = this.config.itemTitle;\n    var text = getEllipsisText(item.title, MAX_ITEM_TITLE_WIDTH, itemTitle.style || {});\n    var shape = group.addShape({\n      name: ELEMENT_NAMES.TOOLTIP_INDICATOR_ITEM_TITLE,\n      type: 'text',\n      attrs: __assign({\n        x: this.curX,\n        y: this.curY,\n        textAlign: 'left',\n        textBaseline: 'top',\n        text: text\n      }, itemTitle.style || {})\n    });\n    var bbox = shape.getBBox();\n    this.curY += bbox.height;\n    this.curY += itemTitle.spacingY || 0;\n    return shape;\n  };\n\n  TooltipIndicator.prototype.renderItemValues = function (group, item) {\n    var _this = this;\n\n    var _a;\n\n    var itemBodyGroup = group.addGroup({\n      name: ELEMENT_NAMES.TOOLTIP_INDICATOR_ITEM_BODY\n    });\n    var oldX = this.curX;\n    (_a = item.values) === null || _a === void 0 ? void 0 : _a.forEach(function (value, valueIndex) {\n      var valueGroup = itemBodyGroup.addGroup({\n        name: ELEMENT_NAMES.TOOLTIP_INDICATOR_ITEM_VALUE_GROUP,\n        delegateObject: {\n          item: item,\n          valueIndex: valueIndex\n        }\n      }); // reset x\n\n      _this.curX = oldX;\n\n      _this.renderItemValueName(valueGroup, value);\n\n      _this.renderItemValueValue(valueGroup, value);\n    });\n    this.layoutItemValues(itemBodyGroup);\n    return itemBodyGroup;\n  };\n\n  TooltipIndicator.prototype.renderItemValueName = function (group, value) {\n    var itemName = this.config.itemName;\n\n    if (value.name) {\n      var shape = group.addShape({\n        name: ELEMENT_NAMES.TOOLTIP_INDICATOR_ITEM_NAME,\n        type: 'text',\n        attrs: __assign({\n          x: this.curX,\n          y: this.curY,\n          textAlign: 'left',\n          textBaseline: 'top',\n          text: value.name\n        }, itemName.style || {})\n      });\n      var bbox = shape.getBBox();\n\n      if (value.wrapLine) {\n        this.curY += bbox.height;\n        this.curY += itemName.spacingY || 0;\n      } else {\n        this.curX += bbox.width;\n        this.curX += itemName.spacingX || 0;\n      }\n\n      return shape;\n    }\n  };\n\n  TooltipIndicator.prototype.renderItemValueValue = function (group, value) {\n    var _a = this.config,\n        itemName = _a.itemName,\n        itemValue = _a.itemValue;\n    var shape = group.addShape({\n      name: ELEMENT_NAMES.TOOLTIP_INDICATOR_ITEM_VALUE,\n      type: 'text',\n      attrs: __assign({\n        x: this.curX,\n        y: this.curY,\n        textAlign: 'left',\n        textBaseline: 'top',\n        text: value.value\n      }, itemValue.style || {})\n    });\n    var bbox = shape.getBBox();\n    this.curY += bbox.height;\n    this.curY += itemName.spacingY || 0;\n    return shape;\n  };\n\n  TooltipIndicator.prototype.layoutItems = function (group) {\n    var bodyGroup = group.findAllByName(ELEMENT_NAMES.TOOLTIP_INDICATOR_BODY)[0];\n    var itemGroups = group.findAllByName(ELEMENT_NAMES.TOOLTIP_INDICATOR_ITEM_GROUP);\n\n    if (!bodyGroup || itemGroups.length === 0) {\n      return;\n    }\n\n    var bodyGroupBBox = bodyGroup.getBBox();\n    this.scrollWidth = bodyGroupBBox.width;\n  };\n\n  TooltipIndicator.prototype.layoutItemValues = function (group) {\n    var valueGroups = group.findAllByName(ELEMENT_NAMES.TOOLTIP_INDICATOR_ITEM_VALUE_GROUP);\n    var valueGroupBBoxes = valueGroups.map(function (item) {\n      return BBox.fromBBoxObject(item.getBBox());\n    });\n    var valueShapes = group.findAllByName(ELEMENT_NAMES.TOOLTIP_INDICATOR_ITEM_VALUE);\n    var valueShapeBBoxes = valueShapes.map(function (shape) {\n      return BBox.fromBBoxObject(shape.getBBox());\n    });\n    var maxX = Math.max.apply(Math, valueShapeBBoxes.map(function (bbox) {\n      return bbox.maxX;\n    }));\n    valueGroups.forEach(function (valueGroup, index) {\n      var bbox = valueGroupBBoxes[index];\n      var nameShape = valueGroup.findAllByName(ELEMENT_NAMES.TOOLTIP_INDICATOR_ITEM_NAME)[0];\n      var valueShape = valueGroup.findAllByName(ELEMENT_NAMES.TOOLTIP_INDICATOR_ITEM_VALUE)[0];\n\n      if (nameShape && valueShape) {\n        var nameShapeBBox = BBox.fromBBoxObject(nameShape.getBBox());\n        var valueShapeBBox = BBox.fromBBoxObject(valueShape.getBBox()); // horizontal align: name & value\n\n        if (nameShapeBBox.height < bbox.height) {\n          nameShape.attr('y', nameShape.attr('y') + (bbox.height - nameShapeBBox.height) / 2);\n        }\n\n        if (valueShapeBBox.height < bbox.height) {\n          valueShape.attr('y', valueShape.attr('y') + (bbox.height - valueShapeBBox.height) / 2);\n        } // vertical align values\n\n\n        if (valueShapeBBox.maxX < maxX) {\n          valueShape.attr('x', valueShape.attr('x') + maxX - valueShapeBBox.maxX);\n        }\n      }\n    });\n  };\n\n  TooltipIndicator.prototype.applyClip = function (group) {\n    var _a = this.config,\n        x = _a.x,\n        y = _a.y,\n        width = _a.width,\n        height = _a.height;\n    var bbox = group.getBBox();\n\n    if (width || height) {\n      group.setClip({\n        type: 'rect',\n        attrs: {\n          x: x,\n          y: y,\n          width: width || bbox.width,\n          height: height || bbox.height\n        }\n      });\n    }\n  };\n\n  TooltipIndicator.prototype.doSelectItem = function (id) {\n    var _this = this;\n\n    var group = this.getGroup();\n    var itemGroups = group.findAllByName(ELEMENT_NAMES.TOOLTIP_INDICATOR_ITEM_GROUP);\n\n    if (id !== this.selectedItemId) {\n      itemGroups.forEach(function (itemGroup) {\n        var curItemData = itemGroup.get('delegateObject');\n\n        if (curItemData) {\n          _this.applyItemStyle(itemGroup, curItemData.item.id === id ? 'selected' : 'inactive');\n        }\n      });\n      this.selectedItemId = id;\n    } else {\n      // 取消选中\n      itemGroups.forEach(function (itemGroup) {\n        _this.applyItemStyle(itemGroup);\n      });\n      this.selectedItemId = undefined;\n    }\n\n    this.emit(EVENTS.ON_SELECT_ITEM, this.selectedItemId);\n  };\n\n  TooltipIndicator.prototype.applyItemStyle = function (itemGroup, state) {\n    var _a = this.config,\n        line = _a.line,\n        itemTitle = _a.itemTitle,\n        itemName = _a.itemName,\n        itemValue = _a.itemValue;\n    var lineShape = itemGroup.findAllByName(ELEMENT_NAMES.TOOLTIP_INDICATOR_ITEM_LINE)[0];\n    var titleShape = itemGroup.findAllByName(ELEMENT_NAMES.TOOLTIP_INDICATOR_ITEM_TITLE)[0];\n    var itemNameShapes = itemGroup.findAllByName(ELEMENT_NAMES.TOOLTIP_INDICATOR_ITEM_NAME);\n    var itemValueShapes = itemGroup.findAllByName(ELEMENT_NAMES.TOOLTIP_INDICATOR_ITEM_VALUE);\n    var styleName = state && state + \"Style\";\n\n    if (lineShape) {\n      lineShape.attr(line.style);\n      lineShape.attr(line[styleName] || {});\n    }\n\n    if (titleShape) {\n      titleShape.attr(itemTitle.style);\n      titleShape.attr(itemTitle[styleName] || {});\n    }\n\n    itemNameShapes.forEach(function (itemNameShape) {\n      itemNameShape.attr(itemName.style);\n      itemNameShape.attr(itemName[styleName] || {});\n    });\n    itemValueShapes.forEach(function (itemValueShape) {\n      itemValueShape.attr(itemValue.style);\n      itemValueShape.attr(itemValue[styleName] || {});\n    });\n  };\n\n  TooltipIndicator.prototype.bindEvents = function (group) {\n    var _this = this;\n\n    this.offEvents();\n    var bodyGroup = group.findAllByName(ELEMENT_NAMES.TOOLTIP_INDICATOR_BODY)[0];\n    bodyGroup.on('mousemove', this.onBodyGroupMousemove);\n    this.addDisposable(function () {\n      bodyGroup.off('mousemove', _this.onBodyGroupMousemove);\n    });\n    this.gm = new GM(bodyGroup);\n    this.wheel = new Wheel(bodyGroup);\n    this.wheel.on('wheel', this.onWheel);\n  };\n\n  TooltipIndicator.prototype.offEvents = function () {\n    if (this.gm) {\n      this.gm.destroy();\n    }\n\n    if (this.wheel) {\n      this.wheel.destroy();\n    }\n  };\n\n  TooltipIndicator.prototype.resetRender = function () {\n    this.curX = 0;\n    this.curY = 0;\n    this.offsetX = 0;\n  };\n\n  return TooltipIndicator;\n}(BaseComponent);\n\nexport default TooltipIndicator;\n\nfunction findTargetAncestor(element, predicate) {\n  var cur = element;\n\n  while (cur) {\n    if (predicate(cur)) {\n      return cur;\n    }\n\n    cur = cur.getParent();\n  }\n}","map":{"version":3,"sources":["../../src/components/tooltip-indicator.ts"],"names":[],"mappings":"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","sourcesContent":["import { clamp, deepMix } from '@antv/util';\nimport BaseComponent, { BaseComponentConfig } from './base';\nimport { GM, Wheel, GestureEvent, IElement, IGroup, IShape, GraphicEvent } from '../dependents';\nimport { TextStyle, GraphicStyle } from '../interface/config';\nimport { translate, move } from '../util/g-util';\nimport { getEllipsisText } from '../util/text';\nimport BBox from '../util/bbox';\n\nexport interface IndicatorItemItemValue {\n  /** 数值项名称，可选 */\n  name?: string;\n  /** 数值项数值 */\n  value: string | number;\n  /** 数值项名称和数值是否换行，默认否 */\n  wrapLine?: boolean;\n}\n\n/** 指标卡每一项数据 */\nexport interface IndicatorItem {\n  /** 标识符 */\n  id: string | number;\n  /** Marker 颜色 */\n  color: string;\n  /** 标题 */\n  title: string;\n  /** 数值项配置：指标卡一项可以拥有多项数值配置项 */\n  values: IndicatorItemItemValue[];\n}\n\n/** 指标卡组件配置项 */\nexport interface TooltipIndicatorRawConfig {\n  /** 位置信息 */\n  readonly x?: number;\n  readonly y?: number;\n  readonly width?: number;\n  readonly height?: number;\n  /** 数据项 */\n  readonly items?: IndicatorItem[];\n  /** 选中的数据项 ID */\n  readonly selectedItem?: string;\n  /** 指标卡标题 */\n  readonly title?: {\n    text?: string;\n    spacingY?: number;\n    style?: TextStyle;\n    activeStyle?: TextStyle;\n    inactiveStyle?: TextStyle;\n    selectedStyle?: TextStyle;\n  };\n  /** marker 配置 */\n  readonly line?: {\n    spacingX?: number;\n    width?: number;\n    style?: GraphicStyle;\n    activeStyle?: GraphicStyle;\n    inactiveStyle?: GraphicStyle;\n    selectedStyle?: GraphicStyle;\n  };\n  /** 指标卡每一项的标题配置 */\n  itemTitle?: {\n    spacingX?: number;\n    spacingY?: number;\n    style?: TextStyle;\n    activeStyle?: TextStyle;\n    inactiveStyle?: TextStyle;\n    selectedStyle?: TextStyle;\n  };\n  /** 数值项名称配置 */\n  itemName?: {\n    spacingX?: number;\n    spacingY?: number;\n    style?: TextStyle;\n    activeStyle?: TextStyle;\n    inactiveStyle?: TextStyle;\n    selectedStyle?: TextStyle;\n  };\n  /** 数值配置 */\n  itemValue?: {\n    spacingX?: number;\n    spacingY?: number;\n    style?: TextStyle;\n    activeStyle?: TextStyle;\n    inactiveStyle?: TextStyle;\n    selectedStyle?: TextStyle;\n  };\n  itemBackground?: {\n    style?: GraphicStyle;\n  };\n  /** 每一项间距 */\n  itemSpacing?: number;\n  /** 每一项最小宽度 */\n  minItemWidth?: number;\n  /** 每一项最大宽度 */\n  maxItemWidth?: number;\n  /** G2Plot 主题配置 */\n  theme?: any;\n}\n\ninterface TooltipIndicatorConfig extends TooltipIndicatorRawConfig, BaseComponentConfig {}\n\nexport enum ELEMENT_NAMES {\n  TOOLTIP_INDICATOR_INNER = 'tooltip_indicator-inner',\n  TOOLTIP_INDICATOR_TITLE = 'tooltip_indicator-title',\n  TOOLTIP_INDICATOR_BODY = 'tooltip_indicator-body',\n  TOOLTIP_INDICATOR_ITEM_GROUP = 'tooltip_indicator-item-group',\n  TOOLTIP_INDICATOR_ITEM_BACKGROUND = 'tooltip_indicator-item-background',\n  TOOLTIP_INDICATOR_ITEM_LINE = 'tooltip_indicator-item-line',\n  TOOLTIP_INDICATOR_ITEM_TITLE = 'tooltip_indicator-item-title',\n  TOOLTIP_INDICATOR_ITEM_BODY = 'tooltip_indicator-item-body',\n  TOOLTIP_INDICATOR_ITEM_VALUE_GROUP = 'tooltip_indicator-item-value-group',\n  TOOLTIP_INDICATOR_ITEM_NAME = 'tooltip_indicator-item-name',\n  TOOLTIP_INDICATOR_ITEM_VALUE = 'tooltip_indicator-item-value',\n}\n\nexport enum EVENTS {\n  ON_SELECT_ITEM = 'onSelectItem',\n}\n\nenum PADDING {\n  LARGE = 12,\n  NORMAL = 8,\n  SMALL = 4,\n}\n\n/** 挂在元素上的数据 */\ninterface IndicatorItemDelegateObject {\n  /** 原始数据 */\n  item: IndicatorItem;\n  /** item index */\n  index: number;\n  /** 如果为某一项数值项，则含有 valueIndex */\n  valueIndex?: number;\n}\n\nconst MAX_ITEM_TITLE_WIDTH = 160;\n\n/** 指标卡图例组件 */\nexport default class TooltipIndicator extends BaseComponent<TooltipIndicatorConfig> {\n  private curX = 0;\n  private curY = 0;\n  private offsetX = 0;\n  private scrollWidth = 0;\n  private bodyGroup: IGroup;\n  private gm: GM;\n  private wheel: Wheel;\n  private selectedItemId: string | number;\n\n  public destroy() {\n    this.offEvents();\n    super.destroy();\n  }\n\n  /** 选中某一项 */\n  public selectItem(id: string | number): void {\n    this.doSelectItem(id);\n  }\n\n  /** 重置选中状态 */\n  public resetSelect(): void {\n    this.doSelectItem(this.selectedItemId);\n  }\n\n  protected initConfig(config: TooltipIndicatorConfig): void {\n    const { theme = {} } = config;\n    const defaultCfg: TooltipIndicatorRawConfig = {\n      x: 0,\n      y: 0,\n      title: {\n        text: '',\n        spacingY: PADDING.NORMAL,\n        style: {},\n      },\n      line: {\n        spacingX: PADDING.SMALL,\n        width: 2,\n        style: {},\n      },\n      itemTitle: {\n        spacingX: 0,\n        spacingY: PADDING.SMALL,\n        style: {},\n      },\n      itemName: {\n        spacingX: PADDING.NORMAL,\n        spacingY: PADDING.SMALL,\n        style: {},\n      },\n      itemValue: {\n        style: {},\n      },\n      itemBackground: {\n        style: {\n          opacity: 0,\n          fill: '#000',\n        },\n      },\n      itemSpacing: PADDING.LARGE,\n    };\n    this.config = deepMix({}, theme?.components?.tooltipIndicator, defaultCfg, config);\n    this.selectedItemId = this.config.selectedItem;\n  }\n\n  protected renderInner(group: IGroup): void {\n    this.resetRender();\n    const { items, x, y } = this.config;\n    const itemGroups: IGroup[] = [];\n    const innerGroup = group.addGroup({\n      name: ELEMENT_NAMES.TOOLTIP_INDICATOR_INNER,\n    });\n    this.renderTitle(innerGroup);\n    this.bodyGroup = innerGroup.addGroup({\n      name: ELEMENT_NAMES.TOOLTIP_INDICATOR_BODY,\n    });\n    items?.forEach((item: IndicatorItem, index: number) => {\n      itemGroups.push(this.renderItem(this.bodyGroup, item, index));\n    });\n    this.layoutItems(innerGroup);\n    move(innerGroup, x, y);\n    this.applyClip(group);\n    this.bindEvents(innerGroup);\n  }\n\n  private renderTitle(group: IGroup): IShape | undefined {\n    const { title } = this.config;\n    if (title?.text) {\n      const shape = group.addShape({\n        type: 'text',\n        name: ELEMENT_NAMES.TOOLTIP_INDICATOR_TITLE,\n        attrs: {\n          text: title?.text,\n          textAlign: 'left',\n          textBaseline: 'top',\n          ...(title?.style || {}),\n        },\n      });\n      const bbox = shape.getBBox();\n      this.curY += bbox.height;\n      this.curY += title.spacingY || 0;\n      return shape;\n    }\n  }\n\n  private renderItem(group: IGroup, item: IndicatorItem, index: number): IGroup {\n    const { itemBackground } = this.config;\n    const itemGroup = group.addGroup({\n      name: ELEMENT_NAMES.TOOLTIP_INDICATOR_ITEM_GROUP,\n      delegateObject: {\n        item,\n        index,\n      },\n    });\n    const oldX = this.curX;\n    const oldY = this.curY;\n    const background = itemGroup.addShape({\n      name: ELEMENT_NAMES.TOOLTIP_INDICATOR_ITEM_BACKGROUND,\n      type: 'rect',\n      attrs: {\n        x: this.curX,\n        y: this.curY,\n        width: 1,\n        height: 1,\n        ...(itemBackground.style || {}),\n      },\n    });\n    const line = this.renderLine(itemGroup, item);\n    this.renderItemTitle(itemGroup, item);\n    this.renderItemValues(itemGroup, item);\n    const itemGroupBBox = itemGroup.getBBox();\n    // update line height\n    line.attr({\n      y2: line.attr('y1') + itemGroupBBox.height,\n    });\n\n    // spacing\n    this.curX = oldX + itemGroupBBox.width;\n    this.curX += this.config.itemSpacing || 0;\n\n    // update background\n    background.attr({\n      width: this.curX - oldX - background.attr('lineWidth') * 2,\n      height: this.curY - oldY - background.attr('lineWidth') * 2,\n    });\n\n    // reset Y\n    this.curY = oldY;\n\n    return itemGroup;\n  }\n\n  private renderLine(group: IGroup, item: IndicatorItem): IShape {\n    const { line } = this.config;\n    const width = line.width || 2;\n    const attrs = {\n      x1: this.curX + width / 2,\n      y1: this.curY,\n      x2: this.curX + width / 2,\n      y2: this.curY,\n      lineWidth: width,\n      stroke: item.color,\n      ...(line?.style || {}),\n    };\n    const shape = group.addShape({\n      name: ELEMENT_NAMES.TOOLTIP_INDICATOR_ITEM_LINE,\n      type: 'line',\n      attrs,\n    });\n    const bbox = shape.getBBox();\n    this.curX += bbox.width;\n    this.curX += line.spacingX || 0;\n\n    return shape;\n  }\n\n  private renderItemTitle(group: IGroup, item: IndicatorItem): IShape {\n    const { itemTitle } = this.config;\n    const text: string = getEllipsisText(item.title, MAX_ITEM_TITLE_WIDTH, itemTitle.style || {});\n    const shape = group.addShape({\n      name: ELEMENT_NAMES.TOOLTIP_INDICATOR_ITEM_TITLE,\n      type: 'text',\n      attrs: {\n        x: this.curX,\n        y: this.curY,\n        textAlign: 'left',\n        textBaseline: 'top',\n        text,\n        ...(itemTitle.style || {}),\n      },\n    });\n    const bbox = shape.getBBox();\n    this.curY += bbox.height;\n    this.curY += itemTitle.spacingY || 0;\n\n    return shape;\n  }\n\n  private renderItemValues(group: IGroup, item: IndicatorItem): IGroup {\n    const itemBodyGroup = group.addGroup({\n      name: ELEMENT_NAMES.TOOLTIP_INDICATOR_ITEM_BODY,\n    });\n    const oldX = this.curX;\n    item.values?.forEach((value: IndicatorItemItemValue, valueIndex: number) => {\n      const valueGroup = itemBodyGroup.addGroup({\n        name: ELEMENT_NAMES.TOOLTIP_INDICATOR_ITEM_VALUE_GROUP,\n        delegateObject: {\n          item,\n          valueIndex,\n        },\n      });\n      // reset x\n      this.curX = oldX;\n      this.renderItemValueName(valueGroup, value);\n      this.renderItemValueValue(valueGroup, value);\n    });\n\n    this.layoutItemValues(itemBodyGroup);\n\n    return itemBodyGroup;\n  }\n\n  private renderItemValueName(group: IGroup, value: IndicatorItemItemValue): IShape | undefined {\n    const { itemName } = this.config;\n    if (value.name) {\n      const shape = group.addShape({\n        name: ELEMENT_NAMES.TOOLTIP_INDICATOR_ITEM_NAME,\n        type: 'text',\n        attrs: {\n          x: this.curX,\n          y: this.curY,\n          textAlign: 'left',\n          textBaseline: 'top',\n          text: value.name,\n          ...(itemName.style || {}),\n        },\n      });\n      const bbox = shape.getBBox();\n      if (value.wrapLine) {\n        this.curY += bbox.height;\n        this.curY += itemName.spacingY || 0;\n      } else {\n        this.curX += bbox.width;\n        this.curX += itemName.spacingX || 0;\n      }\n\n      return shape;\n    }\n  }\n\n  private renderItemValueValue(group: IGroup, value: IndicatorItemItemValue): IShape {\n    const { itemName, itemValue } = this.config;\n    const shape = group.addShape({\n      name: ELEMENT_NAMES.TOOLTIP_INDICATOR_ITEM_VALUE,\n      type: 'text',\n      attrs: {\n        x: this.curX,\n        y: this.curY,\n        textAlign: 'left',\n        textBaseline: 'top',\n        text: value.value,\n        ...(itemValue.style || {}),\n      },\n    });\n    const bbox = shape.getBBox();\n    this.curY += bbox.height;\n    this.curY += itemName.spacingY || 0;\n\n    return shape;\n  }\n\n  private layoutItems(group: IGroup): void {\n    const bodyGroup = group.findAllByName(ELEMENT_NAMES.TOOLTIP_INDICATOR_BODY)[0];\n    const itemGroups = group.findAllByName(ELEMENT_NAMES.TOOLTIP_INDICATOR_ITEM_GROUP);\n    if (!bodyGroup || itemGroups.length === 0) {\n      return;\n    }\n    const bodyGroupBBox = bodyGroup.getBBox();\n    this.scrollWidth = bodyGroupBBox.width;\n  }\n\n  private layoutItemValues(group: IGroup): void {\n    const valueGroups = group.findAllByName(ELEMENT_NAMES.TOOLTIP_INDICATOR_ITEM_VALUE_GROUP);\n    const valueGroupBBoxes = valueGroups.map((item) => BBox.fromBBoxObject(item.getBBox()));\n    const valueShapes = group.findAllByName(ELEMENT_NAMES.TOOLTIP_INDICATOR_ITEM_VALUE);\n    const valueShapeBBoxes = valueShapes.map((shape) => BBox.fromBBoxObject(shape.getBBox()));\n    const maxX = Math.max(...valueShapeBBoxes.map((bbox) => bbox.maxX));\n\n    valueGroups.forEach((valueGroup: IGroup, index: number) => {\n      const bbox = valueGroupBBoxes[index];\n      const nameShape = valueGroup.findAllByName(ELEMENT_NAMES.TOOLTIP_INDICATOR_ITEM_NAME)[0];\n      const valueShape = valueGroup.findAllByName(ELEMENT_NAMES.TOOLTIP_INDICATOR_ITEM_VALUE)[0];\n      if (nameShape && valueShape) {\n        const nameShapeBBox = BBox.fromBBoxObject(nameShape.getBBox());\n        const valueShapeBBox = BBox.fromBBoxObject(valueShape.getBBox());\n        // horizontal align: name & value\n        if (nameShapeBBox.height < bbox.height) {\n          nameShape.attr('y', nameShape.attr('y') + (bbox.height - nameShapeBBox.height) / 2);\n        }\n        if (valueShapeBBox.height < bbox.height) {\n          valueShape.attr('y', valueShape.attr('y') + (bbox.height - valueShapeBBox.height) / 2);\n        }\n        // vertical align values\n        if (valueShapeBBox.maxX < maxX) {\n          valueShape.attr('x', valueShape.attr('x') + maxX - valueShapeBBox.maxX);\n        }\n      }\n    });\n  }\n\n  private applyClip(group: IGroup) {\n    const { x, y, width, height } = this.config;\n    const bbox = group.getBBox();\n\n    if (width || height) {\n      group.setClip({\n        type: 'rect',\n        attrs: {\n          x,\n          y,\n          width: width || bbox.width,\n          height: height || bbox.height,\n        },\n      });\n    }\n  }\n\n  private doSelectItem(id: string | number) {\n    const group = this.getGroup();\n    const itemGroups = group.findAllByName(ELEMENT_NAMES.TOOLTIP_INDICATOR_ITEM_GROUP);\n    if (id !== this.selectedItemId) {\n      itemGroups.forEach((itemGroup: IGroup) => {\n        const curItemData = itemGroup.get('delegateObject') as IndicatorItemDelegateObject;\n        if (curItemData) {\n          this.applyItemStyle(itemGroup, curItemData.item.id === id ? 'selected' : 'inactive');\n        }\n      });\n      this.selectedItemId = id;\n    } else {\n      // 取消选中\n      itemGroups.forEach((itemGroup: IGroup) => {\n        this.applyItemStyle(itemGroup);\n      });\n      this.selectedItemId = undefined;\n    }\n    this.emit(EVENTS.ON_SELECT_ITEM, this.selectedItemId);\n  }\n\n  private applyItemStyle(itemGroup: IGroup, state?: 'selected' | 'active' | 'inactive') {\n    const { line, itemTitle, itemName, itemValue } = this.config;\n    const lineShape = itemGroup.findAllByName(ELEMENT_NAMES.TOOLTIP_INDICATOR_ITEM_LINE)[0];\n    const titleShape = itemGroup.findAllByName(ELEMENT_NAMES.TOOLTIP_INDICATOR_ITEM_TITLE)[0];\n    const itemNameShapes = itemGroup.findAllByName(ELEMENT_NAMES.TOOLTIP_INDICATOR_ITEM_NAME);\n    const itemValueShapes = itemGroup.findAllByName(ELEMENT_NAMES.TOOLTIP_INDICATOR_ITEM_VALUE);\n    const styleName = state && `${state}Style`;\n\n    if (lineShape) {\n      lineShape.attr(line.style);\n      lineShape.attr(line[styleName] || {});\n    }\n    if (titleShape) {\n      titleShape.attr(itemTitle.style);\n      titleShape.attr(itemTitle[styleName] || {});\n    }\n    itemNameShapes.forEach((itemNameShape) => {\n      itemNameShape.attr(itemName.style);\n      itemNameShape.attr(itemName[styleName] || {});\n    });\n    itemValueShapes.forEach((itemValueShape) => {\n      itemValueShape.attr(itemValue.style);\n      itemValueShape.attr(itemValue[styleName] || {});\n    });\n  }\n\n  private bindEvents(group: IGroup) {\n    this.offEvents();\n    const bodyGroup = group.findAllByName(ELEMENT_NAMES.TOOLTIP_INDICATOR_BODY)[0];\n    bodyGroup.on('mousemove', this.onBodyGroupMousemove);\n    this.addDisposable(() => {\n      bodyGroup.off('mousemove', this.onBodyGroupMousemove);\n    });\n    this.gm = new GM(bodyGroup);\n    this.wheel = new Wheel(bodyGroup);\n    this.wheel.on('wheel', this.onWheel);\n  }\n\n  private offEvents() {\n    if (this.gm) {\n      this.gm.destroy();\n    }\n    if (this.wheel) {\n      this.wheel.destroy();\n    }\n  }\n\n  private onBodyGroupMousemove = (evt: GraphicEvent) => {\n    const itemGroup = findTargetAncestor(\n      evt.target as IElement,\n      (target: IElement) => target.get('name') === ELEMENT_NAMES.TOOLTIP_INDICATOR_ITEM_GROUP\n    );\n    if (itemGroup) {\n      const itemData = itemGroup.get('delegateObject') as IndicatorItemDelegateObject;\n      this.doSelectItem(itemData.item.id);\n    }\n  };\n\n  private onWheel = (evt: GestureEvent) => {\n    const { width = 0 } = this.config;\n    const { deltaX } = evt;\n    const offsetMin =\n      Math.min(this.scrollWidth - width, 0) - (this.scrollWidth / 2 + Math.max(0, (this.scrollWidth - width) / 2));\n    const offsetMax =\n      Math.max(this.scrollWidth - width, 0) + this.scrollWidth / 2 + Math.max(0, (this.scrollWidth - width) / 2);\n    const newOffsetX = clamp(this.offsetX + deltaX, offsetMin, offsetMax);\n\n    if (newOffsetX !== this.offsetX) {\n      translate(this.bodyGroup, this.offsetX - newOffsetX, 0);\n      this.offsetX = newOffsetX;\n    }\n  };\n\n  private resetRender() {\n    this.curX = 0;\n    this.curY = 0;\n    this.offsetX = 0;\n  }\n}\n\nfunction findTargetAncestor(element: IElement, predicate: (target: IElement) => boolean): IElement | undefined {\n  let cur = element;\n  while (cur) {\n    if (predicate(cur)) {\n      return cur;\n    }\n    cur = cur.getParent();\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}