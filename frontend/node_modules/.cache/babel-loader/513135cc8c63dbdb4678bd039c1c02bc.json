{"ast":null,"code":"import { deepMix } from '@antv/util';\nimport { DEFAULT_GLOBAL_THEME } from './default';\nimport { DEFAULT_DARK_THEME } from './dark';\n/** 所有的全局主题 */\n\nvar GLOBAL_THEME_MAP = {\n  default: DEFAULT_GLOBAL_THEME,\n  dark: DEFAULT_DARK_THEME\n};\n/**\n * 注册全局主题\n * @param name\n * @param theme\n */\n\nexport function registerGlobalTheme(name, theme) {\n  var defaultTheme = getGlobalTheme();\n  GLOBAL_THEME_MAP[name.toLowerCase()] = deepMix({}, defaultTheme, theme);\n}\n/**\n * 获取默认主题\n * @param name 如果 name 为空，则返回默认的主题，否则返回指定 name 的主题\n */\n\nexport function getGlobalTheme(name) {\n  if (name === void 0) {\n    name = 'default';\n  }\n\n  var theme = GLOBAL_THEME_MAP[name.toLowerCase()];\n\n  if (theme) {\n    return theme;\n  } // 如没有找到，则使用当前全局主题替代\n\n\n  console.warn(\"error in theme: Can't find the theme named %s. Please register theme first.\", name);\n  return DEFAULT_GLOBAL_THEME;\n}","map":{"version":3,"sources":["../../src/theme/global.ts"],"names":[],"mappings":"AAAA,SAAS,OAAT,QAAwB,YAAxB;AACA,SAAS,oBAAT,QAAqC,WAArC;AACA,SAAS,kBAAT,QAAmC,QAAnC;AAEA;;AACA,IAAM,gBAAgB,GAAwB;AAC5C,EAAA,OAAO,EAAE,oBADmC;AAE5C,EAAA,IAAI,EAAE;AAFsC,CAA9C;AAKA;;;;;;AAKA,OAAM,SAAU,mBAAV,CAA8B,IAA9B,EAA4C,KAA5C,EAAsD;AAC1D,MAAM,YAAY,GAAG,cAAc,EAAnC;AACA,EAAA,gBAAgB,CAAC,IAAI,CAAC,WAAL,EAAD,CAAhB,GAAuC,OAAO,CAAC,EAAD,EAAK,YAAL,EAAmB,KAAnB,CAA9C;AACD;AAED;;;;;AAIA,OAAM,SAAU,cAAV,CAAyB,IAAzB,EAAiD;AAAxB,MAAA,IAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,IAAA,GAAA,SAAA;AAAwB;;AACrD,MAAM,KAAK,GAAG,gBAAgB,CAAC,IAAI,CAAC,WAAL,EAAD,CAA9B;;AACA,MAAI,KAAJ,EAAW;AACT,WAAO,KAAP;AACD,GAJoD,CAKrD;;;AACA,EAAA,OAAO,CAAC,IAAR,CAAa,6EAAb,EAA4F,IAA5F;AACA,SAAO,oBAAP;AACD","sourcesContent":["import { deepMix } from '@antv/util';\nimport { DEFAULT_GLOBAL_THEME } from './default';\nimport { DEFAULT_DARK_THEME } from './dark';\n\n/** 所有的全局主题 */\nconst GLOBAL_THEME_MAP: Record<string, any> = {\n  default: DEFAULT_GLOBAL_THEME,\n  dark: DEFAULT_DARK_THEME,\n};\n\n/**\n * 注册全局主题\n * @param name\n * @param theme\n */\nexport function registerGlobalTheme(name: string, theme: any): void {\n  const defaultTheme = getGlobalTheme();\n  GLOBAL_THEME_MAP[name.toLowerCase()] = deepMix({}, defaultTheme, theme);\n}\n\n/**\n * 获取默认主题\n * @param name 如果 name 为空，则返回默认的主题，否则返回指定 name 的主题\n */\nexport function getGlobalTheme(name: string = 'default'): any {\n  const theme = GLOBAL_THEME_MAP[name.toLowerCase()];\n  if (theme) {\n    return theme;\n  }\n  // 如没有找到，则使用当前全局主题替代\n  console.warn(\"error in theme: Can't find the theme named %s. Please register theme first.\", name);\n  return DEFAULT_GLOBAL_THEME;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}