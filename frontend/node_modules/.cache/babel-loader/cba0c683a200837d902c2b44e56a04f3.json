{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar dom_util_1 = require(\"@antv/dom-util\");\n\nvar util_1 = require(\"@antv/util\");\n\nvar util_2 = require(\"../util/util\");\n\nvar component_1 = require(\"./component\");\n\nvar HtmlComponent =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(HtmlComponent, _super);\n\n  function HtmlComponent() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  HtmlComponent.prototype.getDefaultCfg = function () {\n    var cfg = _super.prototype.getDefaultCfg.call(this);\n\n    return tslib_1.__assign(tslib_1.__assign({}, cfg), {\n      container: null,\n      containerTpl: '<div></div>',\n      updateAutoRender: true,\n      containerClassName: '',\n      parent: null\n    });\n    return cfg;\n  };\n\n  HtmlComponent.prototype.getContainer = function () {\n    return this.get('container');\n  };\n  /**\n   * 显示组件\n   */\n\n\n  HtmlComponent.prototype.show = function () {\n    var container = this.get('container');\n    container.style.display = '';\n    this.set('visible', true);\n  };\n  /**\n   * 隐藏组件\n   */\n\n\n  HtmlComponent.prototype.hide = function () {\n    var container = this.get('container');\n    container.style.display = 'none';\n    this.set('visible', false);\n  };\n  /**\n   * 是否允许捕捉事件\n   * @param capture 事件捕捉\n   */\n\n\n  HtmlComponent.prototype.setCapture = function (capture) {\n    var container = this.getContainer();\n    var value = capture ? 'auto' : 'none';\n    container.style.pointerEvents = value;\n    this.set('capture', capture);\n  };\n\n  HtmlComponent.prototype.getBBox = function () {\n    var container = this.getContainer();\n    var x = parseFloat(container.style.left) || 0;\n    var y = parseFloat(container.style.top) || 0;\n    return util_2.createBBox(x, y, container.clientWidth, container.clientHeight);\n  };\n\n  HtmlComponent.prototype.clear = function () {\n    var container = this.get('container');\n    util_2.clearDom(container);\n  };\n\n  HtmlComponent.prototype.destroy = function () {\n    this.removeEvent();\n    this.removeDom();\n\n    _super.prototype.destroy.call(this);\n  };\n  /**\n   * 复写 init，主要是初始化 DOM 和事件\n   */\n\n\n  HtmlComponent.prototype.init = function () {\n    _super.prototype.init.call(this);\n\n    this.initContainer();\n    this.initDom();\n    this.resetStyles(); // 初始化样式\n\n    this.applyStyles(); // 应用样式\n\n    this.initEvent();\n    this.initCapture();\n    this.initVisible();\n  };\n\n  HtmlComponent.prototype.initCapture = function () {\n    this.setCapture(this.get('capture'));\n  };\n\n  HtmlComponent.prototype.initVisible = function () {\n    if (!this.get('visible')) {\n      // 设置初始显示状态\n      this.hide();\n    } else {\n      this.show();\n    }\n  };\n\n  HtmlComponent.prototype.initDom = function () {};\n\n  HtmlComponent.prototype.initContainer = function () {\n    var container = this.get('container');\n\n    if (util_1.isNil(container)) {\n      // 未指定 container 则创建\n      container = this.createDom();\n      var parent_1 = this.get('parent');\n\n      if (util_1.isString(parent_1)) {\n        parent_1 = document.getElementById(parent_1);\n        this.set('parent', parent_1);\n      }\n\n      parent_1.appendChild(container);\n      this.set('container', container);\n    } else if (util_1.isString(container)) {\n      // 用户传入的 id, 作为 container\n      container = document.getElementById(container);\n      this.set('container', container);\n    } // else container 是 DOM\n\n\n    if (!this.get('parent')) {\n      this.set('parent', container.parentNode);\n    }\n  }; // 样式需要进行合并，不能单纯的替换，否则使用非常不方便\n\n\n  HtmlComponent.prototype.resetStyles = function () {\n    var style = this.get('domStyles');\n    var defaultStyles = this.get('defaultStyles');\n\n    if (!style) {\n      style = defaultStyles;\n    } else {\n      style = util_1.deepMix({}, defaultStyles, style);\n    }\n\n    this.set('domStyles', style);\n  }; // 应用所有的样式\n\n\n  HtmlComponent.prototype.applyStyles = function () {\n    var domStyles = this.get('domStyles');\n\n    if (!domStyles) {\n      return;\n    }\n\n    var container = this.getContainer();\n    this.applyChildrenStyles(container, domStyles);\n    var containerClassName = this.get('containerClassName');\n\n    if (containerClassName && util_2.hasClass(container, containerClassName)) {\n      var containerCss = domStyles[containerClassName];\n      dom_util_1.modifyCSS(container, containerCss);\n    }\n  };\n\n  HtmlComponent.prototype.applyChildrenStyles = function (element, styles) {\n    util_1.each(styles, function (style, name) {\n      var elements = element.getElementsByClassName(name);\n      util_1.each(elements, function (el) {\n        dom_util_1.modifyCSS(el, style);\n      });\n    });\n  }; // 应用到单个 DOM\n\n\n  HtmlComponent.prototype.applyStyle = function (cssName, dom) {\n    var domStyles = this.get('domStyles');\n    dom_util_1.modifyCSS(dom, domStyles[cssName]);\n  };\n  /**\n   * @protected\n   */\n\n\n  HtmlComponent.prototype.createDom = function () {\n    var containerTpl = this.get('containerTpl');\n    return dom_util_1.createDom(containerTpl);\n  };\n  /**\n   * @protected\n   * 初始化事件\n   */\n\n\n  HtmlComponent.prototype.initEvent = function () {};\n  /**\n   * @protected\n   * 清理 DOM\n   */\n\n\n  HtmlComponent.prototype.removeDom = function () {\n    var container = this.get('container');\n    container && container.parentNode.removeChild(container);\n  };\n  /**\n   * @protected\n   * 清理事件\n   */\n\n\n  HtmlComponent.prototype.removeEvent = function () {};\n\n  HtmlComponent.prototype.updateInner = function (cfg) {\n    // 更新样式\n    if (util_1.hasKey(cfg, 'domStyles')) {\n      this.resetStyles();\n      this.applyStyles();\n    } // 只要属性发生变化，都调整一些位置\n\n\n    this.resetPosition();\n  };\n\n  HtmlComponent.prototype.resetPosition = function () {};\n\n  ;\n  return HtmlComponent;\n}(component_1.default);\n\nexports.default = HtmlComponent;","map":{"version":3,"sources":["../../src/abstract/html-component.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar dom_util_1 = require(\"@antv/dom-util\");\nvar util_1 = require(\"@antv/util\");\nvar util_2 = require(\"../util/util\");\nvar component_1 = require(\"./component\");\nvar HtmlComponent = /** @class */ (function (_super) {\n    tslib_1.__extends(HtmlComponent, _super);\n    function HtmlComponent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    HtmlComponent.prototype.getDefaultCfg = function () {\n        var cfg = _super.prototype.getDefaultCfg.call(this);\n        return tslib_1.__assign(tslib_1.__assign({}, cfg), { container: null, containerTpl: '<div></div>', updateAutoRender: true, containerClassName: '', parent: null });\n        return cfg;\n    };\n    HtmlComponent.prototype.getContainer = function () {\n        return this.get('container');\n    };\n    /**\n     * 显示组件\n     */\n    HtmlComponent.prototype.show = function () {\n        var container = this.get('container');\n        container.style.display = '';\n        this.set('visible', true);\n    };\n    /**\n     * 隐藏组件\n     */\n    HtmlComponent.prototype.hide = function () {\n        var container = this.get('container');\n        container.style.display = 'none';\n        this.set('visible', false);\n    };\n    /**\n     * 是否允许捕捉事件\n     * @param capture 事件捕捉\n     */\n    HtmlComponent.prototype.setCapture = function (capture) {\n        var container = this.getContainer();\n        var value = capture ? 'auto' : 'none';\n        container.style.pointerEvents = value;\n        this.set('capture', capture);\n    };\n    HtmlComponent.prototype.getBBox = function () {\n        var container = this.getContainer();\n        var x = parseFloat(container.style.left) || 0;\n        var y = parseFloat(container.style.top) || 0;\n        return util_2.createBBox(x, y, container.clientWidth, container.clientHeight);\n    };\n    HtmlComponent.prototype.clear = function () {\n        var container = this.get('container');\n        util_2.clearDom(container);\n    };\n    HtmlComponent.prototype.destroy = function () {\n        this.removeEvent();\n        this.removeDom();\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * 复写 init，主要是初始化 DOM 和事件\n     */\n    HtmlComponent.prototype.init = function () {\n        _super.prototype.init.call(this);\n        this.initContainer();\n        this.initDom();\n        this.resetStyles(); // 初始化样式\n        this.applyStyles(); // 应用样式\n        this.initEvent();\n        this.initCapture();\n        this.initVisible();\n    };\n    HtmlComponent.prototype.initCapture = function () {\n        this.setCapture(this.get('capture'));\n    };\n    HtmlComponent.prototype.initVisible = function () {\n        if (!this.get('visible')) {\n            // 设置初始显示状态\n            this.hide();\n        }\n        else {\n            this.show();\n        }\n    };\n    HtmlComponent.prototype.initDom = function () {\n    };\n    HtmlComponent.prototype.initContainer = function () {\n        var container = this.get('container');\n        if (util_1.isNil(container)) {\n            // 未指定 container 则创建\n            container = this.createDom();\n            var parent_1 = this.get('parent');\n            if (util_1.isString(parent_1)) {\n                parent_1 = document.getElementById(parent_1);\n                this.set('parent', parent_1);\n            }\n            parent_1.appendChild(container);\n            this.set('container', container);\n        }\n        else if (util_1.isString(container)) {\n            // 用户传入的 id, 作为 container\n            container = document.getElementById(container);\n            this.set('container', container);\n        } // else container 是 DOM\n        if (!this.get('parent')) {\n            this.set('parent', container.parentNode);\n        }\n    };\n    // 样式需要进行合并，不能单纯的替换，否则使用非常不方便\n    HtmlComponent.prototype.resetStyles = function () {\n        var style = this.get('domStyles');\n        var defaultStyles = this.get('defaultStyles');\n        if (!style) {\n            style = defaultStyles;\n        }\n        else {\n            style = util_1.deepMix({}, defaultStyles, style);\n        }\n        this.set('domStyles', style);\n    };\n    // 应用所有的样式\n    HtmlComponent.prototype.applyStyles = function () {\n        var domStyles = this.get('domStyles');\n        if (!domStyles) {\n            return;\n        }\n        var container = this.getContainer();\n        this.applyChildrenStyles(container, domStyles);\n        var containerClassName = this.get('containerClassName');\n        if (containerClassName && util_2.hasClass(container, containerClassName)) {\n            var containerCss = domStyles[containerClassName];\n            dom_util_1.modifyCSS(container, containerCss);\n        }\n    };\n    HtmlComponent.prototype.applyChildrenStyles = function (element, styles) {\n        util_1.each(styles, function (style, name) {\n            var elements = element.getElementsByClassName(name);\n            util_1.each(elements, function (el) {\n                dom_util_1.modifyCSS(el, style);\n            });\n        });\n    };\n    // 应用到单个 DOM\n    HtmlComponent.prototype.applyStyle = function (cssName, dom) {\n        var domStyles = this.get('domStyles');\n        dom_util_1.modifyCSS(dom, domStyles[cssName]);\n    };\n    /**\n     * @protected\n     */\n    HtmlComponent.prototype.createDom = function () {\n        var containerTpl = this.get('containerTpl');\n        return dom_util_1.createDom(containerTpl);\n    };\n    /**\n     * @protected\n     * 初始化事件\n     */\n    HtmlComponent.prototype.initEvent = function () { };\n    /**\n     * @protected\n     * 清理 DOM\n     */\n    HtmlComponent.prototype.removeDom = function () {\n        var container = this.get('container');\n        container && container.parentNode.removeChild(container);\n    };\n    /**\n     * @protected\n     * 清理事件\n     */\n    HtmlComponent.prototype.removeEvent = function () { };\n    HtmlComponent.prototype.updateInner = function (cfg) {\n        // 更新样式\n        if (util_1.hasKey(cfg, 'domStyles')) {\n            this.resetStyles();\n            this.applyStyles();\n        }\n        // 只要属性发生变化，都调整一些位置\n        this.resetPosition();\n    };\n    HtmlComponent.prototype.resetPosition = function () { };\n    ;\n    return HtmlComponent;\n}(component_1.default));\nexports.default = HtmlComponent;\n//# sourceMappingURL=html-component.js.map"]},"metadata":{},"sourceType":"script"}