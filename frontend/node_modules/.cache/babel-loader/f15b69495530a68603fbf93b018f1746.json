{"ast":null,"code":"import { fork, take, call, put, delay, takeLatest, select } from 'redux-saga/effects'; //select to listTask from store\n\nimport * as alarmTypes from './../constants/alarm';\nimport * as weatherTypes from './../constants/weather';\nimport * as priceTypes from './../constants/prices';\nimport * as authTypes from './../constants/auths';\nimport * as deviceTypes from './../constants/devices';\nimport * as analyticsTypes from './../constants/analytics';\nimport { refeshWeatherSuccess, refeshWeatherFailed } from './../actions/weather';\nimport { refeshpriceFailed, refeshpriceSuc } from './../actions/weather';\nimport { fetchListAnalyticsFailed, fetchListAnalyticsSuccess } from './../actions/analytics';\nimport { getListWeather } from './../apis/weather';\nimport { getList } from './../apis/alarm';\nimport { getListAnalytics } from './../apis/analytics';\nimport { getListUser, addUser, loginUser, deteleUser, updateUser } from './../apis/auth';\nimport { getListData //updateData,\n//addData,\n} from './../apis/devices';\nimport { STATUS_CODE } from './../constants/index';\nimport { showLoading, hideLoading } from './../actions/ui';\nimport { hideModal } from './../actions/modal';\nimport { fetchListAlarm, fetchListAlarmSuccess, fetchListAlarmFailed, refeshListEmailAlarmSuccess, refeshListEmailAlarmFailed } from './../actions/alarm';\nimport { authSignupSuccess, authSignupFaild, authLoginSuccess, authLoginFaild, authLogHistorySuccess, authLogHistoryFaild // checkAuthFaild,\n// checkAuthSuccess,\n, fetchListUserFailed, fetchListUserSuccess, setUserDeleteSucces, setUserDeleteFaild, updateUserSuccess, updateUserFailed, authLogDeleteHistoryFaild, authLogDeleteHistorySuccess } from './../actions/auths';\nimport { refeshSolar01Failed, refeshSolar01Success, refeshPowerSolar01Failed, refeshPowerSolar01Success, refeshSolar02Success, refeshSolar02Failed, refeshPowerSolar02Failed, refeshPowerSolar02Success, refeshMainLastSuccess, refeshMainLastFailed, refeshMainEnegrySuccess, refeshMainEnegryFailed, refeshMainEnegryHourlySuccess, refeshMainEnegryHourlyFailed, refeshMainEnegryDaylySuccess, refeshMainEnegryDaylyFailed, refeshMainEnegryWeeklySuccess, refeshMainEnegryWeeklyFailed, refeshMainEnegryMonthlySuccess, refeshMainEnegryMonthlyFailed, refeshFishLakeAreaSuccess, refeshFishLakeAreaFailed, refeshPowerFishLakeAreaSuccess, refeshPowerFishLakeAreaFailed, refeshHouseAreaSuccess, refeshHouseAreaFailed, refeshPowerHouseAreaSuccess, refeshPowerHouseAreaFailed } from '../actions/devices';\n/**\r\n * B1: dispatch action fetchTask\r\n * B2:Call animationPlayState: \r\n * B3:Kiểm tra status_code\r\n * Nếu thành công thì thực thi ...\r\n * Nếu thất bại thì thực thi gì đó....button-big\r\n * B4:Tắt Loadding\r\n * B5:thực thi công việc tiếp theo...\r\n */\n\nfunction* watchFetchListAlarmAction() {\n  while (true) {\n    const action = yield take(alarmTypes.FETCH_ALARM); // khi FETCH_TASK duoc dispatch thi code tu day tro xuong moi chay\n\n    yield put(showLoading());\n    const {\n      params\n    } = action.payload;\n    console.log(params);\n    const resp = yield call(getList, 'api/v1/alarm', '');\n    const {\n      status,\n      data\n    } = resp;\n    console.log(data);\n\n    if (status === STATUS_CODE.SUCCESS) {\n      yield put(fetchListAlarmSuccess(data));\n    } else {\n      yield put(fetchListAlarmFailed(data));\n    }\n\n    yield delay(100);\n    yield put(hideLoading());\n  }\n}\n\nfunction* refeshListEmailAlarmAction() {\n  yield put(showLoading());\n  yield delay(100);\n  const resp = yield call(getList, 'api/v1/emailalarm', '');\n  const {\n    status,\n    data\n  } = resp;\n\n  if (status === STATUS_CODE.SUCCESS) {\n    yield put(refeshListEmailAlarmSuccess(data));\n  } else {\n    yield put(refeshListEmailAlarmFailed(data));\n  }\n\n  yield delay(100);\n  yield put(hideLoading());\n}\n\nfunction* refeshListPriceAction() {\n  yield put(showLoading());\n  yield delay(100);\n  const resp = yield call(getList, 'api/v1/price', '');\n  const {\n    status,\n    data\n  } = resp;\n\n  if (status === STATUS_CODE.SUCCESS) {\n    yield put(fetchListAlarmSuccess(data));\n  } else {\n    yield put(fetchListAlarmFailed(data));\n  }\n\n  yield delay(100);\n  yield put(hideLoading());\n}\n\nfunction* filterAlarmSaga({\n  payload\n}) {\n  yield delay(100);\n  const {\n    keyword\n  } = payload;\n  yield put(fetchListAlarm(keyword));\n}\n\nfunction* loginSaga({\n  payload\n}) {\n  const {\n    email,\n    password\n  } = payload;\n  yield put(showLoading());\n  const resp = yield call(loginUser, 'api/v1/users/login', {\n    email,\n    password\n  });\n  const {\n    data,\n    status\n  } = resp;\n\n  if (status === STATUS_CODE.SUCCESS && data.state === 'true') {\n    yield put(authLoginSuccess(data));\n  } else if (status === STATUS_CODE.SUCCESS && data.state === 'false') {\n    yield put(authLoginFaild(data.error));\n  }\n\n  yield delay(200);\n  yield put(hideLoading());\n}\n\nfunction* signupSaga({\n  payload\n}) {\n  const {\n    name,\n    email,\n    password,\n    operator\n  } = payload;\n  yield put(showLoading());\n  const resp = yield call(addUser, 'api/v1/users/add', {\n    name,\n    email,\n    password,\n    operator\n  });\n  const {\n    data,\n    status\n  } = resp;\n\n  if (status === STATUS_CODE.CREATED) {\n    const resp = yield call(getListUser, 'api/v1/users/', '');\n    const {\n      status,\n      data\n    } = resp;\n    yield delay(100);\n\n    if (status === STATUS_CODE.SUCCESS) {\n      yield put(authSignupSuccess(data));\n      yield put(hideModal());\n    }\n  } else {\n    yield put(authSignupFaild(data));\n  }\n\n  yield delay(100);\n  yield put(hideLoading());\n}\n\nfunction* updateUserSaga({\n  payload\n}) {\n  const {\n    name,\n    email,\n    password,\n    operator\n  } = payload;\n  const userEditting = yield select(state => state.auth.userEditting);\n  const {\n    id\n  } = userEditting;\n  yield put(showLoading());\n  const resp = yield call(updateUser, 'api/v1/users/update', {\n    id,\n    name,\n    email,\n    password,\n    operator\n  });\n  const {\n    data,\n    status\n  } = resp;\n\n  if (status === STATUS_CODE.UPDATED) {\n    const resp = yield call(getListUser, 'api/v1/users', '');\n    const {\n      status,\n      data\n    } = resp;\n    yield delay(100);\n\n    if (status === STATUS_CODE.SUCCESS) {\n      yield put(updateUserSuccess(data));\n      yield put(hideModal());\n    }\n  } else {\n    yield put(updateUserFailed(data));\n  }\n\n  yield delay(100);\n  yield put(hideLoading());\n}\n\nfunction* watchFetchListUserAction() {\n  while (true) {\n    const action = yield take(authTypes.FETCH_USER); // khi FETCH_TASK duoc dispatch thi code tu day tro xuong moi chay\n\n    yield put(showLoading());\n    const {\n      params\n    } = action.payload;\n    const resp = yield call(getListUser, 'api/v1/users', params);\n    const {\n      status,\n      data\n    } = resp;\n\n    if (status === STATUS_CODE.SUCCESS) {\n      yield put(fetchListUserSuccess(data));\n    } else {\n      yield put(fetchListUserFailed(data));\n    }\n\n    yield delay(50);\n    yield put(hideLoading());\n  }\n}\n\nfunction* watchFetchListUserLogAction() {\n  while (true) {\n    const action = yield take(authTypes.AUTH_HISTORY); // khi FETCH_TASK duoc dispatch thi code tu day tro xuong moi chay\n\n    yield put(showLoading());\n    const {\n      params\n    } = action.payload;\n    const resp = yield call(getListUser, 'api/v1/userlog', params);\n    const {\n      status,\n      data\n    } = resp;\n\n    if (status === STATUS_CODE.SUCCESS) {\n      yield put(authLogHistorySuccess(data));\n    } else {\n      yield put(authLogHistoryFaild(data));\n    }\n\n    yield delay(50);\n    yield put(hideLoading());\n  }\n}\n\nfunction* deleteUserSaga({\n  payload\n}) {\n  const {\n    id\n  } = payload;\n  yield put(showLoading());\n  const reps = yield call(deteleUser, 'api/v1/users', id);\n  const {\n    data,\n    status\n  } = reps;\n\n  if (status === STATUS_CODE.NO_CONTENT) {\n    const resp = yield call(getListUser, 'api/v1/users', '');\n    const {\n      status,\n      data\n    } = resp;\n    yield delay(100);\n\n    if (status === STATUS_CODE.SUCCESS) {\n      yield put(setUserDeleteSucces(data));\n      yield put(hideModal());\n    }\n  } else {\n    yield put(setUserDeleteFaild(data));\n  }\n\n  yield delay(100);\n  yield put(hideLoading());\n}\n\nfunction* deleteUserlogSaga({\n  payload\n}) {\n  const {\n    id\n  } = payload;\n  yield put(showLoading());\n  const reps = yield call(deteleUser, 'api/v1/userlog', id);\n  const {\n    data,\n    status\n  } = reps;\n\n  if (status === STATUS_CODE.NO_CONTENT) {\n    const resp = yield call(getListUser, 'api/v1/userlog', '');\n    const {\n      status,\n      data\n    } = resp;\n    yield delay(100);\n\n    if (status === STATUS_CODE.SUCCESS) {\n      yield put(authLogDeleteHistorySuccess(data));\n      yield put(hideModal());\n    }\n  } else {\n    yield put(authLogDeleteHistoryFaild(data));\n  }\n\n  yield delay(100);\n  yield put(hideLoading());\n} // analytics saga\n\n\nfunction* analyticsSaga({\n  payload\n}) {\n  const {\n    params\n  } = payload;\n  yield put(showLoading());\n  console.log(params);\n  const resp = yield call(getListAnalytics, 'api/v1/main/analytics', params);\n  const {\n    status,\n    data\n  } = resp;\n\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\n    yield put(fetchListAnalyticsSuccess(data));\n  } else {\n    yield put(fetchListAnalyticsFailed(data));\n  }\n\n  yield delay(100);\n  yield put(hideLoading());\n} // refesh data weather\n\n\nfunction* refeshWeatherSaga({\n  payload\n}) {\n  const {\n    params\n  } = payload;\n  const resp = yield call(getListWeather, params);\n  const {\n    status,\n    data\n  } = resp;\n\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\n    yield put(refeshWeatherSuccess(data));\n  } else {\n    yield put(refeshWeatherFailed(data));\n  }\n} // refesh data leak\n\n\nfunction* refeshHouseArea() {\n  const resp = yield call(getListData, 'api/v1/spm93/getlast', '');\n  const {\n    status,\n    data\n  } = resp;\n\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\n    yield put(refeshHouseAreaSuccess(data));\n  } else {\n    yield put(refeshHouseAreaFailed(data));\n  }\n}\n\nfunction* refeshPowerHouseArea() {\n  const resp = yield call(getListData, 'api/v1/spm93/getlast5min', '');\n  const {\n    status,\n    data\n  } = resp;\n\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\n    yield put(refeshPowerHouseAreaSuccess(data));\n  } else {\n    yield put(refeshPowerHouseAreaFailed(data));\n  }\n} // refesh data leak\n\n\nfunction* refeshfishLakeArea({\n  payload\n}) {\n  const {\n    params\n  } = payload;\n  const resp = yield call(getListData, 'api/v1/spm91/getlast', {\n    params\n  });\n  const {\n    status,\n    data\n  } = resp;\n\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\n    yield put(refeshFishLakeAreaSuccess(data));\n  } else {\n    yield put(refeshFishLakeAreaFailed(data));\n  }\n} // refesh data leak\n\n\nfunction* refeshPowerfishLakeArea({\n  payload\n}) {\n  const {\n    params\n  } = payload;\n  const resp = yield call(getListData, 'api/v1/spm91/getlast5min', {\n    params\n  });\n  const {\n    status,\n    data\n  } = resp;\n  console.log(data);\n\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\n    yield put(refeshPowerFishLakeAreaSuccess(data));\n  } else {\n    yield put(refeshPowerFishLakeAreaFailed(data));\n  }\n} // refesh data leak\n\n\nfunction* refeshSolar01Area({\n  payload\n}) {\n  const {\n    params\n  } = payload;\n  const resp = yield call(getListData, 'api/v1/spm91/getlast', {\n    params\n  });\n  const {\n    status,\n    data\n  } = resp;\n\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\n    yield put(refeshSolar01Success(data));\n  } else {\n    yield put(refeshSolar01Failed(data));\n  }\n} // refesh data leak\n\n\nfunction* refeshPowerSolar01Area({\n  payload\n}) {\n  const {\n    params\n  } = payload;\n  const resp = yield call(getListData, 'api/v1/spm91/getlast5min', {\n    params\n  });\n  const {\n    status,\n    data\n  } = resp;\n\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\n    yield put(refeshPowerSolar01Success(data));\n  } else {\n    yield put(refeshPowerSolar01Failed(data));\n  }\n} // refesh data leak\n\n\nfunction* refeshSolar02Area({\n  payload\n}) {\n  const {\n    params\n  } = payload;\n  const resp = yield call(getListData, 'api/v1/spm91/getlast', {\n    params\n  });\n  const {\n    status,\n    data\n  } = resp;\n\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\n    yield put(refeshSolar02Success(data));\n  } else {\n    yield put(refeshSolar02Failed(data));\n  }\n} // refesh data leak\n\n\nfunction* refeshPowerSolar02Area({\n  payload\n}) {\n  const {\n    params\n  } = payload;\n  const resp = yield call(getListData, 'api/v1/spm91/getlast5min', {\n    params\n  });\n  const {\n    status,\n    data\n  } = resp;\n\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\n    yield put(refeshPowerSolar02Success(data));\n  } else {\n    yield put(refeshPowerSolar02Failed(data));\n  }\n} // refesh data main last\n\n\nfunction* refeshMainLastSaga({\n  payload\n}) {\n  // const {params} = payload;\n  const resp = yield call(getListData, 'api/v1/main/getlast', '');\n  const {\n    status,\n    data\n  } = resp;\n\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\n    yield put(refeshMainLastSuccess(data));\n  } else {\n    yield put(refeshMainLastFailed(data));\n  }\n} // refesh data main min\n\n\nfunction* refeshMainEnegrySaga({\n  payload\n}) {\n  // const {params} = payload;\n  const resp = yield call(getListData, 'api/v1/main/getlast5min', '');\n  const {\n    status,\n    data\n  } = resp;\n\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\n    yield put(refeshMainEnegrySuccess(data));\n  } else {\n    yield put(refeshMainEnegryFailed(data));\n  }\n} // refesh data main min\n\n\nfunction* refeshMainEnegryDaylySaga({\n  payload\n}) {\n  // const {params} = payload;\n  const resp = yield call(getListData, 'api/v1/main/getlastenegrybyyesterday', '');\n  const {\n    status,\n    data\n  } = resp;\n\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\n    yield put(refeshMainEnegryDaylySuccess(data));\n  } else {\n    yield put(refeshMainEnegryDaylyFailed(data));\n  }\n} // refesh data main min\n\n\nfunction* refeshMainEnegryHourlySaga({\n  payload\n}) {\n  // const {params} = payload;\n  const resp = yield call(getListData, 'api/v1/main/getlastenegrybyhour', '');\n  const {\n    status,\n    data\n  } = resp;\n\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\n    yield put(refeshMainEnegryHourlySuccess(data));\n  } else {\n    yield put(refeshMainEnegryHourlyFailed(data));\n  }\n} // refesh data main min\n\n\nfunction* refeshMainEnegryWeeklySaga({\n  payload\n}) {\n  // const {params} = payload;\n  const resp = yield call(getListData, 'api/v1/main/getlastenegrybyweek', '');\n  const {\n    status,\n    data\n  } = resp;\n\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\n    yield put(refeshMainEnegryWeeklySuccess(data));\n  } else {\n    yield put(refeshMainEnegryWeeklyFailed(data));\n  }\n} // refesh data main min\n\n\nfunction* refeshMainEnegryMonthlySaga({\n  payload\n}) {\n  // const {params} = payload;\n  const resp = yield call(getListData, 'api/v1/main/getlastenegrybymothly', '');\n  const {\n    status,\n    data\n  } = resp;\n\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\n    yield put(refeshMainEnegryMonthlySuccess(data));\n  } else {\n    yield put(refeshMainEnegryMonthlyFailed(data));\n  }\n}\n\nfunction* rootSaga() {\n  yield fork(watchFetchListAlarmAction);\n  yield fork(watchFetchListUserLogAction);\n  yield fork(watchFetchListUserAction);\n  yield takeLatest(alarmTypes.REFESH_EMAIL_ALARM, refeshListEmailAlarmAction);\n  yield takeLatest(priceTypes.REFESH_PRICE, refeshListPriceAction);\n  yield takeLatest(alarmTypes.FILTER_ALARM, filterAlarmSaga);\n  yield takeLatest(authTypes.AUTH_LOGIN, loginSaga);\n  yield takeLatest(authTypes.AUTH_SIGNUP, signupSaga);\n  yield takeLatest(authTypes.SET_USER_DELETE, deleteUserSaga);\n  yield takeLatest(authTypes.AUTH_DELETE_HISTORY, deleteUserlogSaga);\n  yield takeLatest(authTypes.UPDATE_USER, updateUserSaga);\n  yield takeLatest(analyticsTypes.ANALYTICS, analyticsSaga);\n  yield takeLatest(deviceTypes.REFESH_MAIN_LAST, refeshMainLastSaga);\n  yield takeLatest(deviceTypes.REFESH_MAIN_ENEGRY, refeshMainEnegrySaga);\n  yield takeLatest(deviceTypes.REFESH_MAIN_ENEGRY_DAYLY, refeshMainEnegryDaylySaga);\n  yield takeLatest(deviceTypes.REFESH_MAIN_ENEGRY_HOURLY, refeshMainEnegryHourlySaga);\n  yield takeLatest(deviceTypes.REFESH_MAIN_ENEGRY_WEEKLY, refeshMainEnegryWeeklySaga);\n  yield takeLatest(deviceTypes.REFESH_MAIN_ENEGRY_MONTHLY, refeshMainEnegryMonthlySaga);\n  yield takeLatest(deviceTypes.REFESH_HOUSE_AREA, refeshHouseArea);\n  yield takeLatest(deviceTypes.REFESH_POWER_HOUSE_AREA, refeshPowerHouseArea);\n  yield takeLatest(deviceTypes.REFESH_FISH_LAKE_AREA, refeshfishLakeArea);\n  yield takeLatest(deviceTypes.REFESH_POWER_FISH_LAKE_AREA, refeshPowerfishLakeArea);\n  yield takeLatest(deviceTypes.REFESH_SOLAR01_AREA, refeshSolar01Area);\n  yield takeLatest(deviceTypes.REFESH_POWER_SOLAR01_AREA, refeshPowerSolar01Area);\n  yield takeLatest(deviceTypes.REFESH_SOLAR02_AREA, refeshSolar02Area);\n  yield takeLatest(deviceTypes.REFESH_POWER_SOLAR02_AREA, refeshPowerSolar02Area);\n  yield takeLatest(weatherTypes.REFESH_WEATHER, refeshWeatherSaga);\n}\n\nexport default rootSaga;","map":{"version":3,"sources":["C:/Users/vietn/Desktop/AppEnegry2020/frontend/src/sagas/index.js"],"names":["fork","take","call","put","delay","takeLatest","select","alarmTypes","weatherTypes","priceTypes","authTypes","deviceTypes","analyticsTypes","refeshWeatherSuccess","refeshWeatherFailed","refeshpriceFailed","refeshpriceSuc","fetchListAnalyticsFailed","fetchListAnalyticsSuccess","getListWeather","getList","getListAnalytics","getListUser","addUser","loginUser","deteleUser","updateUser","getListData","STATUS_CODE","showLoading","hideLoading","hideModal","fetchListAlarm","fetchListAlarmSuccess","fetchListAlarmFailed","refeshListEmailAlarmSuccess","refeshListEmailAlarmFailed","authSignupSuccess","authSignupFaild","authLoginSuccess","authLoginFaild","authLogHistorySuccess","authLogHistoryFaild","fetchListUserFailed","fetchListUserSuccess","setUserDeleteSucces","setUserDeleteFaild","updateUserSuccess","updateUserFailed","authLogDeleteHistoryFaild","authLogDeleteHistorySuccess","refeshSolar01Failed","refeshSolar01Success","refeshPowerSolar01Failed","refeshPowerSolar01Success","refeshSolar02Success","refeshSolar02Failed","refeshPowerSolar02Failed","refeshPowerSolar02Success","refeshMainLastSuccess","refeshMainLastFailed","refeshMainEnegrySuccess","refeshMainEnegryFailed","refeshMainEnegryHourlySuccess","refeshMainEnegryHourlyFailed","refeshMainEnegryDaylySuccess","refeshMainEnegryDaylyFailed","refeshMainEnegryWeeklySuccess","refeshMainEnegryWeeklyFailed","refeshMainEnegryMonthlySuccess","refeshMainEnegryMonthlyFailed","refeshFishLakeAreaSuccess","refeshFishLakeAreaFailed","refeshPowerFishLakeAreaSuccess","refeshPowerFishLakeAreaFailed","refeshHouseAreaSuccess","refeshHouseAreaFailed","refeshPowerHouseAreaSuccess","refeshPowerHouseAreaFailed","watchFetchListAlarmAction","action","FETCH_ALARM","params","payload","console","log","resp","status","data","SUCCESS","refeshListEmailAlarmAction","refeshListPriceAction","filterAlarmSaga","keyword","loginSaga","email","password","state","error","signupSaga","name","operator","CREATED","updateUserSaga","userEditting","auth","id","UPDATED","watchFetchListUserAction","FETCH_USER","watchFetchListUserLogAction","AUTH_HISTORY","deleteUserSaga","reps","NO_CONTENT","deleteUserlogSaga","analyticsSaga","lenght","refeshWeatherSaga","refeshHouseArea","refeshPowerHouseArea","refeshfishLakeArea","refeshPowerfishLakeArea","refeshSolar01Area","refeshPowerSolar01Area","refeshSolar02Area","refeshPowerSolar02Area","refeshMainLastSaga","refeshMainEnegrySaga","refeshMainEnegryDaylySaga","refeshMainEnegryHourlySaga","refeshMainEnegryWeeklySaga","refeshMainEnegryMonthlySaga","rootSaga","REFESH_EMAIL_ALARM","REFESH_PRICE","FILTER_ALARM","AUTH_LOGIN","AUTH_SIGNUP","SET_USER_DELETE","AUTH_DELETE_HISTORY","UPDATE_USER","ANALYTICS","REFESH_MAIN_LAST","REFESH_MAIN_ENEGRY","REFESH_MAIN_ENEGRY_DAYLY","REFESH_MAIN_ENEGRY_HOURLY","REFESH_MAIN_ENEGRY_WEEKLY","REFESH_MAIN_ENEGRY_MONTHLY","REFESH_HOUSE_AREA","REFESH_POWER_HOUSE_AREA","REFESH_FISH_LAKE_AREA","REFESH_POWER_FISH_LAKE_AREA","REFESH_SOLAR01_AREA","REFESH_POWER_SOLAR01_AREA","REFESH_SOLAR02_AREA","REFESH_POWER_SOLAR02_AREA","REFESH_WEATHER"],"mappings":"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","sourcesContent":["import {fork,take,call,put,delay,takeLatest,select} from 'redux-saga/effects';//select to listTask from store\r\nimport * as alarmTypes from './../constants/alarm';\r\nimport * as weatherTypes from './../constants/weather';\r\nimport * as priceTypes from './../constants/prices';\r\nimport * as authTypes from './../constants/auths';\r\nimport * as deviceTypes from './../constants/devices';\r\nimport * as analyticsTypes from './../constants/analytics';\r\nimport {\r\n    refeshWeatherSuccess,\r\n    refeshWeatherFailed,\r\n    } from './../actions/weather';\r\n    import {\r\n        refeshpriceFailed,\r\n        refeshpriceSuc,\r\n        } from './../actions/weather';\r\nimport {\r\n    fetchListAnalyticsFailed,\r\n    fetchListAnalyticsSuccess\r\n    } from './../actions/analytics';\r\nimport {\r\n    getListWeather\r\n    } from './../apis/weather';\r\nimport {\r\n    getList\r\n    } from './../apis/alarm';\r\nimport {\r\n    getListAnalytics\r\n    } from './../apis/analytics';\r\nimport {    \r\n    getListUser,\r\n    addUser,\r\n    loginUser,\r\n    deteleUser,     \r\n    updateUser\r\n    } from './../apis/auth';\r\n\r\nimport {getListData,\r\n        //updateData,\r\n        //addData,\r\n        } from './../apis/devices';\r\nimport {STATUS_CODE} from './../constants/index';\r\nimport {showLoading,hideLoading} from './../actions/ui';\r\nimport {hideModal} from './../actions/modal';\r\nimport {\r\n    fetchListAlarm,\r\n    fetchListAlarmSuccess,\r\n    fetchListAlarmFailed,\r\n    refeshListEmailAlarmSuccess,\r\n    refeshListEmailAlarmFailed\r\n\r\n    } from './../actions/alarm';\r\nimport {\r\n    authSignupSuccess,\r\n    authSignupFaild,\r\n    authLoginSuccess,\r\n    authLoginFaild,\r\n    authLogHistorySuccess,\r\n    authLogHistoryFaild,\r\n    // checkAuthFaild,\r\n    // checkAuthSuccess,\r\n    fetchListUserFailed,\r\n    fetchListUserSuccess,\r\n    setUserDeleteSucces,    \r\n    setUserDeleteFaild,\r\n    updateUserSuccess,\r\n    updateUserFailed,\r\n    authLogDeleteHistoryFaild,\r\n    authLogDeleteHistorySuccess,\r\n    } from './../actions/auths';\r\nimport { refeshSolar01Failed,\r\n        refeshSolar01Success,\r\n        refeshPowerSolar01Failed,\r\n        refeshPowerSolar01Success,\r\n        refeshSolar02Success,\r\n        refeshSolar02Failed,\r\n        refeshPowerSolar02Failed,\r\n        refeshPowerSolar02Success,\r\n        refeshMainLastSuccess,\r\n        refeshMainLastFailed,\r\n        refeshMainEnegrySuccess,\r\n        refeshMainEnegryFailed,\r\n        refeshMainEnegryHourlySuccess,\r\n        refeshMainEnegryHourlyFailed,\r\n        refeshMainEnegryDaylySuccess,\r\n        refeshMainEnegryDaylyFailed,\r\n        refeshMainEnegryWeeklySuccess,\r\n        refeshMainEnegryWeeklyFailed,\r\n        refeshMainEnegryMonthlySuccess,\r\n        refeshMainEnegryMonthlyFailed,\r\n        refeshFishLakeAreaSuccess,\r\n        refeshFishLakeAreaFailed,\r\n        refeshPowerFishLakeAreaSuccess,\r\n        refeshPowerFishLakeAreaFailed,\r\n        refeshHouseAreaSuccess,\r\n        refeshHouseAreaFailed,\r\n        refeshPowerHouseAreaSuccess,\r\n        refeshPowerHouseAreaFailed,\r\n     } from '../actions/devices';\r\n/**\r\n * B1: dispatch action fetchTask\r\n * B2:Call animationPlayState: \r\n * B3:Kiểm tra status_code\r\n * Nếu thành công thì thực thi ...\r\n * Nếu thất bại thì thực thi gì đó....button-big\r\n * B4:Tắt Loadding\r\n * B5:thực thi công việc tiếp theo...\r\n */\r\nfunction* watchFetchListAlarmAction(){\r\n    while (true){\r\n        const action = yield take(alarmTypes.FETCH_ALARM);// khi FETCH_TASK duoc dispatch thi code tu day tro xuong moi chay\r\n        yield put(showLoading());\r\n        const {params}=action.payload;\r\n        console.log(params)\r\n        const resp = yield call(getList,'api/v1/alarm','');\r\n        const {status,data}= resp;\r\n        console.log(data)\r\n        if(status === STATUS_CODE.SUCCESS){\r\n            yield put(fetchListAlarmSuccess(data));  \r\n        }else{\r\n            yield put(fetchListAlarmFailed(data));\r\n        }\r\n        yield delay(100);\r\n        yield put(hideLoading());\r\n    } \r\n}\r\n\r\nfunction* refeshListEmailAlarmAction(){\r\n    yield put(showLoading());\r\n    yield delay(100);\r\n    const resp = yield call(getList,'api/v1/emailalarm','');\r\n        const {status,data}= resp;\r\n        if(status === STATUS_CODE.SUCCESS){\r\n            yield put(refeshListEmailAlarmSuccess(data));  \r\n        }else{\r\n            yield put(refeshListEmailAlarmFailed(data));\r\n        }\r\n        yield delay(100);\r\n        yield put(hideLoading());\r\n}\r\n\r\nfunction* refeshListPriceAction(){\r\n    yield put(showLoading());\r\n    yield delay(100);\r\n    const resp = yield call(getList,'api/v1/price','');\r\n        const {status,data}= resp;\r\n        if(status === STATUS_CODE.SUCCESS){\r\n            yield put(fetchListAlarmSuccess(data));  \r\n        }else{\r\n            yield put(fetchListAlarmFailed(data));\r\n        }\r\n        yield delay(100);\r\n        yield put(hideLoading());\r\n}\r\nfunction* filterAlarmSaga({payload}){\r\n    yield delay(100);\r\n    const {keyword} = payload;\r\n    yield put (fetchListAlarm(keyword)\r\n    );\r\n}\r\nfunction* loginSaga({payload}){\r\n    const {email,password}= payload;\r\n    yield put(showLoading());\r\n    const resp =yield call(loginUser,'api/v1/users/login',{email,password});\r\n    const{data,status}=resp;\r\n    if(status === STATUS_CODE.SUCCESS && data.state === 'true'){\r\n        yield put(authLoginSuccess(data));\r\n    }else if (status === STATUS_CODE.SUCCESS && data.state === 'false'){\r\n        yield put(authLoginFaild(data.error));\r\n    }\r\n    yield delay(200);\r\n    yield put(hideLoading());\r\n\r\n}\r\nfunction* signupSaga({payload}){\r\n    const {name,email,password,operator}= payload;\r\n    yield put(showLoading());\r\n    const resp = yield call(addUser,'api/v1/users/add',{name,email,password,operator});\r\n    const{data,status}=resp;\r\n    if(status === STATUS_CODE.CREATED ){\r\n        const resp = yield call(getListUser,'api/v1/users/','');\r\n        const {status,data}= resp;\r\n        yield delay(100);\r\n        if(status === STATUS_CODE.SUCCESS){\r\n\r\n         yield put(authSignupSuccess(data));\r\n         yield put(hideModal());\r\n        }\r\n    }else{\r\n         yield put(authSignupFaild(data));\r\n    }\r\n    yield delay(100);\r\n    yield put(hideLoading());\r\n}\r\nfunction* updateUserSaga({payload}){\r\n    const {name,email,password,operator}= payload;\r\n    const userEditting = yield select(state => state.auth.userEditting);\r\n    const {id} = userEditting;\r\n    yield put(showLoading());\r\n    const resp = yield call(updateUser,'api/v1/users/update',{id,name,email,password,operator});\r\n    const{data,status}=resp;\r\n    if(status === STATUS_CODE.UPDATED ){\r\n        const resp = yield call(getListUser,'api/v1/users','');\r\n        const {status,data}= resp;\r\n        yield delay(100);\r\n        if(status === STATUS_CODE.SUCCESS){\r\n         yield put(updateUserSuccess(data));\r\n         yield put(hideModal());\r\n        }\r\n    }else {\r\n         yield put(updateUserFailed(data));\r\n         \r\n    }\r\n    yield delay(100);\r\n    yield put(hideLoading());\r\n}\r\nfunction* watchFetchListUserAction(){\r\n    while (true){\r\n        const action = yield take(authTypes.FETCH_USER);// khi FETCH_TASK duoc dispatch thi code tu day tro xuong moi chay\r\n        yield put(showLoading());\r\n        const {params}=action.payload;\r\n        const resp = yield call(getListUser,'api/v1/users',params);\r\n        const {status,data}= resp;\r\n        if(status === STATUS_CODE.SUCCESS){\r\n            yield put(fetchListUserSuccess(data));  \r\n            \r\n        }else{\r\n            yield put(fetchListUserFailed(data));\r\n        }\r\n        yield delay(50);\r\n        yield put(hideLoading());\r\n    } \r\n}\r\nfunction* watchFetchListUserLogAction(){\r\n    while (true){\r\n        const action = yield take(authTypes.AUTH_HISTORY);// khi FETCH_TASK duoc dispatch thi code tu day tro xuong moi chay\r\n        yield put(showLoading());\r\n        const {params}=action.payload;\r\n        const resp = yield call(getListUser,'api/v1/userlog',params);\r\n        const {status,data}= resp;\r\n        if(status === STATUS_CODE.SUCCESS){\r\n            yield put(authLogHistorySuccess(data));  \r\n            \r\n        }else{\r\n            yield put(authLogHistoryFaild(data));\r\n        }\r\n        yield delay(50);\r\n        yield put(hideLoading());\r\n    } \r\n}\r\nfunction* deleteUserSaga({payload}){\r\n    const {id}= payload;\r\n    yield put(showLoading());\r\n    const reps= yield call(deteleUser,'api/v1/users',id);\r\n    const {data,status}=reps;\r\n    if(status === STATUS_CODE.NO_CONTENT){\r\n        const resp = yield call(getListUser,'api/v1/users','');\r\n        const {status,data}= resp;\r\n        yield delay(100);\r\n        if(status === STATUS_CODE.SUCCESS){\r\n            yield put(setUserDeleteSucces(data));\r\n            yield put(hideModal());\r\n        }  \r\n    } else {\r\n        yield put(setUserDeleteFaild(data));\r\n    }\r\n    yield delay(100);\r\n    yield put(hideLoading());\r\n}\r\n\r\nfunction* deleteUserlogSaga({payload}){\r\n    const {id}= payload;\r\n    yield put(showLoading());\r\n    const reps= yield call(deteleUser,'api/v1/userlog',id);\r\n    const {data,status}=reps;\r\n    if(status === STATUS_CODE.NO_CONTENT){\r\n        const resp = yield call(getListUser,'api/v1/userlog','');\r\n        const {status,data}= resp;\r\n        yield delay(100);\r\n        if(status === STATUS_CODE.SUCCESS){\r\n            yield put(authLogDeleteHistorySuccess(data));\r\n            yield put(hideModal());\r\n        }  \r\n    } else {\r\n        yield put(authLogDeleteHistoryFaild(data));\r\n    }\r\n    yield delay(100);\r\n    yield put(hideLoading());\r\n}\r\n\r\n// analytics saga\r\n\r\nfunction* analyticsSaga({payload}){\r\n    const {params}=payload;\r\n    yield put(showLoading());\r\n    console.log(params)\r\n    const resp= yield call(getListAnalytics,'api/v1/main/analytics',params);\r\n    const {status,data}= resp;\r\n    if(status === STATUS_CODE.SUCCESS && data.lenght !== 0){\r\n        yield put(fetchListAnalyticsSuccess(data));  \r\n    }else{\r\n        yield put(fetchListAnalyticsFailed(data));\r\n    } \r\n    yield delay(100);\r\n    yield put(hideLoading());\r\n} \r\n// refesh data weather\r\nfunction* refeshWeatherSaga({payload}){\r\n    const {params} = payload;\r\n    const resp = yield call(getListWeather,params);\r\n    const {status,data}= resp;\r\n    if(status === STATUS_CODE.SUCCESS && data.lenght !== 0){\r\n        yield put(refeshWeatherSuccess(data));  \r\n    }else{\r\n        yield put(refeshWeatherFailed(data));\r\n    } \r\n}\r\n\r\n// refesh data leak\r\nfunction* refeshHouseArea(){\r\n    const resp = yield call(getListData,'api/v1/spm93/getlast','');\r\n    const {status,data}= resp;\r\n    if(status === STATUS_CODE.SUCCESS && data.lenght !== 0){\r\n        yield put(refeshHouseAreaSuccess(data));  \r\n    }else{\r\n        yield put(refeshHouseAreaFailed(data));\r\n    } \r\n}\r\nfunction* refeshPowerHouseArea(){\r\n    const resp = yield call(getListData,'api/v1/spm93/getlast5min','');\r\n    const {status,data}= resp;\r\n    if(status === STATUS_CODE.SUCCESS && data.lenght !== 0){\r\n        yield put(refeshPowerHouseAreaSuccess(data));  \r\n    }else{\r\n        yield put(refeshPowerHouseAreaFailed(data));\r\n    } \r\n}\r\n// refesh data leak\r\nfunction* refeshfishLakeArea({payload}){\r\n    const {params} = payload;\r\n    const resp = yield call(getListData,'api/v1/spm91/getlast',{params});\r\n    const {status,data}= resp;\r\n\r\n    if(status === STATUS_CODE.SUCCESS && data.lenght !== 0){\r\n        yield put(refeshFishLakeAreaSuccess(data));  \r\n    }else{\r\n        yield put(refeshFishLakeAreaFailed(data));\r\n    }\r\n    \r\n}\r\n// refesh data leak\r\nfunction* refeshPowerfishLakeArea({payload}){\r\n    const {params} = payload;\r\n    const resp = yield call(getListData,'api/v1/spm91/getlast5min',{params});\r\n    const {status,data}= resp;\r\n    console.log(data)\r\n    if(status === STATUS_CODE.SUCCESS && data.lenght !== 0){\r\n        yield put(refeshPowerFishLakeAreaSuccess(data));  \r\n    }else{\r\n        yield put(refeshPowerFishLakeAreaFailed(data));\r\n    }\r\n    \r\n}\r\n// refesh data leak\r\nfunction* refeshSolar01Area({payload}){\r\n    const {params} = payload;\r\n    const resp = yield call(getListData,'api/v1/spm91/getlast',{params});\r\n    const {status,data}= resp;\r\n    if(status === STATUS_CODE.SUCCESS && data.lenght !== 0){\r\n        yield put(refeshSolar01Success(data));  \r\n    }else{\r\n        yield put(refeshSolar01Failed(data));\r\n    }\r\n    \r\n}\r\n// refesh data leak\r\nfunction* refeshPowerSolar01Area({payload}){\r\n    const {params} = payload;\r\n    const resp = yield call(getListData,'api/v1/spm91/getlast5min',{params});\r\n    const {status,data}= resp;\r\n    if(status === STATUS_CODE.SUCCESS && data.lenght !== 0){\r\n        yield put(refeshPowerSolar01Success(data));  \r\n    }else{\r\n        yield put(refeshPowerSolar01Failed(data));\r\n    }\r\n    \r\n}\r\n// refesh data leak\r\nfunction* refeshSolar02Area({payload}){\r\n    const {params} = payload;\r\n    const resp = yield call(getListData,'api/v1/spm91/getlast',{params});\r\n    const {status,data}= resp;\r\n    if(status === STATUS_CODE.SUCCESS && data.lenght !== 0){\r\n        yield put(refeshSolar02Success(data));  \r\n    }else{\r\n        yield put(refeshSolar02Failed(data));\r\n    }\r\n    \r\n}\r\n// refesh data leak\r\nfunction* refeshPowerSolar02Area({payload}){\r\n    const {params} = payload;\r\n    const resp = yield call(getListData,'api/v1/spm91/getlast5min',{params});\r\n    const {status,data}= resp;\r\n    if(status === STATUS_CODE.SUCCESS && data.lenght !== 0){\r\n        yield put(refeshPowerSolar02Success(data));  \r\n    }else{\r\n        yield put(refeshPowerSolar02Failed(data));\r\n    }\r\n    \r\n}\r\n\r\n// refesh data main last\r\nfunction* refeshMainLastSaga({payload}){\r\n    // const {params} = payload;\r\n    const resp = yield call(getListData,'api/v1/main/getlast','');\r\n    const {status,data}= resp;\r\n    if(status === STATUS_CODE.SUCCESS && data.lenght !== 0){\r\n        yield put(refeshMainLastSuccess(data));  \r\n    }else{\r\n        yield put(refeshMainLastFailed(data));\r\n    } \r\n}\r\n// refesh data main min\r\nfunction* refeshMainEnegrySaga({payload}){\r\n    // const {params} = payload;\r\n    const resp = yield call(getListData,'api/v1/main/getlast5min','');\r\n    const {status,data}= resp;\r\n    if(status === STATUS_CODE.SUCCESS && data.lenght !== 0){\r\n        yield put(refeshMainEnegrySuccess(data));  \r\n    }else{\r\n        yield put(refeshMainEnegryFailed(data));\r\n    } \r\n}\r\n// refesh data main min\r\nfunction* refeshMainEnegryDaylySaga({payload}){\r\n    // const {params} = payload;\r\n    const resp = yield call(getListData,'api/v1/main/getlastenegrybyyesterday','');\r\n    const {status,data}= resp;\r\n    if(status === STATUS_CODE.SUCCESS && data.lenght !== 0){\r\n        yield put(refeshMainEnegryDaylySuccess(data));  \r\n    }else{\r\n        yield put(refeshMainEnegryDaylyFailed(data));\r\n    } \r\n}\r\n// refesh data main min\r\nfunction* refeshMainEnegryHourlySaga({payload}){\r\n    // const {params} = payload;\r\n    const resp = yield call(getListData,'api/v1/main/getlastenegrybyhour','');\r\n    const {status,data}= resp;\r\n    if(status === STATUS_CODE.SUCCESS && data.lenght !== 0){\r\n        yield put(refeshMainEnegryHourlySuccess(data));  \r\n    }else{\r\n        yield put(refeshMainEnegryHourlyFailed(data));\r\n    } \r\n}\r\n// refesh data main min\r\nfunction* refeshMainEnegryWeeklySaga({payload}){\r\n    // const {params} = payload;\r\n    const resp = yield call(getListData,'api/v1/main/getlastenegrybyweek','');\r\n    const {status,data}= resp;\r\n    if(status === STATUS_CODE.SUCCESS && data.lenght !== 0){\r\n        yield put(refeshMainEnegryWeeklySuccess(data));  \r\n    }else{\r\n        yield put(refeshMainEnegryWeeklyFailed(data));\r\n    } \r\n}\r\n\r\n// refesh data main min\r\nfunction* refeshMainEnegryMonthlySaga({payload}){\r\n    // const {params} = payload;\r\n    const resp = yield call(getListData,'api/v1/main/getlastenegrybymothly','');\r\n    const {status,data}= resp;\r\n    if(status === STATUS_CODE.SUCCESS && data.lenght !== 0){\r\n        yield put(refeshMainEnegryMonthlySuccess(data));  \r\n    }else{\r\n        yield put(refeshMainEnegryMonthlyFailed(data));\r\n    } \r\n}\r\n\r\n\r\nfunction* rootSaga() {\r\n    yield fork(watchFetchListAlarmAction);\r\n    yield fork(watchFetchListUserLogAction);\r\n    yield fork(watchFetchListUserAction);\r\n    yield takeLatest(alarmTypes.REFESH_EMAIL_ALARM,refeshListEmailAlarmAction)\r\n    yield takeLatest(priceTypes.REFESH_PRICE,refeshListPriceAction)\r\n    yield takeLatest(alarmTypes.FILTER_ALARM,filterAlarmSaga);\r\n    yield takeLatest(authTypes.AUTH_LOGIN,loginSaga);\r\n    yield takeLatest(authTypes.AUTH_SIGNUP,signupSaga)\r\n    yield takeLatest(authTypes.SET_USER_DELETE,deleteUserSaga)  \r\n    yield takeLatest(authTypes.AUTH_DELETE_HISTORY,deleteUserlogSaga) \r\n    yield takeLatest (authTypes.UPDATE_USER,updateUserSaga)\r\n    yield takeLatest (analyticsTypes.ANALYTICS,analyticsSaga)\r\n    yield takeLatest (deviceTypes.REFESH_MAIN_LAST,refeshMainLastSaga)\r\n    yield takeLatest (deviceTypes.REFESH_MAIN_ENEGRY,refeshMainEnegrySaga)\r\n    yield takeLatest (deviceTypes.REFESH_MAIN_ENEGRY_DAYLY,refeshMainEnegryDaylySaga)\r\n    yield takeLatest (deviceTypes.REFESH_MAIN_ENEGRY_HOURLY,refeshMainEnegryHourlySaga)\r\n    yield takeLatest (deviceTypes.REFESH_MAIN_ENEGRY_WEEKLY,refeshMainEnegryWeeklySaga)\r\n    yield takeLatest (deviceTypes.REFESH_MAIN_ENEGRY_MONTHLY,refeshMainEnegryMonthlySaga)\r\n    yield takeLatest (deviceTypes.REFESH_HOUSE_AREA,refeshHouseArea)\r\n    yield takeLatest (deviceTypes.REFESH_POWER_HOUSE_AREA,refeshPowerHouseArea)\r\n    yield takeLatest (deviceTypes.REFESH_FISH_LAKE_AREA,refeshfishLakeArea)\r\n    yield takeLatest (deviceTypes.REFESH_POWER_FISH_LAKE_AREA,refeshPowerfishLakeArea)\r\n    yield takeLatest (deviceTypes.REFESH_SOLAR01_AREA,refeshSolar01Area)\r\n    yield takeLatest (deviceTypes.REFESH_POWER_SOLAR01_AREA,refeshPowerSolar01Area)\r\n    yield takeLatest (deviceTypes.REFESH_SOLAR02_AREA,refeshSolar02Area)\r\n    yield takeLatest (deviceTypes.REFESH_POWER_SOLAR02_AREA,refeshPowerSolar02Area)\r\n    yield takeLatest (weatherTypes.REFESH_WEATHER,refeshWeatherSaga)\r\n    \r\n}\r\n\r\nexport default rootSaga;"]},"metadata":{},"sourceType":"module"}