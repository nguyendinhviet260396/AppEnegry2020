{"ast":null,"code":"import { __extends } from \"tslib\";\n/**\n * Create By Bruce Too\n * On 2020-02-18\n */\n\nimport { isArray } from '@antv/util';\nimport ColumnLabel from '../../../column/component/label';\nimport { VALUE_FIELD, INDEX_FIELD } from '../../layer';\nimport { registerLabelComponent } from '../../../../components/label/base';\nimport { _ORIGIN } from '../../../../dependents';\nvar MARGIN = 2;\n\nvar WaterfallLabel =\n/** @class */\nfunction (_super) {\n  __extends(WaterfallLabel, _super);\n\n  function WaterfallLabel() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  WaterfallLabel.prototype.adjustLabel = function (label, element) {\n    var _a;\n\n    var _b;\n\n    var shape = element.shape;\n    var shapeBox = shape.getBBox();\n    var data = element.getData();\n    var values = data[VALUE_FIELD];\n    var diff = data[this.layer.options.yField];\n    var value = isArray(values) ? values[1] : values;\n    var formatter = this.options.formatter;\n    var mappingData = [].concat(element.getModel().mappingData);\n    var elementIndex = formatter ? mappingData[0] && mappingData[0]['_origin'][INDEX_FIELD] : 0;\n    var formatterValue = formatter ? formatter(value, (_a = {}, _a[_ORIGIN] = (_b = mappingData[0]) === null || _b === void 0 ? void 0 : _b._origin, _a.mappingDatum = mappingData[0], _a.mappingDatumIndex = 0, _a.element = element, _a.elementIndex = elementIndex, _a), elementIndex) : value;\n    var yPos = (shapeBox.minY + shapeBox.maxY) / 2;\n    var textBaseline = 'bottom';\n\n    if (diff < 0) {\n      yPos = shapeBox.maxY + MARGIN;\n      textBaseline = 'top';\n    } else {\n      yPos = shapeBox.minY - MARGIN;\n    }\n\n    label.attr('y', yPos);\n    label.attr('text', formatterValue);\n    label.attr('textBaseline', textBaseline);\n  };\n\n  return WaterfallLabel;\n}(ColumnLabel);\n\nexport default WaterfallLabel;\nregisterLabelComponent('waterfall', WaterfallLabel);","map":{"version":3,"sources":["../../../../../src/plots/waterfall/component/label/waterfall-label.ts"],"names":[],"mappings":";AAAA;;;;;AAIA,SAAS,OAAT,QAAwB,YAAxB;AAEA,OAAO,WAAP,MAAwB,iCAAxB;AAEA,SAAS,WAAT,EAAsB,WAAtB,QAAyC,aAAzC;AACA,SAAS,sBAAT,QAAuC,mCAAvC;AACA,SAAuB,OAAvB,QAAsC,wBAAtC;AAEA,IAAM,MAAM,GAAG,CAAf;;AAEA,IAAA,cAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA4C,EAAA,SAAA,CAAA,cAAA,EAAA,MAAA,CAAA;;AAA5C,WAAA,cAAA,GAAA;;AAsCC;;AArCW,EAAA,cAAA,CAAA,SAAA,CAAA,WAAA,GAAV,UAAsB,KAAtB,EAAqC,OAArC,EAAqD;;;;;AAC3C,QAAA,KAAK,GAAK,OAAO,CAAZ,KAAL;AACR,QAAM,QAAQ,GAAG,KAAK,CAAC,OAAN,EAAjB;AACA,QAAM,IAAI,GAAG,OAAO,CAAC,OAAR,EAAb;AACA,QAAM,MAAM,GAAG,IAAI,CAAC,WAAD,CAAnB;AACA,QAAM,IAAI,GAAG,IAAI,CAAC,KAAK,KAAL,CAAW,OAAX,CAAmB,MAApB,CAAjB;AACA,QAAM,KAAK,GAAG,OAAO,CAAC,MAAD,CAAP,GAAkB,MAAM,CAAC,CAAD,CAAxB,GAA8B,MAA5C;AACQ,QAAA,SAAS,GAAK,KAAK,OAAL,CAAL,SAAT;AACR,QAAM,WAAW,GAAmB,GAAG,MAAH,CAAU,OAAO,CAAC,QAAR,GAAmB,WAA7B,CAApC;AACA,QAAM,YAAY,GAAG,SAAS,GAAG,WAAW,CAAC,CAAD,CAAX,IAAkB,WAAW,CAAC,CAAD,CAAX,CAAe,SAAf,EAA0B,WAA1B,CAArB,GAA8D,CAA5F;AACA,QAAM,cAAc,GAAG,SAAS,GAC5B,SAAS,CACP,KADO,GACF,EAAA,GAAA,EAAA,EAEH,EAAA,CAAC,OAAD,CAAA,GAAQ,CAAA,EAAA,GAAG,WAAW,CAAC,CAAD,CAAd,MAAiB,IAAjB,IAAiB,EAAA,KAAA,KAAA,CAAjB,GAAiB,KAAA,CAAjB,GAAiB,EAAA,CAAE,OAFxB,EAGH,EAAA,CAAA,YAAA,GAAc,WAAW,CAAC,CAAD,CAHtB,EAIH,EAAA,CAAA,iBAAA,GAAmB,CAJhB,EAKH,EAAA,CAAA,OAAA,GAAO,OALJ,EAMH,EAAA,CAAA,YAAA,GAAY,YANT,E,EADE,GASP,YATO,CADmB,GAY5B,KAZJ;AAaA,QAAI,IAAI,GAAG,CAAC,QAAQ,CAAC,IAAT,GAAgB,QAAQ,CAAC,IAA1B,IAAkC,CAA7C;AACA,QAAI,YAAY,GAAG,QAAnB;;AAEA,QAAI,IAAI,GAAG,CAAX,EAAc;AACZ,MAAA,IAAI,GAAG,QAAQ,CAAC,IAAT,GAAgB,MAAvB;AACA,MAAA,YAAY,GAAG,KAAf;AACD,KAHD,MAGO;AACL,MAAA,IAAI,GAAG,QAAQ,CAAC,IAAT,GAAgB,MAAvB;AACD;;AAED,IAAA,KAAK,CAAC,IAAN,CAAW,GAAX,EAAgB,IAAhB;AACA,IAAA,KAAK,CAAC,IAAN,CAAW,MAAX,EAAmB,cAAnB;AACA,IAAA,KAAK,CAAC,IAAN,CAAW,cAAX,EAA2B,YAA3B;AACD,GApCS;;AAqCZ,SAAA,cAAA;AAAC,CAtCD,CAA4C,WAA5C,CAAA;;;AAwCA,sBAAsB,CAAC,WAAD,EAAc,cAAd,CAAtB","sourcesContent":["/**\n * Create By Bruce Too\n * On 2020-02-18\n */\nimport { isArray } from '@antv/util';\n\nimport ColumnLabel from '../../../column/component/label';\nimport { IShape, Element } from '../../../../dependents';\nimport { VALUE_FIELD, INDEX_FIELD } from '../../layer';\nimport { registerLabelComponent } from '../../../../components/label/base';\nimport { MappingDatum, _ORIGIN } from '../../../../dependents';\n\nconst MARGIN = 2;\n\nexport default class WaterfallLabel extends ColumnLabel {\n  protected adjustLabel(label: IShape, element: Element): void {\n    const { shape } = element;\n    const shapeBox = shape.getBBox();\n    const data = element.getData();\n    const values = data[VALUE_FIELD];\n    const diff = data[this.layer.options.yField];\n    const value = isArray(values) ? values[1] : values;\n    const { formatter } = this.options;\n    const mappingData: MappingDatum[] = [].concat(element.getModel().mappingData);\n    const elementIndex = formatter ? mappingData[0] && mappingData[0]['_origin'][INDEX_FIELD] : 0;\n    const formatterValue = formatter\n      ? formatter(\n          value,\n          {\n            [_ORIGIN]: mappingData[0]?._origin,\n            mappingDatum: mappingData[0],\n            mappingDatumIndex: 0,\n            element,\n            elementIndex,\n          },\n          elementIndex\n        )\n      : value;\n    let yPos = (shapeBox.minY + shapeBox.maxY) / 2;\n    let textBaseline = 'bottom';\n\n    if (diff < 0) {\n      yPos = shapeBox.maxY + MARGIN;\n      textBaseline = 'top';\n    } else {\n      yPos = shapeBox.minY - MARGIN;\n    }\n\n    label.attr('y', yPos);\n    label.attr('text', formatterValue);\n    label.attr('textBaseline', textBaseline);\n  }\n}\n\nregisterLabelComponent('waterfall', WaterfallLabel);\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}