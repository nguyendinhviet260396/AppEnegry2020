{"ast":null,"code":"import { registerAnimation } from '../../dependents';\nimport { clone, each } from '@antv/util'; // 记录之前的状态\n\nvar shapeCache;\n\nfunction clipInFromCenter(shape, animateCfg) {\n  var bbox = shape.getBBox();\n  var centerX = bbox.minX + bbox.width / 2;\n  shape.setClip({\n    type: 'rect',\n    attrs: {\n      x: centerX,\n      y: bbox.minY,\n      width: 0,\n      height: bbox.height\n    }\n  });\n  var cliper = shape.get('clipShape');\n  cliper.animate({\n    width: bbox.width,\n    x: bbox.minX\n  }, animateCfg.duration, animateCfg.easing, function () {\n    shape.setClip(null);\n  }, animateCfg.delay);\n}\n\nclipInFromCenter.animationName = 'clipInFromCenter';\nexport function setShapeCache(shapes) {\n  shapeCache = shapes;\n}\n\nfunction updateFromCenter(shape, animateCfg) {\n  var fromPath = getShapeFromCache(shape).attr('path');\n  var toPath = clone(shape.attr('path'));\n  shape.attr('path', fromPath);\n  shape.animate({\n    path: toPath\n  }, animateCfg.duration, animateCfg.easing, animateCfg.callback, 100);\n}\n\nfunction getShapeFromCache(shape) {\n  var id = shape.id;\n  var target;\n  each(shapeCache, function (s) {\n    if (s.id === id) {\n      target = s;\n    }\n  });\n  return target;\n}\n\nupdateFromCenter.animationName = 'updateFromCenter';\nregisterAnimation('clipInFromCenter', clipInFromCenter);\nregisterAnimation('updateFromCenter', updateFromCenter);","map":{"version":3,"sources":["../../../src/plots/range-bar/animation.ts"],"names":[],"mappings":"AAAA,SAAS,iBAAT,QAA0C,kBAA1C;AACA,SAAS,KAAT,EAAgB,IAAhB,QAA4B,YAA5B,C,CAEA;;AACA,IAAI,UAAJ;;AAEA,SAAS,gBAAT,CAA0B,KAA1B,EAAiC,UAAjC,EAA2C;AACzC,MAAM,IAAI,GAAG,KAAK,CAAC,OAAN,EAAb;AACA,MAAM,OAAO,GAAG,IAAI,CAAC,IAAL,GAAY,IAAI,CAAC,KAAL,GAAa,CAAzC;AACA,EAAA,KAAK,CAAC,OAAN,CAAc;AACZ,IAAA,IAAI,EAAE,MADM;AAEZ,IAAA,KAAK,EAAE;AACL,MAAA,CAAC,EAAE,OADE;AAEL,MAAA,CAAC,EAAE,IAAI,CAAC,IAFH;AAGL,MAAA,KAAK,EAAE,CAHF;AAIL,MAAA,MAAM,EAAE,IAAI,CAAC;AAJR;AAFK,GAAd;AASA,MAAM,MAAM,GAAG,KAAK,CAAC,GAAN,CAAU,WAAV,CAAf;AACA,EAAA,MAAM,CAAC,OAAP,CACE;AACE,IAAA,KAAK,EAAE,IAAI,CAAC,KADd;AAEE,IAAA,CAAC,EAAE,IAAI,CAAC;AAFV,GADF,EAKE,UAAU,CAAC,QALb,EAME,UAAU,CAAC,MANb,EAOE,YAAA;AACE,IAAA,KAAK,CAAC,OAAN,CAAc,IAAd;AACD,GATH,EAUE,UAAU,CAAC,KAVb;AAYD;;AAED,gBAAgB,CAAC,aAAjB,GAAiC,kBAAjC;AAEA,OAAM,SAAU,aAAV,CAAwB,MAAxB,EAA8B;AAClC,EAAA,UAAU,GAAG,MAAb;AACD;;AAED,SAAS,gBAAT,CAA0B,KAA1B,EAAiC,UAAjC,EAA2C;AACzC,MAAM,QAAQ,GAAG,iBAAiB,CAAC,KAAD,CAAjB,CAAyB,IAAzB,CAA8B,MAA9B,CAAjB;AACA,MAAM,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,IAAN,CAAW,MAAX,CAAD,CAApB;AACA,EAAA,KAAK,CAAC,IAAN,CAAW,MAAX,EAAmB,QAAnB;AACA,EAAA,KAAK,CAAC,OAAN,CACE;AACE,IAAA,IAAI,EAAE;AADR,GADF,EAIE,UAAU,CAAC,QAJb,EAKE,UAAU,CAAC,MALb,EAME,UAAU,CAAC,QANb,EAOE,GAPF;AASD;;AAED,SAAS,iBAAT,CAA2B,KAA3B,EAAgC;AACtB,MAAA,EAAE,GAAK,KAAK,CAAV,EAAF;AACR,MAAI,MAAJ;AACA,EAAA,IAAI,CAAC,UAAD,EAAa,UAAC,CAAD,EAAE;AACjB,QAAI,CAAC,CAAC,EAAF,KAAS,EAAb,EAAiB;AACf,MAAA,MAAM,GAAG,CAAT;AACD;AACF,GAJG,CAAJ;AAKA,SAAO,MAAP;AACD;;AAED,gBAAgB,CAAC,aAAjB,GAAiC,kBAAjC;AAEA,iBAAiB,CAAC,kBAAD,EAAqB,gBAArB,CAAjB;AACA,iBAAiB,CAAC,kBAAD,EAAqB,gBAArB,CAAjB","sourcesContent":["import { registerAnimation, IShape } from '../../dependents';\nimport { clone, each } from '@antv/util';\n\n// 记录之前的状态\nlet shapeCache: IShape[];\n\nfunction clipInFromCenter(shape, animateCfg) {\n  const bbox = shape.getBBox();\n  const centerX = bbox.minX + bbox.width / 2;\n  shape.setClip({\n    type: 'rect',\n    attrs: {\n      x: centerX,\n      y: bbox.minY,\n      width: 0,\n      height: bbox.height,\n    },\n  });\n  const cliper = shape.get('clipShape');\n  cliper.animate(\n    {\n      width: bbox.width,\n      x: bbox.minX,\n    },\n    animateCfg.duration,\n    animateCfg.easing,\n    () => {\n      shape.setClip(null);\n    },\n    animateCfg.delay\n  );\n}\n\nclipInFromCenter.animationName = 'clipInFromCenter';\n\nexport function setShapeCache(shapes) {\n  shapeCache = shapes;\n}\n\nfunction updateFromCenter(shape, animateCfg) {\n  const fromPath = getShapeFromCache(shape).attr('path');\n  const toPath = clone(shape.attr('path'));\n  shape.attr('path', fromPath);\n  shape.animate(\n    {\n      path: toPath,\n    },\n    animateCfg.duration,\n    animateCfg.easing,\n    animateCfg.callback,\n    100\n  );\n}\n\nfunction getShapeFromCache(shape) {\n  const { id } = shape;\n  let target;\n  each(shapeCache, (s) => {\n    if (s.id === id) {\n      target = s;\n    }\n  });\n  return target;\n}\n\nupdateFromCenter.animationName = 'updateFromCenter';\n\nregisterAnimation('clipInFromCenter', clipInFromCenter);\nregisterAnimation('updateFromCenter', updateFromCenter);\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}