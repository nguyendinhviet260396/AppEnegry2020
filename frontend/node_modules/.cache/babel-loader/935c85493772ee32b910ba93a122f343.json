{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getStyle = void 0;\n\nvar tslib_1 = require(\"tslib\");\n\nvar util_1 = require(\"@antv/util\");\n/**\n * @ignore\n * 获取 Shape 的图形属性\n * @param cfg\n * @param isStroke 是否需要描边\n * @param isFill 是否需要填充\n * @param [sizeName] 可选，表示图形大小的属性，lineWidth 或者 r\n * @returns\n */\n\n\nfunction getStyle(cfg, isStroke, isFill, sizeName) {\n  if (sizeName === void 0) {\n    sizeName = '';\n  }\n\n  var _a = cfg.style,\n      style = _a === void 0 ? {} : _a,\n      defaultStyle = cfg.defaultStyle,\n      color = cfg.color,\n      size = cfg.size;\n\n  var attrs = tslib_1.__assign(tslib_1.__assign({}, defaultStyle), style);\n\n  if (color) {\n    if (isStroke) {\n      if (!style.stroke) {\n        // 如果用户在 style() 中配置了 stroke，则以用户配置的为准\n        attrs.stroke = color;\n      }\n    }\n\n    if (isFill) {\n      if (!style.fill) {\n        // 如果用户在 style() 中配置了 fill\n        attrs.fill = color;\n      }\n    }\n  }\n\n  if (sizeName && util_1.isNil(style[sizeName]) && !util_1.isNil(size)) {\n    // 如果用户在 style() 中配置了 lineWidth 或者 r 属性\n    attrs[sizeName] = size;\n  }\n\n  return attrs;\n}\n\nexports.getStyle = getStyle;","map":{"version":3,"sources":["../../../../src/geometry/shape/util/get-style.ts"],"names":[],"mappings":";;;;;;;;;AAAA,IAAA,MAAA,GAAA,OAAA,CAAA,YAAA,CAAA;AAGA;;;;;;;;;;;AASA,SAAgB,QAAhB,CAAyB,GAAzB,EAAyC,QAAzC,EAA4D,MAA5D,EAA6E,QAA7E,EAAkG;AAArB,MAAA,QAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,QAAA,GAAA,EAAA;AAAqB;;AACxF,MAAA,EAAA,GAA0C,GAAG,CAAnC,KAAV;AAAA,MAAA,KAAK,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,EAAH,GAAK,EAAV;AAAA,MAAY,YAAY,GAAkB,GAAG,CAArB,YAAxB;AAAA,MAA0B,KAAK,GAAW,GAAG,CAAd,KAA/B;AAAA,MAAiC,IAAI,GAAK,GAAG,CAAR,IAArC;;AACR,MAAM,KAAK,GAAA,OAAA,CAAA,QAAA,CAAA,OAAA,CAAA,QAAA,CAAA,EAAA,EACN,YADM,CAAA,EAEN,KAFM,CAAX;;AAIA,MAAI,KAAJ,EAAW;AACT,QAAI,QAAJ,EAAc;AACZ,UAAI,CAAC,KAAK,CAAC,MAAX,EAAmB;AACjB;AACA,QAAA,KAAK,CAAC,MAAN,GAAe,KAAf;AACD;AACF;;AAED,QAAI,MAAJ,EAAY;AACV,UAAI,CAAC,KAAK,CAAC,IAAX,EAAiB;AACf;AACA,QAAA,KAAK,CAAC,IAAN,GAAa,KAAb;AACD;AACF;AACF;;AACD,MAAI,QAAQ,IAAI,MAAA,CAAA,KAAA,CAAM,KAAK,CAAC,QAAD,CAAX,CAAZ,IAAsC,CAAC,MAAA,CAAA,KAAA,CAAM,IAAN,CAA3C,EAAwD;AACtD;AACA,IAAA,KAAK,CAAC,QAAD,CAAL,GAAkB,IAAlB;AACD;;AAED,SAAO,KAAP;AACD;;AA3BD,OAAA,CAAA,QAAA,GAAA,QAAA","sourcesContent":["import { isNil } from '@antv/util';\nimport { ShapeInfo } from '../../../interface';\n\n/**\n * @ignore\n * 获取 Shape 的图形属性\n * @param cfg\n * @param isStroke 是否需要描边\n * @param isFill 是否需要填充\n * @param [sizeName] 可选，表示图形大小的属性，lineWidth 或者 r\n * @returns\n */\nexport function getStyle(cfg: ShapeInfo, isStroke: boolean, isFill: boolean, sizeName: string = '') {\n  const { style = {}, defaultStyle, color, size } = cfg;\n  const attrs = {\n    ...defaultStyle,\n    ...style,\n  };\n  if (color) {\n    if (isStroke) {\n      if (!style.stroke) {\n        // 如果用户在 style() 中配置了 stroke，则以用户配置的为准\n        attrs.stroke = color;\n      }\n    }\n\n    if (isFill) {\n      if (!style.fill) {\n        // 如果用户在 style() 中配置了 fill\n        attrs.fill = color;\n      }\n    }\n  }\n  if (sizeName && isNil(style[sizeName]) && !isNil(size)) {\n    // 如果用户在 style() 中配置了 lineWidth 或者 r 属性\n    attrs[sizeName] = size;\n  }\n\n  return attrs;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}