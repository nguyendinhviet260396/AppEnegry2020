{"ast":null,"code":"import { deepMix } from '@antv/util';\nimport textHide from './text-hide';\n/** 根据变化进行抽样，保留变化较大的点，类似于点简化算法 */\n\nexport default function nodesResamplingByChange(shape, option, index, cfg) {\n  var nodes = cfg.nodes.nodes;\n  var tolerance = getGlobalTolerance(nodes);\n\n  if (index <= 1) {\n    return;\n  }\n\n  var current = nodes[index]; // const previous = nodes[index-1];\n\n  var previous = findPrevious(index, nodes);\n  var distX = previous.centerX - current.centerX;\n  var distY = previous.centerY - current.centerY;\n  var dist = Math.sqrt(distX * distX + distY * distY);\n\n  if (dist < tolerance) {\n    textHide(shape);\n    shape.set('blank', true);\n  }\n}\n\nfunction findPrevious(index, nodes) {\n  for (var i = index - 1; i > 0; i--) {\n    var node = nodes[i];\n\n    if (!node.shape.get('blank')) {\n      return node;\n    }\n  }\n}\n\nfunction getGlobalTolerance(nodes) {\n  var nodesClone = deepMix([], nodes);\n  nodesClone.sort(function (a, b) {\n    return b.width - a.width;\n  });\n  return Math.round(nodesClone[0].width);\n}","map":{"version":3,"sources":["../../../../src/util/responsive/rules/nodes-resampling-by-change.ts"],"names":[],"mappings":"AACA,SAAS,OAAT,QAAwB,YAAxB;AACA,OAAO,QAAP,MAAqB,aAArB;AAEA;;AACA,eAAc,SAAU,uBAAV,CAAkC,KAAlC,EAAiD,MAAjD,EAAyD,KAAzD,EAAgE,GAAhE,EAAmE;AAC/E,MAAM,KAAK,GAAG,GAAG,CAAC,KAAJ,CAAU,KAAxB;AACA,MAAM,SAAS,GAAG,kBAAkB,CAAC,KAAD,CAApC;;AACA,MAAI,KAAK,IAAI,CAAb,EAAgB;AACd;AACD;;AACD,MAAM,OAAO,GAAG,KAAK,CAAC,KAAD,CAArB,CAN+E,CAO/E;;AACA,MAAM,QAAQ,GAAG,YAAY,CAAC,KAAD,EAAQ,KAAR,CAA7B;AACA,MAAM,KAAK,GAAG,QAAQ,CAAC,OAAT,GAAmB,OAAO,CAAC,OAAzC;AACA,MAAM,KAAK,GAAG,QAAQ,CAAC,OAAT,GAAmB,OAAO,CAAC,OAAzC;AACA,MAAM,IAAI,GAAG,IAAI,CAAC,IAAL,CAAU,KAAK,GAAG,KAAR,GAAgB,KAAK,GAAG,KAAlC,CAAb;;AACA,MAAI,IAAI,GAAG,SAAX,EAAsB;AACpB,IAAA,QAAQ,CAAC,KAAD,CAAR;AACA,IAAA,KAAK,CAAC,GAAN,CAAU,OAAV,EAAmB,IAAnB;AACD;AACF;;AAED,SAAS,YAAT,CAAsB,KAAtB,EAA6B,KAA7B,EAAkC;AAChC,OAAK,IAAI,CAAC,GAAG,KAAK,GAAG,CAArB,EAAwB,CAAC,GAAG,CAA5B,EAA+B,CAAC,EAAhC,EAAoC;AAClC,QAAM,IAAI,GAAG,KAAK,CAAC,CAAD,CAAlB;;AACA,QAAI,CAAC,IAAI,CAAC,KAAL,CAAW,GAAX,CAAe,OAAf,CAAL,EAA8B;AAC5B,aAAO,IAAP;AACD;AACF;AACF;;AAED,SAAS,kBAAT,CAA4B,KAA5B,EAAiC;AAC/B,MAAM,UAAU,GAAG,OAAO,CAAC,EAAD,EAAK,KAAL,CAA1B;AACA,EAAA,UAAU,CAAC,IAAX,CAAgB,UAAC,CAAD,EAAI,CAAJ,EAAK;AACnB,WAAO,CAAC,CAAC,KAAF,GAAU,CAAC,CAAC,KAAnB;AACD,GAFD;AAGA,SAAO,IAAI,CAAC,KAAL,CAAW,UAAU,CAAC,CAAD,CAAV,CAAc,KAAzB,CAAP;AACD","sourcesContent":["import { IShape } from '@antv/g-base';\nimport { deepMix } from '@antv/util';\nimport textHide from './text-hide';\n\n/** 根据变化进行抽样，保留变化较大的点，类似于点简化算法 */\nexport default function nodesResamplingByChange(shape: IShape, option, index, cfg) {\n  const nodes = cfg.nodes.nodes;\n  const tolerance = getGlobalTolerance(nodes);\n  if (index <= 1) {\n    return;\n  }\n  const current = nodes[index];\n  // const previous = nodes[index-1];\n  const previous = findPrevious(index, nodes);\n  const distX = previous.centerX - current.centerX;\n  const distY = previous.centerY - current.centerY;\n  const dist = Math.sqrt(distX * distX + distY * distY);\n  if (dist < tolerance) {\n    textHide(shape);\n    shape.set('blank', true);\n  }\n}\n\nfunction findPrevious(index, nodes) {\n  for (let i = index - 1; i > 0; i--) {\n    const node = nodes[i];\n    if (!node.shape.get('blank')) {\n      return node;\n    }\n  }\n}\n\nfunction getGlobalTolerance(nodes) {\n  const nodesClone = deepMix([], nodes);\n  nodesClone.sort((a, b) => {\n    return b.width - a.width;\n  });\n  return Math.round(nodesClone[0].width);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}