{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar color_util_1 = require(\"@antv/color-util\");\n\nvar dom_util_1 = require(\"@antv/dom-util\");\n\nvar util_1 = require(\"@antv/util\");\n\nvar html_component_1 = require(\"../abstract/html-component\");\n\nvar util_2 = require(\"../util/util\");\n\nvar CssConst = require(\"./css-const\");\n\nvar html_theme_1 = require(\"./html-theme\");\n\nvar align_1 = require(\"../util/align\");\n\nfunction hasOneKey(obj, keys) {\n  var result = false;\n  util_1.each(keys, function (key) {\n    if (util_1.hasKey(obj, key)) {\n      result = true;\n      return false;\n    }\n  });\n  return result;\n}\n\nvar Tooltip =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(Tooltip, _super);\n\n  function Tooltip() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Tooltip.prototype.getDefaultCfg = function () {\n    var cfg = _super.prototype.getDefaultCfg.call(this);\n\n    return tslib_1.__assign(tslib_1.__assign({}, cfg), {\n      name: 'tooltip',\n      type: 'html',\n      x: 0,\n      y: 0,\n      items: [],\n      customContent: null,\n      containerTpl: \"<div class=\\\"\" + CssConst.CONTAINER_CLASS + \"\\\"><div class=\\\"\" + CssConst.TITLE_CLASS + \"\\\"></div><ul class=\\\"\" + CssConst.LIST_CLASS + \"\\\"></ul></div>\",\n      itemTpl: \"<li class=\\\"\" + CssConst.LIST_ITEM_CLASS + \"\\\" data-index={index}>\\n          <span class=\\\"\" + CssConst.MARKER_CLASS + \"\\\" style=\\\"background:{color}\\\"></span>\\n          <span class=\\\"\" + CssConst.NAME_CLASS + \"\\\">{name}</span>:\\n          <span class=\\\"\" + CssConst.VALUE_CLASS + \"\\\">{value}</span>\\n        </li>\",\n      xCrosshairTpl: \"<div class=\\\"\" + CssConst.CROSSHAIR_X + \"\\\"></div>\",\n      yCrosshairTpl: \"<div class=\\\"\" + CssConst.CROSSHAIR_Y + \"\\\"></div>\",\n      title: null,\n      showTitle: true,\n\n      /**\n       * tooltip 限制的区域\n       * @type {Region}\n       */\n      region: null,\n      // crosshair 的限制区域\n      crosshairsRegion: null,\n      containerClassName: CssConst.CONTAINER_CLASS,\n      // x, y, xy\n      crosshairs: null,\n      offset: 10,\n      position: 'right',\n      domStyles: null,\n      defaultStyles: html_theme_1.default\n    });\n  }; // tooltip 渲染时，渲染 title，items 和 corosshairs\n\n\n  Tooltip.prototype.render = function () {\n    if (this.get('customContent')) {\n      this.renderCustomContent();\n    } else {\n      this.resetTitle();\n      this.renderItems();\n    } // 绘制完成后，再定位\n\n\n    this.resetPosition();\n  }; // 复写清空函数，因为有模板的存在，所以默认的写法不合适\n\n\n  Tooltip.prototype.clear = function () {\n    // 由于 crosshair 没有在 container 内，所以需要单独清理\n    this.clearCrosshairs();\n    this.setTitle(''); // 清空标题\n\n    this.clearItemDoms();\n  };\n\n  Tooltip.prototype.show = function () {\n    var container = this.getContainer();\n\n    if (!container || this.destroyed) {\n      // 防止容器不存在或者被销毁时报错\n      return;\n    }\n\n    this.set('visible', true);\n    dom_util_1.modifyCSS(container, {\n      visibility: 'visible'\n    });\n    this.setCrossHairsVisible(true);\n  };\n\n  Tooltip.prototype.hide = function () {\n    var container = this.getContainer(); // relative: https://github.com/antvis/g2/issues/1221\n\n    if (!container || this.destroyed) {\n      return;\n    }\n\n    this.set('visible', false);\n    dom_util_1.modifyCSS(container, {\n      visibility: 'hidden'\n    });\n    this.setCrossHairsVisible(false);\n  }; // 实现 IPointLocation 的接口\n\n\n  Tooltip.prototype.getLocation = function () {\n    return {\n      x: this.get('x'),\n      y: this.get('y')\n    };\n  }; // 实现 IPointLocation 的接口\n\n\n  Tooltip.prototype.setLocation = function (point) {\n    this.set('x', point.x);\n    this.set('y', point.y);\n    this.resetPosition();\n  };\n\n  Tooltip.prototype.setCrossHairsVisible = function (visible) {\n    var display = visible ? '' : 'none';\n    var xCrosshairDom = this.get('xCrosshairDom');\n    var yCrosshairDom = this.get('yCrosshairDom');\n    xCrosshairDom && dom_util_1.modifyCSS(xCrosshairDom, {\n      display: display\n    });\n    yCrosshairDom && dom_util_1.modifyCSS(yCrosshairDom, {\n      display: display\n    });\n  }; // 如有 customContent 则根据 customContent 设置 container\n\n\n  Tooltip.prototype.initContainer = function () {\n    _super.prototype.initContainer.call(this);\n\n    if (this.get('customContent')) {\n      if (this.get('container')) {\n        this.get('container').remove();\n      }\n\n      var container = this.getHtmlContentNode();\n      this.get('parent').appendChild(container);\n      this.set('container', container);\n      this.resetStyles();\n      this.applyStyles();\n    }\n  }; // 更新属性的同时，可能会引起 DOM 的变化，这里对可能引起 DOM 变化的场景做了处理\n\n\n  Tooltip.prototype.updateInner = function (cfg) {\n    if (this.get('customContent')) {\n      this.renderCustomContent();\n    } else {\n      // 更新标题\n      if (hasOneKey(cfg, ['title', 'showTitle'])) {\n        this.resetTitle();\n      } // 更新内容\n\n\n      if (util_1.hasKey(cfg, 'items')) {\n        this.renderItems();\n      }\n    }\n\n    _super.prototype.updateInner.call(this, cfg);\n  };\n\n  Tooltip.prototype.initDom = function () {\n    this.cacheDoms();\n  }; // 清理 DOM\n\n\n  Tooltip.prototype.removeDom = function () {\n    _super.prototype.removeDom.call(this);\n\n    this.clearCrosshairs();\n  }; // 调整位置\n\n\n  Tooltip.prototype.resetPosition = function () {\n    var x = this.get('x');\n    var y = this.get('y');\n    var offset = this.get('offset');\n\n    var _a = this.getOffset(),\n        offsetX = _a.offsetX,\n        offsetY = _a.offsetY;\n\n    var position = this.get('position');\n    var region = this.get('region');\n    var container = this.getContainer();\n    var bbox = this.getBBox();\n    var width = bbox.width,\n        height = bbox.height;\n    var limitBox;\n\n    if (region) {\n      // 不限制位置\n      limitBox = util_2.regionToBBox(region);\n    }\n\n    var point = align_1.getAlignPoint(x, y, offset, width, height, position, limitBox);\n    dom_util_1.modifyCSS(container, {\n      left: util_2.toPx(point.x + offsetX),\n      top: util_2.toPx(point.y + offsetY)\n    });\n    this.resetCrosshairs();\n  }; // 根据 customContent 渲染\n\n\n  Tooltip.prototype.renderCustomContent = function () {\n    var node = this.getHtmlContentNode();\n    var parent = this.get('parent');\n    var curContainer = this.get('container');\n\n    if (curContainer && curContainer.parentNode === parent) {\n      parent.replaceChild(node, curContainer);\n    } else {\n      parent.appendChild(node);\n    }\n\n    this.set('container', node);\n    this.resetStyles();\n    this.applyStyles();\n  };\n\n  Tooltip.prototype.getHtmlContentNode = function () {\n    var node;\n    var customContent = this.get('customContent');\n\n    if (customContent) {\n      var elem = customContent(this.get('title'), this.get('items'));\n\n      if (util_1.isElement(elem)) {\n        node = elem;\n      } else {\n        node = dom_util_1.createDom(elem);\n      }\n    }\n\n    return node;\n  }; // 缓存模板设置的各种 DOM\n\n\n  Tooltip.prototype.cacheDoms = function () {\n    var container = this.getContainer();\n    var titleDom = container.getElementsByClassName(CssConst.TITLE_CLASS)[0];\n    var listDom = container.getElementsByClassName(CssConst.LIST_CLASS)[0];\n    this.set('titleDom', titleDom);\n    this.set('listDom', listDom);\n  }; // 重置 title\n\n\n  Tooltip.prototype.resetTitle = function () {\n    var title = this.get('title');\n    var showTitle = this.get('showTitle');\n\n    if (showTitle && title) {\n      this.setTitle(title);\n    } else {\n      this.setTitle('');\n    }\n  }; // 设置 title 文本\n\n\n  Tooltip.prototype.setTitle = function (text) {\n    var titleDom = this.get('titleDom');\n\n    if (titleDom) {\n      titleDom.innerText = text;\n    }\n  }; // 终止 crosshair\n\n\n  Tooltip.prototype.resetCrosshairs = function () {\n    var crosshairsRegion = this.get('crosshairsRegion');\n    var crosshairs = this.get('crosshairs');\n\n    if (!crosshairsRegion || !crosshairs) {\n      // 不显示 crosshair，都移除，没有设定 region 也都移除掉\n      this.clearCrosshairs();\n    } else {\n      var crosshairBox = util_2.regionToBBox(crosshairsRegion);\n      var xCrosshairDom = this.get('xCrosshairDom');\n      var yCrosshairDom = this.get('yCrosshairDom');\n\n      if (crosshairs === 'x') {\n        this.resetCrosshair('x', crosshairBox); // 仅显示 x 的 crosshair，y 移除\n\n        if (yCrosshairDom) {\n          yCrosshairDom.remove();\n          this.set('yCrosshairDom', null);\n        }\n      } else if (crosshairs === 'y') {\n        this.resetCrosshair('y', crosshairBox); // 仅显示 y 的 crosshair，x 移除\n\n        if (xCrosshairDom) {\n          xCrosshairDom.remove();\n          this.set('xCrosshairDom', null);\n        }\n      } else {\n        this.resetCrosshair('x', crosshairBox);\n        this.resetCrosshair('y', crosshairBox);\n      }\n\n      this.setCrossHairsVisible(this.get('visible'));\n    }\n  }; // 设定 crosshair 的位置，需要区分 x,y\n\n\n  Tooltip.prototype.resetCrosshair = function (name, bbox) {\n    var croshairDom = this.checkCrosshair(name);\n    var value = this.get(name);\n\n    if (name === 'x') {\n      dom_util_1.modifyCSS(croshairDom, {\n        left: util_2.toPx(value),\n        top: util_2.toPx(bbox.y),\n        height: util_2.toPx(bbox.height)\n      });\n    } else {\n      dom_util_1.modifyCSS(croshairDom, {\n        top: util_2.toPx(value),\n        left: util_2.toPx(bbox.x),\n        width: util_2.toPx(bbox.width)\n      });\n    }\n  }; // 如果 crosshair 对应的 dom 不存在，则创建\n\n\n  Tooltip.prototype.checkCrosshair = function (name) {\n    var domName = name + \"CrosshairDom\";\n    var tplName = name + \"CrosshairTpl\";\n    var constName = \"CROSSHAIR_\" + name.toUpperCase();\n    var styleName = CssConst[constName];\n    var croshairDom = this.get(domName);\n    var parent = this.get('parent');\n\n    if (!croshairDom) {\n      croshairDom = dom_util_1.createDom(this.get(tplName)); // 创建\n\n      this.applyStyle(styleName, croshairDom); // 设置初始样式\n\n      parent.appendChild(croshairDom); // 添加到跟 tooltip 同级的目录下\n\n      this.set(domName, croshairDom);\n    }\n\n    return croshairDom;\n  };\n\n  Tooltip.prototype.renderItems = function () {\n    this.clearItemDoms();\n    var items = this.get('items');\n    var itemTpl = this.get('itemTpl');\n    var listDom = this.get('listDom');\n\n    if (listDom) {\n      util_1.each(items, function (item) {\n        var color = color_util_1.default.toCSSGradient(item.color);\n\n        var substituteObj = tslib_1.__assign(tslib_1.__assign({}, item), {\n          color: color\n        });\n\n        var domStr = util_1.substitute(itemTpl, substituteObj);\n        var itemDom = dom_util_1.createDom(domStr);\n        listDom.appendChild(itemDom);\n      });\n      this.applyChildrenStyles(listDom, this.get('domStyles'));\n    }\n  };\n\n  Tooltip.prototype.clearItemDoms = function () {\n    if (this.get('listDom')) {\n      util_2.clearDom(this.get('listDom'));\n    }\n  };\n\n  Tooltip.prototype.clearCrosshairs = function () {\n    var xCrosshairDom = this.get('xCrosshairDom');\n    var yCrosshairDom = this.get('yCrosshairDom');\n    xCrosshairDom && xCrosshairDom.remove();\n    yCrosshairDom && yCrosshairDom.remove();\n    this.set('xCrosshairDom', null);\n    this.set('yCrosshairDom', null);\n  };\n\n  return Tooltip;\n}(html_component_1.default);\n\nexports.default = Tooltip;","map":{"version":3,"sources":["../../src/tooltip/html.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar color_util_1 = require(\"@antv/color-util\");\nvar dom_util_1 = require(\"@antv/dom-util\");\nvar util_1 = require(\"@antv/util\");\nvar html_component_1 = require(\"../abstract/html-component\");\nvar util_2 = require(\"../util/util\");\nvar CssConst = require(\"./css-const\");\nvar html_theme_1 = require(\"./html-theme\");\nvar align_1 = require(\"../util/align\");\nfunction hasOneKey(obj, keys) {\n    var result = false;\n    util_1.each(keys, function (key) {\n        if (util_1.hasKey(obj, key)) {\n            result = true;\n            return false;\n        }\n    });\n    return result;\n}\nvar Tooltip = /** @class */ (function (_super) {\n    tslib_1.__extends(Tooltip, _super);\n    function Tooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Tooltip.prototype.getDefaultCfg = function () {\n        var cfg = _super.prototype.getDefaultCfg.call(this);\n        return tslib_1.__assign(tslib_1.__assign({}, cfg), { name: 'tooltip', type: 'html', x: 0, y: 0, items: [], customContent: null, containerTpl: \"<div class=\\\"\" + CssConst.CONTAINER_CLASS + \"\\\"><div class=\\\"\" + CssConst.TITLE_CLASS + \"\\\"></div><ul class=\\\"\" + CssConst.LIST_CLASS + \"\\\"></ul></div>\", itemTpl: \"<li class=\\\"\" + CssConst.LIST_ITEM_CLASS + \"\\\" data-index={index}>\\n          <span class=\\\"\" + CssConst.MARKER_CLASS + \"\\\" style=\\\"background:{color}\\\"></span>\\n          <span class=\\\"\" + CssConst.NAME_CLASS + \"\\\">{name}</span>:\\n          <span class=\\\"\" + CssConst.VALUE_CLASS + \"\\\">{value}</span>\\n        </li>\", xCrosshairTpl: \"<div class=\\\"\" + CssConst.CROSSHAIR_X + \"\\\"></div>\", yCrosshairTpl: \"<div class=\\\"\" + CssConst.CROSSHAIR_Y + \"\\\"></div>\", title: null, showTitle: true, \n            /**\n             * tooltip 限制的区域\n             * @type {Region}\n             */\n            region: null, \n            // crosshair 的限制区域\n            crosshairsRegion: null, containerClassName: CssConst.CONTAINER_CLASS, \n            // x, y, xy\n            crosshairs: null, offset: 10, position: 'right', domStyles: null, defaultStyles: html_theme_1.default });\n    };\n    // tooltip 渲染时，渲染 title，items 和 corosshairs\n    Tooltip.prototype.render = function () {\n        if (this.get('customContent')) {\n            this.renderCustomContent();\n        }\n        else {\n            this.resetTitle();\n            this.renderItems();\n        }\n        // 绘制完成后，再定位\n        this.resetPosition();\n    };\n    // 复写清空函数，因为有模板的存在，所以默认的写法不合适\n    Tooltip.prototype.clear = function () {\n        // 由于 crosshair 没有在 container 内，所以需要单独清理\n        this.clearCrosshairs();\n        this.setTitle(''); // 清空标题\n        this.clearItemDoms();\n    };\n    Tooltip.prototype.show = function () {\n        var container = this.getContainer();\n        if (!container || this.destroyed) {\n            // 防止容器不存在或者被销毁时报错\n            return;\n        }\n        this.set('visible', true);\n        dom_util_1.modifyCSS(container, {\n            visibility: 'visible',\n        });\n        this.setCrossHairsVisible(true);\n    };\n    Tooltip.prototype.hide = function () {\n        var container = this.getContainer();\n        // relative: https://github.com/antvis/g2/issues/1221\n        if (!container || this.destroyed) {\n            return;\n        }\n        this.set('visible', false);\n        dom_util_1.modifyCSS(container, {\n            visibility: 'hidden',\n        });\n        this.setCrossHairsVisible(false);\n    };\n    // 实现 IPointLocation 的接口\n    Tooltip.prototype.getLocation = function () {\n        return { x: this.get('x'), y: this.get('y') };\n    };\n    // 实现 IPointLocation 的接口\n    Tooltip.prototype.setLocation = function (point) {\n        this.set('x', point.x);\n        this.set('y', point.y);\n        this.resetPosition();\n    };\n    Tooltip.prototype.setCrossHairsVisible = function (visible) {\n        var display = visible ? '' : 'none';\n        var xCrosshairDom = this.get('xCrosshairDom');\n        var yCrosshairDom = this.get('yCrosshairDom');\n        xCrosshairDom &&\n            dom_util_1.modifyCSS(xCrosshairDom, {\n                display: display,\n            });\n        yCrosshairDom &&\n            dom_util_1.modifyCSS(yCrosshairDom, {\n                display: display,\n            });\n    };\n    // 如有 customContent 则根据 customContent 设置 container\n    Tooltip.prototype.initContainer = function () {\n        _super.prototype.initContainer.call(this);\n        if (this.get('customContent')) {\n            if (this.get('container')) {\n                this.get('container').remove();\n            }\n            var container = this.getHtmlContentNode();\n            this.get('parent').appendChild(container);\n            this.set('container', container);\n            this.resetStyles();\n            this.applyStyles();\n        }\n    };\n    // 更新属性的同时，可能会引起 DOM 的变化，这里对可能引起 DOM 变化的场景做了处理\n    Tooltip.prototype.updateInner = function (cfg) {\n        if (this.get('customContent')) {\n            this.renderCustomContent();\n        }\n        else {\n            // 更新标题\n            if (hasOneKey(cfg, ['title', 'showTitle'])) {\n                this.resetTitle();\n            }\n            // 更新内容\n            if (util_1.hasKey(cfg, 'items')) {\n                this.renderItems();\n            }\n        }\n        _super.prototype.updateInner.call(this, cfg);\n    };\n    Tooltip.prototype.initDom = function () {\n        this.cacheDoms();\n    };\n    // 清理 DOM\n    Tooltip.prototype.removeDom = function () {\n        _super.prototype.removeDom.call(this);\n        this.clearCrosshairs();\n    };\n    // 调整位置\n    Tooltip.prototype.resetPosition = function () {\n        var x = this.get('x');\n        var y = this.get('y');\n        var offset = this.get('offset');\n        var _a = this.getOffset(), offsetX = _a.offsetX, offsetY = _a.offsetY;\n        var position = this.get('position');\n        var region = this.get('region');\n        var container = this.getContainer();\n        var bbox = this.getBBox();\n        var width = bbox.width, height = bbox.height;\n        var limitBox;\n        if (region) {\n            // 不限制位置\n            limitBox = util_2.regionToBBox(region);\n        }\n        var point = align_1.getAlignPoint(x, y, offset, width, height, position, limitBox);\n        dom_util_1.modifyCSS(container, {\n            left: util_2.toPx(point.x + offsetX),\n            top: util_2.toPx(point.y + offsetY),\n        });\n        this.resetCrosshairs();\n    };\n    // 根据 customContent 渲染\n    Tooltip.prototype.renderCustomContent = function () {\n        var node = this.getHtmlContentNode();\n        var parent = this.get('parent');\n        var curContainer = this.get('container');\n        if (curContainer && curContainer.parentNode === parent) {\n            parent.replaceChild(node, curContainer);\n        }\n        else {\n            parent.appendChild(node);\n        }\n        this.set('container', node);\n        this.resetStyles();\n        this.applyStyles();\n    };\n    Tooltip.prototype.getHtmlContentNode = function () {\n        var node;\n        var customContent = this.get('customContent');\n        if (customContent) {\n            var elem = customContent(this.get('title'), this.get('items'));\n            if (util_1.isElement(elem)) {\n                node = elem;\n            }\n            else {\n                node = dom_util_1.createDom(elem);\n            }\n        }\n        return node;\n    };\n    // 缓存模板设置的各种 DOM\n    Tooltip.prototype.cacheDoms = function () {\n        var container = this.getContainer();\n        var titleDom = container.getElementsByClassName(CssConst.TITLE_CLASS)[0];\n        var listDom = container.getElementsByClassName(CssConst.LIST_CLASS)[0];\n        this.set('titleDom', titleDom);\n        this.set('listDom', listDom);\n    };\n    // 重置 title\n    Tooltip.prototype.resetTitle = function () {\n        var title = this.get('title');\n        var showTitle = this.get('showTitle');\n        if (showTitle && title) {\n            this.setTitle(title);\n        }\n        else {\n            this.setTitle('');\n        }\n    };\n    // 设置 title 文本\n    Tooltip.prototype.setTitle = function (text) {\n        var titleDom = this.get('titleDom');\n        if (titleDom) {\n            titleDom.innerText = text;\n        }\n    };\n    // 终止 crosshair\n    Tooltip.prototype.resetCrosshairs = function () {\n        var crosshairsRegion = this.get('crosshairsRegion');\n        var crosshairs = this.get('crosshairs');\n        if (!crosshairsRegion || !crosshairs) {\n            // 不显示 crosshair，都移除，没有设定 region 也都移除掉\n            this.clearCrosshairs();\n        }\n        else {\n            var crosshairBox = util_2.regionToBBox(crosshairsRegion);\n            var xCrosshairDom = this.get('xCrosshairDom');\n            var yCrosshairDom = this.get('yCrosshairDom');\n            if (crosshairs === 'x') {\n                this.resetCrosshair('x', crosshairBox);\n                // 仅显示 x 的 crosshair，y 移除\n                if (yCrosshairDom) {\n                    yCrosshairDom.remove();\n                    this.set('yCrosshairDom', null);\n                }\n            }\n            else if (crosshairs === 'y') {\n                this.resetCrosshair('y', crosshairBox);\n                // 仅显示 y 的 crosshair，x 移除\n                if (xCrosshairDom) {\n                    xCrosshairDom.remove();\n                    this.set('xCrosshairDom', null);\n                }\n            }\n            else {\n                this.resetCrosshair('x', crosshairBox);\n                this.resetCrosshair('y', crosshairBox);\n            }\n            this.setCrossHairsVisible(this.get('visible'));\n        }\n    };\n    // 设定 crosshair 的位置，需要区分 x,y\n    Tooltip.prototype.resetCrosshair = function (name, bbox) {\n        var croshairDom = this.checkCrosshair(name);\n        var value = this.get(name);\n        if (name === 'x') {\n            dom_util_1.modifyCSS(croshairDom, {\n                left: util_2.toPx(value),\n                top: util_2.toPx(bbox.y),\n                height: util_2.toPx(bbox.height),\n            });\n        }\n        else {\n            dom_util_1.modifyCSS(croshairDom, {\n                top: util_2.toPx(value),\n                left: util_2.toPx(bbox.x),\n                width: util_2.toPx(bbox.width),\n            });\n        }\n    };\n    // 如果 crosshair 对应的 dom 不存在，则创建\n    Tooltip.prototype.checkCrosshair = function (name) {\n        var domName = name + \"CrosshairDom\";\n        var tplName = name + \"CrosshairTpl\";\n        var constName = \"CROSSHAIR_\" + name.toUpperCase();\n        var styleName = CssConst[constName];\n        var croshairDom = this.get(domName);\n        var parent = this.get('parent');\n        if (!croshairDom) {\n            croshairDom = dom_util_1.createDom(this.get(tplName)); // 创建\n            this.applyStyle(styleName, croshairDom); // 设置初始样式\n            parent.appendChild(croshairDom); // 添加到跟 tooltip 同级的目录下\n            this.set(domName, croshairDom);\n        }\n        return croshairDom;\n    };\n    Tooltip.prototype.renderItems = function () {\n        this.clearItemDoms();\n        var items = this.get('items');\n        var itemTpl = this.get('itemTpl');\n        var listDom = this.get('listDom');\n        if (listDom) {\n            util_1.each(items, function (item) {\n                var color = color_util_1.default.toCSSGradient(item.color);\n                var substituteObj = tslib_1.__assign(tslib_1.__assign({}, item), { color: color });\n                var domStr = util_1.substitute(itemTpl, substituteObj);\n                var itemDom = dom_util_1.createDom(domStr);\n                listDom.appendChild(itemDom);\n            });\n            this.applyChildrenStyles(listDom, this.get('domStyles'));\n        }\n    };\n    Tooltip.prototype.clearItemDoms = function () {\n        if (this.get('listDom')) {\n            util_2.clearDom(this.get('listDom'));\n        }\n    };\n    Tooltip.prototype.clearCrosshairs = function () {\n        var xCrosshairDom = this.get('xCrosshairDom');\n        var yCrosshairDom = this.get('yCrosshairDom');\n        xCrosshairDom && xCrosshairDom.remove();\n        yCrosshairDom && yCrosshairDom.remove();\n        this.set('xCrosshairDom', null);\n        this.set('yCrosshairDom', null);\n    };\n    return Tooltip;\n}(html_component_1.default));\nexports.default = Tooltip;\n//# sourceMappingURL=html.js.map"]},"metadata":{},"sourceType":"script"}