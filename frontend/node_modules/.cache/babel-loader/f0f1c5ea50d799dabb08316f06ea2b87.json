{"ast":null,"code":"import * as types from './../constants/auths';\nimport { toastError, toastSuccess } from '../helpers/toastHelper';\nconst initialState = {\n  onButton: true,\n  listUsers: [],\n  userEditting: null,\n  redirectToReferrer: false\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.AUTH_LOGIN:\n      {\n        return { ...state\n        };\n      }\n\n    case types.AUTH_LOGIN_SUCCESS:\n      {\n        const {\n          data\n        } = action.payload;\n        console.log(data);\n        toastSuccess(' Đăng nhập thành công !');\n        return { ...state,\n          redirectToReferrer: true\n        };\n      }\n\n    case types.AUTH_LOGIN_FAILD:\n      {\n        const {\n          error\n        } = action.payload;\n        toastError(error);\n        return { ...state\n        };\n      }\n\n    case types.AUTH_SIGNUP:\n      {\n        return { ...state\n        };\n      }\n\n    case types.AUTH_SIGNUP_SUCCESS:\n      {\n        const {\n          data\n        } = action.payload;\n        console.log(data.jwt_token);\n        localStorage.setItem(\"token:\", data.jwt_token);\n        toastSuccess('Thêm tài khoản thành công !');\n        return { ...state,\n          listUsers: data\n        };\n      }\n\n    case types.AUTH_SIGNUP_FAILD:\n      {\n        const {\n          error\n        } = action.payload;\n        toastError(error);\n        return { ...state\n        };\n      }\n\n    case types.ON_BUTTON_SUBMIT:\n      {\n        return { ...state,\n          onButton: false\n        };\n      }\n\n    case types.OFF_BUTTON_SUBMIT:\n      {\n        return { ...state,\n          onButton: true\n        };\n      }\n\n    case types.CHECK_AUTH_SUCCESS:\n      {\n        return { ...state,\n          infAuth: 'Thành công !'\n        };\n      }\n\n    case types.CHECK_AUTH_FAILD:\n      {\n        return { ...state,\n          infAuth: 'Tài khoản đã tồn tại !'\n        };\n      }\n\n    case types.FETCH_USER:\n      {\n        return { ...state,\n          listUsers: []\n        };\n      }\n\n    case types.FETCH_USER_SUCCESS:\n      {\n        const {\n          data\n        } = action.payload;\n        return { ...state,\n          listUsers: data\n        };\n      }\n\n    case types.FETCH_USER_FAILED:\n      {\n        return { ...state,\n          listUsers: []\n        };\n      }\n\n    case types.SET_USER_EDITING:\n      {\n        const {\n          user\n        } = action.payload;\n        return { ...state,\n          userEditting: user\n        };\n      }\n\n    case types.UPDATE_USER:\n      {\n        return { ...state,\n          listUsers: []\n        };\n      }\n\n    case types.UPDATE_USER_SUCCESS:\n      {\n        const {\n          data\n        } = action.payload;\n        console.log(data);\n        return { ...state,\n          listUsers: data\n        };\n      }\n\n    case types.UPDATE_USER_FAILED:\n      {\n        return { ...state,\n          listUsers: []\n        };\n      }\n\n    case types.SET_USER_DELETE:\n      {\n        return { ...state,\n          listUsers: []\n        };\n      }\n\n    case types.SET_USER_DELETE_SUCCESS:\n      {\n        const {\n          data\n        } = action.payload;\n        console.log(data);\n        return { ...state,\n          listUsers: data\n        };\n      }\n\n    case types.SET_USER_DELETE_FAILED:\n      {\n        return { ...state,\n          listUsers: []\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;","map":{"version":3,"sources":["C:/Users/vietn/Desktop/AppEnnegry/frontend/src/reducers/auths.js"],"names":["types","toastError","toastSuccess","initialState","onButton","listUsers","userEditting","redirectToReferrer","authReducer","state","action","type","AUTH_LOGIN","AUTH_LOGIN_SUCCESS","data","payload","console","log","AUTH_LOGIN_FAILD","error","AUTH_SIGNUP","AUTH_SIGNUP_SUCCESS","jwt_token","localStorage","setItem","AUTH_SIGNUP_FAILD","ON_BUTTON_SUBMIT","OFF_BUTTON_SUBMIT","CHECK_AUTH_SUCCESS","infAuth","CHECK_AUTH_FAILD","FETCH_USER","FETCH_USER_SUCCESS","FETCH_USER_FAILED","SET_USER_EDITING","user","UPDATE_USER","UPDATE_USER_SUCCESS","UPDATE_USER_FAILED","SET_USER_DELETE","SET_USER_DELETE_SUCCESS","SET_USER_DELETE_FAILED"],"mappings":"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","sourcesContent":["import * as types from './../constants/auths';\r\nimport { toastError, toastSuccess } from '../helpers/toastHelper';\r\n\r\nconst initialState = {\r\n    onButton:true,\r\n    listUsers:[],\r\n    userEditting:null,\r\n    redirectToReferrer: false,\r\n}\r\nconst authReducer = (state=initialState,action) =>{\r\n    switch(action.type){\r\n        case types.AUTH_LOGIN:{\r\n            return{\r\n                ...state,\r\n            }\r\n        }\r\n        case types.AUTH_LOGIN_SUCCESS:{\r\n            const {data}=action.payload;\r\n            console.log(data)\r\n            toastSuccess(' Đăng nhập thành công !');\r\n            return {\r\n                ...state,\r\n                redirectToReferrer:true,\r\n            }\r\n        }\r\n        case types.AUTH_LOGIN_FAILD:{\r\n            const {error}=action.payload;\r\n            toastError(error);\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n        case types.AUTH_SIGNUP:{\r\n            return{\r\n                ...state,\r\n            }\r\n        }\r\n        case types.AUTH_SIGNUP_SUCCESS:{\r\n            const {data}= action.payload;\r\n            console.log(data.jwt_token)\r\n            localStorage.setItem(\"token:\",data.jwt_token)\r\n            toastSuccess('Thêm tài khoản thành công !');\r\n            return {\r\n                ...state,\r\n                listUsers:data\r\n\r\n            }\r\n        }\r\n        case types.AUTH_SIGNUP_FAILD:{\r\n            const {error}=action.payload;\r\n            toastError(error);\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n        case types.ON_BUTTON_SUBMIT:{\r\n            return{\r\n                ...state,\r\n                onButton:false,\r\n            }\r\n        }\r\n        case types.OFF_BUTTON_SUBMIT:{\r\n            return{\r\n                ...state,\r\n                onButton:true,\r\n            }\r\n        }\r\n        case types.CHECK_AUTH_SUCCESS:{\r\n            return{\r\n                ...state,\r\n                infAuth:'Thành công !'\r\n            }\r\n        }\r\n        case types.CHECK_AUTH_FAILD:{\r\n            return{\r\n                ...state,\r\n                infAuth:'Tài khoản đã tồn tại !'\r\n            }\r\n        }\r\n        case types.FETCH_USER:{\r\n            return {\r\n                ...state,\r\n                listUsers:[],\r\n            };\r\n       }\r\n       case types.FETCH_USER_SUCCESS: {\r\n            const {data} =action.payload;\r\n            return {\r\n                ...state,\r\n                listUsers:data,\r\n            };\r\n       }\r\n       case types.FETCH_USER_FAILED: {\r\n            return {\r\n                ...state,\r\n                listUsers: [],\r\n            };\r\n       }\r\n       case types.SET_USER_EDITING:{\r\n        const {user}=action.payload;\r\n        return{\r\n            ...state,\r\n            userEditting:user,\r\n        }\r\n    }\r\n       case types.UPDATE_USER:{\r\n        return {\r\n            ...state,\r\n            listUsers:[],\r\n        };\r\n        }\r\n        case types.UPDATE_USER_SUCCESS: {\r\n                const {data} =action.payload;\r\n                console.log(data)\r\n                return {\r\n                    ...state,\r\n                    listUsers:data,\r\n                };\r\n        }\r\n        case types.UPDATE_USER_FAILED: {\r\n                return {\r\n                    ...state,\r\n                    listUsers: [],\r\n                };\r\n        }\r\n        case types.SET_USER_DELETE:{\r\n            return {\r\n                ...state,\r\n                listUsers:[],\r\n            };\r\n            }\r\n            case types.SET_USER_DELETE_SUCCESS: {\r\n                    const {data} =action.payload;\r\n                    console.log(data)\r\n                    return {\r\n                        ...state,\r\n                        listUsers:data,\r\n                    };\r\n            }\r\n            case types.SET_USER_DELETE_FAILED: {\r\n                    return {\r\n                        ...state,\r\n                        listUsers: [],\r\n                    };\r\n            }\r\n                default:\r\n                    return state;\r\n            }\r\n};\r\nexport  default authReducer;"]},"metadata":{},"sourceType":"module"}