{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { registerPlotType } from '../../base/global';\nimport { getGeom } from '../../geoms/factory';\nimport TinyLayer from '../tiny-layer';\nimport * as EventParser from './event';\nvar GEOM_MAP = {\n  area: 'area',\n  line: 'line'\n};\n\nvar TinyAreaLayer =\n/** @class */\nfunction (_super) {\n  __extends(TinyAreaLayer, _super);\n\n  function TinyAreaLayer() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = 'tinyArea';\n    return _this;\n  }\n\n  TinyAreaLayer.prototype.geometryParser = function (dim, type) {\n    return GEOM_MAP[type];\n  };\n\n  TinyAreaLayer.prototype.addGeometry = function () {\n    this.area = getGeom('area', 'mini', {\n      plot: this\n    });\n    this.setConfig('geometry', this.area);\n    this.line = getGeom('line', 'mini', {\n      plot: this\n    });\n    this.setConfig('geometry', this.line);\n  };\n\n  TinyAreaLayer.prototype.parseEvents = function () {\n    _super.prototype.parseEvents.call(this, EventParser);\n  };\n\n  return TinyAreaLayer;\n}(TinyLayer);\n\nexport default TinyAreaLayer;\nregisterPlotType('tinyArea', TinyAreaLayer);","map":{"version":3,"sources":["../../../src/sparkline/tiny-area/layer.ts"],"names":[],"mappings":";AAAA,SAAS,gBAAT,QAAiC,mBAAjC;AAEA,SAAS,OAAT,QAAwB,qBAAxB;AACA,OAAO,SAAP,MAA0C,eAA1C;AACA,OAAO,KAAK,WAAZ,MAA6B,SAA7B;AAGA,IAAM,QAAQ,GAAG;AACf,EAAA,IAAI,EAAE,MADS;AAEf,EAAA,IAAI,EAAE;AAFS,CAAjB;;AAaA,IAAA,aAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA2C,EAAA,SAAA,CAAA,aAAA,EAAA,MAAA,CAAA;;AAA3C,WAAA,aAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;;AAGS,IAAA,KAAA,CAAA,IAAA,GAAe,UAAf;;AAqBR;;AAnBW,EAAA,aAAA,CAAA,SAAA,CAAA,cAAA,GAAV,UAAyB,GAAzB,EAAsC,IAAtC,EAAkD;AAChD,WAAO,QAAQ,CAAC,IAAD,CAAf;AACD,GAFS;;AAIA,EAAA,aAAA,CAAA,SAAA,CAAA,WAAA,GAAV,YAAA;AACE,SAAK,IAAL,GAAY,OAAO,CAAC,MAAD,EAAS,MAAT,EAAiB;AAClC,MAAA,IAAI,EAAE;AAD4B,KAAjB,CAAnB;AAGA,SAAK,SAAL,CAAe,UAAf,EAA2B,KAAK,IAAhC;AAEA,SAAK,IAAL,GAAY,OAAO,CAAC,MAAD,EAAS,MAAT,EAAiB;AAClC,MAAA,IAAI,EAAE;AAD4B,KAAjB,CAAnB;AAGA,SAAK,SAAL,CAAe,UAAf,EAA2B,KAAK,IAAhC;AACD,GAVS;;AAYA,EAAA,aAAA,CAAA,SAAA,CAAA,WAAA,GAAV,YAAA;AACE,IAAA,MAAA,CAAA,SAAA,CAAM,WAAN,CAAiB,IAAjB,CAAiB,IAAjB,EAAkB,WAAlB;AACD,GAFS;;AAGZ,SAAA,aAAA;AAAC,CAxBD,CAA2C,SAA3C,CAAA;;;AA0BA,gBAAgB,CAAC,UAAD,EAAa,aAAb,CAAhB","sourcesContent":["import { registerPlotType } from '../../base/global';\nimport { LayerConfig } from '../../base/layer';\nimport { getGeom } from '../../geoms/factory';\nimport TinyLayer, { TinyViewConfig } from '../tiny-layer';\nimport * as EventParser from './event';\nimport { IStyle } from '../../interface/config';\n\nconst GEOM_MAP = {\n  area: 'area',\n  line: 'line',\n};\n\nexport interface TinyAreaViewConfig extends TinyViewConfig {\n  areaStyle?: IStyle;\n  lineStyle?: IStyle;\n  smooth?: boolean;\n}\n\nexport interface TinyAreaLayerConfig extends TinyAreaViewConfig, LayerConfig {}\n\nexport default class TinyAreaLayer extends TinyLayer<TinyAreaLayerConfig> {\n  public line: any;\n  public area: any;\n  public type: string = 'tinyArea';\n\n  protected geometryParser(dim: string, type: string): string {\n    return GEOM_MAP[type];\n  }\n\n  protected addGeometry() {\n    this.area = getGeom('area', 'mini', {\n      plot: this,\n    });\n    this.setConfig('geometry', this.area);\n\n    this.line = getGeom('line', 'mini', {\n      plot: this,\n    });\n    this.setConfig('geometry', this.line);\n  }\n\n  protected parseEvents() {\n    super.parseEvents(EventParser);\n  }\n}\n\nregisterPlotType('tinyArea', TinyAreaLayer);\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}