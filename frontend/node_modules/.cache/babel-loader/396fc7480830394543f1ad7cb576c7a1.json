{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport EventEmitter from '@antv/event-emitter';\nimport { each } from '@antv/util';\n/**\n * 组件基类\n *\n *  创建和渲染\n *  - 1. new Component()\n *  - 2. init()\n *  - 2. render()\n *  更新\n *  - 1. update()\n *  - 2. render()\n *\n */\n\nvar BaseComponent =\n/** @class */\nfunction (_super) {\n  __extends(BaseComponent, _super);\n\n  function BaseComponent(config) {\n    var _this = _super.call(this) || this;\n\n    _this.container = config.container;\n    _this.destroyed = false;\n    _this.config = config;\n    _this.disposables = [];\n    return _this;\n  }\n\n  BaseComponent.prototype.init = function () {\n    if (!this.group) {\n      this.initGroup();\n    }\n\n    this.initConfig(this.config);\n  };\n\n  BaseComponent.prototype.getGroup = function () {\n    return this.group;\n  };\n\n  BaseComponent.prototype.getConfig = function () {\n    return this.config;\n  };\n\n  BaseComponent.prototype.getBBox = function () {\n    return this.getGroup().getBBox();\n  };\n\n  BaseComponent.prototype.clear = function () {\n    this.group.clear();\n  };\n\n  BaseComponent.prototype.render = function () {\n    this.group.clear();\n    this.renderInner(this.group);\n    this.getCanvas().draw();\n  };\n\n  BaseComponent.prototype.update = function (config) {\n    this.config = __assign(__assign({}, this.config), config);\n    this.initConfig(this.config);\n  };\n\n  BaseComponent.prototype.destroy = function () {\n    each(this.disposables, function (fn) {\n      fn();\n    });\n    this.disposables = [];\n    this.group.remove(true);\n    this.destroyed = true;\n  };\n\n  BaseComponent.prototype.initGroup = function () {\n    this.group = this.container.addGroup();\n  };\n\n  BaseComponent.prototype.getCanvas = function () {\n    return this.container.get('canvas');\n  };\n\n  BaseComponent.prototype.addDisposable = function (fn) {\n    this.disposables.push(fn);\n  }; // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  BaseComponent.prototype.initConfig = function (config) {\n    return;\n  };\n\n  return BaseComponent;\n}(EventEmitter);\n\nexport default BaseComponent;","map":{"version":3,"sources":["../../src/components/base.ts"],"names":[],"mappings":";AAAA,OAAO,YAAP,MAAyB,qBAAzB;AAEA,SAAS,IAAT,QAAqB,YAArB;AAMA;;;;;;;;;;;;;AAYA,IAAA,aAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAyG,EAAA,SAAA,CAAA,aAAA,EAAA,MAAA,CAAA;;AAOvG,WAAA,aAAA,CAAmB,MAAnB,EAA4B;AAA5B,QAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IADT;;AAEE,IAAA,KAAI,CAAC,SAAL,GAAiB,MAAM,CAAC,SAAxB;AACA,IAAA,KAAI,CAAC,SAAL,GAAiB,KAAjB;AACA,IAAA,KAAI,CAAC,MAAL,GAAc,MAAd;AACA,IAAA,KAAI,CAAC,WAAL,GAAmB,EAAnB;;AACD;;AAEM,EAAA,aAAA,CAAA,SAAA,CAAA,IAAA,GAAP,YAAA;AACE,QAAI,CAAC,KAAK,KAAV,EAAiB;AACf,WAAK,SAAL;AACD;;AACD,SAAK,UAAL,CAAgB,KAAK,MAArB;AACD,GALM;;AAOA,EAAA,aAAA,CAAA,SAAA,CAAA,QAAA,GAAP,YAAA;AACE,WAAO,KAAK,KAAZ;AACD,GAFM;;AAIA,EAAA,aAAA,CAAA,SAAA,CAAA,SAAA,GAAP,YAAA;AACE,WAAO,KAAK,MAAZ;AACD,GAFM;;AAIA,EAAA,aAAA,CAAA,SAAA,CAAA,OAAA,GAAP,YAAA;AACE,WAAO,KAAK,QAAL,GAAgB,OAAhB,EAAP;AACD,GAFM;;AAIA,EAAA,aAAA,CAAA,SAAA,CAAA,KAAA,GAAP,YAAA;AACE,SAAK,KAAL,CAAW,KAAX;AACD,GAFM;;AAIA,EAAA,aAAA,CAAA,SAAA,CAAA,MAAA,GAAP,YAAA;AACE,SAAK,KAAL,CAAW,KAAX;AACA,SAAK,WAAL,CAAiB,KAAK,KAAtB;AACA,SAAK,SAAL,GAAiB,IAAjB;AACD,GAJM;;AAMA,EAAA,aAAA,CAAA,SAAA,CAAA,MAAA,GAAP,UAAc,MAAd,EAAgC;AAC9B,SAAK,MAAL,GAAW,QAAA,CAAA,QAAA,CAAA,EAAA,EAAQ,KAAK,MAAb,CAAA,EAAwB,MAAxB,CAAX;AACA,SAAK,UAAL,CAAgB,KAAK,MAArB;AACD,GAHM;;AAKA,EAAA,aAAA,CAAA,SAAA,CAAA,OAAA,GAAP,YAAA;AACE,IAAA,IAAI,CAAC,KAAK,WAAN,EAAmB,UAAC,EAAD,EAAG;AACxB,MAAA,EAAE;AACH,KAFG,CAAJ;AAGA,SAAK,WAAL,GAAmB,EAAnB;AACA,SAAK,KAAL,CAAW,MAAX,CAAkB,IAAlB;AACA,SAAK,SAAL,GAAiB,IAAjB;AACD,GAPM;;AASG,EAAA,aAAA,CAAA,SAAA,CAAA,SAAA,GAAV,YAAA;AACE,SAAK,KAAL,GAAa,KAAK,SAAL,CAAe,QAAf,EAAb;AACD,GAFS;;AAIA,EAAA,aAAA,CAAA,SAAA,CAAA,SAAA,GAAV,YAAA;AACE,WAAO,KAAK,SAAL,CAAe,GAAf,CAAmB,QAAnB,CAAP;AACD,GAFS;;AAIA,EAAA,aAAA,CAAA,SAAA,CAAA,aAAA,GAAV,UAAwB,EAAxB,EAAsC;AACpC,SAAK,WAAL,CAAiB,IAAjB,CAAsB,EAAtB;AACD,GAFS,CAlEZ,CAsEE;;;AACU,EAAA,aAAA,CAAA,SAAA,CAAA,UAAA,GAAV,UAAqB,MAArB,EAA8B;AAC5B;AACD,GAFS;;AAKZ,SAAA,aAAA;AAAC,CA5ED,CAAyG,YAAzG,CAAA","sourcesContent":["import EventEmitter from '@antv/event-emitter';\nimport { Canvas, IGroup, BBox } from '../dependents';\nimport { each } from '@antv/util';\n\nexport interface BaseComponentConfig {\n  container: IGroup;\n}\n\n/**\n * 组件基类\n *\n *  创建和渲染\n *  - 1. new Component()\n *  - 2. init()\n *  - 2. render()\n *  更新\n *  - 1. update()\n *  - 2. render()\n *\n */\nexport default abstract class BaseComponent<T extends BaseComponentConfig = BaseComponentConfig> extends EventEmitter {\n  protected container: IGroup;\n  protected group: IGroup;\n  protected destroyed: boolean;\n  protected config: T;\n  private disposables: (() => void)[];\n\n  public constructor(config: T) {\n    super();\n    this.container = config.container;\n    this.destroyed = false;\n    this.config = config;\n    this.disposables = [];\n  }\n\n  public init() {\n    if (!this.group) {\n      this.initGroup();\n    }\n    this.initConfig(this.config);\n  }\n\n  public getGroup(): IGroup {\n    return this.group;\n  }\n\n  public getConfig(): T {\n    return this.config;\n  }\n\n  public getBBox(): BBox {\n    return this.getGroup().getBBox();\n  }\n\n  public clear() {\n    this.group.clear();\n  }\n\n  public render(): void {\n    this.group.clear();\n    this.renderInner(this.group);\n    this.getCanvas().draw();\n  }\n\n  public update(config: Partial<T>): void {\n    this.config = { ...this.config, ...config };\n    this.initConfig(this.config);\n  }\n\n  public destroy(): void {\n    each(this.disposables, (fn) => {\n      fn();\n    });\n    this.disposables = [];\n    this.group.remove(true);\n    this.destroyed = true;\n  }\n\n  protected initGroup(): void {\n    this.group = this.container.addGroup();\n  }\n\n  protected getCanvas(): Canvas {\n    return this.container.get('canvas');\n  }\n\n  protected addDisposable(fn: () => void) {\n    this.disposables.push(fn);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  protected initConfig(config: T): void {\n    return;\n  }\n\n  protected abstract renderInner(group: IGroup): void;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}