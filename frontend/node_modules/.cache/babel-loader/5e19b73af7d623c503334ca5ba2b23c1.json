{"ast":null,"code":"// import * as React from \"react\";\n// import { Line } from '@ant-design/charts';\n// class  ChartContainer extends React.Component{\n//     render (){\n//         const data = [\n//             { year: '1991', value1: 3 },\n//             { year: '1992', value: 4 },\n//             { year: '1993', value: 3.5 },\n//             { year: '1994', value: 5 },\n//             { year: '1995', value: 4.9 },\n//             { year: '1996', value: 6 },\n//             { year: '1997', value: 7 },\n//             { year: '1998', value: 9 },\n//             { year: '1999', value: 13 },\n//           ];\n//           const config = {\n//             data,\n//             height: 200,\n//             xField: 'year',\n//             yField: 'value',\n//             point: {\n//               size: 5,\n//               shape: 'diamond',\n//             },\n//             label: {\n//               style: {\n//                 fill: '#aaa',\n//               },\n//             },\n//           };\n//           return <Line {...config} />;\n//     }\n// }\n// import React from 'react';\n// import { Liquid } from '@ant-design/charts';\n// class  DemoLiquid extends React.Component{\n//   render (){\n//   const config = {\n//     percent: 100000,\n//     statistic: {\n//       content: {\n//         style: {\n//           fontSize:50,\n//           fill: 'black',\n//         },\n//       },\n//     },\n//   };\n//   return <Liquid {...config} />;\n//  }\n// };\n// export default DemoLiquid;\n//  //export default  ChartContainer;\n// import React, { useState, useEffect } from 'react';\n// import { Line } from '@ant-design/charts';\n// class  DemoGeneral extends React.Component{\n//   render (){\n//   const [data, setData] = useState([]);\n//   const [annotations, setAnnotations] = useState([]);\n//   let ref;\n//   useEffect(() => {\n//     asyncFetch();\n//   }, []);\n//   const asyncFetch = () => {\n//     fetch('https://gw.alipayobjects.com/os/bmw-prod/89729b32-1592-44ae-ba96-1e296638f5f7.json')\n//       .then((response) => response.json())\n//       .then((json) => setData(json))\n//       .catch((error) => {\n//         console.log('fetch data failed', error);\n//       });\n//   };\n//   const config = {\n//     data,\n//     padding: 'auto',\n//     xField: 'date',\n//     yField: 'value',\n//     meta: {\n//       date: {\n//         formatter: (v) => (v.split(' ') ? v.split(' ')[1] : ''),\n//       },\n//       value: {\n//         min: 0,\n//         max: Math.pow(10, 7),\n//         tickCount: 10,\n//         formatter: (v) => `${v / Math.pow(10, 6)}M`,\n//       },\n//     },\n//     lineStyle: {\n//       lineCap: 'round',\n//     },\n//     interactions: [{ type: 'brush' }],\n//     annotations,\n//   };\n//   useEffect(() => {\n//     if (ref && data.length) {\n//       const yScale = ref.chart.getScaleByField('value');\n//       const coordinate = ref.chart.getCoordinate();\n//       const getDimYPosition = (value) => coordinate.convertDim(yScale.scale(value), 'y');\n//       setAnnotations([\n//         {\n//           type: 'line',\n//           start: { date: 'January 1991', value: 2549000 },\n//           end: ['August 1990', 3850000],\n//           text: {\n//             content: 'The UK recession of 1991',\n//             rotate: 0,\n//             autoRotate: false,\n//             offsetY: getDimYPosition(3850000) - getDimYPosition(2549000) - 10,\n//             style: {\n//               textAlign: 'center',\n//               textBaseline: 'bottom',\n//             },\n//           },\n//           style: {\n//             stroke: '#000',\n//             lineDash: [2, 4],\n//           },\n//         },\n//       ]);\n//     }\n//   }, [data]);\n//   return <Line {...config} chartRef={(chartRef) => (ref = chartRef)} />;\n// }\n// };\n// export default DemoGeneral;","map":{"version":3,"sources":["C:/Users/vietn/Desktop/AppEnegry2020/frontend/src/containers/ConfigSystem/index.js"],"names":[],"mappingssourcesContent":["// import * as React from \"react\";\r\n// import { Line } from '@ant-design/charts';\r\n\r\n// class  ChartContainer extends React.Component{\r\n//     render (){\r\n\r\n//         const data = [\r\n//             { year: '1991', value1: 3 },\r\n//             { year: '1992', value: 4 },\r\n//             { year: '1993', value: 3.5 },\r\n//             { year: '1994', value: 5 },\r\n//             { year: '1995', value: 4.9 },\r\n//             { year: '1996', value: 6 },\r\n//             { year: '1997', value: 7 },\r\n//             { year: '1998', value: 9 },\r\n//             { year: '1999', value: 13 },\r\n//           ];\r\n//           const config = {\r\n//             data,\r\n//             height: 200,\r\n//             xField: 'year',\r\n//             yField: 'value',\r\n//             point: {\r\n//               size: 5,\r\n//               shape: 'diamond',\r\n//             },\r\n//             label: {\r\n//               style: {\r\n//                 fill: '#aaa',\r\n//               },\r\n//             },\r\n//           };\r\n//           return <Line {...config} />;\r\n//     }\r\n// }\r\n\r\n// import React from 'react';\r\n// import { Liquid } from '@ant-design/charts';\r\n// class  DemoLiquid extends React.Component{\r\n//   render (){\r\n//   const config = {\r\n//     percent: 100000,\r\n//     statistic: {\r\n//       content: {\r\n//         style: {\r\n//           fontSize:50,\r\n//           fill: 'black',\r\n//         },\r\n//       },\r\n//     },\r\n//   };\r\n//   return <Liquid {...config} />;\r\n//  }\r\n// };\r\n// export default DemoLiquid;\r\n//  //export default  ChartContainer;\r\n// import React, { useState, useEffect } from 'react';\r\n// import { Line } from '@ant-design/charts';\r\n// class  DemoGeneral extends React.Component{\r\n//   render (){\r\n//   const [data, setData] = useState([]);\r\n//   const [annotations, setAnnotations] = useState([]);\r\n//   let ref;\r\n//   useEffect(() => {\r\n//     asyncFetch();\r\n//   }, []);\r\n//   const asyncFetch = () => {\r\n//     fetch('https://gw.alipayobjects.com/os/bmw-prod/89729b32-1592-44ae-ba96-1e296638f5f7.json')\r\n//       .then((response) => response.json())\r\n//       .then((json) => setData(json))\r\n//       .catch((error) => {\r\n//         console.log('fetch data failed', error);\r\n//       });\r\n//   };\r\n//   const config = {\r\n//     data,\r\n//     padding: 'auto',\r\n//     xField: 'date',\r\n//     yField: 'value',\r\n//     meta: {\r\n//       date: {\r\n//         formatter: (v) => (v.split(' ') ? v.split(' ')[1] : ''),\r\n//       },\r\n//       value: {\r\n//         min: 0,\r\n//         max: Math.pow(10, 7),\r\n//         tickCount: 10,\r\n//         formatter: (v) => `${v / Math.pow(10, 6)}M`,\r\n//       },\r\n//     },\r\n//     lineStyle: {\r\n//       lineCap: 'round',\r\n//     },\r\n//     interactions: [{ type: 'brush' }],\r\n//     annotations,\r\n//   };\r\n//   useEffect(() => {\r\n//     if (ref && data.length) {\r\n//       const yScale = ref.chart.getScaleByField('value');\r\n//       const coordinate = ref.chart.getCoordinate();\r\n//       const getDimYPosition = (value) => coordinate.convertDim(yScale.scale(value), 'y');\r\n//       setAnnotations([\r\n//         {\r\n//           type: 'line',\r\n//           start: { date: 'January 1991', value: 2549000 },\r\n//           end: ['August 1990', 3850000],\r\n//           text: {\r\n//             content: 'The UK recession of 1991',\r\n//             rotate: 0,\r\n//             autoRotate: false,\r\n//             offsetY: getDimYPosition(3850000) - getDimYPosition(2549000) - 10,\r\n//             style: {\r\n//               textAlign: 'center',\r\n//               textBaseline: 'bottom',\r\n//             },\r\n//           },\r\n//           style: {\r\n//             stroke: '#000',\r\n//             lineDash: [2, 4],\r\n//           },\r\n//         },\r\n//       ]);\r\n//     }\r\n//   }, [data]);\r\n//   return <Line {...config} chartRef={(chartRef) => (ref = chartRef)} />;\r\n// }\r\n// };\r\n// export default DemoGeneral;"]},"metadata":{},"sourceType":"module"}