{"ast":null,"code":"import { isNil, isNumber, filter } from '@antv/util';\nimport { timeIntervals } from '../interface/config';\n\nfunction adjustTimeTickInterval(interval) {\n  var intervals = timeIntervals;\n  var intervalArr = interval.split(' ');\n  var basicInterval = intervals[intervalArr[1]];\n  var intervalCount = parseInt(intervalArr[0], 10);\n  return [basicInterval.format, intervalCount * basicInterval.value];\n}\n\nexport function extractScale(desScale, axisConfig) {\n  if (!axisConfig) {\n    return desScale;\n  }\n\n  if (Object.prototype.hasOwnProperty.call(axisConfig, 'tickCount')) {\n    desScale.tickCount = axisConfig.tickCount;\n  }\n\n  if (Object.prototype.hasOwnProperty.call(axisConfig, 'type')) {\n    // fixme: dateTime plot层处理\n    if (axisConfig.type !== 'dateTime') {\n      desScale.type = axisConfig.type;\n    }\n  }\n\n  if (Object.prototype.hasOwnProperty.call(axisConfig, 'tickInterval')) {\n    if (axisConfig.type === 'time') {\n      desScale.tickInterval = adjustTimeTickInterval(axisConfig.tickInterval);\n    } else {\n      desScale.tickInterval = axisConfig.tickInterval;\n    }\n  }\n\n  if (axisConfig.type === 'time' && axisConfig.mask) {\n    desScale.mask = axisConfig.mask;\n  }\n\n  if (Object.prototype.hasOwnProperty.call(axisConfig, 'min')) {\n    desScale.min = axisConfig.min;\n  }\n\n  if (Object.prototype.hasOwnProperty.call(axisConfig, 'max')) {\n    desScale.max = axisConfig.max;\n  }\n\n  if (Object.prototype.hasOwnProperty.call(axisConfig, 'minLimit')) {\n    desScale.minLimit = axisConfig.minLimit;\n  }\n\n  if (Object.prototype.hasOwnProperty.call(axisConfig, 'maxLimit')) {\n    desScale.maxLimit = axisConfig.maxLimit;\n  }\n\n  if (Object.prototype.hasOwnProperty.call(axisConfig, 'nice')) {\n    desScale.nice = axisConfig.nice;\n  }\n\n  if (Object.prototype.hasOwnProperty.call(axisConfig, 'formatter')) {\n    desScale.formatter = axisConfig.formatter;\n  }\n\n  if (Object.prototype.hasOwnProperty.call(axisConfig, 'exponent')) {\n    desScale.exponent = axisConfig.exponent;\n  }\n\n  if (Object.prototype.hasOwnProperty.call(axisConfig, 'base')) {\n    desScale.base = axisConfig.base;\n  }\n\n  if (axisConfig.tickMethod) {\n    desScale.tickMethod = axisConfig.tickMethod;\n  }\n}\nexport function trySetScaleMinToZero(desScale, data) {\n  var validData = filter(data, function (v) {\n    return isNumber(v);\n  });\n  var min = Math.min.apply(Math, validData);\n  var max = Math.max.apply(Math, validData);\n\n  if (min > 0) {\n    if (isNil(desScale.min)) {\n      desScale.min = 0;\n    }\n  } else if (max < 0) {\n    if (isNil(desScale.max)) {\n      desScale.max = 0;\n    }\n  }\n}","map":{"version":3,"sources":["../../src/util/scale.ts"],"names":[],"mappings":"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","sourcesContent":["import { isNil, isNumber, filter } from '@antv/util';\nimport { timeIntervals } from '../interface/config';\nimport { ScaleConfig } from '@antv/scale';\n\nfunction adjustTimeTickInterval(interval: string) {\n  const intervals = timeIntervals;\n  const intervalArr = interval.split(' ');\n  const basicInterval = intervals[intervalArr[1]];\n  const intervalCount = parseInt(intervalArr[0], 10);\n  return [basicInterval.format, intervalCount * basicInterval.value];\n}\n\nexport function extractScale(desScale, axisConfig) {\n  if (!axisConfig) {\n    return desScale;\n  }\n\n  if (Object.prototype.hasOwnProperty.call(axisConfig, 'tickCount')) {\n    desScale.tickCount = axisConfig.tickCount;\n  }\n  if (Object.prototype.hasOwnProperty.call(axisConfig, 'type')) {\n    // fixme: dateTime plot层处理\n    if (axisConfig.type !== 'dateTime') {\n      desScale.type = axisConfig.type;\n    }\n  }\n  if (Object.prototype.hasOwnProperty.call(axisConfig, 'tickInterval')) {\n    if (axisConfig.type === 'time') {\n      desScale.tickInterval = adjustTimeTickInterval(axisConfig.tickInterval);\n    } else {\n      desScale.tickInterval = axisConfig.tickInterval;\n    }\n  }\n\n  if (axisConfig.type === 'time' && axisConfig.mask) {\n    desScale.mask = axisConfig.mask;\n  }\n\n  if (Object.prototype.hasOwnProperty.call(axisConfig, 'min')) {\n    desScale.min = axisConfig.min;\n  }\n  if (Object.prototype.hasOwnProperty.call(axisConfig, 'max')) {\n    desScale.max = axisConfig.max;\n  }\n  if (Object.prototype.hasOwnProperty.call(axisConfig, 'minLimit')) {\n    desScale.minLimit = axisConfig.minLimit;\n  }\n  if (Object.prototype.hasOwnProperty.call(axisConfig, 'maxLimit')) {\n    desScale.maxLimit = axisConfig.maxLimit;\n  }\n\n  if (Object.prototype.hasOwnProperty.call(axisConfig, 'nice')) {\n    desScale.nice = axisConfig.nice;\n  }\n  if (Object.prototype.hasOwnProperty.call(axisConfig, 'formatter')) {\n    desScale.formatter = axisConfig.formatter;\n  }\n  if (Object.prototype.hasOwnProperty.call(axisConfig, 'exponent')) {\n    desScale.exponent = axisConfig.exponent;\n  }\n  if (Object.prototype.hasOwnProperty.call(axisConfig, 'base')) {\n    desScale.base = axisConfig.base;\n  }\n  if (axisConfig.tickMethod) {\n    desScale.tickMethod = axisConfig.tickMethod;\n  }\n}\n\nexport function trySetScaleMinToZero(desScale: ScaleConfig, data: (number | number[] | string | undefined | null)[]) {\n  const validData: number[] = filter(data, (v) => isNumber(v)) as number[];\n  const min = Math.min(...validData);\n  const max = Math.max(...validData);\n\n  if (min > 0) {\n    if (isNil(desScale.min)) {\n      desScale.min = 0;\n    }\n  } else if (max < 0) {\n    if (isNil(desScale.max)) {\n      desScale.max = 0;\n    }\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}