{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { isArray, isNil, clone } from '@antv/util';\nimport Global from '../global';\nimport Shape from './shape';\nimport { shapeBase } from './shapeBase';\nvar singleCombo = {\n  itemType: 'combo',\n  // 单个图形的类型\n  shapeType: 'single-combo',\n\n  /**\n   * Combo 标题文本相对图形的位置，默认为 top\n   * 位置包括： top, bottom, left, right, center\n   * @type {String}\n   */\n  labelPosition: 'top',\n\n  /**\n   * 标题文本相对偏移，当 labelPosition 不为 center 时有效\n   * @type {Number}\n   */\n  refX: Global.comboLabel.refX,\n  refY: Global.comboLabel.refY,\n\n  /**\n   * 获取 Combo 宽高\n   * @internal 返回 Combo 的大小，以 [width, height] 的方式维护\n   * @param  {Object} cfg Combo 的配置项\n   * @return {Array} 宽高\n   */\n  getSize: function getSize(cfg) {\n    var size = clone(cfg.size || this.options.size || Global.defaultCombo.size); // size 是数组，若长度为 1，则补长度为 2\n\n    if (isArray(size) && size.length === 1) {\n      size = [size[0], size[0]];\n    } // size 为数字，则转换为数组\n\n\n    if (!isArray(size)) {\n      size = [size, size];\n    }\n\n    return size;\n  },\n  // 私有方法，不希望扩展的 Combo 复写这个方法\n  getLabelStyleByPosition: function getLabelStyleByPosition(cfg, labelCfg) {\n    var labelPosition = labelCfg.position || this.labelPosition;\n    var cfgStyle = cfg.style;\n    var padding = cfg.padding || this.options.padding;\n    if (isArray(padding)) padding = padding[0];\n    var refX = labelCfg.refX,\n        refY = labelCfg.refY; // 考虑 refX 和 refY = 0 的场景，不用用 labelCfg.refX || Global.nodeLabel.refX\n\n    if (isNil(refX)) {\n      refX = this.refX; // 不居中时的偏移量\n    }\n\n    if (isNil(refY)) {\n      refY = this.refY; // 不居中时的偏移量\n    }\n\n    var size = this.getSize(cfg);\n    var r = Math.max(cfgStyle.r, size[0] / 2) || size[0] / 2;\n    var dis = r + padding;\n    var style;\n\n    switch (labelPosition) {\n      case 'top':\n        style = {\n          x: 0,\n          y: -dis - refY,\n          textBaseline: 'bottom',\n          textAlign: 'center'\n        };\n        break;\n\n      case 'bottom':\n        style = {\n          x: 0,\n          y: dis + refY,\n          textBaseline: 'bottom',\n          textAlign: 'center'\n        };\n        break;\n\n      case 'left':\n        style = {\n          x: -dis + refX,\n          y: 0,\n          textAlign: 'left'\n        };\n        break;\n\n      case 'center':\n        style = {\n          x: 0,\n          y: 0,\n          text: cfg.label,\n          textAlign: 'center'\n        };\n        break;\n\n      default:\n        style = {\n          x: dis + refX,\n          y: 0,\n          textAlign: 'right'\n        };\n        break;\n    }\n\n    style.text = cfg.label;\n    return style;\n  },\n  drawShape: function drawShape(cfg, group) {\n    var shapeType = this.shapeType; // || this.type，都已经加了 shapeType\n\n    var style = this.getShapeStyle(cfg);\n    var shape = group.addShape(shapeType, {\n      attrs: style,\n      draggable: true,\n      name: 'combo-shape'\n    });\n    return shape;\n  },\n  updateShape: function updateShape(cfg, item, keyShapeStyle) {\n    var keyShape = item.get('keyShape');\n    var animate = cfg.animate === undefined ? this.options.animate : cfg.animate;\n\n    if (animate && keyShape.animate) {\n      keyShape.animate(keyShapeStyle, {\n        duration: 200,\n        easing: 'easeLinear'\n      });\n    } else {\n      keyShape.attr(__assign({}, keyShapeStyle));\n    }\n\n    this.updateLabel(cfg, item); // special for some types of nodes\n  }\n};\n\nvar singleComboDef = __assign(__assign({}, shapeBase), singleCombo);\n\nShape.registerCombo('single-combo', singleComboDef);","map":{"version":3,"sources":["C:/Users/vietn/Desktop/AppEnegry2020/frontend/node_modules/@antv/g6/es/shape/combo.js"],"names":["__assign","isArray","isNil","clone","Global","Shape","shapeBase","singleCombo","itemType","shapeType","labelPosition","refX","comboLabel","refY","getSize","cfg","size","options","defaultCombo","length","getLabelStyleByPosition","labelCfg","position","cfgStyle","style","padding","r","Math","max","dis","x","y","textBaseline","textAlign","text","label","drawShape","group","getShapeStyle","shape","addShape","attrs","draggable","name","updateShape","item","keyShapeStyle","keyShape","get","animate","undefined","duration","easing","attr","updateLabel","singleComboDef","registerCombo"],"mappings":"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","sourcesContent":["import { __assign } from \"tslib\";\nimport { isArray, isNil, clone } from '@antv/util';\nimport Global from '../global';\nimport Shape from './shape';\nimport { shapeBase } from './shapeBase';\nvar singleCombo = {\n  itemType: 'combo',\n  // 单个图形的类型\n  shapeType: 'single-combo',\n\n  /**\n   * Combo 标题文本相对图形的位置，默认为 top\n   * 位置包括： top, bottom, left, right, center\n   * @type {String}\n   */\n  labelPosition: 'top',\n\n  /**\n   * 标题文本相对偏移，当 labelPosition 不为 center 时有效\n   * @type {Number}\n   */\n  refX: Global.comboLabel.refX,\n  refY: Global.comboLabel.refY,\n\n  /**\n   * 获取 Combo 宽高\n   * @internal 返回 Combo 的大小，以 [width, height] 的方式维护\n   * @param  {Object} cfg Combo 的配置项\n   * @return {Array} 宽高\n   */\n  getSize: function getSize(cfg) {\n    var size = clone(cfg.size || this.options.size || Global.defaultCombo.size); // size 是数组，若长度为 1，则补长度为 2\n\n    if (isArray(size) && size.length === 1) {\n      size = [size[0], size[0]];\n    } // size 为数字，则转换为数组\n\n\n    if (!isArray(size)) {\n      size = [size, size];\n    }\n\n    return size;\n  },\n  // 私有方法，不希望扩展的 Combo 复写这个方法\n  getLabelStyleByPosition: function getLabelStyleByPosition(cfg, labelCfg) {\n    var labelPosition = labelCfg.position || this.labelPosition;\n    var cfgStyle = cfg.style;\n    var padding = cfg.padding || this.options.padding;\n    if (isArray(padding)) padding = padding[0];\n    var refX = labelCfg.refX,\n        refY = labelCfg.refY; // 考虑 refX 和 refY = 0 的场景，不用用 labelCfg.refX || Global.nodeLabel.refX\n\n    if (isNil(refX)) {\n      refX = this.refX; // 不居中时的偏移量\n    }\n\n    if (isNil(refY)) {\n      refY = this.refY; // 不居中时的偏移量\n    }\n\n    var size = this.getSize(cfg);\n    var r = Math.max(cfgStyle.r, size[0] / 2) || size[0] / 2;\n    var dis = r + padding;\n    var style;\n\n    switch (labelPosition) {\n      case 'top':\n        style = {\n          x: 0,\n          y: -dis - refY,\n          textBaseline: 'bottom',\n          textAlign: 'center'\n        };\n        break;\n\n      case 'bottom':\n        style = {\n          x: 0,\n          y: dis + refY,\n          textBaseline: 'bottom',\n          textAlign: 'center'\n        };\n        break;\n\n      case 'left':\n        style = {\n          x: -dis + refX,\n          y: 0,\n          textAlign: 'left'\n        };\n        break;\n\n      case 'center':\n        style = {\n          x: 0,\n          y: 0,\n          text: cfg.label,\n          textAlign: 'center'\n        };\n        break;\n\n      default:\n        style = {\n          x: dis + refX,\n          y: 0,\n          textAlign: 'right'\n        };\n        break;\n    }\n\n    style.text = cfg.label;\n    return style;\n  },\n  drawShape: function drawShape(cfg, group) {\n    var shapeType = this.shapeType; // || this.type，都已经加了 shapeType\n\n    var style = this.getShapeStyle(cfg);\n    var shape = group.addShape(shapeType, {\n      attrs: style,\n      draggable: true,\n      name: 'combo-shape'\n    });\n    return shape;\n  },\n  updateShape: function updateShape(cfg, item, keyShapeStyle) {\n    var keyShape = item.get('keyShape');\n    var animate = cfg.animate === undefined ? this.options.animate : cfg.animate;\n\n    if (animate && keyShape.animate) {\n      keyShape.animate(keyShapeStyle, {\n        duration: 200,\n        easing: 'easeLinear'\n      });\n    } else {\n      keyShape.attr(__assign({}, keyShapeStyle));\n    }\n\n    this.updateLabel(cfg, item); // special for some types of nodes\n  }\n};\n\nvar singleComboDef = __assign(__assign({}, shapeBase), singleCombo);\n\nShape.registerCombo('single-combo', singleComboDef);"]},"metadata":{},"sourceType":"module"}