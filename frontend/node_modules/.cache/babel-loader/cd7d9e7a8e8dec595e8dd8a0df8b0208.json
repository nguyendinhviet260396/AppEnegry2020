{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vietn\\\\Desktop\\\\AppEnegry2020\\\\frontend\\\\src\\\\containers\\\\LoginPage\\\\index.js\";\nimport React, { Component } from 'react';\nimport { withStyles, Card, CardContent, Typography, Button } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport { Grid } from '@material-ui/core';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { compose, bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport enegry from './../../assets/images/enegry.jpg';\nimport renderTextField from './../../components/FormHelper/TextField/index';\nimport validate from './../../commons/Validation/index';\nimport * as authActions from './../../actions/auths';\nimport styles from './styles';\n\nclass LoginPage extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleCloseForm = () => {\n      const {\n        authActionCreators\n      } = this.props;\n      const {\n        checkAuthFaild\n      } = authActionCreators;\n      checkAuthFaild();\n      const {\n        history\n      } = this.props;\n      history.push('/');\n    };\n\n    this.handleSubmitForm = data => {\n      const {\n        email,\n        password\n      } = data;\n      const {\n        authActionCreators\n      } = this.props;\n      const {\n        authLogin\n      } = authActionCreators;\n      authLogin(email, password);\n    };\n  }\n\n  render() {\n    const {\n      classes,\n      handleSubmit,\n      invalid,\n      infAuth,\n      redirectToReferrer,\n      submitting\n    } = this.props;\n\n    if (redirectToReferrer === true || localStorage.getItem(\"token:\") !== null) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: '/admin',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 20\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 0,\n      className: classes.background,\n      style: {\n        backgroundImage: `url(${enegry})`,\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n        backgroundRepeat: 'no-repeat'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.signup,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: classes.card,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      className: classes.cardContent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit(this.handleSubmitForm),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.label,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"caption\",\n      className: classes.typography,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 37\n      }\n    }, \"\\u0110\\u0103ng nh\\u1EADp\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 50\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontSize: \"10px\",\n        color: \"#FF0000\",\n        fontStyle: 'italic'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 37\n      }\n    }, infAuth)), /*#__PURE__*/React.createElement(Field, {\n      id: \"email\",\n      label: \"Email\",\n      name: \"email\",\n      className: classes.textField,\n      inputProps: {\n        style: {\n          fontSize: 12\n        }\n      } // font size of input text\n      ,\n      InputLabelProps: {\n        style: {\n          fontSize: 12\n        }\n      } // font size of input label\n      ,\n      type: \"text\",\n      fullWidth: true,\n      margin: \"normal\",\n      component: renderTextField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      id: \"password\",\n      label: \"Password\",\n      type: \"password\",\n      name: \"password\",\n      className: classes.textField,\n      inputProps: {\n        style: {\n          fontSize: 12\n        }\n      } // font size of input text\n      ,\n      InputLabelProps: {\n        style: {\n          fontSize: 12\n        }\n      } // font size of input label\n      ,\n      fullWidth: true,\n      margin: \"normal\",\n      component: renderTextField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 34\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      className: classes.button,\n      variant: \"contained\",\n      type: \"submit\",\n      style: {\n        backgroundColor: `${invalid === false ? '#00CC00' : '#9C9C9C'}`,\n        fontSize: '0.7rem',\n        color: '#fff'\n      },\n      size: \"small\",\n      disabled: submitting || invalid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 33\n      }\n    }, \"\\u0111\\u0103ng nh\\u1EADp\"), /*#__PURE__*/React.createElement(Button, {\n      className: classes.button,\n      variant: \"contained\",\n      style: {\n        backgroundColor: '#ff0000',\n        fontSize: '0.7rem',\n        color: '#fff'\n      },\n      type: \"submit\",\n      size: \"small\",\n      onClick: this.handleCloseForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 33\n      }\n    }, \"h\\u1EE7y b\\u1ECF\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"small\",\n      style: {\n        fontSize: '0.7rem',\n        color: '#111'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 37\n      }\n    }, \"h\\u01B0\\u1EDBng d\\u1EABn \\u0111\\u0103ng nh\\u1EADp !\")))))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: '#fff',\n        fontSize: '1vw',\n        fontWeight: '500',\n        paddingBottom: '2%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }, \"sales@emsvietnam.com.vn @ \\u0110\\u1ECBa Ch\\u1EC9: Ph\\xF2ng 12A09, T\\xF2a nh\\xE0 17T7, Ho\\xE0ng \\u0110\\u1EA1o Th\\xFAy, Qu\\u1EADn Thanh Xu\\xE2n, H\\xE0 N\\u1ED9i\"));\n  }\n\n}\n\nLoginPage.propTypes = {\n  classes: PropTypes.object,\n  handleSubmit: PropTypes.func,\n  invalid: PropTypes.bool,\n  submitting: PropTypes.bool,\n  redirectToReferrer: PropTypes.bool,\n  authActionCreators: PropTypes.shape({\n    onButtonSubmit: PropTypes.func,\n    authLogin: PropTypes.func,\n    offButtonSubmit: PropTypes.func\n  })\n};\nconst FORM_USER_LOGIN = \"TASK_USER_LOGIN\";\nconst withReduxForm = reduxForm({\n  form: FORM_USER_LOGIN,\n  validate: validate\n});\n\nconst mapStateToProps = state => {\n  return {\n    redirectToReferrer: state.auth.redirectToReferrer,\n    infAuth: state.auth.infAuth\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    authActionCreators: bindActionCreators(authActions, dispatch)\n  };\n};\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\nexport default compose(withStyles(styles), withConnect, withReduxForm)(LoginPage);","map":{"version":3,"sources":["C:/Users/vietn/Desktop/AppEnegry2020/frontend/src/containers/LoginPage/index.js"],"names":["React","Component","withStyles","Card","CardContent","Typography","Button","Link","Grid","Redirect","PropTypes","compose","bindActionCreators","connect","Field","reduxForm","enegry","renderTextField","validate","authActions","styles","LoginPage","handleCloseForm","authActionCreators","props","checkAuthFaild","history","push","handleSubmitForm","data","email","password","authLogin","render","classes","handleSubmit","invalid","infAuth","redirectToReferrer","submitting","localStorage","getItem","background","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","signup","card","cardContent","label","typography","fontSize","color","fontStyle","textField","style","button","backgroundColor","fontWeight","paddingBottom","propTypes","object","func","bool","shape","onButtonSubmit","offButtonSubmit","FORM_USER_LOGIN","withReduxForm","form","mapStateToProps","state","auth","mapDispatchToProps","dispatch","withConnect"],"mappings":"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","sourcesContent":["\r\nimport React, { Component } from 'react';\r\nimport { withStyles, Card, CardContent, Typography, Button} from '@material-ui/core';\r\nimport {Link} from 'react-router-dom';\r\nimport { Grid } from '@material-ui/core';\r\nimport {Redirect} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {compose,bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport enegry from './../../assets/images/enegry.jpg';\r\nimport renderTextField from './../../components/FormHelper/TextField/index';\r\nimport validate from './../../commons/Validation/index';\r\nimport * as authActions from './../../actions/auths';\r\nimport styles from './styles';\r\n\r\nclass LoginPage extends Component {\r\n    handleCloseForm=()=>{\r\n        const {authActionCreators}=this.props;\r\n        const {checkAuthFaild}=authActionCreators;\r\n        checkAuthFaild();\r\n        const {history}= this.props;\r\n        history.push('/');\r\n    }\r\n\r\n    handleSubmitForm=(data)=>{\r\n        const {email,password}= data;\r\n        const {authActionCreators}=this.props;\r\n        const {authLogin}=authActionCreators;\r\n        authLogin(email,password);\r\n    }\r\n    render() {\r\n        const {classes,\r\n            handleSubmit,\r\n            invalid,\r\n            infAuth,\r\n            redirectToReferrer,\r\n            submitting}=this.props;\r\n        if (redirectToReferrer === true || localStorage.getItem(\"token:\") !== null ) {\r\n            return <Redirect to={'/admin'}/>\r\n        }\r\n        return (\r\n            <Grid container spacing={0} className={classes.background}\r\n            style={{\r\n            backgroundImage: `url(${enegry})`,\r\n            backgroundSize: 'cover',\r\n            backgroundPosition: 'center',\r\n            backgroundRepeat: 'no-repeat',}}>\r\n                <div className={classes.signup}>\r\n                    <Card className={classes.card}>\r\n                        <CardContent className={classes.cardContent}>\r\n                            <form onSubmit={handleSubmit(this.handleSubmitForm)}>\r\n                                <div className={classes.label}>\r\n                                    <Typography variant=\"caption\" className={classes.typography}>\r\n                                         Đăng nhập\r\n                                    </Typography><br/>\r\n                                    <div style={{fontSize:\"10px\", color:\"#FF0000\", fontStyle: 'italic'}}>{infAuth}</div>\r\n                                </div>\r\n                                <Field\r\n                                id=\"email\"\r\n                                label=\"Email\"\r\n                                name=\"email\"\r\n                                className={classes.textField}\r\n                                inputProps={{style: {fontSize: 12}}} // font size of input text\r\n                                InputLabelProps={{style: {fontSize: 12}}} // font size of input label\r\n                                type=\"text\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                component={renderTextField}\r\n                                />\r\n                                 <Field\r\n                                id=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                className={classes.textField}\r\n                                inputProps={{style: {fontSize: 12}}} // font size of input text\r\n                                InputLabelProps={{style: {fontSize: 12}}} // font size of input label\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                component={renderTextField}\r\n                                />\r\n                                <Button\r\n                                className={classes.button}\r\n                                variant=\"contained\"\r\n                                type=\"submit\"\r\n                                style={{backgroundColor:`${invalid === false?'#00CC00':'#9C9C9C'}`,fontSize:'0.7rem',color:'#fff'}}\r\n                                size='small'\r\n                                disabled={submitting || invalid }\r\n                                >\r\n                                    đăng nhập\r\n                                </Button>\r\n                                <Button\r\n                                className={classes.button}\r\n                                variant=\"contained\"\r\n                                style={{backgroundColor:'#ff0000',fontSize:'0.7rem',color:'#fff'}}\r\n                                type=\"submit\"\r\n                                size='small'\r\n                                onClick={this.handleCloseForm}\r\n                                >\r\n                                     hủy bỏ \r\n                                </Button>\r\n                            </form>\r\n                            <div>\r\n                                <Link to =\"/\">\r\n                                    <Button \r\n                                    size='small'\r\n                                    style={{fontSize:'0.7rem',color:'#111'}}\r\n                                    >hướng dẫn đăng nhập !</Button>\r\n                                </Link>\r\n                            </div>\r\n                        </CardContent>\r\n                    </Card>\r\n                </div>\r\n                <div style={{color:'#fff', fontSize:'1vw',fontWeight:'500',paddingBottom:'2%'}}>\r\n                    sales@emsvietnam.com.vn @ Địa Chỉ: Phòng 12A09, Tòa nhà 17T7, Hoàng Đạo Thúy, Quận Thanh Xuân, Hà Nội                \r\n                </div>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nLoginPage.propTypes={\r\n    classes:PropTypes.object,\r\n    handleSubmit:PropTypes.func,\r\n    invalid:PropTypes.bool,\r\n    submitting:PropTypes.bool,\r\n    redirectToReferrer:PropTypes.bool,\r\n    authActionCreators:PropTypes.shape({\r\n        onButtonSubmit:PropTypes.func,\r\n        authLogin:PropTypes.func,\r\n        offButtonSubmit:PropTypes.func,\r\n    }),\r\n}\r\n\r\nconst FORM_USER_LOGIN =\"TASK_USER_LOGIN\";\r\nconst withReduxForm = reduxForm({\r\n    form: FORM_USER_LOGIN,\r\n    validate:validate,\r\n});\r\nconst mapStateToProps=state=>{\r\n    return{\r\n        redirectToReferrer:state.auth.redirectToReferrer,\r\n        infAuth:state.auth.infAuth,\r\n    }\r\n};\r\nconst mapDispatchToProps=(dispatch,props)=>{\r\n    return{\r\n        authActionCreators:bindActionCreators(authActions,dispatch),\r\n    }\r\n};\r\nconst withConnect=connect(mapStateToProps,mapDispatchToProps);\r\nexport default compose(\r\n    withStyles(styles),\r\n    withConnect,\r\n    withReduxForm,\r\n)(LoginPage);\r\n\r\n"]},"metadata":{},"sourceType":"module"}