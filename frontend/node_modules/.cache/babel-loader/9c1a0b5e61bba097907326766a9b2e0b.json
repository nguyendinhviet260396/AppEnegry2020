{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vietn\\\\Desktop\\\\AppEnegry2020\\\\frontend\\\\src\\\\containers\\\\ConfigSystem\\\\index.js\";\n// import * as React from \"react\";\n// import { Line } from '@ant-design/charts';\n// class  ChartContainer extends React.Component{\n//     render (){\n//         const data = [\n//             { year: '1991', value1: 3 },\n//             { year: '1992', value: 4 },\n//             { year: '1993', value: 3.5 },\n//             { year: '1994', value: 5 },\n//             { year: '1995', value: 4.9 },\n//             { year: '1996', value: 6 },\n//             { year: '1997', value: 7 },\n//             { year: '1998', value: 9 },\n//             { year: '1999', value: 13 },\n//           ];\n//           const config = {\n//             data,\n//             height: 200,\n//             xField: 'year',\n//             yField: 'value',\n//             point: {\n//               size: 5,\n//               shape: 'diamond',\n//             },\n//             label: {\n//               style: {\n//                 fill: '#aaa',\n//               },\n//             },\n//           };\n//           return <Line {...config} />;\n//     }\n// }\n// import React from 'react';\n// import { Liquid } from '@ant-design/charts';\n// class  DemoLiquid extends React.Component{\n//   render (){\n//   const config = {\n//     percent: 100000,\n//     statistic: {\n//       content: {\n//         style: {\n//           fontSize:50,\n//           fill: 'black',\n//         },\n//       },\n//     },\n//   };\n//   return <Liquid {...config} />;\n//  }\n// };\n// export default DemoLiquid;\n//  //export default  ChartContainer;\nimport React, { useState, useEffect } from 'react';\nimport { Line } from '@ant-design/charts';\n\nconst DemoGeneral = () => {\n  const [data, setData] = useState([]);\n  const [annotations, setAnnotations] = useState([]);\n  let ref;\n  useEffect(() => {\n    asyncFetch();\n  }, []);\n\n  const asyncFetch = () => {\n    fetch('https://gw.alipayobjects.com/os/bmw-prod/89729b32-1592-44ae-ba96-1e296638f5f7.json').then(response => response.json()).then(json => setData(json)).catch(error => {\n      console.log('fetch data failed', error);\n    });\n  };\n\n  const config = {\n    data,\n    padding: 'auto',\n    xField: 'date',\n    yField: 'value',\n    meta: {\n      date: {\n        formatter: v => v.split(' ') ? v.split(' ')[1] : ''\n      },\n      value: {\n        min: 0,\n        max: Math.pow(10, 7),\n        tickCount: 10,\n        formatter: v => `${v / Math.pow(10, 6)}M`\n      }\n    },\n    lineStyle: {\n      lineCap: 'round'\n    },\n    interactions: [{\n      type: 'brush'\n    }],\n    annotations\n  };\n  useEffect(() => {\n    if (ref && data.length) {\n      const yScale = ref.chart.getScaleByField('value');\n      const coordinate = ref.chart.getCoordinate();\n\n      const getDimYPosition = value => coordinate.convertDim(yScale.scale(value), 'y');\n\n      setAnnotations([{\n        type: 'line',\n        start: {\n          date: 'January 1991',\n          value: 2549000\n        },\n        end: ['August 1990', 3850000],\n        text: {\n          // 旅游萧条 标注\n          content: 'The UK recession of 1991',\n          rotate: 0,\n          autoRotate: false,\n          offsetY: getDimYPosition(3850000) - getDimYPosition(2549000) - 10,\n          style: {\n            textAlign: 'center',\n            textBaseline: 'bottom'\n          }\n        },\n        style: {\n          stroke: '#000',\n          lineDash: [2, 4]\n        }\n      }]);\n    }\n  }, [data]);\n  return /*#__PURE__*/React.createElement(Line, Object.assign({}, config, {\n    chartRef: chartRef => ref = chartRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 10\n    }\n  }));\n};\n\nexport default DemoGeneral;","map":{"version":3,"sources":["C:/Users/vietn/Desktop/AppEnegry2020/frontend/src/containers/ConfigSystem/index.js"],"names":["React","useState","useEffect","Line","DemoGeneral","data","setData","annotations","setAnnotations","ref","asyncFetch","fetch","then","response","json","catch","error","console","log","config","padding","xField","yField","meta","date","formatter","v","split","value","min","max","Math","pow","tickCount","lineStyle","lineCap","interactions","type","length","yScale","chart","getScaleByField","coordinate","getCoordinate","getDimYPosition","convertDim","scale","start","end","text","content","rotate","autoRotate","offsetY","style","textAlign","textBaseline","stroke","lineDash","chartRef"],"mappings":";AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,oBAArB;;AACA,MAAMC,WAAqB,GAAG,MAAM;AAClC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;AACA,MAAIQ,GAAJ;AACAP,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;;AAGA,QAAMA,UAAU,GAAG,MAAM;AACvBC,IAAAA,KAAK,CAAC,oFAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESE,IAAD,IAAUR,OAAO,CAACQ,IAAD,CAFzB,EAGGC,KAHH,CAGUC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,KAAjC;AACD,KALH;AAMD,GAPD;;AAQA,QAAMG,MAAM,GAAG;AACbd,IAAAA,IADa;AAEbe,IAAAA,OAAO,EAAE,MAFI;AAGbC,IAAAA,MAAM,EAAE,MAHK;AAIbC,IAAAA,MAAM,EAAE,OAJK;AAKbC,IAAAA,IAAI,EAAE;AACJC,MAAAA,IAAI,EAAE;AACJC,QAAAA,SAAS,EAAGC,CAAD,IAAQA,CAAC,CAACC,KAAF,CAAQ,GAAR,IAAeD,CAAC,CAACC,KAAF,CAAQ,GAAR,EAAa,CAAb,CAAf,GAAiC;AADhD,OADF;AAIJC,MAAAA,KAAK,EAAE;AACLC,QAAAA,GAAG,EAAE,CADA;AAELC,QAAAA,GAAG,EAAEC,IAAI,CAACC,GAAL,CAAS,EAAT,EAAa,CAAb,CAFA;AAGLC,QAAAA,SAAS,EAAE,EAHN;AAILR,QAAAA,SAAS,EAAGC,CAAD,IAAQ,GAAEA,CAAC,GAAGK,IAAI,CAACC,GAAL,CAAS,EAAT,EAAa,CAAb,CAAgB;AAJpC;AAJH,KALO;AAgBbE,IAAAA,SAAS,EAAE;AACTC,MAAAA,OAAO,EAAE;AADA,KAhBE;AAmBbC,IAAAA,YAAY,EAAE,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD,CAnBD;AAoBb9B,IAAAA;AApBa,GAAf;AAsBAL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,GAAG,IAAIJ,IAAI,CAACiC,MAAhB,EAAwB;AACtB,YAAMC,MAAM,GAAG9B,GAAG,CAAC+B,KAAJ,CAAUC,eAAV,CAA0B,OAA1B,CAAf;AACA,YAAMC,UAAU,GAAGjC,GAAG,CAAC+B,KAAJ,CAAUG,aAAV,EAAnB;;AACA,YAAMC,eAAe,GAAIhB,KAAD,IAAWc,UAAU,CAACG,UAAX,CAAsBN,MAAM,CAACO,KAAP,CAAalB,KAAb,CAAtB,EAA2C,GAA3C,CAAnC;;AACApB,MAAAA,cAAc,CAAC,CACb;AACE6B,QAAAA,IAAI,EAAE,MADR;AAEEU,QAAAA,KAAK,EAAE;AAAEvB,UAAAA,IAAI,EAAE,cAAR;AAAwBI,UAAAA,KAAK,EAAE;AAA/B,SAFT;AAGEoB,QAAAA,GAAG,EAAE,CAAC,aAAD,EAAgB,OAAhB,CAHP;AAIEC,QAAAA,IAAI,EAAE;AACJ;AACAC,UAAAA,OAAO,EAAE,0BAFL;AAGJC,UAAAA,MAAM,EAAE,CAHJ;AAIJC,UAAAA,UAAU,EAAE,KAJR;AAKJC,UAAAA,OAAO,EAAET,eAAe,CAAC,OAAD,CAAf,GAA2BA,eAAe,CAAC,OAAD,CAA1C,GAAsD,EAL3D;AAMJU,UAAAA,KAAK,EAAE;AACLC,YAAAA,SAAS,EAAE,QADN;AAELC,YAAAA,YAAY,EAAE;AAFT;AANH,SAJR;AAeEF,QAAAA,KAAK,EAAE;AACLG,UAAAA,MAAM,EAAE,MADH;AAELC,UAAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ;AAFL;AAfT,OADa,CAAD,CAAd;AAsBD;AACF,GA5BQ,EA4BN,CAACrD,IAAD,CA5BM,CAAT;AA6BA,sBAAO,oBAAC,IAAD,oBAAUc,MAAV;AAAkB,IAAA,QAAQ,EAAGwC,QAAD,IAAelD,GAAG,GAAGkD,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAnED;;AAoEA,eAAevD,WAAf","sourcesContent":["// import * as React from \"react\";\r\n// import { Line } from '@ant-design/charts';\r\n\r\n// class  ChartContainer extends React.Component{\r\n//     render (){\r\n\r\n//         const data = [\r\n//             { year: '1991', value1: 3 },\r\n//             { year: '1992', value: 4 },\r\n//             { year: '1993', value: 3.5 },\r\n//             { year: '1994', value: 5 },\r\n//             { year: '1995', value: 4.9 },\r\n//             { year: '1996', value: 6 },\r\n//             { year: '1997', value: 7 },\r\n//             { year: '1998', value: 9 },\r\n//             { year: '1999', value: 13 },\r\n//           ];\r\n//           const config = {\r\n//             data,\r\n//             height: 200,\r\n//             xField: 'year',\r\n//             yField: 'value',\r\n//             point: {\r\n//               size: 5,\r\n//               shape: 'diamond',\r\n//             },\r\n//             label: {\r\n//               style: {\r\n//                 fill: '#aaa',\r\n//               },\r\n//             },\r\n//           };\r\n//           return <Line {...config} />;\r\n//     }\r\n// }\r\n\r\n// import React from 'react';\r\n// import { Liquid } from '@ant-design/charts';\r\n// class  DemoLiquid extends React.Component{\r\n//   render (){\r\n//   const config = {\r\n//     percent: 100000,\r\n//     statistic: {\r\n//       content: {\r\n//         style: {\r\n//           fontSize:50,\r\n//           fill: 'black',\r\n//         },\r\n//       },\r\n//     },\r\n//   };\r\n//   return <Liquid {...config} />;\r\n//  }\r\n// };\r\n// export default DemoLiquid;\r\n//  //export default  ChartContainer;\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Line } from '@ant-design/charts';\r\nconst DemoGeneral: React.FC = () => {\r\n  const [data, setData] = useState([]);\r\n  const [annotations, setAnnotations] = useState([]);\r\n  let ref;\r\n  useEffect(() => {\r\n    asyncFetch();\r\n  }, []);\r\n  const asyncFetch = () => {\r\n    fetch('https://gw.alipayobjects.com/os/bmw-prod/89729b32-1592-44ae-ba96-1e296638f5f7.json')\r\n      .then((response) => response.json())\r\n      .then((json) => setData(json))\r\n      .catch((error) => {\r\n        console.log('fetch data failed', error);\r\n      });\r\n  };\r\n  const config = {\r\n    data,\r\n    padding: 'auto',\r\n    xField: 'date',\r\n    yField: 'value',\r\n    meta: {\r\n      date: {\r\n        formatter: (v) => (v.split(' ') ? v.split(' ')[1] : ''),\r\n      },\r\n      value: {\r\n        min: 0,\r\n        max: Math.pow(10, 7),\r\n        tickCount: 10,\r\n        formatter: (v) => `${v / Math.pow(10, 6)}M`,\r\n      },\r\n    },\r\n    lineStyle: {\r\n      lineCap: 'round',\r\n    },\r\n    interactions: [{ type: 'brush' }],\r\n    annotations,\r\n  };\r\n  useEffect(() => {\r\n    if (ref && data.length) {\r\n      const yScale = ref.chart.getScaleByField('value');\r\n      const coordinate = ref.chart.getCoordinate();\r\n      const getDimYPosition = (value) => coordinate.convertDim(yScale.scale(value), 'y');\r\n      setAnnotations([\r\n        {\r\n          type: 'line',\r\n          start: { date: 'January 1991', value: 2549000 },\r\n          end: ['August 1990', 3850000],\r\n          text: {\r\n            // 旅游萧条 标注\r\n            content: 'The UK recession of 1991',\r\n            rotate: 0,\r\n            autoRotate: false,\r\n            offsetY: getDimYPosition(3850000) - getDimYPosition(2549000) - 10,\r\n            style: {\r\n              textAlign: 'center',\r\n              textBaseline: 'bottom',\r\n            },\r\n          },\r\n          style: {\r\n            stroke: '#000',\r\n            lineDash: [2, 4],\r\n          },\r\n        },\r\n      ]);\r\n    }\r\n  }, [data]);\r\n  return <Line {...config} chartRef={(chartRef) => (ref = chartRef)} />;\r\n};\r\nexport default DemoGeneral;"]},"metadata":{},"sourceType":"module"}