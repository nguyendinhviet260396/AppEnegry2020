{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { find, map, get } from '@antv/util';\nimport BBox from '../../../util/bbox';\n\nvar BulletRect =\n/** @class */\nfunction () {\n  function BulletRect(view, cfg) {\n    this.view = view;\n    this.cfg = cfg;\n\n    this._init();\n  }\n  /** 绘制辅助labels */\n\n\n  BulletRect.prototype.draw = function () {\n    if (!this.view || this.view.destroyed) {\n      return;\n    }\n\n    this.container = this.view.middleGroup.addGroup();\n    this.container.set('name', 'rectGroups');\n    this.container.setZIndex(-100);\n    var geometry = this.getGeometry();\n    var shapes = map(geometry === null || geometry === void 0 ? void 0 : geometry.elements, function (element) {\n      return element.shape;\n    });\n\n    for (var i = 0; i < this.cfg.ranges.length; i += 1) {\n      var shapeBox = shapes[i].getBBox();\n      var widthRatio = shapeBox.width / shapes[i].get('origin').data[this.cfg.yField];\n      this.drawRect(shapeBox, this.cfg.ranges[i] || [0, 1], widthRatio);\n    }\n\n    this.view.canvas.draw();\n  };\n\n  BulletRect.prototype.drawRect = function (box, ranges, widthRatio) {\n    var options = this.cfg;\n    var rangeColors = options.rangeColors;\n    var xPos = box.minX;\n    var yPos = box.minY - box.height * (options.rangeSize - 1) / 2;\n\n    for (var i = 1; i < ranges.length; i += 1) {\n      var width = (ranges[i] - ranges[i - 1]) * options.rangeMax * widthRatio;\n      this.container.addShape('rect', {\n        name: 'bullet-rect',\n        attrs: {\n          width: width,\n          height: box.height * options.rangeSize,\n          x: xPos,\n          y: yPos,\n          fill: rangeColors[(i - 1) % rangeColors.length],\n          fillOpacity: 0.25\n        }\n      }).set('zIndex', -1);\n      xPos += width;\n    }\n\n    if (options.axis && options.axis.visible) {\n      var tickInterval = options.rangeMax / (options.axis.tickCount - 1);\n      var rangeBox = new BBox(box.x, yPos, xPos, box.height * options.rangeSize);\n      this.drawBulletTicks(rangeBox, tickInterval, widthRatio);\n    }\n  };\n  /** 添加 ticks  */\n\n\n  BulletRect.prototype.drawBulletTicks = function (box, tickInterval, widthRatio) {\n    var options = this.cfg;\n    var ticksStyle = options.axis.style;\n    var tickCount = options.axis.tickCount;\n    var tickPosition = options.axis.position;\n    var tickOffset = get(ticksStyle, 'lineHeight', 0) - ticksStyle.fontSize / 2;\n\n    for (var tickIdx = 0; tickIdx < tickCount; tickIdx += 1) {\n      var x = box.minX + tickInterval * tickIdx * widthRatio;\n      var tickText = \"\" + tickInterval * tickIdx;\n\n      if (options.axis.formatter) {\n        tickText = options.axis.formatter(tickText, tickIdx);\n      }\n\n      this.container.addShape('text', {\n        name: 'tick',\n        attrs: __assign({\n          x: x,\n          y: tickPosition === 'before' ? box.minY - tickOffset : box.maxY + tickOffset,\n          text: \"\" + tickText\n        }, ticksStyle)\n      });\n\n      if (options.axis.tickLine && options.axis.tickLine.visible) {\n        var tickLineCfg = options.axis.tickLine;\n\n        if (tickIdx > 0 && tickIdx !== tickCount - 1) {\n          this.container.addShape('path', {\n            attrs: __assign({\n              path: [['M', x, box.minY], ['L', x, box.maxY]]\n            }, tickLineCfg)\n          }).set('zIndex', -1);\n        }\n      }\n    }\n  };\n\n  BulletRect.prototype.clear = function () {\n    if (this.container) {\n      this.container.clear();\n    }\n  };\n\n  BulletRect.prototype.destroy = function () {\n    if (this.container) {\n      this.container.remove();\n    }\n  };\n\n  BulletRect.prototype._init = function () {\n    var _this = this;\n\n    this.view.on('beforerender', function () {\n      _this.clear();\n    });\n    this.view.on('afterrender', function () {\n      _this.draw();\n    });\n  };\n\n  BulletRect.prototype.getGeometry = function () {\n    return find(this.view.geometries, function (geometry) {\n      return geometry.type === 'interval';\n    });\n  };\n\n  return BulletRect;\n}();\n\nexport default BulletRect;","map":{"version":3,"sources":["../../../../src/plots/bullet/component/bulletRect.ts"],"names":[],"mappings":"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","sourcesContent":["import { IGroup, View } from '../../../dependents';\nimport { find, map, get } from '@antv/util';\nimport { BulletAxis } from '../layer';\nimport BBox from '../../../util/bbox';\n\nexport interface BulletRectCfg {\n  /** 背景区间的区间范围 */\n  ranges: number[][];\n  yField: string;\n  rangeColors: string[];\n  rangeMax: number;\n  rangeSize: number;\n  axis?: BulletAxis;\n  style?: {\n    fill?: string;\n    stroke?: string;\n    strokeOpacity?: number;\n    [k: string]: any;\n  };\n}\n\nexport default class BulletRect {\n  private view: View;\n  private container: IGroup;\n  private cfg: BulletRectCfg;\n\n  constructor(view: View, cfg: BulletRectCfg) {\n    this.view = view;\n    this.cfg = cfg;\n    this._init();\n  }\n\n  /** 绘制辅助labels */\n  public draw() {\n    if (!this.view || this.view.destroyed) {\n      return;\n    }\n    this.container = this.view.middleGroup.addGroup();\n    this.container.set('name', 'rectGroups');\n    this.container.setZIndex(-100);\n    const geometry = this.getGeometry();\n    const shapes = map(geometry?.elements, (element) => element.shape);\n    for (let i = 0; i < this.cfg.ranges.length; i += 1) {\n      const shapeBox = shapes[i].getBBox();\n      const widthRatio = shapeBox.width / shapes[i].get('origin').data[this.cfg.yField];\n      this.drawRect(shapeBox, this.cfg.ranges[i] || [0, 1], widthRatio);\n    }\n    this.view.canvas.draw();\n  }\n\n  protected drawRect(box: BBox, ranges: number[], widthRatio: number) {\n    const options = this.cfg;\n    const rangeColors = options.rangeColors;\n    let xPos = box.minX;\n    const yPos = box.minY - (box.height * (options.rangeSize - 1)) / 2;\n    for (let i = 1; i < ranges.length; i += 1) {\n      const width = (ranges[i] - ranges[i - 1]) * options.rangeMax * widthRatio;\n      this.container\n        .addShape('rect', {\n          name: 'bullet-rect',\n          attrs: {\n            width,\n            height: box.height * options.rangeSize,\n            x: xPos,\n            y: yPos,\n            fill: rangeColors[(i - 1) % rangeColors.length],\n            fillOpacity: 0.25,\n          },\n        })\n        .set('zIndex', -1);\n      xPos += width;\n    }\n    if (options.axis && options.axis.visible) {\n      const tickInterval = options.rangeMax / (options.axis.tickCount - 1);\n      const rangeBox = new BBox(box.x, yPos, xPos, box.height * options.rangeSize);\n      this.drawBulletTicks(rangeBox, tickInterval, widthRatio);\n    }\n  }\n\n  /** 添加 ticks  */\n  protected drawBulletTicks(box: BBox, tickInterval: number, widthRatio: number) {\n    const options = this.cfg;\n    const ticksStyle = options.axis.style;\n    const tickCount = options.axis.tickCount;\n    const tickPosition = options.axis.position;\n    const tickOffset = get(ticksStyle, 'lineHeight', 0) - ticksStyle.fontSize / 2;\n    for (let tickIdx = 0; tickIdx < tickCount; tickIdx += 1) {\n      const x = box.minX + tickInterval * tickIdx * widthRatio;\n      let tickText = `${tickInterval * tickIdx}`;\n      if (options.axis.formatter) {\n        tickText = options.axis.formatter(tickText, tickIdx);\n      }\n      this.container.addShape('text', {\n        name: 'tick',\n        attrs: {\n          x,\n          y: tickPosition === 'before' ? box.minY - tickOffset : box.maxY + tickOffset,\n          text: `${tickText}`,\n          ...ticksStyle,\n        },\n      });\n      if (options.axis.tickLine && options.axis.tickLine.visible) {\n        const tickLineCfg = options.axis.tickLine;\n        if (tickIdx > 0 && tickIdx !== tickCount - 1) {\n          this.container\n            .addShape('path', {\n              attrs: {\n                path: [\n                  ['M', x, box.minY],\n                  ['L', x, box.maxY],\n                ],\n                ...tickLineCfg,\n              },\n            })\n            .set('zIndex', -1);\n        }\n      }\n    }\n  }\n\n  public clear() {\n    if (this.container) {\n      this.container.clear();\n    }\n  }\n\n  public destroy() {\n    if (this.container) {\n      this.container.remove();\n    }\n  }\n\n  private _init() {\n    this.view.on('beforerender', () => {\n      this.clear();\n    });\n\n    this.view.on('afterrender', () => {\n      this.draw();\n    });\n  }\n\n  private getGeometry() {\n    return find(this.view.geometries, (geometry) => geometry.type === 'interval');\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}