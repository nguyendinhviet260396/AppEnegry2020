{"ast":null,"code":"import { each } from '@antv/util';\nexport function rgb2arr(str) {\n  var colorStr = str.indexOf('#') === 0 ? str.substr(1) : str;\n  var arr = [];\n  arr.push(parseInt(colorStr.substr(0, 2), 16));\n  arr.push(parseInt(colorStr.substr(2, 2), 16));\n  arr.push(parseInt(colorStr.substr(4, 2), 16));\n  return arr;\n}\nexport function toHex(value) {\n  var v;\n  v = Math.round(value);\n  v = v.toString(16);\n\n  if (v.length === 1) {\n    v = \"0\" + value;\n  }\n\n  return v;\n}\nexport function arr2rgb(arr) {\n  return \"#\" + (toHex(arr[0]) + toHex(arr[1]) + toHex(arr[2]));\n}\nexport function mappingColor(band, gray) {\n  var reflect;\n  each(band, function (b) {\n    var map = b;\n\n    if (gray >= map.from && gray < map.to) {\n      reflect = map.color;\n    }\n  });\n  return reflect;\n} // 根据YIQ亮度判断指定颜色取反色是不是白色\n// http://24ways.org/2010/calculating-color-contrast\n\nexport var isContrastColorWhite = function (rgb) {\n  var _a = rgb2arr(rgb),\n      r = _a[0],\n      g = _a[1],\n      b = _a[2];\n\n  var isDark = (r * 299 + g * 587 + b * 114) / 1000 < 128;\n  return isDark;\n};","map":{"version":3,"sources":["../../src/util/color.ts"],"names":[],"mappings":"AAAA,SAAS,IAAT,QAAqB,YAArB;AAEA,OAAM,SAAU,OAAV,CAAkB,GAAlB,EAA6B;AACjC,MAAM,QAAQ,GAAW,GAAG,CAAC,OAAJ,CAAY,GAAZ,MAAqB,CAArB,GAAyB,GAAG,CAAC,MAAJ,CAAW,CAAX,CAAzB,GAAyC,GAAlE;AACA,MAAM,GAAG,GAAG,EAAZ;AACA,EAAA,GAAG,CAAC,IAAJ,CAAS,QAAQ,CAAC,QAAQ,CAAC,MAAT,CAAgB,CAAhB,EAAmB,CAAnB,CAAD,EAAwB,EAAxB,CAAjB;AACA,EAAA,GAAG,CAAC,IAAJ,CAAS,QAAQ,CAAC,QAAQ,CAAC,MAAT,CAAgB,CAAhB,EAAmB,CAAnB,CAAD,EAAwB,EAAxB,CAAjB;AACA,EAAA,GAAG,CAAC,IAAJ,CAAS,QAAQ,CAAC,QAAQ,CAAC,MAAT,CAAgB,CAAhB,EAAmB,CAAnB,CAAD,EAAwB,EAAxB,CAAjB;AACA,SAAO,GAAP;AACD;AAED,OAAM,SAAU,KAAV,CAAgB,KAAhB,EAAqB;AACzB,MAAI,CAAJ;AACA,EAAA,CAAC,GAAG,IAAI,CAAC,KAAL,CAAW,KAAX,CAAJ;AACA,EAAA,CAAC,GAAG,CAAC,CAAC,QAAF,CAAW,EAAX,CAAJ;;AACA,MAAI,CAAC,CAAC,MAAF,KAAa,CAAjB,EAAoB;AAClB,IAAA,CAAC,GAAG,MAAI,KAAR;AACD;;AACD,SAAO,CAAP;AACD;AAED,OAAM,SAAU,OAAV,CAAkB,GAAlB,EAAqB;AACzB,SAAO,OAAI,KAAK,CAAC,GAAG,CAAC,CAAD,CAAJ,CAAL,GAAgB,KAAK,CAAC,GAAG,CAAC,CAAD,CAAJ,CAArB,GAAgC,KAAK,CAAC,GAAG,CAAC,CAAD,CAAJ,CAAzC,CAAP;AACD;AAED,OAAM,SAAU,YAAV,CAAuB,IAAvB,EAA6B,IAA7B,EAAiC;AACrC,MAAI,OAAJ;AACA,EAAA,IAAI,CAAC,IAAD,EAAO,UAAC,CAAD,EAAE;AACX,QAAM,GAAG,GAAG,CAAZ;;AACA,QAAI,IAAI,IAAI,GAAG,CAAC,IAAZ,IAAoB,IAAI,GAAG,GAAG,CAAC,EAAnC,EAAuC;AACrC,MAAA,OAAO,GAAG,GAAG,CAAC,KAAd;AACD;AACF,GALG,CAAJ;AAMA,SAAO,OAAP;AACD,C,CAED;AACA;;AACA,OAAO,IAAM,oBAAoB,GAAG,UAAC,GAAD,EAAY;AACxC,MAAA,EAAA,GAAY,OAAO,CAAC,GAAD,CAAnB;AAAA,MAAC,CAAC,GAAA,EAAA,CAAA,CAAA,CAAF;AAAA,MAAI,CAAC,GAAA,EAAA,CAAA,CAAA,CAAL;AAAA,MAAO,CAAC,GAAA,EAAA,CAAA,CAAA,CAAR;;AACN,MAAM,MAAM,GAAG,CAAC,CAAC,GAAG,GAAJ,GAAU,CAAC,GAAG,GAAd,GAAoB,CAAC,GAAG,GAAzB,IAAgC,IAAhC,GAAuC,GAAtD;AAEA,SAAO,MAAP;AACD,CALM","sourcesContent":["import { each } from '@antv/util';\n\nexport function rgb2arr(str: string) {\n  const colorStr: string = str.indexOf('#') === 0 ? str.substr(1) : str;\n  const arr = [];\n  arr.push(parseInt(colorStr.substr(0, 2), 16));\n  arr.push(parseInt(colorStr.substr(2, 2), 16));\n  arr.push(parseInt(colorStr.substr(4, 2), 16));\n  return arr;\n}\n\nexport function toHex(value) {\n  let v;\n  v = Math.round(value);\n  v = v.toString(16);\n  if (v.length === 1) {\n    v = `0${value}`;\n  }\n  return v;\n}\n\nexport function arr2rgb(arr) {\n  return `#${toHex(arr[0]) + toHex(arr[1]) + toHex(arr[2])}`;\n}\n\nexport function mappingColor(band, gray) {\n  let reflect;\n  each(band, (b) => {\n    const map = b;\n    if (gray >= map.from && gray < map.to) {\n      reflect = map.color;\n    }\n  });\n  return reflect;\n}\n\n// 根据YIQ亮度判断指定颜色取反色是不是白色\n// http://24ways.org/2010/calculating-color-contrast\nexport const isContrastColorWhite = (rgb: string): boolean => {\n  const [r, g, b] = rgb2arr(rgb);\n  const isDark = (r * 299 + g * 587 + b * 114) / 1000 < 128;\n\n  return isDark;\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}