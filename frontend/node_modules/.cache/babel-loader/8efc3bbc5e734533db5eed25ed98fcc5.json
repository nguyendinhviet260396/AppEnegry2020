{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { get, isNil, isArray } from '@antv/util';\nimport { registerShape } from '@antv/g2';\nimport { getStyle } from '@antv/g2/lib/geometry/shape/util/get-style'; // 根据数据点生成矩形的四个关键点\n\nfunction _getRectPoints(cfg, isPyramid) {\n  if (isPyramid === void 0) {\n    isPyramid = false;\n  }\n\n  var x = cfg.x,\n      y = cfg.y,\n      y0 = cfg.y0,\n      size = cfg.size; // 有 4 种情况，\n  // 1. x, y 都不是数组\n  // 2. y是数组，x不是\n  // 3. x是数组，y不是\n  // 4. x, y 都是数组\n\n  var yMin;\n  var yMax;\n\n  if (isArray(y)) {\n    yMin = y[0];\n    yMax = y[1];\n  } else {\n    yMin = y0;\n    yMax = y;\n  }\n\n  var xMin;\n  var xMax;\n\n  if (isArray(x)) {\n    xMin = x[0];\n    xMax = x[1];\n  } else {\n    xMin = x - size / 2;\n    xMax = x + size / 2;\n  }\n\n  var points = [{\n    x: xMin,\n    y: yMin\n  }, {\n    x: xMin,\n    y: yMax\n  }];\n\n  if (isPyramid) {\n    // 绘制尖底漏斗图\n    // 金字塔漏斗图的关键点\n    // 1\n    // |   2\n    // 0\n    points.push({\n      x: xMax,\n      y: (yMax + yMin) / 2\n    });\n  } else {\n    // 矩形的四个关键点，结构如下（左下角顺时针连接）\n    // 1 ---- 2\n    // |      |\n    // 0 ---- 3\n    points.push({\n      x: xMax,\n      y: yMax\n    }, {\n      x: xMax,\n      y: yMin\n    });\n  }\n\n  return points;\n} // 根据关键点绘制漏斗图的 path\n\n\nfunction _getFunnelPath(cfg, compare) {\n  var path = [];\n  var points = cfg.points,\n      nextPoints = cfg.nextPoints;\n\n  if (compare) {\n    // 对比漏斗\n    var yValues = compare.yValues,\n        yValuesMax = compare.yValuesMax,\n        yValuesNext = compare.yValuesNext;\n    var originY = (points[0].y + points[1].y) / 2;\n    var yValueTotal_1 = yValues[0] + yValues[1];\n    var yRatios = yValues.map(function (yValue) {\n      return yValue / yValueTotal_1 / 0.5;\n    });\n    var yOffset = (yValuesMax[0] / (yValuesMax[0] + yValuesMax[1]) - 0.5) * 0.9;\n    var spacing = 0.001;\n\n    if (!isNil(nextPoints)) {\n      var yValueTotalNext_1 = yValuesNext[0] + yValuesNext[1];\n      var yRatiosNext = yValuesNext.map(function (yValueNext) {\n        return yValueNext / yValueTotalNext_1 / 0.5;\n      });\n      path.push(['M', points[0].x, yOffset + (points[0].y - originY) * yRatios[0] + originY - spacing], ['L', points[1].x, yOffset + originY - spacing], ['L', nextPoints[1].x, yOffset + originY - spacing], ['L', nextPoints[0].x, yOffset + (nextPoints[3].y - originY) * yRatiosNext[0] + originY - spacing], ['Z']);\n      path.push(['M', points[0].x, yOffset + originY + spacing], ['L', points[1].x, yOffset + (points[1].y - originY) * yRatios[1] + originY + spacing], ['L', nextPoints[1].x, yOffset + (nextPoints[2].y - originY) * yRatiosNext[1] + originY + spacing], ['L', nextPoints[0].x, yOffset + originY + spacing], ['Z']);\n    } else {\n      path.push(['M', points[0].x, yOffset + (points[0].y - originY) * yRatios[0] + originY], ['L', points[1].x, yOffset + originY], ['L', points[2].x, yOffset + originY], ['L', points[3].x, yOffset + (points[3].y - originY) * yRatios[0] + originY], ['Z']);\n      path.push(['M', points[0].x, yOffset + 0.002 + originY], ['L', points[1].x, yOffset + 0.002 + (points[1].y - originY) * yRatios[1] + originY], ['L', points[2].x, yOffset + 0.002 + (points[2].y - originY) * yRatios[1] + originY], ['L', points[3].x, yOffset + 0.002 + originY], ['Z']);\n    }\n  } else {\n    // 标准漏斗\n    if (!isNil(nextPoints)) {\n      path.push(['M', points[0].x, points[0].y], ['L', points[1].x, points[1].y], ['L', nextPoints[1].x, nextPoints[1].y], ['L', nextPoints[0].x, nextPoints[0].y], ['Z']);\n    } else {\n      path.push(['M', points[0].x, points[0].y], ['L', points[1].x, points[1].y], ['L', points[2].x, points[2].y], ['L', points[3].x, points[3].y], ['Z']);\n    }\n  }\n\n  return path;\n}\n\nregisterShape('interval', 'funnel-basic-rect', {\n  getPoints: function (pointInfo) {\n    pointInfo.size = pointInfo.size * 1.8; // 调整面积\n\n    return _getRectPoints(pointInfo);\n  },\n  draw: function (cfg, container) {\n    var _a;\n\n    var style = getStyle(cfg, false, true);\n    var compare = get(cfg, 'data.__compare__');\n    var path = this.parsePath(_getFunnelPath(cfg, compare));\n    return container.addShape('path', (_a = {\n      name: 'interval',\n      attrs: __assign(__assign({}, style), {\n        path: path\n      })\n    }, _a['__compare__'] = compare, _a));\n  },\n  getMarker: function (markerCfg) {\n    var color = markerCfg.color;\n    return {\n      symbol: 'square',\n      style: {\n        r: 4,\n        fill: color\n      }\n    };\n  }\n});","map":{"version":3,"sources":["../../../../../src/plots/funnel/geometry/shape/funnel-basic-rect.ts"],"names":[],"mappings":"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","sourcesContent":["import { get, isNil, isArray } from '@antv/util';\nimport { IGroup } from '@antv/g-base';\nimport { registerShape } from '@antv/g2';\nimport { ShapeMarkerCfg, ShapePoint, ShapeInfo } from '@antv/g2/lib/interface';\nimport { getStyle } from '@antv/g2/lib/geometry/shape/util/get-style';\n\n// 根据数据点生成矩形的四个关键点\nfunction _getRectPoints(cfg, isPyramid = false) {\n  const { x, y, y0, size } = cfg;\n  // 有 4 种情况，\n  // 1. x, y 都不是数组\n  // 2. y是数组，x不是\n  // 3. x是数组，y不是\n  // 4. x, y 都是数组\n  let yMin;\n  let yMax;\n  if (isArray(y)) {\n    yMin = y[0];\n    yMax = y[1];\n  } else {\n    yMin = y0;\n    yMax = y;\n  }\n\n  let xMin;\n  let xMax;\n  if (isArray(x)) {\n    xMin = x[0];\n    xMax = x[1];\n  } else {\n    xMin = x - size / 2;\n    xMax = x + size / 2;\n  }\n\n  const points = [\n    { x: xMin, y: yMin },\n    { x: xMin, y: yMax },\n  ];\n\n  if (isPyramid) {\n    // 绘制尖底漏斗图\n    // 金字塔漏斗图的关键点\n    // 1\n    // |   2\n    // 0\n    points.push({\n      x: xMax,\n      y: (yMax + yMin) / 2,\n    });\n  } else {\n    // 矩形的四个关键点，结构如下（左下角顺时针连接）\n    // 1 ---- 2\n    // |      |\n    // 0 ---- 3\n    points.push({ x: xMax, y: yMax }, { x: xMax, y: yMin });\n  }\n\n  return points;\n}\n\n// 根据关键点绘制漏斗图的 path\nfunction _getFunnelPath(cfg, compare) {\n  const path = [];\n  const { points, nextPoints } = cfg;\n\n  if (compare) {\n    // 对比漏斗\n    const { yValues, yValuesMax, yValuesNext } = compare;\n    const originY = (points[0].y + points[1].y) / 2;\n\n    const yValueTotal = yValues[0] + yValues[1];\n    const yRatios = yValues.map((yValue) => yValue / yValueTotal / 0.5);\n    const yOffset = (yValuesMax[0] / (yValuesMax[0] + yValuesMax[1]) - 0.5) * 0.9;\n    const spacing = 0.001;\n\n    if (!isNil(nextPoints)) {\n      const yValueTotalNext = yValuesNext[0] + yValuesNext[1];\n      const yRatiosNext = yValuesNext.map((yValueNext) => yValueNext / yValueTotalNext / 0.5);\n      path.push(\n        ['M', points[0].x, yOffset + (points[0].y - originY) * yRatios[0] + originY - spacing],\n        ['L', points[1].x, yOffset + originY - spacing],\n        ['L', nextPoints[1].x, yOffset + originY - spacing],\n        ['L', nextPoints[0].x, yOffset + (nextPoints[3].y - originY) * yRatiosNext[0] + originY - spacing],\n        ['Z']\n      );\n      path.push(\n        ['M', points[0].x, yOffset + originY + spacing],\n        ['L', points[1].x, yOffset + (points[1].y - originY) * yRatios[1] + originY + spacing],\n        ['L', nextPoints[1].x, yOffset + (nextPoints[2].y - originY) * yRatiosNext[1] + originY + spacing],\n        ['L', nextPoints[0].x, yOffset + originY + spacing],\n        ['Z']\n      );\n    } else {\n      path.push(\n        ['M', points[0].x, yOffset + (points[0].y - originY) * yRatios[0] + originY],\n        ['L', points[1].x, yOffset + originY],\n        ['L', points[2].x, yOffset + originY],\n        ['L', points[3].x, yOffset + (points[3].y - originY) * yRatios[0] + originY],\n        ['Z']\n      );\n      path.push(\n        ['M', points[0].x, yOffset + 0.002 + originY],\n        ['L', points[1].x, yOffset + 0.002 + (points[1].y - originY) * yRatios[1] + originY],\n        ['L', points[2].x, yOffset + 0.002 + (points[2].y - originY) * yRatios[1] + originY],\n        ['L', points[3].x, yOffset + 0.002 + originY],\n        ['Z']\n      );\n    }\n  } else {\n    // 标准漏斗\n    if (!isNil(nextPoints)) {\n      path.push(\n        ['M', points[0].x, points[0].y],\n        ['L', points[1].x, points[1].y],\n        ['L', nextPoints[1].x, nextPoints[1].y],\n        ['L', nextPoints[0].x, nextPoints[0].y],\n        ['Z']\n      );\n    } else {\n      path.push(\n        ['M', points[0].x, points[0].y],\n        ['L', points[1].x, points[1].y],\n        ['L', points[2].x, points[2].y],\n        ['L', points[3].x, points[3].y],\n        ['Z']\n      );\n    }\n  }\n\n  return path;\n}\n\nregisterShape('interval', 'funnel-basic-rect', {\n  getPoints(pointInfo: ShapePoint) {\n    pointInfo.size = pointInfo.size * 1.8; // 调整面积\n    return _getRectPoints(pointInfo);\n  },\n  draw(cfg: ShapeInfo, container: IGroup) {\n    const style = getStyle(cfg, false, true);\n    const compare = get(cfg, 'data.__compare__');\n    const path = this.parsePath(_getFunnelPath(cfg, compare));\n\n    return container.addShape('path', {\n      name: 'interval',\n      attrs: {\n        ...style,\n        path,\n      },\n      ['__compare__']: compare,\n    });\n  },\n  getMarker(markerCfg: ShapeMarkerCfg) {\n    const { color } = markerCfg;\n    return {\n      symbol: 'square',\n      style: {\n        r: 4,\n        fill: color,\n      },\n    };\n  },\n});\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}