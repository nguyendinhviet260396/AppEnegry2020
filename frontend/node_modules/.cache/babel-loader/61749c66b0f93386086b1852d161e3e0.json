{"ast":null,"code":"/**\n * @fileOverview random layout\n * @author shiwu.wyy@antfin.com\n */\nimport { __extends } from \"tslib\";\nimport * as d3Force from 'd3-force';\nimport isArray from '@antv/util/lib/is-array';\nimport isFunction from '@antv/util/lib/is-function';\nimport isNumber from '@antv/util/lib/is-number';\nimport mix from '@antv/util/lib/mix';\nimport { BaseLayout } from './layout';\nimport { LAYOUT_MESSAGE } from './worker/layoutConst';\n/**\n * 经典力导布局 force-directed\n */\n\nvar ForceLayout =\n/** @class */\nfunction (_super) {\n  __extends(ForceLayout, _super);\n\n  function ForceLayout() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /** 向心力作用点 */\n\n\n    _this.center = [0, 0];\n    /** 节点作用力 */\n\n    _this.nodeStrength = null;\n    /** 边的作用力, 默认为根据节点的入度出度自适应 */\n\n    _this.edgeStrength = null;\n    /** 是否防止节点相互覆盖 */\n\n    _this.preventOverlap = false;\n    /** 默认边长度 */\n\n    _this.linkDistance = 50;\n    /** 迭代阈值的衰减率 [0, 1]，0.028 对应最大迭代数为 300 */\n\n    _this.alphaDecay = 0.028;\n    /** 停止迭代的阈值 */\n\n    _this.alphaMin = 0.001;\n    /** 当前阈值 */\n\n    _this.alpha = 0.3;\n    /** 防止重叠的力强度 */\n\n    _this.collideStrength = 1;\n    /** 是否启用web worker。前提是在web worker里执行布局，否则无效\t*/\n\n    _this.workerEnabled = false;\n\n    _this.tick = function () {};\n    /** 布局完成回调 */\n\n\n    _this.onLayoutEnd = function () {};\n    /** 布局每一次迭代完成的回调 */\n\n\n    _this.onTick = function () {};\n    /** 是否正在布局 */\n\n\n    _this.ticking = undefined;\n    return _this;\n  }\n\n  ForceLayout.prototype.getDefaultCfg = function () {\n    return {\n      center: [0, 0],\n      nodeStrength: null,\n      edgeStrength: null,\n      preventOverlap: false,\n      nodeSize: undefined,\n      nodeSpacing: undefined,\n      linkDistance: 50,\n      forceSimulation: null,\n      alphaDecay: 0.028,\n      alphaMin: 0.001,\n      alpha: 0.3,\n      collideStrength: 1,\n      tick: function tick() {},\n      onLayoutEnd: function onLayoutEnd() {},\n      onTick: function onTick() {},\n      // 是否启用web worker。前提是在web worker里执行布局，否则无效\n      workerEnabled: false\n    };\n  };\n  /**\n   * 初始化\n   * @param {object} data 数据\n   */\n\n\n  ForceLayout.prototype.init = function (data) {\n    var self = this;\n    self.nodes = data.nodes || [];\n    var edges = data.edges || [];\n    self.edges = edges.map(function (edge) {\n      var res = {};\n      var expectKeys = ['targetNode', 'sourceNode', 'startPoint', 'endPoint'];\n      Object.keys(edge).forEach(function (key) {\n        if (!(expectKeys.indexOf(key) > -1)) {\n          res[key] = edge[key];\n        }\n      });\n      return res;\n    });\n    self.ticking = false;\n  };\n  /**\n   * 执行布局\n   */\n\n\n  ForceLayout.prototype.execute = function (reloadData) {\n    var self = this;\n    var nodes = self.nodes;\n    var edges = self.edges; // 如果正在布局，忽略布局请求\n\n    if (self.ticking) {\n      return;\n    }\n\n    var simulation = self.forceSimulation;\n    var alphaMin = self.alphaMin;\n    var alphaDecay = self.alphaDecay;\n    var alpha = self.alpha;\n\n    if (!simulation) {\n      try {\n        // 定义节点的力\n        var nodeForce = d3Force.forceManyBody();\n\n        if (self.nodeStrength) {\n          nodeForce.strength(self.nodeStrength);\n        }\n\n        simulation = d3Force.forceSimulation().nodes(nodes).force('center', d3Force.forceCenter(self.center[0], self.center[1])).force('charge', nodeForce).alpha(alpha).alphaDecay(alphaDecay).alphaMin(alphaMin);\n\n        if (self.preventOverlap) {\n          self.overlapProcess(simulation);\n        } // 如果有边，定义边的力\n\n\n        if (edges) {\n          // d3 的 forceLayout 会重新生成边的数据模型，为了避免污染源数据\n          var edgeForce = d3Force.forceLink().id(function (d) {\n            return d.id;\n          }).links(edges);\n\n          if (self.edgeStrength) {\n            edgeForce.strength(self.edgeStrength);\n          }\n\n          if (self.linkDistance) {\n            edgeForce.distance(self.linkDistance);\n          }\n\n          self.edgeForce = edgeForce;\n          simulation.force('link', edgeForce);\n        }\n\n        if (self.workerEnabled && !isInWorker()) {\n          // 如果不是运行在web worker里，不用web worker布局\n          self.workerEnabled = false;\n          console.warn('workerEnabled option is only supported when running in web worker.');\n        }\n\n        if (!self.workerEnabled) {\n          simulation.on('tick', function () {\n            self.tick();\n          }).on('end', function () {\n            self.ticking = false;\n\n            if (self.onLayoutEnd) {\n              self.onLayoutEnd();\n            }\n          });\n          self.ticking = true;\n        } else {\n          // worker is enabled\n          simulation.stop();\n          var totalTicks = getSimulationTicks(simulation);\n\n          for (var currentTick = 1; currentTick <= totalTicks; currentTick++) {\n            simulation.tick(); // currentTick starts from 1.\n\n            postMessage({\n              type: LAYOUT_MESSAGE.TICK,\n              currentTick: currentTick,\n              totalTicks: totalTicks,\n              nodes: nodes\n            }, undefined);\n          }\n\n          self.ticking = false;\n        }\n\n        self.forceSimulation = simulation;\n        self.ticking = true;\n      } catch (e) {\n        self.ticking = false;\n        console.warn(e);\n      }\n    } else {\n      if (reloadData) {\n        simulation.nodes(nodes);\n        self.edgeForce.links(edges);\n      }\n\n      if (self.preventOverlap) {\n        self.overlapProcess(simulation);\n      }\n\n      simulation.alpha(alpha).restart();\n      this.ticking = true;\n    }\n  };\n  /**\n   * 防止重叠\n   * @param {object} simulation 力模拟模型\n   */\n\n\n  ForceLayout.prototype.overlapProcess = function (simulation) {\n    var self = this;\n    var nodeSize = self.nodeSize;\n    var nodeSpacing = self.nodeSpacing;\n    var nodeSizeFunc;\n    var nodeSpacingFunc;\n    var collideStrength = self.collideStrength;\n\n    if (isNumber(nodeSpacing)) {\n      nodeSpacingFunc = function nodeSpacingFunc() {\n        return nodeSpacing;\n      };\n    } else if (isFunction(nodeSpacing)) {\n      nodeSpacingFunc = nodeSpacing;\n    } else {\n      nodeSpacingFunc = function nodeSpacingFunc() {\n        return 0;\n      };\n    }\n\n    if (!nodeSize) {\n      nodeSizeFunc = function nodeSizeFunc(d) {\n        if (d.size) {\n          if (isArray(d.size)) {\n            var res = d.size[0] > d.size[1] ? d.size[0] : d.size[1];\n            return res / 2 + nodeSpacingFunc(d);\n          }\n\n          return d.size / 2 + nodeSpacingFunc(d);\n        }\n\n        return 10 + nodeSpacingFunc(d);\n      };\n    } else if (isFunction(nodeSize)) {\n      nodeSizeFunc = function nodeSizeFunc(d) {\n        var size = nodeSize(d);\n        return size + nodeSpacingFunc(d);\n      };\n    } else if (isArray(nodeSize)) {\n      var larger = nodeSize[0] > nodeSize[1] ? nodeSize[0] : nodeSize[1];\n      var radius_1 = larger / 2;\n\n      nodeSizeFunc = function nodeSizeFunc(d) {\n        return radius_1 + nodeSpacingFunc(d);\n      };\n    } else if (isNumber(nodeSize)) {\n      var radius_2 = nodeSize / 2;\n\n      nodeSizeFunc = function nodeSizeFunc(d) {\n        return radius_2 + nodeSpacingFunc(d);\n      };\n    } else {\n      nodeSizeFunc = function nodeSizeFunc() {\n        return 10;\n      };\n    } // forceCollide's parameter is a radius\n\n\n    simulation.force('collisionForce', d3Force.forceCollide(nodeSizeFunc).strength(collideStrength));\n  };\n  /**\n   * 更新布局配置，但不执行布局\n   * @param {object} cfg 需要更新的配置项\n   */\n\n\n  ForceLayout.prototype.updateCfg = function (cfg) {\n    var self = this;\n\n    if (self.ticking) {\n      self.forceSimulation.stop();\n      self.ticking = false;\n    }\n\n    self.forceSimulation = null;\n    mix(self, cfg);\n  };\n\n  ForceLayout.prototype.destroy = function () {\n    var self = this;\n\n    if (self.ticking) {\n      self.forceSimulation.stop();\n      self.ticking = false;\n    }\n\n    self.nodes = null;\n    self.edges = null;\n    self.destroyed = true;\n  };\n\n  return ForceLayout;\n}(BaseLayout);\n\nexport default ForceLayout; // Return total ticks of d3-force simulation\n\nfunction getSimulationTicks(simulation) {\n  var alphaMin = simulation.alphaMin();\n  var alphaTarget = simulation.alphaTarget();\n  var alpha = simulation.alpha();\n  var totalTicksFloat = Math.log((alphaMin - alphaTarget) / (alpha - alphaTarget)) / Math.log(1 - simulation.alphaDecay());\n  var totalTicks = Math.ceil(totalTicksFloat);\n  return totalTicks;\n} // 判断是否运行在web worker里\n\n\nfunction isInWorker() {\n  // eslint-disable-next-line no-undef\n  return typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope;\n}","map":{"version":3,"sources":["C:/Users/vietn/Desktop/AppEnegry2020/frontend/node_modules/@antv/g6/es/layout/force.js"],"names":["__extends","d3Force","isArray","isFunction","isNumber","mix","BaseLayout","LAYOUT_MESSAGE","ForceLayout","_super","_this","apply","arguments","center","nodeStrength","edgeStrength","preventOverlap","linkDistance","alphaDecay","alphaMin","alpha","collideStrength","workerEnabled","tick","onLayoutEnd","onTick","ticking","undefined","prototype","getDefaultCfg","nodeSize","nodeSpacing","forceSimulation","init","data","self","nodes","edges","map","edge","res","expectKeys","Object","keys","forEach","key","indexOf","execute","reloadData","simulation","nodeForce","forceManyBody","strength","force","forceCenter","overlapProcess","edgeForce","forceLink","id","d","links","distance","isInWorker","console","warn","on","stop","totalTicks","getSimulationTicks","currentTick","postMessage","type","TICK","e","restart","nodeSizeFunc","nodeSpacingFunc","size","larger","radius_1","radius_2","forceCollide","updateCfg","cfg","destroy","destroyed","alphaTarget","totalTicksFloat","Math","log","ceil","WorkerGlobalScope"],"mappings":"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","sourcesContent":["/**\n * @fileOverview random layout\n * @author shiwu.wyy@antfin.com\n */\nimport { __extends } from \"tslib\";\nimport * as d3Force from 'd3-force';\nimport isArray from '@antv/util/lib/is-array';\nimport isFunction from '@antv/util/lib/is-function';\nimport isNumber from '@antv/util/lib/is-number';\nimport mix from '@antv/util/lib/mix';\nimport { BaseLayout } from './layout';\nimport { LAYOUT_MESSAGE } from './worker/layoutConst';\n/**\n * 经典力导布局 force-directed\n */\n\nvar ForceLayout =\n/** @class */\nfunction (_super) {\n  __extends(ForceLayout, _super);\n\n  function ForceLayout() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /** 向心力作用点 */\n\n\n    _this.center = [0, 0];\n    /** 节点作用力 */\n\n    _this.nodeStrength = null;\n    /** 边的作用力, 默认为根据节点的入度出度自适应 */\n\n    _this.edgeStrength = null;\n    /** 是否防止节点相互覆盖 */\n\n    _this.preventOverlap = false;\n    /** 默认边长度 */\n\n    _this.linkDistance = 50;\n    /** 迭代阈值的衰减率 [0, 1]，0.028 对应最大迭代数为 300 */\n\n    _this.alphaDecay = 0.028;\n    /** 停止迭代的阈值 */\n\n    _this.alphaMin = 0.001;\n    /** 当前阈值 */\n\n    _this.alpha = 0.3;\n    /** 防止重叠的力强度 */\n\n    _this.collideStrength = 1;\n    /** 是否启用web worker。前提是在web worker里执行布局，否则无效\t*/\n\n    _this.workerEnabled = false;\n\n    _this.tick = function () {};\n    /** 布局完成回调 */\n\n\n    _this.onLayoutEnd = function () {};\n    /** 布局每一次迭代完成的回调 */\n\n\n    _this.onTick = function () {};\n    /** 是否正在布局 */\n\n\n    _this.ticking = undefined;\n    return _this;\n  }\n\n  ForceLayout.prototype.getDefaultCfg = function () {\n    return {\n      center: [0, 0],\n      nodeStrength: null,\n      edgeStrength: null,\n      preventOverlap: false,\n      nodeSize: undefined,\n      nodeSpacing: undefined,\n      linkDistance: 50,\n      forceSimulation: null,\n      alphaDecay: 0.028,\n      alphaMin: 0.001,\n      alpha: 0.3,\n      collideStrength: 1,\n      tick: function tick() {},\n      onLayoutEnd: function onLayoutEnd() {},\n      onTick: function onTick() {},\n      // 是否启用web worker。前提是在web worker里执行布局，否则无效\n      workerEnabled: false\n    };\n  };\n  /**\n   * 初始化\n   * @param {object} data 数据\n   */\n\n\n  ForceLayout.prototype.init = function (data) {\n    var self = this;\n    self.nodes = data.nodes || [];\n    var edges = data.edges || [];\n    self.edges = edges.map(function (edge) {\n      var res = {};\n      var expectKeys = ['targetNode', 'sourceNode', 'startPoint', 'endPoint'];\n      Object.keys(edge).forEach(function (key) {\n        if (!(expectKeys.indexOf(key) > -1)) {\n          res[key] = edge[key];\n        }\n      });\n      return res;\n    });\n    self.ticking = false;\n  };\n  /**\n   * 执行布局\n   */\n\n\n  ForceLayout.prototype.execute = function (reloadData) {\n    var self = this;\n    var nodes = self.nodes;\n    var edges = self.edges; // 如果正在布局，忽略布局请求\n\n    if (self.ticking) {\n      return;\n    }\n\n    var simulation = self.forceSimulation;\n    var alphaMin = self.alphaMin;\n    var alphaDecay = self.alphaDecay;\n    var alpha = self.alpha;\n\n    if (!simulation) {\n      try {\n        // 定义节点的力\n        var nodeForce = d3Force.forceManyBody();\n\n        if (self.nodeStrength) {\n          nodeForce.strength(self.nodeStrength);\n        }\n\n        simulation = d3Force.forceSimulation().nodes(nodes).force('center', d3Force.forceCenter(self.center[0], self.center[1])).force('charge', nodeForce).alpha(alpha).alphaDecay(alphaDecay).alphaMin(alphaMin);\n\n        if (self.preventOverlap) {\n          self.overlapProcess(simulation);\n        } // 如果有边，定义边的力\n\n\n        if (edges) {\n          // d3 的 forceLayout 会重新生成边的数据模型，为了避免污染源数据\n          var edgeForce = d3Force.forceLink().id(function (d) {\n            return d.id;\n          }).links(edges);\n\n          if (self.edgeStrength) {\n            edgeForce.strength(self.edgeStrength);\n          }\n\n          if (self.linkDistance) {\n            edgeForce.distance(self.linkDistance);\n          }\n\n          self.edgeForce = edgeForce;\n          simulation.force('link', edgeForce);\n        }\n\n        if (self.workerEnabled && !isInWorker()) {\n          // 如果不是运行在web worker里，不用web worker布局\n          self.workerEnabled = false;\n          console.warn('workerEnabled option is only supported when running in web worker.');\n        }\n\n        if (!self.workerEnabled) {\n          simulation.on('tick', function () {\n            self.tick();\n          }).on('end', function () {\n            self.ticking = false;\n\n            if (self.onLayoutEnd) {\n              self.onLayoutEnd();\n            }\n          });\n          self.ticking = true;\n        } else {\n          // worker is enabled\n          simulation.stop();\n          var totalTicks = getSimulationTicks(simulation);\n\n          for (var currentTick = 1; currentTick <= totalTicks; currentTick++) {\n            simulation.tick(); // currentTick starts from 1.\n\n            postMessage({\n              type: LAYOUT_MESSAGE.TICK,\n              currentTick: currentTick,\n              totalTicks: totalTicks,\n              nodes: nodes\n            }, undefined);\n          }\n\n          self.ticking = false;\n        }\n\n        self.forceSimulation = simulation;\n        self.ticking = true;\n      } catch (e) {\n        self.ticking = false;\n        console.warn(e);\n      }\n    } else {\n      if (reloadData) {\n        simulation.nodes(nodes);\n        self.edgeForce.links(edges);\n      }\n\n      if (self.preventOverlap) {\n        self.overlapProcess(simulation);\n      }\n\n      simulation.alpha(alpha).restart();\n      this.ticking = true;\n    }\n  };\n  /**\n   * 防止重叠\n   * @param {object} simulation 力模拟模型\n   */\n\n\n  ForceLayout.prototype.overlapProcess = function (simulation) {\n    var self = this;\n    var nodeSize = self.nodeSize;\n    var nodeSpacing = self.nodeSpacing;\n    var nodeSizeFunc;\n    var nodeSpacingFunc;\n    var collideStrength = self.collideStrength;\n\n    if (isNumber(nodeSpacing)) {\n      nodeSpacingFunc = function nodeSpacingFunc() {\n        return nodeSpacing;\n      };\n    } else if (isFunction(nodeSpacing)) {\n      nodeSpacingFunc = nodeSpacing;\n    } else {\n      nodeSpacingFunc = function nodeSpacingFunc() {\n        return 0;\n      };\n    }\n\n    if (!nodeSize) {\n      nodeSizeFunc = function nodeSizeFunc(d) {\n        if (d.size) {\n          if (isArray(d.size)) {\n            var res = d.size[0] > d.size[1] ? d.size[0] : d.size[1];\n            return res / 2 + nodeSpacingFunc(d);\n          }\n\n          return d.size / 2 + nodeSpacingFunc(d);\n        }\n\n        return 10 + nodeSpacingFunc(d);\n      };\n    } else if (isFunction(nodeSize)) {\n      nodeSizeFunc = function nodeSizeFunc(d) {\n        var size = nodeSize(d);\n        return size + nodeSpacingFunc(d);\n      };\n    } else if (isArray(nodeSize)) {\n      var larger = nodeSize[0] > nodeSize[1] ? nodeSize[0] : nodeSize[1];\n      var radius_1 = larger / 2;\n\n      nodeSizeFunc = function nodeSizeFunc(d) {\n        return radius_1 + nodeSpacingFunc(d);\n      };\n    } else if (isNumber(nodeSize)) {\n      var radius_2 = nodeSize / 2;\n\n      nodeSizeFunc = function nodeSizeFunc(d) {\n        return radius_2 + nodeSpacingFunc(d);\n      };\n    } else {\n      nodeSizeFunc = function nodeSizeFunc() {\n        return 10;\n      };\n    } // forceCollide's parameter is a radius\n\n\n    simulation.force('collisionForce', d3Force.forceCollide(nodeSizeFunc).strength(collideStrength));\n  };\n  /**\n   * 更新布局配置，但不执行布局\n   * @param {object} cfg 需要更新的配置项\n   */\n\n\n  ForceLayout.prototype.updateCfg = function (cfg) {\n    var self = this;\n\n    if (self.ticking) {\n      self.forceSimulation.stop();\n      self.ticking = false;\n    }\n\n    self.forceSimulation = null;\n    mix(self, cfg);\n  };\n\n  ForceLayout.prototype.destroy = function () {\n    var self = this;\n\n    if (self.ticking) {\n      self.forceSimulation.stop();\n      self.ticking = false;\n    }\n\n    self.nodes = null;\n    self.edges = null;\n    self.destroyed = true;\n  };\n\n  return ForceLayout;\n}(BaseLayout);\n\nexport default ForceLayout; // Return total ticks of d3-force simulation\n\nfunction getSimulationTicks(simulation) {\n  var alphaMin = simulation.alphaMin();\n  var alphaTarget = simulation.alphaTarget();\n  var alpha = simulation.alpha();\n  var totalTicksFloat = Math.log((alphaMin - alphaTarget) / (alpha - alphaTarget)) / Math.log(1 - simulation.alphaDecay());\n  var totalTicks = Math.ceil(totalTicksFloat);\n  return totalTicks;\n} // 判断是否运行在web worker里\n\n\nfunction isInWorker() {\n  // eslint-disable-next-line no-undef\n  return typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope;\n}"]},"metadata":{},"sourceType":"module"}