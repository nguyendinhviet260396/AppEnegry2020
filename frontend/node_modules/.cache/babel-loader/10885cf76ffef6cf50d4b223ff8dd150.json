{"ast":null,"code":"import { each, clone, isObject, isFunction } from '@antv/util'; // import { compare } from '../../base/controller/state';\n// 对axis label和label样式进行缓存\n\nvar labels;\nvar originAttrs;\n\nfunction onActive(plot, condition) {\n  if (!labels) {\n    getAllAxisLabels(plot);\n  }\n\n  each(labels, function (label) {\n    var _a = beforeCompare(label, condition),\n        labelData = _a.labelData,\n        con = _a.con;\n\n    if (compare(labelData, con)) {\n      var disableStyle = labelActiveStyle();\n      label.shape.attr(disableStyle);\n    }\n  });\n}\n\nfunction onDisable(plot, condition) {\n  if (!labels) {\n    getAllAxisLabels(plot);\n  }\n\n  each(labels, function (label, index) {\n    var _a = beforeCompare(label, condition),\n        labelData = _a.labelData,\n        con = _a.con;\n\n    if (compare(labelData, con)) {\n      var originAttr = originAttrs[index];\n      var disableStyle = labelDisableStyle(originAttr);\n      label.shape.attr(disableStyle);\n    }\n  });\n}\n\nfunction getAllAxisLabels(plot) {\n  var _a;\n\n  labels = [];\n  originAttrs = [];\n  var axes = (_a = plot.view.getController('axis')) === null || _a === void 0 ? void 0 : _a.getComponents();\n  each(axes, function (axisComponentOption) {\n    var axis = axisComponentOption.component;\n    var labelArr = [];\n    var scale = getScale(plot, axis);\n    var labelShapes = axis.get('labelRenderer').get('group').get('children');\n    each(labelShapes, function (shape) {\n      if (shape.type === 'text') {\n        labelArr.push({\n          shape: shape\n        });\n        originAttrs.push(shape.attr());\n      }\n    });\n\n    if (scale) {\n      // 取到scale values作为原始数据，避免被label format的影响\n      var ticks_1 = scale.ticks,\n          field_1 = scale.field;\n      each(labelArr, function (label, index) {\n        label.value = ticks_1[index];\n        label.scaleField = field_1;\n        label.type = scale.type;\n      });\n    }\n\n    labels.push.apply(labels, labelArr);\n  });\n} // 获取坐标轴对应的scale\n\n\nfunction getScale(plot, axis) {\n  var props = plot.options;\n  var dim = 'y';\n  var position = axis.get('position');\n\n  if (position === 'bottom' || position === 'top') {\n    dim = 'x';\n  }\n\n  var scaleField = props[dim + \"Field\"];\n  return plot.view.get('scales')[scaleField];\n}\n\nfunction beforeCompare(label, condition) {\n  var _a;\n\n  var labelData = (_a = {}, _a[label.scaleField] = label.value, _a);\n  var con = clone(condition);\n\n  if (label.type === 'time' && isObject(condition) && !isFunction(con.exp)) {\n    con.exp = new Date(con.exp).getTime();\n  }\n\n  return {\n    labelData: labelData,\n    con: con\n  };\n}\n\nfunction labelDisableStyle(style) {\n  var opacity = style.opacity || 1;\n  return {\n    opacity: opacity * 0.2\n  };\n}\n\nfunction labelActiveStyle() {\n  return {\n    opacity: 1,\n    fontWeight: 600,\n    fill: 'red'\n  };\n}\n\nfunction compare(origin, condition) {\n  if (!isFunction(condition)) {\n    var name_1 = condition.name,\n        exp = condition.exp;\n\n    if (!origin[name_1]) {\n      return false;\n    }\n\n    if (isFunction(exp)) {\n      return exp(origin[name_1]);\n    }\n\n    return origin[name_1] === exp;\n  }\n\n  return condition(origin);\n}\n\nexport default {\n  active: onActive,\n  selected: onActive,\n  disable: onDisable\n};","map":{"version":3,"sources":["../../../src/components/axis/state.ts"],"names":[],"mappings":"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","sourcesContent":["import { each, clone, isObject, isFunction } from '@antv/util';\n// import { compare } from '../../base/controller/state';\n\n// 对axis label和label样式进行缓存\nlet labels;\nlet originAttrs;\n\nfunction onActive(plot, condition) {\n  if (!labels) {\n    getAllAxisLabels(plot);\n  }\n  each(labels, (label) => {\n    const { labelData, con } = beforeCompare(label, condition);\n    if (compare(labelData, con)) {\n      const disableStyle = labelActiveStyle();\n      label.shape.attr(disableStyle);\n    }\n  });\n}\n\nfunction onDisable(plot, condition) {\n  if (!labels) {\n    getAllAxisLabels(plot);\n  }\n  each(labels, (label, index) => {\n    const { labelData, con } = beforeCompare(label, condition);\n    if (compare(labelData, con)) {\n      const originAttr = originAttrs[index];\n      const disableStyle = labelDisableStyle(originAttr);\n      label.shape.attr(disableStyle);\n    }\n  });\n}\n\nfunction getAllAxisLabels(plot) {\n  labels = [];\n  originAttrs = [];\n  const axes = plot.view.getController('axis')?.getComponents();\n  each(axes, (axisComponentOption) => {\n    const axis = axisComponentOption.component;\n    const labelArr = [];\n    const scale = getScale(plot, axis);\n    const labelShapes = axis.get('labelRenderer').get('group').get('children');\n    each(labelShapes, (shape) => {\n      if (shape.type === 'text') {\n        labelArr.push({ shape });\n        originAttrs.push(shape.attr());\n      }\n    });\n    if (scale) {\n      // 取到scale values作为原始数据，避免被label format的影响\n      const { ticks, field } = scale;\n      each(labelArr, (label, index) => {\n        label.value = ticks[index];\n        label.scaleField = field;\n        label.type = scale.type;\n      });\n    }\n    labels.push(...labelArr);\n  });\n}\n\n// 获取坐标轴对应的scale\nfunction getScale(plot, axis) {\n  const props = plot.options;\n  let dim = 'y';\n  const position = axis.get('position');\n  if (position === 'bottom' || position === 'top') {\n    dim = 'x';\n  }\n  const scaleField = props[`${dim}Field`];\n  return plot.view.get('scales')[scaleField];\n}\n\nfunction beforeCompare(label, condition) {\n  const labelData = { [label.scaleField]: label.value };\n  const con = clone(condition);\n  if (label.type === 'time' && isObject(condition) && !isFunction(con.exp)) {\n    con.exp = new Date(con.exp).getTime();\n  }\n  return { labelData, con };\n}\n\nfunction labelDisableStyle(style) {\n  const opacity = style.opacity || 1;\n  return { opacity: opacity * 0.2 };\n}\n\nfunction labelActiveStyle() {\n  return { opacity: 1, fontWeight: 600, fill: 'red' };\n}\n\nfunction compare(origin, condition) {\n  if (!isFunction(condition)) {\n    const { name, exp } = condition;\n    if (!origin[name]) {\n      return false;\n    }\n    if (isFunction(exp)) {\n      return exp(origin[name]);\n    }\n    return origin[name] === exp;\n  }\n  return condition(origin);\n}\n\nexport default {\n  active: onActive,\n  selected: onActive,\n  disable: onDisable,\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}