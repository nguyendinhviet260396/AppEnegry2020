{"ast":null,"code":"import { each, deepMix, upperFirst } from '@antv/util';\nvar eventNames = ['click', 'dblclick', 'mousemove', 'mouseenter', 'mouseleave', 'mousedown', 'mouseup', 'contextmenu'];\nvar mobileEventNames = [\n  /*'touchstart',\n  'touchmove',\n  'touchend',\n  'pressstart',\n  'press',\n  'pressend',\n  'swipestart',\n  'swipe',\n  'swipeend',\n  'pinchstart',\n  'pinch',\n  'pinchend',\n  'panstart',\n  'pan',\n  'panend',*/\n];\nvar viewComponentMap = {\n  axis: 'axis-label',\n  label: 'label',\n  legend: 'legend-item'\n};\nvar canvasComponentMap = {\n  title: 'title',\n  description: 'description',\n  breadcrumb: 'breadcrumb'\n};\nvar CANVAS_EVENT_MAP = deepMix(getEventMap(canvasComponentMap), getRegionEventMap('Plot', eventNames));\nvar LAYER_EVENT_MAP = getRegionEventMap('Layer', eventNames); //移动端事件暂时只支持view级\n\nvar EVENT_MAP = deepMix({}, getEventMap(viewComponentMap), getRegionEventMap('View', eventNames), getMobileEventMap());\n\nfunction onEvent(layer, eventName, handler) {\n  layer.view.on(eventName, function (ev) {\n    var eventData = {\n      x: ev === null || ev === void 0 ? void 0 : ev.x,\n      y: ev === null || ev === void 0 ? void 0 : ev.y,\n      clientX: ev === null || ev === void 0 ? void 0 : ev.clientX,\n      clientY: ev === null || ev === void 0 ? void 0 : ev.clientY,\n      target: ev === null || ev === void 0 ? void 0 : ev.target,\n      data: (ev === null || ev === void 0 ? void 0 : ev.data) ? ev.data.data : null,\n      plot: layer,\n      canvas: layer.canvas,\n      gEvent: ev === null || ev === void 0 ? void 0 : ev.gEvent\n    };\n    handler(eventData);\n  });\n}\n\nexport function getEventMap(map) {\n  var eventMap = {};\n  each(map, function (item, key) {\n    var componentName = upperFirst(key);\n    var namePrefix = \"on\" + componentName;\n    var eventPrefix = item + \":\";\n    each(eventNames, function (name) {\n      var eventName = upperFirst(name);\n      var eventKey = \"\" + namePrefix + eventName;\n      var event = \"\" + eventPrefix + name;\n      eventMap[eventKey] = event;\n    });\n  });\n  return eventMap;\n}\nexport function getRegionEventMap(prefix, eventList) {\n  var eventMap = {};\n  var namePrefix = \"on\";\n  each(eventList, function (name) {\n    var eventName = upperFirst(name);\n    var eventKey = \"\" + namePrefix + prefix + eventName;\n    eventMap[eventKey] = name;\n  });\n  return eventMap;\n}\nexport function getMobileEventMap() {\n  var eventMap = {};\n  var namePrefix = \"on\";\n  each(mobileEventNames, function (name) {\n    var eventName = upperFirst(name);\n    var eventKey = \"\" + namePrefix + eventName;\n    eventMap[eventKey] = name;\n  });\n  return eventMap;\n}\nexport { EVENT_MAP, CANVAS_EVENT_MAP, LAYER_EVENT_MAP, onEvent };","map":{"version":3,"sources":["../../src/util/event.ts"],"names":[],"mappings":"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","sourcesContent":["import ViewLayer from '../base/view-layer';\nimport { LooseMap } from '../interface/types';\nimport { each, deepMix, upperFirst } from '@antv/util';\n\ntype IEventmap = LooseMap<string>;\n\ntype Handler = (...__: any[]) => {};\n\nconst eventNames = [\n  'click',\n  'dblclick',\n  'mousemove',\n  'mouseenter',\n  'mouseleave',\n  'mousedown',\n  'mouseup',\n  'contextmenu',\n];\n\nconst mobileEventNames = [\n  /*'touchstart',\n  'touchmove',\n  'touchend',\n  'pressstart',\n  'press',\n  'pressend',\n  'swipestart',\n  'swipe',\n  'swipeend',\n  'pinchstart',\n  'pinch',\n  'pinchend',\n  'panstart',\n  'pan',\n  'panend',*/\n];\n\nconst viewComponentMap = {\n  axis: 'axis-label',\n  label: 'label',\n  legend: 'legend-item',\n};\n\nconst canvasComponentMap = {\n  title: 'title',\n  description: 'description',\n  breadcrumb: 'breadcrumb',\n};\n\nconst CANVAS_EVENT_MAP: IEventmap = deepMix(getEventMap(canvasComponentMap), getRegionEventMap('Plot', eventNames));\n\nconst LAYER_EVENT_MAP: IEventmap = getRegionEventMap('Layer', eventNames);\n\n//移动端事件暂时只支持view级\nconst EVENT_MAP: IEventmap = deepMix(\n  {},\n  getEventMap(viewComponentMap),\n  getRegionEventMap('View', eventNames),\n  getMobileEventMap()\n);\n\nfunction onEvent(layer: ViewLayer, eventName: string, handler: Handler) {\n  layer.view.on(eventName, (ev?: any) => {\n    const eventData = {\n      x: ev?.x,\n      y: ev?.y,\n      clientX: ev?.clientX,\n      clientY: ev?.clientY,\n      target: ev?.target,\n      data: ev?.data ? ev.data.data : null,\n      plot: layer,\n      canvas: layer.canvas,\n      gEvent: ev?.gEvent,\n    };\n    handler(eventData);\n  });\n}\n\nexport function getEventMap(map) {\n  const eventMap: IEventmap = {};\n  each(map, (item, key) => {\n    const componentName = upperFirst(key);\n    const namePrefix = `on${componentName}`;\n    const eventPrefix = `${item}:`;\n    each(eventNames, (name) => {\n      const eventName = upperFirst(name);\n      const eventKey = `${namePrefix}${eventName}`;\n      const event = `${eventPrefix}${name}`;\n      eventMap[eventKey] = event;\n    });\n  });\n  return eventMap;\n}\n\nexport function getRegionEventMap(prefix, eventList) {\n  const eventMap: IEventmap = {};\n  const namePrefix = `on`;\n  each(eventList, (name) => {\n    const eventName = upperFirst(name);\n    const eventKey = `${namePrefix}${prefix}${eventName}`;\n    eventMap[eventKey] = name;\n  });\n  return eventMap;\n}\n\nexport function getMobileEventMap() {\n  const eventMap: IEventmap = {};\n  const namePrefix = `on`;\n  each(mobileEventNames, (name) => {\n    const eventName = upperFirst(name);\n    const eventKey = `${namePrefix}${eventName}`;\n    eventMap[eventKey] = name;\n  });\n  return eventMap;\n}\n\nexport { IEventmap, EVENT_MAP, CANVAS_EVENT_MAP, LAYER_EVENT_MAP, onEvent };\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}