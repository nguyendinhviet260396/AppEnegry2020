{"ast":null,"code":"import { fork, take, call, put, delay, takeLatest, select } from 'redux-saga/effects'; //select to listTask from store\n\nimport * as alarmTypes from './../constants/alarm';\nimport * as authTypes from './../constants/auths';\nimport * as deviceTypes from './../constants/devices';\nimport //getListAlarm\n'./../apis/alarm';\nimport { getListUser, addUser, loginUser, deteleUser, updateUser } from './../apis/auth';\nimport { getListData //updateData,\n//addData,\n} from './../apis/devices';\nimport { STATUS_CODE } from './../constants/index';\nimport { showLoading, hideLoading } from './../actions/ui';\nimport { hideModal } from './../actions/modal';\nimport { fetchListAlarm //fetchListAlarmSuccess,\n//fetchListAlarmFailed,\n} from './../actions/alarm';\nimport { authSignupSuccess, authSignupFaild, authLoginSuccess, authLoginFaild, checkAuthFaild, checkAuthSuccess, fetchListUserFailed, fetchListUserSuccess, setUserDeleteSucces, setUserDeleteFaild, updateUserSuccess, updateUserFailed } from './../actions/auths';\nimport { refeshSolar01Failed, refeshSolar01Success, refeshSolar02Success, refeshSolar02Failed //refeshMainSuccess,\n//refeshMainFailed,\n, refeshFishLakeAreaSuccess, refeshFishLakeAreaFailed, refeshHouseAreaSuccess, refeshHouseAreaFailed //refeshAllAreaSuccess,\n//refeshAllAreaFailed,\n} from '../actions/devices';\n/**\r\n * B1: dispatch action fetchTask\r\n * B2:Call animationPlayState: \r\n * B3:Kiểm tra status_code\r\n * Nếu thành công thì thực thi ...\r\n * Nếu thất bại thì thực thi gì đó....button-big\r\n * B4:Tắt Loadding\r\n * B5:thực thi công việc tiếp theo...\r\n */\n// function* watchFetchListAlarmAction(){\n//     while (true){\n//         const action = yield take(alarmTypes.FETCH_ALARM);// khi FETCH_TASK duoc dispatch thi code tu day tro xuong moi chay\n//         yield put(showLoading());\n//         const {params}=action.payload;\n//         console.log(params)\n//         const resp = yield call(getListAlarm,'api/v1/main/getalarm','alarm');\n//         const {status,data}= resp;\n//         if(status === STATUS_CODE.SUCCESS){\n//             yield put(fetchListAlarmSuccess(data));  \n//         }else{\n//             yield put(fetchListAlarmFailed(data));\n//         }\n//         yield delay(100);\n//         yield put(hideLoading());\n//     } \n// }\n\nfunction* filterAlarmSaga({\n  payload\n}) {\n  yield delay(500);\n  const {\n    keyword\n  } = payload;\n  console.log(keyword.type);\n  yield put(fetchListAlarm({\n    //filter:keyword.charAt(0).toUpperCase() + keyword.slice(1),// mockAPI\n    q: keyword.devicename //json-server\n\n  }));\n}\n\nfunction* loginSaga({\n  payload\n}) {\n  const {\n    email,\n    password\n  } = payload;\n  yield put(showLoading());\n  const resp = yield call(loginUser, 'api/v1/users/login', {\n    email,\n    password\n  });\n  const {\n    data,\n    status\n  } = resp;\n\n  if (status === STATUS_CODE.SUCCESS) {\n    console.log(data);\n    yield put(authLoginSuccess(data));\n    yield put(checkAuthSuccess());\n  } else {\n    yield put(checkAuthFaild());\n    yield put(authLoginFaild(data));\n  }\n\n  yield delay(200);\n  yield put(hideLoading());\n}\n\nfunction* signupSaga({\n  payload\n}) {\n  const {\n    name,\n    email,\n    password,\n    operator\n  } = payload;\n  yield put(showLoading());\n  const resp = yield call(addUser, 'api/v1/users/add', {\n    name,\n    email,\n    password,\n    operator\n  });\n  const {\n    data,\n    status\n  } = resp;\n\n  if (status === STATUS_CODE.CREATED) {\n    const resp = yield call(getListUser, 'api/v1/users/', '');\n    const {\n      status,\n      data\n    } = resp;\n    yield delay(100);\n\n    if (status === STATUS_CODE.SUCCESS) {\n      yield put(authSignupSuccess(data));\n      yield put(hideModal());\n    }\n  } else {\n    yield put(authSignupFaild(data));\n  }\n\n  yield delay(100);\n  yield put(hideLoading());\n}\n\nfunction* updateUserSaga({\n  payload\n}) {\n  const {\n    name,\n    email,\n    password,\n    operator\n  } = payload;\n  const userEditting = yield select(state => state.auth.userEditting);\n  const {\n    id\n  } = userEditting;\n  yield put(showLoading());\n  const resp = yield call(updateUser, 'api/v1/users/update', {\n    id,\n    name,\n    email,\n    password,\n    operator\n  });\n  const {\n    data,\n    status\n  } = resp;\n\n  if (status === STATUS_CODE.UPDATED) {\n    const resp = yield call(getListUser, 'api/v1/users', '');\n    const {\n      status,\n      data\n    } = resp;\n    yield delay(100);\n\n    if (status === STATUS_CODE.SUCCESS) {\n      yield put(updateUserSuccess(data));\n      yield put(hideModal());\n    }\n  } else {\n    yield put(updateUserFailed(data));\n  }\n\n  yield delay(100);\n  yield put(hideLoading());\n}\n\nfunction* watchFetchListUserAction() {\n  while (true) {\n    const action = yield take(authTypes.FETCH_USER); // khi FETCH_TASK duoc dispatch thi code tu day tro xuong moi chay\n\n    yield put(showLoading());\n    const {\n      params\n    } = action.payload;\n    const resp = yield call(getListUser, 'api/v1/users/', params);\n    const {\n      status,\n      data\n    } = resp;\n\n    if (status === STATUS_CODE.SUCCESS) {\n      yield put(fetchListUserSuccess(data));\n    } else {\n      yield put(fetchListUserFailed(data));\n    }\n\n    yield delay(50);\n    yield put(hideLoading());\n  }\n}\n\nfunction* deleteUserSaga({\n  payload\n}) {\n  const {\n    id\n  } = payload;\n  yield put(showLoading());\n  const reps = yield call(deteleUser, 'api/v1/users', id);\n  const {\n    data,\n    status\n  } = reps;\n\n  if (status === STATUS_CODE.NO_CONTENT) {\n    const resp = yield call(getListUser, 'api/v1/users', '');\n    const {\n      status,\n      data\n    } = resp;\n    yield delay(100);\n\n    if (status === STATUS_CODE.SUCCESS) {\n      yield put(setUserDeleteSucces(data));\n      yield put(hideModal());\n    }\n  } else {\n    yield put(setUserDeleteFaild(data));\n  }\n\n  yield delay(100);\n  yield put(hideLoading());\n}\n\nfunction* refeshAllArea() {// const resp = yield call(getListData,'api/v1/leak/getlast','');\n  // const {status,data}= resp;\n  // if(status === STATUS_CODE.SUCCESS && data.lenght !== 0){\n  //     yield put(refeshLEAKSuccess(data));  \n  // }else{\n  //     yield put(refeshLEAKFailed(data));\n  // }\n} // refesh data leak\n\n\nfunction* refeshHouseArea() {\n  const resp = yield call(getListData, 'api/v1/spm93/getlast', '');\n  const {\n    status,\n    data\n  } = resp;\n\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\n    yield put(refeshHouseAreaSuccess(data));\n  } else {\n    yield put(refeshHouseAreaFailed(data));\n  }\n} // refesh data leak\n\n\nfunction* refeshfishLakeArea({\n  payload\n}) {\n  const {\n    params\n  } = payload;\n  const resp = yield call(getListData, 'api/v1/spm91/getlast', {\n    params\n  });\n  const {\n    status,\n    data\n  } = resp;\n  console.log(data);\n\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\n    yield put(refeshFishLakeAreaSuccess(data));\n  } else {\n    yield put(refeshFishLakeAreaFailed(data));\n  }\n} // refesh data leak\n\n\nfunction* refeshSolar01Area({\n  payload\n}) {\n  const {\n    params\n  } = payload;\n  const resp = yield call(getListData, 'api/v1/spm91/getlast', {\n    params\n  });\n  const {\n    status,\n    data\n  } = resp;\n\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\n    yield put(refeshSolar01Success(data));\n  } else {\n    yield put(refeshSolar01Failed(data));\n  }\n} // refesh data leak\n\n\nfunction* refeshSolar02Area({\n  payload\n}) {\n  const {\n    params\n  } = payload;\n  const resp = yield call(getListData, 'api/v1/spm91/getlast', {\n    params\n  });\n  const {\n    status,\n    data\n  } = resp;\n\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\n    yield put(refeshSolar02Success(data));\n  } else {\n    yield put(refeshSolar02Failed(data));\n  }\n}\n\nfunction* rootSaga() {\n  // yield fork(watchFetchListAlarmAction);\n  yield fork(watchFetchListUserAction);\n  yield takeLatest(alarmTypes.FILTER_ALARM, filterAlarmSaga);\n  yield takeLatest(authTypes.AUTH_LOGIN, loginSaga);\n  yield takeLatest(authTypes.AUTH_SIGNUP, signupSaga);\n  yield takeLatest(authTypes.SET_USER_DELETE, deleteUserSaga);\n  yield takeLatest(authTypes.UPDATE_USER, updateUserSaga);\n  yield takeLatest(deviceTypes.REFESH_ALL_AREA, refeshAllArea);\n  yield takeLatest(deviceTypes.REFESH_HOUSE_AREA, refeshHouseArea);\n  yield takeLatest(deviceTypes.REFESH_FISH_LAKE_AREA, refeshfishLakeArea);\n  yield takeLatest(deviceTypes.REFESH_SOLAR01_AREA, refeshSolar01Area);\n  yield takeLatest(deviceTypes.REFESH_SOLAR02_AREA, refeshSolar02Area);\n}\n\nexport default rootSaga;","map":{"version":3,"sources":["C:/Users/vietn/Desktop/AppEnegry2020/frontend/src/sagas/index.js"],"names":["fork","take","call","put","delay","takeLatest","select","alarmTypes","authTypes","deviceTypes","getListUser","addUser","loginUser","deteleUser","updateUser","getListData","STATUS_CODE","showLoading","hideLoading","hideModal","fetchListAlarm","authSignupSuccess","authSignupFaild","authLoginSuccess","authLoginFaild","checkAuthFaild","checkAuthSuccess","fetchListUserFailed","fetchListUserSuccess","setUserDeleteSucces","setUserDeleteFaild","updateUserSuccess","updateUserFailed","refeshSolar01Failed","refeshSolar01Success","refeshSolar02Success","refeshSolar02Failed","refeshFishLakeAreaSuccess","refeshFishLakeAreaFailed","refeshHouseAreaSuccess","refeshHouseAreaFailed","filterAlarmSaga","payload","keyword","console","log","type","q","devicename","loginSaga","email","password","resp","data","status","SUCCESS","signupSaga","name","operator","CREATED","updateUserSaga","userEditting","state","auth","id","UPDATED","watchFetchListUserAction","action","FETCH_USER","params","deleteUserSaga","reps","NO_CONTENT","refeshAllArea","refeshHouseArea","lenght","refeshfishLakeArea","refeshSolar01Area","refeshSolar02Area","rootSaga","FILTER_ALARM","AUTH_LOGIN","AUTH_SIGNUP","SET_USER_DELETE","UPDATE_USER","REFESH_ALL_AREA","REFESH_HOUSE_AREA","REFESH_FISH_LAKE_AREA","REFESH_SOLAR01_AREA","REFESH_SOLAR02_AREA"],"mappings":"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","sourcesContent":["import {fork,take,call,put,delay,takeLatest,select} from 'redux-saga/effects';//select to listTask from store\r\nimport * as alarmTypes from './../constants/alarm';\r\nimport * as authTypes from './../constants/auths';\r\nimport * as deviceTypes from './../constants/devices';\r\nimport {\r\n    //getListAlarm\r\n    } from './../apis/alarm';\r\nimport {    \r\n    getListUser,\r\n    addUser,\r\n    loginUser,\r\n    deteleUser,     \r\n    updateUser\r\n    } from './../apis/auth';\r\n\r\nimport {getListData,\r\n        //updateData,\r\n        //addData,\r\n        } from './../apis/devices';\r\nimport {STATUS_CODE} from './../constants/index';\r\nimport {showLoading,hideLoading} from './../actions/ui';\r\nimport {hideModal} from './../actions/modal';\r\nimport {\r\n    fetchListAlarm,\r\n    //fetchListAlarmSuccess,\r\n    //fetchListAlarmFailed,\r\n    } from './../actions/alarm';\r\nimport {\r\n    authSignupSuccess,\r\n    authSignupFaild,\r\n    authLoginSuccess,\r\n    authLoginFaild,\r\n    checkAuthFaild,\r\n    checkAuthSuccess,\r\n    fetchListUserFailed,\r\n    fetchListUserSuccess,\r\n    setUserDeleteSucces,    \r\n    setUserDeleteFaild,\r\n    updateUserSuccess,\r\n    updateUserFailed\r\n    } from './../actions/auths';\r\nimport { refeshSolar01Failed,\r\n        refeshSolar01Success,\r\n        refeshSolar02Success,\r\n        refeshSolar02Failed,\r\n        //refeshMainSuccess,\r\n        //refeshMainFailed,\r\n        refeshFishLakeAreaSuccess,\r\n        refeshFishLakeAreaFailed,\r\n        refeshHouseAreaSuccess,\r\n        refeshHouseAreaFailed,\r\n        //refeshAllAreaSuccess,\r\n        //refeshAllAreaFailed,\r\n     } from '../actions/devices';\r\n/**\r\n * B1: dispatch action fetchTask\r\n * B2:Call animationPlayState: \r\n * B3:Kiểm tra status_code\r\n * Nếu thành công thì thực thi ...\r\n * Nếu thất bại thì thực thi gì đó....button-big\r\n * B4:Tắt Loadding\r\n * B5:thực thi công việc tiếp theo...\r\n */\r\n// function* watchFetchListAlarmAction(){\r\n//     while (true){\r\n//         const action = yield take(alarmTypes.FETCH_ALARM);// khi FETCH_TASK duoc dispatch thi code tu day tro xuong moi chay\r\n//         yield put(showLoading());\r\n//         const {params}=action.payload;\r\n//         console.log(params)\r\n//         const resp = yield call(getListAlarm,'api/v1/main/getalarm','alarm');\r\n//         const {status,data}= resp;\r\n//         if(status === STATUS_CODE.SUCCESS){\r\n//             yield put(fetchListAlarmSuccess(data));  \r\n//         }else{\r\n//             yield put(fetchListAlarmFailed(data));\r\n//         }\r\n//         yield delay(100);\r\n//         yield put(hideLoading());\r\n//     } \r\n// }\r\n\r\nfunction* filterAlarmSaga({payload}){\r\n    yield delay(500);\r\n    const {keyword} = payload;\r\n    console.log(keyword.type)\r\n    yield put(fetchListAlarm({\r\n        //filter:keyword.charAt(0).toUpperCase() + keyword.slice(1),// mockAPI\r\n        q:keyword.devicename, //json-server\r\n        }),\r\n    );\r\n}\r\n\r\nfunction* loginSaga({payload}){\r\n    const {email,password}= payload;\r\n    yield put(showLoading());\r\n    const resp =yield call(loginUser,'api/v1/users/login',{email,password});\r\n    const{data,status}=resp;\r\n    if(status === STATUS_CODE.SUCCESS){\r\n        console.log(data);\r\n        yield put(authLoginSuccess(data));\r\n        yield put(checkAuthSuccess());\r\n    }else{\r\n        yield put(checkAuthFaild());\r\n        yield put(authLoginFaild(data));\r\n    }\r\n    yield delay(200);\r\n    yield put(hideLoading());\r\n\r\n}\r\nfunction* signupSaga({payload}){\r\n    const {name,email,password,operator}= payload;\r\n    yield put(showLoading());\r\n    const resp = yield call(addUser,'api/v1/users/add',{name,email,password,operator});\r\n    const{data,status}=resp;\r\n    if(status === STATUS_CODE.CREATED ){\r\n        const resp = yield call(getListUser,'api/v1/users/','');\r\n        const {status,data}= resp;\r\n        yield delay(100);\r\n        if(status === STATUS_CODE.SUCCESS){\r\n         yield put(authSignupSuccess(data));\r\n         yield put(hideModal());\r\n        }\r\n    }else{\r\n         yield put(authSignupFaild(data));\r\n    }\r\n    yield delay(100);\r\n    yield put(hideLoading());\r\n}\r\nfunction* updateUserSaga({payload}){\r\n    const {name,email,password,operator}= payload;\r\n    const userEditting = yield select(state => state.auth.userEditting);\r\n    const {id} = userEditting;\r\n    yield put(showLoading());\r\n    const resp = yield call(updateUser,'api/v1/users/update',{id,name,email,password,operator});\r\n    const{data,status}=resp;\r\n    if(status === STATUS_CODE.UPDATED ){\r\n        const resp = yield call(getListUser,'api/v1/users','');\r\n        const {status,data}= resp;\r\n        yield delay(100);\r\n        if(status === STATUS_CODE.SUCCESS){\r\n         yield put(updateUserSuccess(data));\r\n         yield put(hideModal());\r\n        }\r\n    }else {\r\n         yield put(updateUserFailed(data));\r\n         \r\n    }\r\n    yield delay(100);\r\n    yield put(hideLoading());\r\n}\r\nfunction* watchFetchListUserAction(){\r\n    while (true){\r\n        const action = yield take(authTypes.FETCH_USER);// khi FETCH_TASK duoc dispatch thi code tu day tro xuong moi chay\r\n        yield put(showLoading());\r\n        const {params}=action.payload;\r\n        const resp = yield call(getListUser,'api/v1/users/',params);\r\n        const {status,data}= resp;\r\n        if(status === STATUS_CODE.SUCCESS){\r\n            yield put(fetchListUserSuccess(data));  \r\n            \r\n        }else{\r\n            yield put(fetchListUserFailed(data));\r\n        }\r\n        yield delay(50);\r\n        yield put(hideLoading());\r\n    } \r\n}\r\n\r\nfunction* deleteUserSaga({payload}){\r\n    const {id}= payload;\r\n    yield put(showLoading());\r\n    const reps= yield call(deteleUser,'api/v1/users',id);\r\n    const {data,status}=reps;\r\n    if(status === STATUS_CODE.NO_CONTENT){\r\n        const resp = yield call(getListUser,'api/v1/users','');\r\n        const {status,data}= resp;\r\n        yield delay(100);\r\n        if(status === STATUS_CODE.SUCCESS){\r\n            yield put(setUserDeleteSucces(data));\r\n            yield put(hideModal());\r\n        }  \r\n    } else {\r\n        yield put(setUserDeleteFaild(data));\r\n    }\r\n    yield delay(100);\r\n    yield put(hideLoading());\r\n}\r\n\r\nfunction* refeshAllArea(){\r\n    // const resp = yield call(getListData,'api/v1/leak/getlast','');\r\n    // const {status,data}= resp;\r\n    // if(status === STATUS_CODE.SUCCESS && data.lenght !== 0){\r\n    //     yield put(refeshLEAKSuccess(data));  \r\n    // }else{\r\n    //     yield put(refeshLEAKFailed(data));\r\n    // }\r\n    \r\n}\r\n\r\n// refesh data leak\r\nfunction* refeshHouseArea(){\r\n    const resp = yield call(getListData,'api/v1/spm93/getlast','');\r\n    const {status,data}= resp;\r\n    if(status === STATUS_CODE.SUCCESS && data.lenght !== 0){\r\n        yield put(refeshHouseAreaSuccess(data));  \r\n    }else{\r\n        yield put(refeshHouseAreaFailed(data));\r\n    }\r\n    \r\n}\r\n// refesh data leak\r\nfunction* refeshfishLakeArea({payload}){\r\n    const {params} = payload;\r\n    const resp = yield call(getListData,'api/v1/spm91/getlast',{params});\r\n    const {status,data}= resp;\r\n    console.log(data)\r\n    if(status === STATUS_CODE.SUCCESS && data.lenght !== 0){\r\n        yield put(refeshFishLakeAreaSuccess(data));  \r\n    }else{\r\n        yield put(refeshFishLakeAreaFailed(data));\r\n    }\r\n    \r\n}\r\n// refesh data leak\r\nfunction* refeshSolar01Area({payload}){\r\n    const {params} = payload;\r\n    const resp = yield call(getListData,'api/v1/spm91/getlast',{params});\r\n    const {status,data}= resp;\r\n    if(status === STATUS_CODE.SUCCESS && data.lenght !== 0){\r\n        yield put(refeshSolar01Success(data));  \r\n    }else{\r\n        yield put(refeshSolar01Failed(data));\r\n    }\r\n    \r\n}\r\n// refesh data leak\r\nfunction* refeshSolar02Area({payload}){\r\n    const {params} = payload;\r\n    const resp = yield call(getListData,'api/v1/spm91/getlast',{params});\r\n    const {status,data}= resp;\r\n    if(status === STATUS_CODE.SUCCESS && data.lenght !== 0){\r\n        yield put(refeshSolar02Success(data));  \r\n    }else{\r\n        yield put(refeshSolar02Failed(data));\r\n    }\r\n    \r\n}\r\n\r\nfunction* rootSaga() {\r\n    // yield fork(watchFetchListAlarmAction);\r\n    yield fork(watchFetchListUserAction);\r\n    yield takeLatest(alarmTypes.FILTER_ALARM,filterAlarmSaga);\r\n    yield takeLatest(authTypes.AUTH_LOGIN,loginSaga);\r\n    yield takeLatest(authTypes.AUTH_SIGNUP,signupSaga)\r\n    yield takeLatest(authTypes.SET_USER_DELETE,deleteUserSaga)  \r\n    yield takeLatest (authTypes.UPDATE_USER,updateUserSaga)\r\n    yield takeLatest (deviceTypes.REFESH_ALL_AREA,refeshAllArea)\r\n    yield takeLatest (deviceTypes.REFESH_HOUSE_AREA,refeshHouseArea)\r\n    yield takeLatest (deviceTypes.REFESH_FISH_LAKE_AREA,refeshfishLakeArea)\r\n    yield takeLatest (deviceTypes.REFESH_SOLAR01_AREA,refeshSolar01Area)\r\n    yield takeLatest (deviceTypes.REFESH_SOLAR02_AREA,refeshSolar02Area)\r\n    \r\n}\r\n\r\nexport default rootSaga;"]},"metadata":{},"sourceType":"module"}