{"ast":null,"code":"import { __assign, __extends, __rest } from \"tslib\";\nimport modifyCSS from '@antv/dom-util/lib/modify-css';\nimport createDOM from '@antv/dom-util/lib/create-dom';\nimport { Canvas } from '@antv/g-canvas';\nimport { Slider } from '@antv/component';\nimport Base from '../base';\n\nvar TimeBar =\n/** @class */\nfunction (_super) {\n  __extends(TimeBar, _super);\n\n  function TimeBar() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  TimeBar.prototype.getDefaultCfgs = function () {\n    return {\n      width: 400,\n      height: 50,\n      rangeChange: null,\n      timebar: {\n        x: 10,\n        y: 10,\n        width: 380,\n        height: 26,\n        minLimit: 0,\n        maxLimit: 1,\n        start: 0.1,\n        end: 0.9\n      }\n    };\n  };\n\n  TimeBar.prototype.init = function () {\n    var timeBarConfig = this.get('timebar');\n    var _a = timeBarConfig.trend,\n        trend = _a === void 0 ? {} : _a;\n    var _b = trend.data,\n        data = _b === void 0 ? [] : _b;\n\n    if (!data || data.length === 0) {\n      console.warn('TimeBar 中没有传入数据');\n      return;\n    }\n\n    var container = this.get('container');\n    var graphContainer = this.get('graph').get('container');\n    var timebar;\n\n    if (!container) {\n      timebar = createDOM(\"<div class='g6-component-timebar'></div>\");\n      modifyCSS(timebar, {\n        position: 'absolute'\n      });\n    } else {\n      timebar = container;\n    }\n\n    graphContainer.appendChild(timebar);\n    this.set('timeBarContainer', timebar);\n    this.initTimeBar(timebar);\n  };\n\n  TimeBar.prototype.initTimeBar = function (container) {\n    var width = this.get('width');\n    var height = this.get('height');\n    var canvas = new Canvas({\n      container: container,\n      width: width,\n      height: height\n    });\n    var group = canvas.addGroup({\n      id: 'timebar-plugin'\n    });\n    var timeBarConfig = this.get('timebar');\n\n    var _a = timeBarConfig.trend,\n        trend = _a === void 0 ? {} : _a,\n        option = __rest(timeBarConfig, [\"trend\"]);\n\n    var config = __assign({\n      container: group,\n      minText: option.start,\n      maxText: option.end\n    }, option); // 是否显示 TimeBar 根据是否传入了数据来确定\n\n\n    var _b = trend.data,\n        data = _b === void 0 ? [] : _b,\n        trendOption = __rest(trend, [\"data\"]);\n\n    var trendData = data.map(function (d) {\n      return d.value;\n    });\n    config.trendCfg = __assign(__assign({}, trendOption), {\n      data: trendData\n    });\n    var min = Math.round(data.length * option.start);\n    var max = Math.round(data.length * option.end);\n    max = max >= data.length ? data.length - 1 : max;\n    config.minText = data[min].date;\n    config.maxText = data[max].date;\n    this.set('trendData', data);\n    var slider = new Slider(config);\n    slider.init();\n    slider.render();\n    this.set('slider', slider);\n    this.bindEvent();\n  };\n  /**\n   * 当滑动时，最小值和最大值会变化，变化以后触发相应事件\n   */\n\n\n  TimeBar.prototype.bindEvent = function () {\n    var _this = this;\n\n    var slider = this.get('slider');\n\n    var _a = this.get('timebar'),\n        start = _a.start,\n        end = _a.end;\n\n    var graph = this.get('graph');\n    graph.on('afterrender', function (e) {\n      _this.filterData({\n        value: [start, end]\n      });\n    });\n    slider.on('valuechanged', function (evt) {\n      _this.filterData(evt);\n    });\n  };\n\n  TimeBar.prototype.filterData = function (evt) {\n    var value = evt.value;\n    var trendData = this.get('trendData');\n    var rangeChange = this.get('rangeChange');\n    var graph = this.get('graph');\n    var slider = this.get('slider');\n    var min = Math.round(trendData.length * value[0]);\n    var max = Math.round(trendData.length * value[1]);\n    max = max >= trendData.length ? trendData.length - 1 : max;\n    var minText = trendData[min].date;\n    var maxText = trendData[max].date;\n    slider.set('minText', minText);\n    slider.set('maxText', maxText);\n\n    if (rangeChange) {\n      rangeChange(graph, minText, maxText);\n    } else {\n      // 自动过滤数据，并渲染 graph\n      var graphData = graph.save();\n\n      if (!this.cacheGraphData || this.cacheGraphData.nodes && this.cacheGraphData.nodes.length === 0) {\n        this.cacheGraphData = graphData;\n      } // 过滤不在 min 和 max 范围内的节点\n\n\n      var filterData = this.cacheGraphData.nodes.filter(function (d) {\n        return d.date >= minText && d.date <= maxText;\n      });\n      var nodeIds_1 = filterData.map(function (node) {\n        return node.id;\n      }); // 过滤 source 或 target 不在 min 和 max 范围内的边\n\n      var fileterEdges = this.cacheGraphData.edges.filter(function (edge) {\n        return nodeIds_1.includes(edge.source) && nodeIds_1.includes(edge.target);\n      });\n      graph.changeData({\n        nodes: filterData,\n        edges: fileterEdges\n      });\n    }\n  };\n\n  TimeBar.prototype.show = function () {\n    var slider = this.get('slider');\n    slider.show();\n  };\n\n  TimeBar.prototype.hide = function () {\n    var slider = this.get('slider');\n    slider.hide();\n  };\n\n  TimeBar.prototype.destroy = function () {\n    this.cacheGraphData = null;\n    var slider = this.get('slider');\n\n    if (slider) {\n      slider.off('valuechanged');\n      slider.destroy();\n    }\n\n    var timeBarContainer = this.get('timeBarContainer');\n\n    if (timeBarContainer) {\n      var container = this.get('container');\n\n      if (!container) {\n        container = this.get('graph').get('container');\n      }\n\n      container.removeChild(timeBarContainer);\n    }\n  };\n\n  return TimeBar;\n}(Base);\n\nexport default TimeBar;","map":{"version":3,"sources":["C:/Users/vietn/Desktop/AppEnegry2020/frontend/node_modules/@antv/g6/es/plugins/timeBar/index.js"],"names":["__assign","__extends","__rest","modifyCSS","createDOM","Canvas","Slider","Base","TimeBar","_super","apply","arguments","prototype","getDefaultCfgs","width","height","rangeChange","timebar","x","y","minLimit","maxLimit","start","end","init","timeBarConfig","get","_a","trend","_b","data","length","console","warn","container","graphContainer","position","appendChild","set","initTimeBar","canvas","group","addGroup","id","option","config","minText","maxText","trendOption","trendData","map","d","value","trendCfg","min","Math","round","max","date","slider","render","bindEvent","_this","graph","on","e","filterData","evt","graphData","save","cacheGraphData","nodes","filter","nodeIds_1","node","fileterEdges","edges","edge","includes","source","target","changeData","show","hide","destroy","off","timeBarContainer","removeChild"],"mappings":"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","sourcesContent":["import { __assign, __extends, __rest } from \"tslib\";\nimport modifyCSS from '@antv/dom-util/lib/modify-css';\nimport createDOM from '@antv/dom-util/lib/create-dom';\nimport { Canvas } from '@antv/g-canvas';\nimport { Slider } from '@antv/component';\nimport Base from '../base';\n\nvar TimeBar =\n/** @class */\nfunction (_super) {\n  __extends(TimeBar, _super);\n\n  function TimeBar() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  TimeBar.prototype.getDefaultCfgs = function () {\n    return {\n      width: 400,\n      height: 50,\n      rangeChange: null,\n      timebar: {\n        x: 10,\n        y: 10,\n        width: 380,\n        height: 26,\n        minLimit: 0,\n        maxLimit: 1,\n        start: 0.1,\n        end: 0.9\n      }\n    };\n  };\n\n  TimeBar.prototype.init = function () {\n    var timeBarConfig = this.get('timebar');\n    var _a = timeBarConfig.trend,\n        trend = _a === void 0 ? {} : _a;\n    var _b = trend.data,\n        data = _b === void 0 ? [] : _b;\n\n    if (!data || data.length === 0) {\n      console.warn('TimeBar 中没有传入数据');\n      return;\n    }\n\n    var container = this.get('container');\n    var graphContainer = this.get('graph').get('container');\n    var timebar;\n\n    if (!container) {\n      timebar = createDOM(\"<div class='g6-component-timebar'></div>\");\n      modifyCSS(timebar, {\n        position: 'absolute'\n      });\n    } else {\n      timebar = container;\n    }\n\n    graphContainer.appendChild(timebar);\n    this.set('timeBarContainer', timebar);\n    this.initTimeBar(timebar);\n  };\n\n  TimeBar.prototype.initTimeBar = function (container) {\n    var width = this.get('width');\n    var height = this.get('height');\n    var canvas = new Canvas({\n      container: container,\n      width: width,\n      height: height\n    });\n    var group = canvas.addGroup({\n      id: 'timebar-plugin'\n    });\n    var timeBarConfig = this.get('timebar');\n\n    var _a = timeBarConfig.trend,\n        trend = _a === void 0 ? {} : _a,\n        option = __rest(timeBarConfig, [\"trend\"]);\n\n    var config = __assign({\n      container: group,\n      minText: option.start,\n      maxText: option.end\n    }, option); // 是否显示 TimeBar 根据是否传入了数据来确定\n\n\n    var _b = trend.data,\n        data = _b === void 0 ? [] : _b,\n        trendOption = __rest(trend, [\"data\"]);\n\n    var trendData = data.map(function (d) {\n      return d.value;\n    });\n    config.trendCfg = __assign(__assign({}, trendOption), {\n      data: trendData\n    });\n    var min = Math.round(data.length * option.start);\n    var max = Math.round(data.length * option.end);\n    max = max >= data.length ? data.length - 1 : max;\n    config.minText = data[min].date;\n    config.maxText = data[max].date;\n    this.set('trendData', data);\n    var slider = new Slider(config);\n    slider.init();\n    slider.render();\n    this.set('slider', slider);\n    this.bindEvent();\n  };\n  /**\n   * 当滑动时，最小值和最大值会变化，变化以后触发相应事件\n   */\n\n\n  TimeBar.prototype.bindEvent = function () {\n    var _this = this;\n\n    var slider = this.get('slider');\n\n    var _a = this.get('timebar'),\n        start = _a.start,\n        end = _a.end;\n\n    var graph = this.get('graph');\n    graph.on('afterrender', function (e) {\n      _this.filterData({\n        value: [start, end]\n      });\n    });\n    slider.on('valuechanged', function (evt) {\n      _this.filterData(evt);\n    });\n  };\n\n  TimeBar.prototype.filterData = function (evt) {\n    var value = evt.value;\n    var trendData = this.get('trendData');\n    var rangeChange = this.get('rangeChange');\n    var graph = this.get('graph');\n    var slider = this.get('slider');\n    var min = Math.round(trendData.length * value[0]);\n    var max = Math.round(trendData.length * value[1]);\n    max = max >= trendData.length ? trendData.length - 1 : max;\n    var minText = trendData[min].date;\n    var maxText = trendData[max].date;\n    slider.set('minText', minText);\n    slider.set('maxText', maxText);\n\n    if (rangeChange) {\n      rangeChange(graph, minText, maxText);\n    } else {\n      // 自动过滤数据，并渲染 graph\n      var graphData = graph.save();\n\n      if (!this.cacheGraphData || this.cacheGraphData.nodes && this.cacheGraphData.nodes.length === 0) {\n        this.cacheGraphData = graphData;\n      } // 过滤不在 min 和 max 范围内的节点\n\n\n      var filterData = this.cacheGraphData.nodes.filter(function (d) {\n        return d.date >= minText && d.date <= maxText;\n      });\n      var nodeIds_1 = filterData.map(function (node) {\n        return node.id;\n      }); // 过滤 source 或 target 不在 min 和 max 范围内的边\n\n      var fileterEdges = this.cacheGraphData.edges.filter(function (edge) {\n        return nodeIds_1.includes(edge.source) && nodeIds_1.includes(edge.target);\n      });\n      graph.changeData({\n        nodes: filterData,\n        edges: fileterEdges\n      });\n    }\n  };\n\n  TimeBar.prototype.show = function () {\n    var slider = this.get('slider');\n    slider.show();\n  };\n\n  TimeBar.prototype.hide = function () {\n    var slider = this.get('slider');\n    slider.hide();\n  };\n\n  TimeBar.prototype.destroy = function () {\n    this.cacheGraphData = null;\n    var slider = this.get('slider');\n\n    if (slider) {\n      slider.off('valuechanged');\n      slider.destroy();\n    }\n\n    var timeBarContainer = this.get('timeBarContainer');\n\n    if (timeBarContainer) {\n      var container = this.get('container');\n\n      if (!container) {\n        container = this.get('graph').get('container');\n      }\n\n      container.removeChild(timeBarContainer);\n    }\n  };\n\n  return TimeBar;\n}(Base);\n\nexport default TimeBar;"]},"metadata":{},"sourceType":"module"}