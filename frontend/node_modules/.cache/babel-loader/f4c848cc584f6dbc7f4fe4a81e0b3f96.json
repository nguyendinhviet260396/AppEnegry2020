{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\vietn\\\\Desktop\\\\AppEnegry2020\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React from'react';import{makeStyles}from'@material-ui/core/styles';import Paper from'@material-ui/core/Paper';import Table from'@material-ui/core/Table';import TableBody from'@material-ui/core/TableBody';import TableCell from'@material-ui/core/TableCell';import TableContainer from'@material-ui/core/TableContainer';import TableHead from'@material-ui/core/TableHead';import TablePagination from'@material-ui/core/TablePagination';import TableRow from'@material-ui/core/TableRow';var useStyles=makeStyles({root:{width:'100%'},container:{maxHeight:440}});export default function StickyHeadTable(props){var classes=useStyles();var _React$useState=React.useState(0),_React$useState2=_slicedToArray(_React$useState,2),page=_React$useState2[0],setPage=_React$useState2[1];var _React$useState3=React.useState(10),_React$useState4=_slicedToArray(_React$useState3,2),rowsPerPage=_React$useState4[0],setRowsPerPage=_React$useState4[1];var handleChangePage=function handleChangePage(event,newPage){setPage(newPage);};var handleChangeRowsPerPage=function handleChangeRowsPerPage(event){setRowsPerPage(+event.target.value);setPage(0);};return/*#__PURE__*/React.createElement(Paper,{className:classes.root},/*#__PURE__*/React.createElement(TableContainer,{className:classes.container},/*#__PURE__*/React.createElement(Table,{stickyHeader:true,\"aria-label\":\"sticky table\",size:\"small\"},/*#__PURE__*/React.createElement(TableHead,null,/*#__PURE__*/React.createElement(TableRow,null,props.columns.map(function(column){return/*#__PURE__*/React.createElement(TableCell,{key:column.id,align:column.align,style:{minWidth:column.minWidth}},column.label);}))),/*#__PURE__*/React.createElement(TableBody,null,props.rows.slice(page*rowsPerPage,page*rowsPerPage+rowsPerPage).map(function(row){return/*#__PURE__*/React.createElement(TableRow,{hover:true,role:\"checkbox\",tabIndex:-1,key:row.id},props.columns.map(function(column){var value=row[column.id];return/*#__PURE__*/React.createElement(TableCell,{key:column.id,align:column.align},column.format&&typeof value==='number'?column.format(value):value);}));})))),/*#__PURE__*/React.createElement(TablePagination,{rowsPerPageOptions:[5,10,100],component:\"div\",count:props.rows.length,rowsPerPage:rowsPerPage,page:page,onChangePage:handleChangePage,onChangeRowsPerPage:handleChangeRowsPerPage}));}","map":{"version":3,"sources":["C:/Users/vietn/Desktop/AppEnegry2020/frontend/src/components/Table/index.js"],"names":["React","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","useStyles","root","width","container","maxHeight","StickyHeadTable","props","classes","useState","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","columns","map","column","id","align","minWidth","label","rows","slice","row","format","length"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n});\r\n\r\n\r\nexport default function StickyHeadTable(props) {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {props.columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {props.rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n              return (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\r\n                  {props.columns.map((column) => {\r\n                    const value = row[column.id];\r\n                    return (\r\n                      <TableCell key={column.id} align={column.align}>\r\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[5, 10, 100]}\r\n        component=\"div\"\r\n        count={props.rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}