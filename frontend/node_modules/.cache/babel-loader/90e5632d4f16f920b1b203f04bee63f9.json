{"ast":null,"code":"import { __assign } from \"tslib\";\n/**\n * Create By Bruce Too\n * On 2020-02-18\n */\n\nimport { get } from '@antv/util';\nimport { registerShape } from '../../../../dependents';\n\nfunction getStyle(cfg, isStroke, isFill) {\n  var style = cfg.style,\n      defaultStyle = cfg.defaultStyle,\n      color = cfg.color;\n\n  var attrs = __assign(__assign({}, defaultStyle), style);\n\n  if (color) {\n    if (isStroke) {\n      attrs.stroke = color;\n    }\n\n    if (isFill) {\n      attrs.fill = color;\n    }\n  }\n\n  return attrs;\n}\n\nfunction getRectPath(points) {\n  var path = [];\n  var firstPoint = points[0];\n  path.push(['M', firstPoint.x, firstPoint.y]);\n\n  for (var i = 1, len = points.length; i < len; i++) {\n    path.push(['L', points[i].x, points[i].y]);\n  }\n\n  path.push(['L', firstPoint.x, firstPoint.y]); // 需要闭合\n\n  path.push(['z']);\n  return path;\n} // @ts-ignore\n\n\nregisterShape('interval', 'waterfall', {\n  // @ts-ignore\n  draw: function (cfg, container) {\n    var style = getStyle(cfg, false, true);\n    var path = this.parsePath(getRectPath(cfg.points));\n    var shape = container.addShape('path', {\n      attrs: __assign(__assign({}, style), {\n        path: path\n      }),\n      name: 'interval'\n    });\n    var leaderLine = get(cfg.style, 'leaderLine');\n\n    if (leaderLine && leaderLine.visible) {\n      var lineStyle = leaderLine.style || {}; // 2. 虚线连线\n\n      if (cfg.nextPoints) {\n        var linkPath = [// @ts-ignore\n        ['M', cfg.points[2].x, cfg.points[2].y], // @ts-ignore\n        ['L', cfg.nextPoints[0].x, cfg.nextPoints[0].y]];\n        linkPath = this.parsePath(linkPath);\n        container.addShape('path', {\n          attrs: __assign({\n            path: linkPath,\n            stroke: '#d3d3d3',\n            lineDash: [4, 2],\n            lineWidth: 1\n          }, lineStyle),\n          name: 'leader-line'\n        });\n      }\n    }\n\n    return shape;\n  }\n});","map":{"version":3,"sources":["../../../../../src/plots/waterfall/geometry/shape/waterfall.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Create By Bruce Too\n * On 2020-02-18\n */\nimport { get } from '@antv/util';\nimport { IGroup, registerShape, Point, ShapeInfo } from '../../../../dependents';\n\nfunction getStyle(cfg: ShapeInfo, isStroke: boolean, isFill: boolean) {\n  const { style, defaultStyle, color } = cfg;\n  const attrs = {\n    ...defaultStyle,\n    ...style,\n  };\n  if (color) {\n    if (isStroke) {\n      attrs.stroke = color;\n    }\n    if (isFill) {\n      attrs.fill = color;\n    }\n  }\n  return attrs;\n}\n\nfunction getRectPath(points: Point[]) {\n  const path = [];\n  const firstPoint = points[0];\n  path.push(['M', firstPoint.x, firstPoint.y]);\n  for (let i = 1, len = points.length; i < len; i++) {\n    path.push(['L', points[i].x, points[i].y]);\n  }\n  path.push(['L', firstPoint.x, firstPoint.y]); // 需要闭合\n  path.push(['z']);\n  return path;\n}\n\n// @ts-ignore\nregisterShape('interval', 'waterfall', {\n  // @ts-ignore\n  draw(cfg: ShapeInfo, container: IGroup) {\n    const style = getStyle(cfg, false, true);\n    const path = this.parsePath(getRectPath(cfg.points as Point[]));\n    const shape = container.addShape('path', {\n      attrs: {\n        ...style,\n        path,\n      },\n      name: 'interval',\n    });\n    const leaderLine = get(cfg.style, 'leaderLine');\n    if (leaderLine && leaderLine.visible) {\n      const lineStyle = leaderLine.style || {};\n      // 2. 虚线连线\n      if (cfg.nextPoints) {\n        let linkPath = [\n          // @ts-ignore\n          ['M', cfg.points[2].x, cfg.points[2].y],\n          // @ts-ignore\n          ['L', cfg.nextPoints[0].x, cfg.nextPoints[0].y],\n        ];\n        linkPath = this.parsePath(linkPath);\n        container.addShape('path', {\n          attrs: {\n            path: linkPath,\n            stroke: '#d3d3d3',\n            lineDash: [4, 2],\n            lineWidth: 1,\n            ...lineStyle,\n          },\n          name: 'leader-line',\n        });\n      }\n    }\n    return shape;\n  },\n});\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}