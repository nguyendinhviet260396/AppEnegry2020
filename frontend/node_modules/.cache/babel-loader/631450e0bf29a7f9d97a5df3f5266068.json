{"ast":null,"code":"import { __extends } from \"tslib\";\n/**\n * Create By Bruce Too\n * On 2020-02-14\n */\n\nimport { deepMix } from '@antv/util';\nimport BasePlot from '../../base/plot';\nimport WordCloudLayer from './layer';\nimport { registerPlotType } from '../../base/global';\n\nvar WordCloud =\n/** @class */\nfunction (_super) {\n  __extends(WordCloud, _super);\n\n  function WordCloud(container, props) {\n    var _this = this; // only canvas works for now\n\n\n    props.renderer = 'canvas';\n    _this = _super.call(this, container, props) || this;\n    return _this;\n  }\n\n  WordCloud.prototype.createLayers = function (props) {\n    var layerProps = deepMix({}, props);\n    layerProps.type = 'wordCloud';\n    layerProps.container = this.containerDOM;\n\n    _super.prototype.createLayers.call(this, layerProps);\n  };\n\n  return WordCloud;\n}(BasePlot);\n\nexport default WordCloud;\nregisterPlotType('wordCloud', WordCloudLayer);","map":{"version":3,"sources":["../../../src/plots/word-cloud/index.ts"],"names":[],"mappings":";AAAA;;;;;AAIA,SAAS,OAAT,QAAwB,YAAxB;AACA,OAAO,QAAP,MAAqC,iBAArC;AACA,OAAO,cAAP,MAAoD,SAApD;AACA,SAAS,gBAAT,QAAiC,mBAAjC;;AAOA,IAAA,SAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAuC,EAAA,SAAA,CAAA,SAAA,EAAA,MAAA,CAAA;;AACrC,WAAA,SAAA,CAAY,SAAZ,EAAoC,KAApC,EAA0D;AAA1D,QAAA,KAAA,GAAA,IAAA,CAA0D,CACxD;;;AACA,IAAA,KAAK,CAAC,QAAN,GAAiB,QAAjB;AACA,IAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,SAAN,EAAiB,KAAjB,KAAuB,IAAvB;;AACD;;AACM,EAAA,SAAA,CAAA,SAAA,CAAA,YAAA,GAAP,UAAoB,KAApB,EAAyB;AACvB,QAAM,UAAU,GAAG,OAAO,CAAC,EAAD,EAAK,KAAL,CAA1B;AACA,IAAA,UAAU,CAAC,IAAX,GAAkB,WAAlB;AACA,IAAA,UAAU,CAAC,SAAX,GAAuB,KAAK,YAA5B;;AACA,IAAA,MAAA,CAAA,SAAA,CAAM,YAAN,CAAkB,IAAlB,CAAkB,IAAlB,EAAmB,UAAnB;AACD,GALM;;AAMT,SAAA,SAAA;AAAC,CAZD,CAAuC,QAAvC,CAAA;;;AAaA,gBAAgB,CAAC,WAAD,EAAc,cAAd,CAAhB","sourcesContent":["/**\n * Create By Bruce Too\n * On 2020-02-14\n */\nimport { deepMix } from '@antv/util';\nimport BasePlot, { PlotConfig } from '../../base/plot';\nimport WordCloudLayer, { WordCloudViewConfig } from './layer';\nimport { registerPlotType } from '../../base/global';\n\nexport interface WordCloudPlotConfig extends PlotConfig {\n  container?: HTMLDivElement;\n}\nexport interface WordCloudConfig extends WordCloudViewConfig, WordCloudPlotConfig {}\n\nexport default class WordCloud extends BasePlot<WordCloudConfig> {\n  constructor(container: HTMLElement, props: WordCloudConfig) {\n    // only canvas works for now\n    props.renderer = 'canvas';\n    super(container, props);\n  }\n  public createLayers(props) {\n    const layerProps = deepMix({}, props);\n    layerProps.type = 'wordCloud';\n    layerProps.container = this.containerDOM;\n    super.createLayers(layerProps);\n  }\n}\nregisterPlotType('wordCloud', WordCloudLayer);\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}