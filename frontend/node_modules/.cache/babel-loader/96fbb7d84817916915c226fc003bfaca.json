{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { assign, deepMix } from '@antv/util';\n\nvar Marker =\n/** @class */\nfunction () {\n  function Marker(cfg) {\n    assign(this, cfg);\n    this.init();\n  }\n\n  Marker.prototype.destroy = function () {\n    if (this.shape) {\n      this.shape.destroy();\n    }\n  };\n\n  Marker.prototype.update = function (cfg, duration, easing) {\n    var updateCfg = {};\n    assign(this, cfg);\n    this.coord = this.view.geometries[0].coordinate;\n\n    if (cfg.value) {\n      var x = this.coord.convert({\n        x: 0,\n        y: this.value\n      }).x;\n      var matrix = [1, 0, 0, 0, 1, 0, x, 0, 1];\n      updateCfg.matrix = matrix;\n    }\n\n    if (cfg.style) {\n      var shape = this.shape;\n      var origin_attr = shape.attrs;\n      var attrs = deepMix({}, origin_attr, cfg.style);\n      updateCfg = deepMix({}, attrs, updateCfg);\n    }\n\n    this.shape.stopAnimate();\n    this.shape.animate(updateCfg, duration, easing);\n  };\n\n  Marker.prototype.init = function () {\n    this.coord = this.view.geometries[0].coordinate;\n    this.container = this.view.foregroundGroup.addGroup();\n    var x = this.coord.convert({\n      x: 0,\n      y: this.value\n    }).x; // progress坐标系是转置坐标系\n\n    var y0 = this.coord.center.y - this.progressSize / 2 - 2;\n    var y1 = this.coord.center.y + this.progressSize / 2 + 2;\n    var style = deepMix({}, {\n      stroke: 'grey',\n      lineWidth: 1\n    }, this.style);\n    this.shape = this.container.addShape('path', {\n      attrs: __assign({\n        path: [['M', 0, y0], ['L', 0, y1]]\n      }, style),\n      name: 'progress-marker'\n    });\n    this.shape.move(x, 0);\n    this.canvas.draw();\n  };\n\n  return Marker;\n}();\n\nexport default Marker;","map":{"version":3,"sources":["../../../../src/sparkline/progress/component/marker.ts"],"names":[],"mappings":"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","sourcesContent":["import { assign, deepMix } from '@antv/util';\nimport { View, IGroup, IShape, Canvas } from '../../../dependents';\n\nexport interface MarkerConfig {\n  view?: View;\n  canvas?: Canvas;\n  progressSize?: number;\n  value: number;\n  style?: any;\n}\n\nexport default class Marker {\n  public canvas: Canvas;\n  public view: View;\n  public progressSize: number;\n  public value: number;\n  public style: any;\n  protected coord: any; //fixme: 类型定义\n  protected container: IGroup;\n  protected shape: IShape;\n\n  constructor(cfg: MarkerConfig) {\n    assign(this, cfg);\n    this.init();\n  }\n\n  public destroy() {\n    if (this.shape) {\n      this.shape.destroy();\n    }\n  }\n\n  public update(cfg: MarkerConfig, duration: number, easing: string) {\n    let updateCfg: any = {};\n    assign(this, cfg);\n    this.coord = this.view.geometries[0].coordinate;\n    if (cfg.value) {\n      const x = this.coord.convert({ x: 0, y: this.value }).x;\n      const matrix = [1, 0, 0, 0, 1, 0, x, 0, 1];\n      updateCfg.matrix = matrix;\n    }\n    if (cfg.style) {\n      const shape: any = this.shape;\n      const origin_attr = shape.attrs;\n      const attrs = deepMix({}, origin_attr, cfg.style);\n      updateCfg = deepMix({}, attrs, updateCfg);\n    }\n    this.shape.stopAnimate();\n    this.shape.animate(updateCfg, duration, easing);\n  }\n\n  protected init() {\n    this.coord = this.view.geometries[0].coordinate;\n    this.container = this.view.foregroundGroup.addGroup();\n    const x = this.coord.convert({ x: 0, y: this.value }).x; // progress坐标系是转置坐标系\n    const y0 = this.coord.center.y - this.progressSize / 2 - 2;\n    const y1 = this.coord.center.y + this.progressSize / 2 + 2;\n    const style = deepMix({}, { stroke: 'grey', lineWidth: 1 }, this.style);\n    this.shape = this.container.addShape('path', {\n      attrs: {\n        path: [\n          ['M', 0, y0],\n          ['L', 0, y1],\n        ],\n        ...style,\n      },\n      name: 'progress-marker',\n    });\n    this.shape.move(x, 0);\n    this.canvas.draw();\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}