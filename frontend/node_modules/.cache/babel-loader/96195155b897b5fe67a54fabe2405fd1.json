{"ast":null,"code":"import { each } from '@antv/util';\nimport textHide from './text-hide';\nexport default function clearOverlapping(shape, option, index, cfg) {\n  var nodes = cfg.nodes.nodes;\n  var current = nodes[index];\n  var overlapped = [];\n  /** 找到所有与当前点overlap的node */\n\n  if (!current.shape.get('blank')) {\n    for (var i = 0; i < nodes.length; i++) {\n      var node = nodes[i];\n      var _shape = node.shape;\n\n      if (i !== index && !_shape.get('blank')) {\n        var isOverlap = isNodeOverlap(current, node);\n\n        if (isOverlap) {\n          overlapped.push(node);\n        }\n      }\n    }\n  }\n  /** overlap处理逻辑 */\n\n\n  if (overlapped.length > 0) {\n    overlapped.push(current);\n    overlapped.sort(function (a, b) {\n      return b.top - a.top;\n    });\n    /** 隐藏除最高点以外的node */\n\n    each(overlapped, function (node, idx) {\n      if (idx > 0) {\n        var _shape = node.shape;\n        textHide(_shape);\n\n        _shape.set('blank', true);\n      }\n    });\n  }\n}\nexport function isNodeOverlap(nodeA, nodeB) {\n  if (nodeA.bottom < nodeB.top || nodeB.bottom < nodeA.top) {\n    return false;\n  }\n\n  if (nodeA.right < nodeB.left || nodeB.right < nodeA.left) {\n    return false;\n  }\n\n  return true;\n}","map":{"version":3,"sources":["../../../../src/util/responsive/rules/clear-overlapping.ts"],"names":[],"mappings":"AACA,SAAS,IAAT,QAAqB,YAArB;AACA,OAAO,QAAP,MAAqB,aAArB;AAEA,eAAc,SAAU,gBAAV,CAA2B,KAA3B,EAA0C,MAA1C,EAAkD,KAAlD,EAAyD,GAAzD,EAA4D;AACxE,MAAM,KAAK,GAAG,GAAG,CAAC,KAAJ,CAAU,KAAxB;AACA,MAAM,OAAO,GAAG,KAAK,CAAC,KAAD,CAArB;AACA,MAAM,UAAU,GAAG,EAAnB;AACA;;AACA,MAAI,CAAC,OAAO,CAAC,KAAR,CAAc,GAAd,CAAkB,OAAlB,CAAL,EAAiC;AAC/B,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,CAAC,MAA1B,EAAkC,CAAC,EAAnC,EAAuC;AACrC,UAAM,IAAI,GAAG,KAAK,CAAC,CAAD,CAAlB;AACA,UAAM,MAAM,GAAG,IAAI,CAAC,KAApB;;AACA,UAAI,CAAC,KAAK,KAAN,IAAe,CAAC,MAAM,CAAC,GAAP,CAAW,OAAX,CAApB,EAAyC;AACvC,YAAM,SAAS,GAAG,aAAa,CAAC,OAAD,EAAU,IAAV,CAA/B;;AACA,YAAI,SAAJ,EAAe;AACb,UAAA,UAAU,CAAC,IAAX,CAAgB,IAAhB;AACD;AACF;AACF;AACF;AACD;;;AACA,MAAI,UAAU,CAAC,MAAX,GAAoB,CAAxB,EAA2B;AACzB,IAAA,UAAU,CAAC,IAAX,CAAgB,OAAhB;AACA,IAAA,UAAU,CAAC,IAAX,CAAgB,UAAC,CAAD,EAAI,CAAJ,EAAK;AACnB,aAAO,CAAC,CAAC,GAAF,GAAQ,CAAC,CAAC,GAAjB;AACD,KAFD;AAGA;;AACA,IAAA,IAAI,CAAC,UAAD,EAAa,UAAC,IAAD,EAAY,GAAZ,EAAuB;AACtC,UAAI,GAAG,GAAG,CAAV,EAAa;AACX,YAAM,MAAM,GAAG,IAAI,CAAC,KAApB;AACA,QAAA,QAAQ,CAAC,MAAD,CAAR;;AACA,QAAA,MAAM,CAAC,GAAP,CAAW,OAAX,EAAoB,IAApB;AACD;AACF,KANG,CAAJ;AAOD;AACF;AAED,OAAM,SAAU,aAAV,CAAwB,KAAxB,EAA+B,KAA/B,EAAoC;AACxC,MAAI,KAAK,CAAC,MAAN,GAAe,KAAK,CAAC,GAArB,IAA4B,KAAK,CAAC,MAAN,GAAe,KAAK,CAAC,GAArD,EAA0D;AACxD,WAAO,KAAP;AACD;;AACD,MAAI,KAAK,CAAC,KAAN,GAAc,KAAK,CAAC,IAApB,IAA4B,KAAK,CAAC,KAAN,GAAc,KAAK,CAAC,IAApD,EAA0D;AACxD,WAAO,KAAP;AACD;;AACD,SAAO,IAAP;AACD","sourcesContent":["import { IShape } from '@antv/g-base';\nimport { each } from '@antv/util';\nimport textHide from './text-hide';\n\nexport default function clearOverlapping(shape: IShape, option, index, cfg) {\n  const nodes = cfg.nodes.nodes;\n  const current = nodes[index];\n  const overlapped = [];\n  /** 找到所有与当前点overlap的node */\n  if (!current.shape.get('blank')) {\n    for (let i = 0; i < nodes.length; i++) {\n      const node = nodes[i];\n      const _shape = node.shape;\n      if (i !== index && !_shape.get('blank')) {\n        const isOverlap = isNodeOverlap(current, node);\n        if (isOverlap) {\n          overlapped.push(node);\n        }\n      }\n    }\n  }\n  /** overlap处理逻辑 */\n  if (overlapped.length > 0) {\n    overlapped.push(current);\n    overlapped.sort((a, b) => {\n      return b.top - a.top;\n    });\n    /** 隐藏除最高点以外的node */\n    each(overlapped, (node: any, idx: number) => {\n      if (idx > 0) {\n        const _shape = node.shape;\n        textHide(_shape);\n        _shape.set('blank', true);\n      }\n    });\n  }\n}\n\nexport function isNodeOverlap(nodeA, nodeB) {\n  if (nodeA.bottom < nodeB.top || nodeB.bottom < nodeA.top) {\n    return false;\n  }\n  if (nodeA.right < nodeB.left || nodeB.right < nodeA.left) {\n    return false;\n  }\n  return true;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}