{"ast":null,"code":"/**\n * 区域连接组件，用于堆叠柱状图和堆叠条形图\n */\nimport { each, assign, mix, find } from '@antv/util';\nimport { compare } from '../base/controller/state';\n\nfunction parsePoints(shape, coord) {\n  var parsedPoints = [];\n  var points = shape.get('origin').points;\n  each(points, function (p) {\n    parsedPoints.push(coord.convertPoint(p));\n  });\n  return parsedPoints;\n}\n\nfunction getDefaultStyle() {\n  return {\n    areaStyle: {\n      opacity: 0.2\n    },\n    lineStyle: {\n      lineWidth: 2,\n      opacity: 0.1\n    }\n  };\n}\n\nvar ConnectedArea =\n/** @class */\nfunction () {\n  function ConnectedArea(cfg) {\n    this.areas = [];\n    this.lines = [];\n    this._areaStyle = {};\n    this._lineStyle = {};\n    assign(this, cfg);\n\n    this._init();\n  }\n\n  ConnectedArea.prototype.draw = function () {\n    var _this = this;\n\n    var groupedShapes = this._getGroupedShapes();\n\n    each(groupedShapes, function (shapes, name) {\n      if (shapes.length > 0) {\n        _this._drawConnection(shapes, name);\n      }\n    });\n\n    if (this.triggerOn) {\n      this._addInteraction();\n    } else if (this.animation) {\n      // 如果定义了triggerOn的方式，则组件是响应交互的，初始化为不可见状态，因此无需动画\n      this._initialAnimation();\n    }\n  };\n\n  ConnectedArea.prototype.clear = function () {\n    if (this.container) {\n      this.container.clear();\n    }\n\n    this.areas = [];\n    this.lines = [];\n  };\n\n  ConnectedArea.prototype.destroy = function () {\n    if (this.container) {\n      this.container.remove();\n    }\n  };\n\n  ConnectedArea.prototype.setState = function (state, condition) {\n    if (state === 'active') {\n      this._onActive(condition);\n    }\n\n    if (state === 'disabled') {\n      this._onDisabled(condition);\n    }\n\n    if (state === 'selected') {\n      this._onSelected(condition);\n    }\n  };\n\n  ConnectedArea.prototype._init = function () {\n    var _this = this;\n\n    var layer = this.view.backgroundGroup;\n    this.container = layer.addGroup();\n    this.draw();\n    this.view.on('beforerender', function () {\n      _this.clear();\n    });\n  };\n\n  ConnectedArea.prototype._getGroupedShapes = function () {\n    var _this = this; // 根据堆叠字段对shape进行分组\n\n\n    var values = this.view.getScaleByField(this.field).values;\n    var geometry = this.view.geometries[0];\n    var shapes = geometry.getShapes(); // 创建分组\n\n    var groups = {};\n    each(values, function (v) {\n      groups[v] = [];\n    }); // 执行分组\n\n    each(shapes, function (shape) {\n      var origin = shape.get('origin').data;\n      var key = origin[_this.field];\n      groups[key].push(shape);\n    });\n    return groups;\n  };\n\n  ConnectedArea.prototype._drawConnection = function (shapes, name) {\n    // tslint:disable-next-line: prefer-for-of\n    var originColor = shapes[0].attr('fill');\n    this._areaStyle[name] = this._getShapeStyle(originColor, 'area');\n    this._lineStyle[name] = this._getShapeStyle(originColor, 'line');\n    var coord = this.view.geometries[0].coordinate;\n\n    for (var i = 0; i < shapes.length - 1; i++) {\n      var current = parsePoints(shapes[i], coord);\n      var next = parsePoints(shapes[i + 1], coord);\n      var areaStyle = mix({}, this._areaStyle[name]);\n      var lineStyle = mix({}, this._lineStyle[name]);\n\n      if (this.triggerOn) {\n        areaStyle.opacity = 0;\n        lineStyle.opacity = 0;\n      }\n\n      var area = this.container.addShape('path', {\n        attrs: mix({}, areaStyle, {\n          path: [['M', current[2].x, current[2].y], ['L', next[1].x, next[1].y], ['L', next[0].x, next[0].y], ['L', current[3].x, current[3].y]]\n        }),\n        name: 'connectedArea'\n      });\n      var line = this.container.addShape('path', {\n        attrs: mix({}, lineStyle, {\n          path: [['M', current[2].x, current[2].y], ['L', next[1].x, next[1].y]]\n        }),\n        name: 'connectedArea'\n      }); // 在辅助图形上记录数据，用以交互和响应状态量\n\n      var originData = shapes[i].get('origin').data;\n      area.set('data', originData);\n      line.set('data', originData);\n      this.areas.push(area);\n      this.lines.push(line);\n    }\n  };\n\n  ConnectedArea.prototype._getShapeStyle = function (originColor, shapeType) {\n    var styleName = shapeType + \"Style\"; // 如果用户自己指定了样式，则不采用默认颜色映射\n\n    if (this[styleName]) {\n      return this[styleName];\n    }\n\n    var defaultStyle = getDefaultStyle()[styleName];\n    var mappedStyle = {\n      fill: originColor\n    };\n\n    if (shapeType === 'line') {\n      mappedStyle = {\n        stroke: originColor\n      };\n    }\n\n    return mix(defaultStyle, mappedStyle);\n  };\n\n  ConnectedArea.prototype._addInteraction = function () {\n    var _this = this;\n\n    var eventName = this.triggerOn;\n    this.view.on(\"interval:\" + eventName, function (e) {\n      var origin = e.target.get('origin').data[_this.field];\n\n      _this.setState('active', {\n        name: _this.field,\n        exp: origin\n      });\n\n      _this.setState('disabled', {\n        name: _this.field,\n        exp: function exp(d) {\n          return d !== origin;\n        }\n      });\n\n      _this.view.canvas.draw();\n    }); // 当鼠标移动到其他区域时取消显示\n\n    this.view.on('mousemove', function (e) {\n      if (e.gEvent.target.get('name') !== 'interval') {\n        _this.setState('disabled', {\n          name: _this.field,\n          exp: function exp() {\n            return true;\n          }\n        });\n      }\n    });\n  };\n\n  ConnectedArea.prototype._initialAnimation = function () {\n    // clipIn动画\n    var _a = this.view.coordinateBBox,\n        x = _a.x,\n        y = _a.y,\n        width = _a.width,\n        height = _a.height;\n    this.container.setClip({\n      type: 'rect',\n      attrs: {\n        x: x,\n        y: y,\n        width: 0,\n        height: height\n      }\n    });\n    this.container.set('animating', true);\n    this.container.getClip().animate({\n      width: width\n    }, 600, 'easeQuadOut', function () {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    400);\n  };\n\n  ConnectedArea.prototype._onActive = function (condition) {\n    var _this = this;\n\n    each(this.areas, function (area) {\n      var shapeData = area.get('data');\n      var styleField = shapeData[_this.field];\n\n      if (compare(shapeData, condition)) {\n        var opacity = _this._areaStyle[styleField].opacity || 1; // area.attr('opacity',this._areaStyle[styleField].opacity || 1);\n\n        area.stopAnimate();\n        area.animate({\n          opacity: opacity\n        }, 400, 'easeQuadOut');\n      }\n    });\n    each(this.lines, function (line) {\n      var shapeData = line.get('data');\n      var styleField = shapeData[_this.field];\n\n      if (compare(shapeData, condition)) {\n        var opacity = _this._lineStyle[styleField].opacity || 1; // line.attr('opacity',this._lineStyle[styleField].opacity || 1);\n\n        line.stopAnimate();\n        line.animate({\n          opacity: opacity\n        }, 400, 'easeQuadOut');\n      }\n    });\n  };\n\n  ConnectedArea.prototype._onDisabled = function (condition) {\n    each(this.areas, function (area) {\n      var shapeData = area.get('data');\n\n      if (compare(shapeData, condition)) {\n        // area.attr('opacity',0);\n        area.stopAnimate();\n        area.animate({\n          opacity: 0\n        }, 400, 'easeQuadOut');\n      }\n    });\n    each(this.lines, function (line) {\n      var shapeData = line.get('data');\n\n      if (compare(shapeData, condition)) {\n        // line.attr('opacity',0);\n        line.stopAnimate();\n        line.animate({\n          opacity: 0\n        }, 400, 'easeQuadOut');\n      }\n    });\n  };\n\n  ConnectedArea.prototype._onSelected = function (condition) {\n    this._onActive(condition);\n  };\n\n  ConnectedArea.prototype.getGeometry = function () {\n    return find(this.view.geometries, function (geom) {\n      return geom.type === 'interval';\n    });\n  };\n\n  return ConnectedArea;\n}();\n\nexport default ConnectedArea;","map":{"version":3,"sources":["../../src/components/connected-area.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * 区域连接组件，用于堆叠柱状图和堆叠条形图\n */\nimport { each, assign, mix, find } from '@antv/util';\nimport { IGroup, IShape, View } from '../dependents';\nimport { compare } from '../base/controller/state';\n\nfunction parsePoints(shape, coord) {\n  const parsedPoints = [];\n  const points = shape.get('origin').points;\n  each(points, (p) => {\n    parsedPoints.push(coord.convertPoint(p));\n  });\n  return parsedPoints;\n}\n\nfunction getDefaultStyle() {\n  return {\n    areaStyle: {\n      opacity: 0.2,\n    },\n    lineStyle: {\n      lineWidth: 2,\n      opacity: 0.1,\n    },\n  };\n}\n\nexport default class ConnectedArea {\n  private view: View;\n  private container: IGroup;\n  private field: string; // 堆叠字段\n  private areas: IShape[] = [];\n  private lines: IShape[] = [];\n  private areaStyle: any;\n  private _areaStyle: any = {};\n  private lineStyle: any;\n  private _lineStyle: any = {};\n  private triggerOn: string;\n  private animation: boolean;\n\n  constructor(cfg) {\n    assign(this, cfg);\n    this._init();\n  }\n\n  public draw() {\n    const groupedShapes = this._getGroupedShapes();\n    each(groupedShapes, (shapes, name) => {\n      if (shapes.length > 0) {\n        this._drawConnection(shapes, name);\n      }\n    });\n    if (this.triggerOn) {\n      this._addInteraction();\n    } else if (this.animation) {\n      // 如果定义了triggerOn的方式，则组件是响应交互的，初始化为不可见状态，因此无需动画\n      this._initialAnimation();\n    }\n  }\n  public clear() {\n    if (this.container) {\n      this.container.clear();\n    }\n    this.areas = [];\n    this.lines = [];\n  }\n\n  public destroy() {\n    if (this.container) {\n      this.container.remove();\n    }\n  }\n\n  public setState(state, condition) {\n    if (state === 'active') {\n      this._onActive(condition);\n    }\n    if (state === 'disabled') {\n      this._onDisabled(condition);\n    }\n    if (state === 'selected') {\n      this._onSelected(condition);\n    }\n  }\n\n  private _init() {\n    const layer = this.view.backgroundGroup;\n    this.container = layer.addGroup();\n    this.draw();\n    this.view.on('beforerender', () => {\n      this.clear();\n    });\n  }\n\n  private _getGroupedShapes() {\n    // 根据堆叠字段对shape进行分组\n    const { values } = this.view.getScaleByField(this.field);\n    const geometry = this.view.geometries[0];\n    const shapes = geometry.getShapes();\n    // 创建分组\n    const groups = {};\n    each(values, (v) => {\n      groups[v] = [];\n    });\n    // 执行分组\n    each(shapes, (shape) => {\n      const origin = shape.get('origin').data;\n      const key = origin[this.field];\n      groups[key].push(shape);\n    });\n    return groups;\n  }\n\n  private _drawConnection(shapes, name) {\n    // tslint:disable-next-line: prefer-for-of\n    const originColor = shapes[0].attr('fill');\n    this._areaStyle[name] = this._getShapeStyle(originColor, 'area');\n    this._lineStyle[name] = this._getShapeStyle(originColor, 'line');\n    const coord = this.view.geometries[0].coordinate;\n    for (let i = 0; i < shapes.length - 1; i++) {\n      const current = parsePoints(shapes[i], coord);\n      const next = parsePoints(shapes[i + 1], coord);\n      const areaStyle = mix({}, this._areaStyle[name]);\n      const lineStyle = mix({}, this._lineStyle[name]);\n      if (this.triggerOn) {\n        areaStyle.opacity = 0;\n        lineStyle.opacity = 0;\n      }\n      const area = this.container.addShape('path', {\n        attrs: mix({} as any, areaStyle, {\n          path: [\n            ['M', current[2].x, current[2].y],\n            ['L', next[1].x, next[1].y],\n            ['L', next[0].x, next[0].y],\n            ['L', current[3].x, current[3].y],\n          ],\n        }),\n        name: 'connectedArea',\n      });\n      const line = this.container.addShape('path', {\n        attrs: mix({} as any, lineStyle, {\n          path: [\n            ['M', current[2].x, current[2].y],\n            ['L', next[1].x, next[1].y],\n          ],\n          // stroke: shapes[i].attr('fill'),\n        }),\n        name: 'connectedArea',\n      });\n      // 在辅助图形上记录数据，用以交互和响应状态量\n      const originData = shapes[i].get('origin').data;\n      area.set('data', originData);\n      line.set('data', originData);\n      this.areas.push(area);\n      this.lines.push(line);\n    }\n  }\n\n  private _getShapeStyle(originColor, shapeType) {\n    const styleName = `${shapeType}Style`;\n    // 如果用户自己指定了样式，则不采用默认颜色映射\n    if (this[styleName]) {\n      return this[styleName];\n    }\n    const defaultStyle = getDefaultStyle()[styleName];\n    let mappedStyle: any = { fill: originColor };\n    if (shapeType === 'line') {\n      mappedStyle = { stroke: originColor };\n    }\n\n    return mix(defaultStyle, mappedStyle);\n  }\n\n  private _addInteraction() {\n    const eventName = this.triggerOn;\n    this.view.on(`interval:${eventName}`, (e) => {\n      const origin = e.target.get('origin').data[this.field];\n      this.setState('active', {\n        name: this.field,\n        exp: origin,\n      });\n      this.setState('disabled', {\n        name: this.field,\n        exp: (d) => {\n          return d !== origin;\n        },\n      });\n      this.view.canvas.draw();\n    });\n    // 当鼠标移动到其他区域时取消显示\n    this.view.on('mousemove', (e) => {\n      if (e.gEvent.target.get('name') !== 'interval') {\n        this.setState('disabled', {\n          name: this.field,\n          exp: () => {\n            return true;\n          },\n        });\n      }\n    });\n  }\n\n  private _initialAnimation() {\n    // clipIn动画\n    const { x, y, width, height } = this.view.coordinateBBox;\n    this.container.setClip({\n      type: 'rect',\n      attrs: {\n        x,\n        y,\n        width: 0,\n        height,\n      },\n    });\n    this.container.set('animating', true);\n    this.container.getClip().animate(\n      {\n        width,\n      },\n      600,\n      'easeQuadOut',\n      () => {}, // eslint-disable-line @typescript-eslint/no-empty-function\n      400\n    );\n  }\n\n  private _onActive(condition) {\n    each(this.areas, (area) => {\n      const shapeData = area.get('data');\n      const styleField = shapeData[this.field];\n      if (compare(shapeData, condition)) {\n        const opacity = this._areaStyle[styleField].opacity || 1;\n        // area.attr('opacity',this._areaStyle[styleField].opacity || 1);\n        area.stopAnimate();\n        area.animate({ opacity }, 400, 'easeQuadOut');\n      }\n    });\n    each(this.lines, (line) => {\n      const shapeData = line.get('data');\n      const styleField = shapeData[this.field];\n      if (compare(shapeData, condition)) {\n        const opacity = this._lineStyle[styleField].opacity || 1;\n        // line.attr('opacity',this._lineStyle[styleField].opacity || 1);\n        line.stopAnimate();\n        line.animate({ opacity }, 400, 'easeQuadOut');\n      }\n    });\n  }\n\n  private _onDisabled(condition) {\n    each(this.areas, (area) => {\n      const shapeData = area.get('data');\n      if (compare(shapeData, condition)) {\n        // area.attr('opacity',0);\n        area.stopAnimate();\n        area.animate(\n          {\n            opacity: 0,\n          },\n          400,\n          'easeQuadOut'\n        );\n      }\n    });\n    each(this.lines, (line) => {\n      const shapeData = line.get('data');\n      if (compare(shapeData, condition)) {\n        // line.attr('opacity',0);\n        line.stopAnimate();\n        line.animate(\n          {\n            opacity: 0,\n          },\n          400,\n          'easeQuadOut'\n        );\n      }\n    });\n  }\n\n  private _onSelected(condition) {\n    this._onActive(condition);\n  }\n\n  private getGeometry() {\n    return find(this.view.geometries, (geom) => geom.type === 'interval');\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}