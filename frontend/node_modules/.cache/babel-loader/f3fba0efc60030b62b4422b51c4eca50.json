{"ast":null,"code":"// 存储一些共用部分\nexport var DEFAULT_RESPONSIVE_THEME = {\n  axis: {\n    x: {\n      category: {\n        constraints: [{\n          name: 'elementDist'\n        }],\n        rules: {\n          elementDist: [{\n            name: 'textWrapper',\n            option: {\n              lineNumber: 2\n            }\n          }, {\n            name: 'textRotation',\n            option: {\n              degree: 45\n            }\n          }, {\n            name: 'textRotation',\n            option: {\n              degree: 90\n            }\n          }, {\n            name: 'textAbbreviate',\n            option: {\n              abbreviateBy: 'end'\n            }\n          }, {\n            name: 'textHide'\n          }]\n        }\n      },\n      linear: {\n        constraints: [{\n          name: 'elementDist'\n        }],\n        rules: {\n          elementDist: [{\n            name: 'nodesResampling',\n            option: {\n              keep: ['end']\n            }\n          }, {\n            name: 'textRotation',\n            option: {\n              degree: 45\n            }\n          }, {\n            name: 'textRotation',\n            option: {\n              degree: 90\n            }\n          }, {\n            name: 'robustAbbrevaite',\n            option: {\n              unit: 'thousand',\n              decimal: 1,\n              abbreviateBy: 'end'\n            }\n          }, {\n            name: 'textHide'\n          }]\n        }\n      },\n      dateTime: {\n        constraints: [{\n          name: 'elementDist'\n        }],\n        rules: {\n          elementDist: [{\n            name: 'datetimeStringAbbrevaite'\n          }, {\n            name: 'nodesResamplingByAbbrevate',\n            option: {\n              keep: ['end']\n            }\n          }, {\n            name: 'textRotation',\n            option: {\n              degree: 45\n            }\n          }, {\n            name: 'textRotation',\n            option: {\n              degree: 90\n            }\n          }, {\n            name: 'nodesResampling'\n          }, {\n            name: 'nodesResampling'\n          }, {\n            name: 'textHide'\n          }]\n        }\n      }\n    },\n    y: {\n      linear: {\n        constraints: [{\n          name: 'elementDistVertical'\n        }, {\n          name: 'elementWidth'\n        }],\n        rules: {\n          elementDistVertical: [{\n            name: 'nodesResampling'\n          }, {\n            name: 'textHide'\n          }],\n          elementWidth: [{\n            name: 'digitsAbbreviate'\n          }, {\n            name: 'textHide'\n          }]\n        }\n      },\n      category: {\n        constraints: [{\n          name: 'elementDistVertical'\n        }, {\n          name: 'elementWidth'\n        }],\n        rules: {\n          elementDistVertical: [{\n            name: 'nodesResampling'\n          }, {\n            name: 'textHide'\n          }],\n          elementWidth: [{\n            name: 'textAbbreviate',\n            option: {\n              abbreviateBy: 'end'\n            }\n          }, {\n            name: 'textHide'\n          }]\n        }\n      }\n    }\n  }\n};","map":{"version":3,"sources":["../../../src/util/responsive/default.ts"],"names":[],"mappings":"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","sourcesContent":["// 存储一些共用部分\nexport const DEFAULT_RESPONSIVE_THEME = {\n  axis: {\n    x: {\n      category: {\n        constraints: [{ name: 'elementDist' }],\n        rules: {\n          elementDist: [\n            {\n              name: 'textWrapper',\n              option: {\n                lineNumber: 2,\n              },\n            },\n            {\n              name: 'textRotation',\n              option: {\n                degree: 45,\n              },\n            },\n            {\n              name: 'textRotation',\n              option: {\n                degree: 90,\n              },\n            },\n            {\n              name: 'textAbbreviate',\n              option: {\n                abbreviateBy: 'end',\n              },\n            },\n            {\n              name: 'textHide',\n            },\n          ],\n        },\n      },\n      linear: {\n        constraints: [{ name: 'elementDist' }],\n        rules: {\n          elementDist: [\n            {\n              name: 'nodesResampling',\n              option: {\n                keep: ['end'],\n              },\n            },\n            {\n              name: 'textRotation',\n              option: {\n                degree: 45,\n              },\n            },\n            {\n              name: 'textRotation',\n              option: {\n                degree: 90,\n              },\n            },\n            {\n              name: 'robustAbbrevaite',\n              option: {\n                unit: 'thousand',\n                decimal: 1,\n                abbreviateBy: 'end',\n              },\n            },\n            {\n              name: 'textHide',\n            },\n          ],\n        },\n      },\n      dateTime: {\n        constraints: [{ name: 'elementDist' }],\n        rules: {\n          elementDist: [\n            {\n              name: 'datetimeStringAbbrevaite',\n            },\n            {\n              name: 'nodesResamplingByAbbrevate',\n              option: {\n                keep: ['end'],\n              },\n            },\n            {\n              name: 'textRotation',\n              option: {\n                degree: 45,\n              },\n            },\n            {\n              name: 'textRotation',\n              option: {\n                degree: 90,\n              },\n            },\n            {\n              name: 'nodesResampling',\n            },\n            {\n              name: 'nodesResampling',\n            },\n            {\n              name: 'textHide',\n            },\n          ],\n        },\n      },\n    },\n    y: {\n      linear: {\n        constraints: [{ name: 'elementDistVertical' }, { name: 'elementWidth' }],\n        rules: {\n          elementDistVertical: [{ name: 'nodesResampling' }, { name: 'textHide' }],\n          elementWidth: [{ name: 'digitsAbbreviate' }, { name: 'textHide' }],\n        },\n      }, // linear y axis\n      category: {\n        constraints: [{ name: 'elementDistVertical' }, { name: 'elementWidth' }],\n        rules: {\n          elementDistVertical: [{ name: 'nodesResampling' }, { name: 'textHide' }],\n          elementWidth: [\n            {\n              name: 'textAbbreviate',\n              option: {\n                abbreviateBy: 'end',\n              },\n            },\n            { name: 'textHide' },\n          ],\n        },\n      },\n    }, // categroy y axis， 条形图\n  },\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}