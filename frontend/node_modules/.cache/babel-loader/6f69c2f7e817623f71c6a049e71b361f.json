{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { modifyCSS } from '@antv/dom-util';\nimport { deepMix } from '@antv/util';\nimport { registerPlotType } from '../../base/global';\nimport PieLayer from '../pie/layer';\nimport * as EventParser from './event';\nimport RingStatistic from './component/ring-statistic';\nvar G2_GEOM_MAP = {\n  ring: 'interval'\n};\nvar PLOT_GEOM_MAP = {\n  interval: 'ring'\n};\n\nvar DonutLayer =\n/** @class */\nfunction (_super) {\n  __extends(DonutLayer, _super);\n\n  function DonutLayer() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = 'donut';\n    return _this;\n  }\n\n  DonutLayer.getDefaultOptions = function () {\n    return deepMix({}, _super.getDefaultOptions.call(this), {\n      radius: 0.8,\n      innerRadius: 0.64,\n      tooltip: {\n        visible: false\n      },\n      statistic: {\n        visible: true,\n        totalLabel: '总计',\n        triggerOn: 'mouseenter',\n        triggerOff: 'mouseleave'\n      }\n    });\n  };\n\n  DonutLayer.prototype.beforeInit = function () {\n    _super.prototype.beforeInit.call(this);\n\n    DonutLayer.centralId++;\n    this.statisticClass = \"statisticClassId\" + DonutLayer.centralId;\n    this.adjustLabelDefaultOptions(); // if (this.options.statistic.visible && this.options.statistic.triggerOn) {\n    //   this.options.tooltip.visible = false;\n    // }\n  };\n\n  DonutLayer.prototype.afterRender = function () {\n    var container = this.canvas.get('container');\n\n    if (this.statistic) {\n      container.removeChild(this.statistic.wrapperNode);\n      this.statistic = null;\n    }\n    /**环图中心文本 */\n\n\n    if (this.options.statistic && this.options.statistic.visible) {\n      var container_1 = this.canvas.get('container');\n      modifyCSS(container_1, {\n        position: 'relative'\n      });\n      this.statistic = new RingStatistic(__assign({\n        container: container_1,\n        view: this.view,\n        plot: this,\n        statisticClass: this.statisticClass\n      }, this.options.statistic));\n      this.statistic.render();\n      /**响应交互 */\n\n      if (this.options.statistic.triggerOn) {\n        this.statistic.triggerOn();\n      }\n    }\n\n    _super.prototype.afterRender.call(this);\n  };\n\n  DonutLayer.prototype.destroy = function () {\n    if (this.statistic) {\n      this.statistic.destroy();\n    }\n\n    _super.prototype.destroy.call(this);\n  };\n\n  DonutLayer.prototype.geometryParser = function (dim, type) {\n    if (dim === 'g2') {\n      return G2_GEOM_MAP[type];\n    }\n\n    return PLOT_GEOM_MAP[type];\n  };\n\n  DonutLayer.prototype.coord = function () {\n    var props = this.options;\n    var coordConfig = {\n      type: 'theta',\n      cfg: {\n        radius: props.radius,\n        innerRadius: props.innerRadius\n      }\n    };\n    this.setConfig('coordinate', coordConfig);\n  };\n\n  DonutLayer.prototype.parseEvents = function () {\n    _super.prototype.parseEvents.call(this, EventParser);\n  };\n  /** @override 调整 label 默认 options */\n\n\n  DonutLayer.prototype.adjustLabelDefaultOptions = function () {\n    var labelConfig = this.options.label;\n\n    if (labelConfig && labelConfig.type === 'inner') {\n      var labelStyleConfig = labelConfig.style || {};\n\n      if (!labelStyleConfig.textAlign) {\n        labelStyleConfig.textAlign = 'center';\n      }\n\n      labelConfig.style = labelStyleConfig;\n\n      if (!labelConfig.offset) {\n        labelConfig.offset = (this.options.innerRadius - 1) / 2 * 100 + \"%\";\n      }\n    }\n  };\n\n  DonutLayer.centralId = 0;\n  return DonutLayer;\n}(PieLayer);\n\nexport default DonutLayer;\nregisterPlotType('donut', DonutLayer);","map":{"version":3,"sources":["../../../src/plots/donut/layer.ts"],"names":[],"mappings":"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","sourcesContent":["import { modifyCSS } from '@antv/dom-util';\nimport { deepMix } from '@antv/util';\nimport { registerPlotType } from '../../base/global';\nimport { LayerConfig } from '../../base/layer';\nimport PieLayer, { PieViewConfig } from '../pie/layer';\nimport * as EventParser from './event';\nimport { LooseMap } from '../../interface/types';\nimport RingStatistic from './component/ring-statistic';\n\ninterface DonutStatisticContent {\n  name?: string;\n  value?: string;\n}\n\nexport interface DonutViewConfig extends PieViewConfig {\n  innerRadius?: number;\n  /** 指标卡用于显示总计值和各项数据 */\n  statistic?: {\n    visible: boolean;\n    /** 指标卡 总计值 标签 */\n    totalLabel?: string;\n    /** 触发显示的事件 */\n    triggerOn?: 'mouseenter';\n    /** 触发隐藏的事件 */\n    triggerOff?: 'mouseleave';\n    content?: string | DonutStatisticContent;\n    htmlContent?: (...args: any) => HTMLDivElement | string;\n  };\n}\n\nexport interface DonutLayerConfig extends DonutViewConfig, LayerConfig {}\n\nconst G2_GEOM_MAP = {\n  ring: 'interval',\n};\n\nconst PLOT_GEOM_MAP = {\n  interval: 'ring',\n};\n\nexport default class DonutLayer<T extends DonutLayerConfig = DonutLayerConfig> extends PieLayer<T> {\n  public static centralId = 0;\n  public type: string = 'donut';\n  private statistic: any; // 保存指标卡实例用于响应交互\n  private statisticClass: string; // 指标卡的class,用于重点文本容器的唯一标识，一个页面多个环图时，共用 class 交互会有问题。\n\n  public static getDefaultOptions(): any {\n    return deepMix({}, super.getDefaultOptions(), {\n      radius: 0.8,\n      innerRadius: 0.64,\n      tooltip: {\n        visible: false,\n      },\n      statistic: {\n        visible: true,\n        totalLabel: '总计',\n        triggerOn: 'mouseenter',\n        triggerOff: 'mouseleave',\n      },\n    });\n  }\n\n  public beforeInit() {\n    super.beforeInit();\n    DonutLayer.centralId++;\n    this.statisticClass = `statisticClassId${DonutLayer.centralId}`;\n    this.adjustLabelDefaultOptions();\n    // if (this.options.statistic.visible && this.options.statistic.triggerOn) {\n    //   this.options.tooltip.visible = false;\n    // }\n  }\n\n  public afterRender() {\n    const container = this.canvas.get('container');\n    if (this.statistic) {\n      container.removeChild(this.statistic.wrapperNode);\n      this.statistic = null;\n    }\n    /**环图中心文本 */\n    if (this.options.statistic && this.options.statistic.visible) {\n      const container = this.canvas.get('container');\n      modifyCSS(container, { position: 'relative' });\n      this.statistic = new RingStatistic({\n        container,\n        view: this.view,\n        plot: this,\n        statisticClass: this.statisticClass,\n        ...this.options.statistic,\n      });\n      this.statistic.render();\n      /**响应交互 */\n      if (this.options.statistic.triggerOn) {\n        this.statistic.triggerOn();\n      }\n    }\n    super.afterRender();\n  }\n\n  public destroy() {\n    if (this.statistic) {\n      this.statistic.destroy();\n    }\n    super.destroy();\n  }\n\n  protected geometryParser(dim, type) {\n    if (dim === 'g2') {\n      return G2_GEOM_MAP[type];\n    }\n    return PLOT_GEOM_MAP[type];\n  }\n\n  protected coord() {\n    const props = this.options;\n    const coordConfig: any = {\n      type: 'theta',\n      cfg: {\n        radius: props.radius,\n        innerRadius: props.innerRadius,\n      },\n    };\n    this.setConfig('coordinate', coordConfig);\n  }\n\n  protected parseEvents() {\n    super.parseEvents(EventParser);\n  }\n\n  /** @override 调整 label 默认 options */\n  protected adjustLabelDefaultOptions() {\n    const labelConfig = this.options.label;\n    if (labelConfig && labelConfig.type === 'inner') {\n      const labelStyleConfig = (labelConfig.style || {}) as LooseMap;\n      if (!labelStyleConfig.textAlign) {\n        labelStyleConfig.textAlign = 'center';\n      }\n      labelConfig.style = labelStyleConfig;\n      if (!labelConfig.offset) {\n        labelConfig.offset = `${((this.options.innerRadius - 1) / 2) * 100}%`;\n      }\n    }\n  }\n}\n\nregisterPlotType('donut', DonutLayer);\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}