{"ast":null,"code":"function columnWidth(node, region, cfg) {\n  if (cfg === void 0) {\n    cfg = {\n      ratio: 0.6\n    };\n  }\n\n  return region.width * cfg.ratio;\n}\n\nexport default {\n  type: 'padding',\n  usage: 'assign',\n  expression: columnWidth\n};","map":{"version":3,"sources":["../../../../src/util/responsive/constraints/column-width.ts"],"names":[],"mappings":"AAIA,SAAS,WAAT,CAAqB,IAArB,EAA2B,MAA3B,EAAmC,GAAnC,EAAuE;AAApC,MAAA,GAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,GAAA,GAAA;AAAwB,MAAA,KAAK,EAAE;AAA/B,KAAA;AAAoC;;AACrE,SAAO,MAAM,CAAC,KAAP,GAAe,GAAG,CAAC,KAA1B;AACD;;AAED,eAAe;AACb,EAAA,IAAI,EAAE,SADO;AAEb,EAAA,KAAK,EAAE,QAFM;AAGb,EAAA,UAAU,EAAE;AAHC,CAAf","sourcesContent":["export interface ColumnWidthCfg {\n  ratio?: number;\n}\n\nfunction columnWidth(node, region, cfg: ColumnWidthCfg = { ratio: 0.6 }) {\n  return region.width * cfg.ratio;\n}\n\nexport default {\n  type: 'padding',\n  usage: 'assign',\n  expression: columnWidth,\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}