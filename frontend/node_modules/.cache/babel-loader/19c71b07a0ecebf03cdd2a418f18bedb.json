{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { Slider, VIEW_LIFE_CIRCLE } from '../dependents';\nimport BBox from '../util/bbox';\nimport { clamp, head, last, map, size, throttle, isEmpty, isEqual } from '@antv/util';\nimport BaseInteraction from './base';\nimport { getDataByScaleRange } from './helper/data-range';\nvar DEFAULT_PADDING = 4;\nvar DEFAULT_SIZE = 16;\n\nvar getValidSliderConfig = function getValidSliderConfig(cfg) {\n  if (cfg === void 0) {\n    cfg = {};\n  }\n\n  var _cfg = __assign({\n    type: 'horizontal',\n    start: 0,\n    end: 1,\n    width: undefined,\n    height: undefined,\n    padding: [0, 0, 0, 0],\n    backgroundStyle: {},\n    foregroundStyle: {},\n    handlerStyle: {},\n    textStyle: {},\n    trendCfg: {}\n  }, cfg); // default padding\n\n\n  if (!cfg.padding) {\n    _cfg.padding = _cfg.type === 'horizontal' ? [DEFAULT_PADDING, 0, DEFAULT_PADDING, 0] : [0, DEFAULT_PADDING, 0, DEFAULT_PADDING];\n  } // default size\n\n\n  if (!cfg.height) {\n    _cfg.height = DEFAULT_SIZE;\n  }\n\n  if (!cfg.width) {\n    _cfg.width = DEFAULT_SIZE;\n  } // start & end\n\n\n  var start = clamp(Math.min(_cfg.start, _cfg.end), 0, 1);\n  var end = clamp(Math.max(_cfg.start, _cfg.end), 0, 1);\n  _cfg.start = start;\n  _cfg.end = end;\n  return _cfg;\n};\n\nvar SliderInteraction =\n/** @class */\nfunction (_super) {\n  __extends(SliderInteraction, _super);\n\n  function SliderInteraction() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.onChangeFn = throttle(_this.onChange.bind(_this), 20, {\n      leading: true\n    });\n    return _this;\n  }\n\n  SliderInteraction.getInteractionRange = function (layerRange, interaction) {\n    var config = getValidSliderConfig(interaction);\n\n    var _a = config.padding || [0, 0, 0, 0],\n        paddingTop = _a[0],\n        paddingRight = _a[1],\n        paddingBottom = _a[2],\n        paddingLeft = _a[3];\n\n    if (config.type === 'horizontal') {\n      var bbox = new BBox(layerRange.minX, layerRange.maxY - config.height - paddingTop - paddingBottom, layerRange.width, config.height + paddingTop + paddingBottom);\n      return bbox;\n    } else {\n      return new BBox(layerRange.maxX - config.width - paddingLeft - paddingRight, layerRange.minY, config.width + paddingLeft + paddingRight, layerRange.height);\n    }\n  };\n\n  SliderInteraction.prototype.render = function () {\n    var _this = this;\n\n    var layer = this.getViewLayer();\n    var view = this.view; // 设置初始化的 start/end\n\n    var config = getValidSliderConfig(this.getInteractionConfig());\n    this.curStart = config.start;\n    this.curEnd = config.end;\n    this.xScaleCfg = undefined; // 等待 view 每次 render 完成后更新 slider 组件\n\n    var callback = function callback() {\n      var padding = _this.view.padding;\n\n      if (padding === 'auto' || isEqual(padding, [0, 0, 0, 1])) {\n        return;\n      }\n\n      if (isEmpty(layer.options.data)) {\n        return;\n      }\n\n      if (!_this.xScaleCfg) {\n        // 初始化配置和数据\n        var xScale = view.getXScale();\n        _this.xScaleCfg = {\n          field: xScale.field,\n          values: xScale.values || []\n        }; // 初始化 data\n\n        view.data(_this.getSliderData(_this.curStart, _this.curEnd));\n        view.render();\n      } else {\n        _this.renderSlider();\n      }\n    };\n\n    view.on(VIEW_LIFE_CIRCLE.AFTER_PAINT, callback);\n    this.addDisposable(function () {\n      return view.off(VIEW_LIFE_CIRCLE.AFTER_PAINT, callback);\n    });\n    view.on(VIEW_LIFE_CIRCLE.AFTER_RENDER, callback);\n    this.addDisposable(function () {\n      return view.off(VIEW_LIFE_CIRCLE.AFTER_RENDER, callback);\n    });\n  };\n\n  SliderInteraction.prototype.start = function () {\n    return;\n  };\n\n  SliderInteraction.prototype.clear = function () {\n    if (this.slider) {\n      this.slider.destroy();\n      this.slider = null;\n    }\n\n    if (this.container) {\n      this.container.remove(true);\n      this.container = null;\n    }\n  };\n\n  SliderInteraction.prototype.renderSlider = function () {\n    if (!this.slider) {\n      this.container = this.canvas.addGroup();\n      this.slider = new Slider(__assign(__assign({}, this.getSliderConfig()), {\n        container: this.container\n      }));\n      this.slider.init();\n      this.slider.render();\n      this.slider.on('sliderchange', this.onChangeFn);\n    } else {\n      this.slider.update(this.getSliderConfig());\n      this.slider.render();\n    }\n  };\n\n  SliderInteraction.prototype.getSliderConfig = function () {\n    var view = this.view;\n    var panelRange = view.coordinateBBox;\n    var range = this.getRange();\n    var config = getValidSliderConfig(this.getInteractionConfig());\n\n    var _a = config || {},\n        _b = _a.padding,\n        padding = _b === void 0 ? [0, 0, 0, 0] : _b,\n        backgroundStyle = _a.backgroundStyle,\n        foregroundStyle = _a.foregroundStyle,\n        handlerStyle = _a.handlerStyle,\n        textStyle = _a.textStyle,\n        _c = _a.trendCfg,\n        trendCfg = _c === void 0 ? {} : _c;\n\n    var paddingTop = padding[0],\n        paddingRight = padding[1],\n        paddingBottom = padding[2],\n        paddingLeft = padding[3];\n\n    var _d = this.getSliderMinMaxText(this.curStart, this.curEnd),\n        minText = _d.minText,\n        maxText = _d.maxText;\n\n    var cfg = {\n      x: panelRange.minX + paddingLeft,\n      y: range.minY + paddingTop,\n      width: panelRange.width - paddingLeft - paddingRight,\n      height: range.height - paddingTop - paddingBottom,\n      start: this.curStart,\n      end: this.curEnd,\n      minText: minText,\n      maxText: maxText,\n      backgroundStyle: backgroundStyle,\n      foregroundStyle: foregroundStyle,\n      handlerStyle: handlerStyle,\n      textStyle: textStyle,\n      trendCfg: __assign(__assign({\n        isArea: false,\n        smooth: false\n      }, trendCfg), {\n        data: this.getSliderTrendData()\n      })\n    };\n    return cfg;\n  };\n\n  SliderInteraction.prototype.getSliderTrendData = function () {\n    var _a = this.getViewLayer().options,\n        data = _a.data,\n        yField = _a.yField;\n    return map(data, function (item) {\n      return item[yField];\n    });\n  };\n\n  SliderInteraction.prototype.getSliderData = function (start, end) {\n    var origData = this.getViewLayer().getData();\n    var length = size(this.xScaleCfg.values);\n    var startIdx = Math.round(start * length);\n    var endIdx = Math.max(startIdx + 1, Math.round(end * length));\n    return getDataByScaleRange(this.xScaleCfg.field, this.xScaleCfg.values, origData, [startIdx, endIdx]);\n  };\n\n  SliderInteraction.prototype.getSliderMinMaxText = function (start, end) {\n    var _a = this.getViewLayer().options,\n        _b = _a.data,\n        data = _b === void 0 ? [] : _b,\n        xField = _a.xField;\n    var length = size(data);\n    var startIdx = Math.round(start * length);\n    var endIdx = Math.max(startIdx + 1, Math.round(end * length));\n    var newData = data.slice(startIdx, endIdx);\n    return {\n      minText: newData.length > 0 ? head(newData)[xField] : '',\n      maxText: newData.length > 0 ? last(newData)[xField] : ''\n    };\n  };\n\n  SliderInteraction.prototype.onChange = function (range) {\n    var view = this.view;\n    var start = clamp(Math.min(range[0], range[1]), 0, 1);\n    var end = clamp(Math.max(range[0], range[1]), 0, 1);\n    var data = this.getSliderData(start, end);\n\n    var _a = this.getSliderMinMaxText(start, end),\n        minText = _a.minText,\n        maxText = _a.maxText;\n\n    this.curStart = start;\n    this.curEnd = end;\n    this.slider.update({\n      start: start,\n      end: end,\n      minText: minText,\n      maxText: maxText\n    });\n    this.slider.render();\n    var origAnimate = view.getOptions().animate;\n    view.animate(false);\n    view.data(data);\n    view.render();\n    view.animate(origAnimate);\n  };\n\n  return SliderInteraction;\n}(BaseInteraction);\n\nexport default SliderInteraction;","map":{"version":3,"sources":["../../src/interaction/slider.ts"],"names":[],"mappings":"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","sourcesContent":["import { IGroup, Slider, VIEW_LIFE_CIRCLE } from '../dependents';\nimport BBox from '../util/bbox';\nimport { Scale } from '@antv/scale';\nimport { clamp, head, last, map, size, throttle, isEmpty, isEqual } from '@antv/util';\nimport { ISliderInteractionConfig } from '../interface/config';\nimport BaseInteraction from './base';\nimport { getDataByScaleRange } from './helper/data-range';\n\nconst DEFAULT_PADDING: number = 4;\nconst DEFAULT_SIZE: number = 16;\n\nconst getValidSliderConfig = (cfg: ISliderInteractionConfig = {}): Required<ISliderInteractionConfig> => {\n  const _cfg: Required<ISliderInteractionConfig> = {\n    type: 'horizontal',\n    start: 0,\n    end: 1,\n    width: undefined,\n    height: undefined,\n    padding: [0, 0, 0, 0],\n    backgroundStyle: {},\n    foregroundStyle: {},\n    handlerStyle: {},\n    textStyle: {},\n    trendCfg: {},\n    ...cfg,\n  };\n\n  // default padding\n  if (!cfg.padding) {\n    _cfg.padding =\n      _cfg.type === 'horizontal' ? [DEFAULT_PADDING, 0, DEFAULT_PADDING, 0] : [0, DEFAULT_PADDING, 0, DEFAULT_PADDING];\n  }\n\n  // default size\n  if (!cfg.height) {\n    _cfg.height = DEFAULT_SIZE;\n  }\n  if (!cfg.width) {\n    _cfg.width = DEFAULT_SIZE;\n  }\n\n  // start & end\n  const start = clamp(Math.min(_cfg.start, _cfg.end), 0, 1);\n  const end = clamp(Math.max(_cfg.start, _cfg.end), 0, 1);\n  _cfg.start = start;\n  _cfg.end = end;\n\n  return _cfg;\n};\n\nexport default class SliderInteraction extends BaseInteraction {\n  public static getInteractionRange(layerRange: BBox, interaction: ISliderInteractionConfig): BBox {\n    const config: ISliderInteractionConfig = getValidSliderConfig(interaction);\n    const [paddingTop, paddingRight, paddingBottom, paddingLeft] = config.padding || [0, 0, 0, 0];\n\n    if (config.type === 'horizontal') {\n      const bbox = new BBox(\n        layerRange.minX,\n        layerRange.maxY - config.height - paddingTop - paddingBottom,\n        layerRange.width,\n        config.height + paddingTop + paddingBottom\n      );\n      return bbox;\n    } else {\n      return new BBox(\n        layerRange.maxX - config.width - paddingLeft - paddingRight,\n        layerRange.minY,\n        config.width + paddingLeft + paddingRight,\n        layerRange.height\n      );\n    }\n  }\n\n  private container: IGroup;\n  private slider: Slider;\n  private curStart: number;\n  private curEnd: number;\n  private xScaleCfg:\n    | {\n        field: string;\n        values: string[];\n      }\n    | undefined;\n  private onChangeFn: (range: [number, number]) => void = throttle(this.onChange.bind(this), 20, { leading: true }) as (\n    range: [number, number]\n  ) => void;\n\n  public render(): void {\n    const layer = this.getViewLayer();\n    const view = this.view;\n    // 设置初始化的 start/end\n    const config = getValidSliderConfig(this.getInteractionConfig());\n    this.curStart = config.start;\n    this.curEnd = config.end;\n    this.xScaleCfg = undefined;\n    // 等待 view 每次 render 完成后更新 slider 组件\n    const callback = () => {\n      const padding = this.view.padding;\n      if (padding === 'auto' || isEqual(padding, [0, 0, 0, 1])) {\n        return;\n      }\n      if (isEmpty(layer.options.data)) {\n        return;\n      }\n      if (!this.xScaleCfg) {\n        // 初始化配置和数据\n        const xScale: Scale = view.getXScale();\n        this.xScaleCfg = {\n          field: xScale.field,\n          values: xScale.values || [],\n        };\n        // 初始化 data\n        view.data(this.getSliderData(this.curStart, this.curEnd));\n        view.render();\n      } else {\n        this.renderSlider();\n      }\n    };\n    view.on(VIEW_LIFE_CIRCLE.AFTER_PAINT, callback);\n    this.addDisposable(() => view.off(VIEW_LIFE_CIRCLE.AFTER_PAINT, callback));\n    view.on(VIEW_LIFE_CIRCLE.AFTER_RENDER, callback);\n    this.addDisposable(() => view.off(VIEW_LIFE_CIRCLE.AFTER_RENDER, callback));\n  }\n\n  protected start() {\n    return;\n  }\n\n  protected clear(): void {\n    if (this.slider) {\n      this.slider.destroy();\n      this.slider = null;\n    }\n    if (this.container) {\n      this.container.remove(true);\n      this.container = null;\n    }\n  }\n\n  private renderSlider(): void {\n    if (!this.slider) {\n      this.container = this.canvas.addGroup();\n      this.slider = new Slider({ ...this.getSliderConfig(), container: this.container });\n      this.slider.init();\n      this.slider.render();\n      this.slider.on('sliderchange', this.onChangeFn);\n    } else {\n      this.slider.update(this.getSliderConfig());\n      this.slider.render();\n    }\n  }\n\n  private getSliderConfig() {\n    const view = this.view;\n    const panelRange = view.coordinateBBox;\n    const range = this.getRange();\n    const config: ISliderInteractionConfig | null = getValidSliderConfig(this.getInteractionConfig());\n    const { padding = [0, 0, 0, 0], backgroundStyle, foregroundStyle, handlerStyle, textStyle, trendCfg = {} } =\n      config || {};\n    const [paddingTop, paddingRight, paddingBottom, paddingLeft] = padding;\n    const { minText, maxText } = this.getSliderMinMaxText(this.curStart, this.curEnd);\n    const cfg: any = {\n      x: panelRange.minX + paddingLeft,\n      y: range.minY + paddingTop,\n      width: panelRange.width - paddingLeft - paddingRight,\n      height: range.height - paddingTop - paddingBottom,\n      start: this.curStart,\n      end: this.curEnd,\n      minText,\n      maxText,\n      backgroundStyle,\n      foregroundStyle,\n      handlerStyle,\n      textStyle,\n      trendCfg: {\n        isArea: false,\n        smooth: false,\n        ...trendCfg,\n        data: this.getSliderTrendData(),\n      },\n    };\n\n    return cfg;\n  }\n\n  private getSliderTrendData(): number[] {\n    const { data, yField } = this.getViewLayer().options;\n\n    return map(data, (item) => item[yField]);\n  }\n\n  private getSliderData(start: number, end: number): any[] {\n    const origData = this.getViewLayer().getData();\n    const length = size(this.xScaleCfg.values);\n    const startIdx = Math.round(start * length);\n    const endIdx = Math.max(startIdx + 1, Math.round(end * length));\n\n    return getDataByScaleRange(this.xScaleCfg.field, this.xScaleCfg.values, origData, [startIdx, endIdx]);\n  }\n\n  private getSliderMinMaxText(start: number, end: number): { minText: string; maxText: string } {\n    const { data = [], xField } = this.getViewLayer().options;\n    const length = size(data);\n    const startIdx = Math.round(start * length);\n    const endIdx = Math.max(startIdx + 1, Math.round(end * length));\n    const newData = data.slice(startIdx, endIdx);\n\n    return {\n      minText: newData.length > 0 ? head(newData)[xField] : '',\n      maxText: newData.length > 0 ? last(newData)[xField] : '',\n    };\n  }\n\n  private onChange(range: [number, number]): void {\n    const view = this.view;\n    const start = clamp(Math.min(range[0], range[1]), 0, 1);\n    const end = clamp(Math.max(range[0], range[1]), 0, 1);\n    const data = this.getSliderData(start, end);\n    const { minText, maxText } = this.getSliderMinMaxText(start, end);\n    this.curStart = start;\n    this.curEnd = end;\n    this.slider.update({\n      start,\n      end,\n      minText,\n      maxText,\n    });\n    this.slider.render();\n    const origAnimate = view.getOptions().animate;\n    view.animate(false);\n    view.data(data);\n    view.render();\n    view.animate(origAnimate);\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}