{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { DEFAULT_ANIMATE_CFG } from '@antv/g2/lib/animate';\nimport { each, deepMix, get } from '@antv/util';\n\nfunction parsePoints(shape, coord) {\n  var parsedPoints = [];\n  var points = shape.get('origin').points;\n  each(points, function (p) {\n    parsedPoints.push(coord.convertPoint(p));\n  });\n  return parsedPoints;\n}\n\nvar ConversionTag =\n/** @class */\nfunction () {\n  function ConversionTag(cfg) {\n    // @ts-ignore\n    deepMix(this, this.constructor.getDefaultOptions(cfg), cfg);\n\n    this._init();\n  }\n\n  ConversionTag.getDefaultOptions = function (_a) {\n    var transpose = _a.transpose;\n    return {\n      visible: true,\n      size: transpose ? 32 : 80,\n      spacing: transpose ? 8 : 12,\n      offset: transpose ? 32 : 0,\n      arrow: {\n        visible: true,\n        headSize: 12,\n        style: {\n          fill: 'rgba(0, 0, 0, 0.05)'\n        }\n      },\n      value: {\n        visible: true,\n        style: {\n          fontSize: 12,\n          fill: 'rgba(0, 0, 0, 0.85)'\n        },\n        formatter: function (valueUpper, valueLower) {\n          return (100 * valueLower / valueUpper).toFixed(2) + \"%\";\n        }\n      },\n      animation: deepMix({}, DEFAULT_ANIMATE_CFG)\n    };\n  };\n\n  ConversionTag.prototype._init = function () {\n    var _this = this;\n\n    var layer = this.view.backgroundGroup;\n    this.container = layer.addGroup();\n    this.draw();\n    this.view.on('beforerender', function () {\n      _this.clear();\n    });\n  };\n\n  ConversionTag.prototype.draw = function () {\n    var _this = this;\n\n    var transpose = this.transpose;\n    var values = this.view.getScaleByField(this.field).values;\n    var geometry = this.view.geometries[0];\n    var shapes = geometry.getShapes();\n    var shapeLower, valueLower, shapeUpper, valueUpper;\n\n    if (transpose) {\n      shapes.forEach(function (shapeLower, i) {\n        valueLower = values[i];\n\n        if (i++ > 0) {\n          _this._drawTag(shapeUpper, valueUpper, shapeLower, valueLower);\n        }\n\n        valueUpper = valueLower;\n        shapeUpper = shapeLower;\n      });\n    } else {\n      shapes.forEach(function (shapeUpper, i) {\n        valueUpper = values[i];\n\n        if (i++ > 0) {\n          _this._drawTag(shapeUpper, valueUpper, shapeLower, valueLower);\n        }\n\n        valueLower = valueUpper;\n        shapeLower = shapeUpper;\n      });\n    }\n  };\n\n  ConversionTag.prototype.clear = function () {\n    if (this.container) {\n      this.container.clear();\n    }\n  };\n\n  ConversionTag.prototype.destroy = function () {\n    if (this.container) {\n      this.container.remove();\n    }\n  };\n\n  ConversionTag.prototype._drawTag = function (shapeUpper, valueUpper, shapeLower, valueLower) {\n    var transpose = this.transpose;\n    var coord = this.view.geometries[0].coordinate;\n    var pointUpper = parsePoints(shapeUpper, coord)[transpose ? 3 : 0];\n    var pointLower = parsePoints(shapeLower, coord)[transpose ? 0 : 3];\n\n    this._drawTagArrow(pointUpper, pointLower);\n\n    this._drawTagValue(pointUpper, valueUpper, pointLower, valueLower);\n  };\n\n  ConversionTag.prototype._drawTagArrow = function (pointUpper, pointLower) {\n    var spacing = this.spacing;\n\n    var _a = this,\n        size = _a.size,\n        offset = _a.offset,\n        animation = _a.animation,\n        transpose = _a.transpose;\n\n    var headSize = this.arrow.headSize;\n    var totalHeight = pointLower.y - pointUpper.y;\n    var totalWidth = pointLower.x - pointUpper.x;\n    var points;\n\n    if (transpose) {\n      if ((totalWidth - headSize) / 2 < spacing) {\n        // 当柱间距不足容纳箭头尖与间隔时，画三角并挤占间隔\n        spacing = Math.max(1, (totalWidth - headSize) / 2);\n        points = [[pointUpper.x + spacing, pointUpper.y - offset], [pointUpper.x + spacing, pointUpper.y - offset - size], [pointLower.x - spacing, pointLower.y - offset - size / 2]];\n      } else {\n        // 当柱间距足够时，画完整图形并留出间隔。\n        points = [[pointUpper.x + spacing, pointUpper.y - offset], [pointUpper.x + spacing, pointUpper.y - offset - size], [pointLower.x - spacing - headSize, pointLower.y - offset - size], [pointLower.x - spacing, pointLower.y - offset - size / 2], [pointLower.x - spacing - headSize, pointLower.y - offset]];\n      }\n    } else {\n      if ((totalHeight - headSize) / 2 < spacing) {\n        // 当柱间距不足容纳箭头尖与间隔时，画三角并挤占间隔\n        spacing = Math.max(1, (totalHeight - headSize) / 2);\n        points = [[pointUpper.x + offset, pointUpper.y + spacing], [pointUpper.x + offset + size, pointUpper.y + spacing], [pointLower.x + offset + size / 2, pointLower.y - spacing]];\n      } else {\n        // 当柱间距足够时，画完整图形并留出间隔。\n        points = [[pointUpper.x + offset, pointUpper.y + spacing], [pointUpper.x + offset + size, pointUpper.y + spacing], [pointLower.x + offset + size, pointLower.y - spacing - headSize], [pointLower.x + offset + size / 2, pointLower.y - spacing], [pointLower.x + offset, pointLower.y - spacing - headSize]];\n      }\n    }\n\n    var tagArrow = this.container.addShape('polygon', {\n      name: 'arrow',\n      attrs: __assign(__assign({}, this.arrow.style), {\n        points: points\n      })\n    });\n\n    if (animation !== false) {\n      this._fadeInTagShape(tagArrow);\n    }\n  };\n\n  ConversionTag.prototype._drawTagValue = function (pointUpper, valueUpper, pointLower, valueLower) {\n    var _a = this,\n        size = _a.size,\n        offset = _a.offset,\n        animation = _a.animation,\n        transpose = _a.transpose;\n\n    var text = this.value.formatter(valueUpper, valueLower);\n    var tagValue = this.container.addShape('text', {\n      name: 'value',\n      attrs: __assign(__assign({}, this.value.style), {\n        text: text,\n        x: transpose ? (pointUpper.x + pointLower.x) / 2 : pointUpper.x + offset + size / 2,\n        y: transpose ? pointUpper.y - offset - size / 2 : (pointUpper.y + pointLower.y) / 2,\n        textAlign: 'center',\n        textBaseline: 'middle'\n      })\n    });\n\n    if (transpose) {\n      var totalWidth = pointLower.x - pointUpper.x;\n      var textWidth = tagValue.getBBox().width;\n\n      if (textWidth > totalWidth) {\n        var cWidth = textWidth / text.length;\n        var cEnd = Math.max(1, Math.ceil(totalWidth / cWidth) - 1);\n        var textAdjusted = text.slice(0, cEnd) + \"...\";\n        tagValue.attr('text', textAdjusted);\n      }\n    }\n\n    if (animation !== false) {\n      this._fadeInTagShape(tagValue);\n    }\n  };\n\n  ConversionTag.prototype._fadeInTagShape = function (shape) {\n    var animation = this.animation;\n    var opacity = shape.attr('opacity');\n    shape.attr('opacity', 0);\n    var duration = get(animation, 'appear', DEFAULT_ANIMATE_CFG.appear).duration;\n    shape.animate({\n      opacity: opacity\n    }, duration);\n  };\n\n  return ConversionTag;\n}();\n\nexport default ConversionTag;","map":{"version":3,"sources":["../../src/components/conversion-tag.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * 转化率组件，用于柱状图和条形图，展示从一个值到另一个值的转化率。\n */\nimport { IGroup } from '@antv/g-base';\nimport { View } from '@antv/g2';\nimport { DEFAULT_ANIMATE_CFG } from '@antv/g2/lib/animate';\nimport { each, deepMix, get } from '@antv/util';\n\nfunction parsePoints(shape, coord) {\n  const parsedPoints = [];\n  const points = shape.get('origin').points;\n  each(points, (p) => {\n    parsedPoints.push(coord.convertPoint(p));\n  });\n  return parsedPoints;\n}\nexport interface ConversionTagOptions {\n  visible: boolean;\n  size?: number;\n  spacing?: number;\n  offset?: number;\n  arrow?: ArrowOptions;\n  value?: ValueOptions;\n  animation?: any;\n  transpose?: boolean;\n}\n\ninterface ArrowOptions {\n  visible: boolean;\n  headSize?: number;\n  style?: any;\n}\n\ninterface ValueOptions {\n  visible: boolean;\n  style?: any;\n  formatter?: (valueUpper: any, valueLower: any) => string;\n}\n\nexport interface ConversionTagConfig extends ConversionTagOptions {\n  view: View;\n  field: string;\n}\n\nexport default class ConversionTag {\n  public static getDefaultOptions({ transpose }: ConversionTagConfig): ConversionTagOptions {\n    return {\n      visible: true,\n      size: transpose ? 32 : 80,\n      spacing: transpose ? 8 : 12,\n      offset: transpose ? 32 : 0,\n      arrow: {\n        visible: true,\n        headSize: 12,\n        style: {\n          fill: 'rgba(0, 0, 0, 0.05)',\n        },\n      },\n      value: {\n        visible: true,\n        style: {\n          fontSize: 12,\n          fill: 'rgba(0, 0, 0, 0.85)',\n        },\n        formatter: (valueUpper: any, valueLower: any) => `${((100 * valueLower) / valueUpper).toFixed(2)}%`,\n      },\n      animation: deepMix({}, DEFAULT_ANIMATE_CFG),\n    };\n  }\n\n  private view: View;\n  private container: IGroup;\n  private transpose?: boolean;\n  private field: string;\n  private size: number;\n  private offset: number;\n  private spacing: number;\n  private arrow: ArrowOptions;\n  private value: ValueOptions;\n  private animation: boolean;\n\n  constructor(cfg: ConversionTagConfig) {\n    // @ts-ignore\n    deepMix(this, this.constructor.getDefaultOptions(cfg), cfg);\n    this._init();\n  }\n\n  private _init() {\n    const layer = this.view.backgroundGroup;\n    this.container = layer.addGroup();\n    this.draw();\n    this.view.on('beforerender', () => {\n      this.clear();\n    });\n  }\n\n  public draw() {\n    const { transpose } = this;\n    const { values } = this.view.getScaleByField(this.field);\n    const geometry = this.view.geometries[0];\n    const shapes = geometry.getShapes();\n\n    let shapeLower, valueLower, shapeUpper, valueUpper;\n\n    if (transpose) {\n      shapes.forEach((shapeLower, i) => {\n        valueLower = values[i];\n        if (i++ > 0) {\n          this._drawTag(shapeUpper, valueUpper, shapeLower, valueLower);\n        }\n        valueUpper = valueLower;\n        shapeUpper = shapeLower;\n      });\n    } else {\n      shapes.forEach((shapeUpper, i) => {\n        valueUpper = values[i];\n        if (i++ > 0) {\n          this._drawTag(shapeUpper, valueUpper, shapeLower, valueLower);\n        }\n        valueLower = valueUpper;\n        shapeLower = shapeUpper;\n      });\n    }\n  }\n\n  public clear() {\n    if (this.container) {\n      this.container.clear();\n    }\n  }\n\n  public destroy() {\n    if (this.container) {\n      this.container.remove();\n    }\n  }\n\n  private _drawTag(shapeUpper, valueUpper, shapeLower, valueLower) {\n    const { transpose } = this;\n    const coord = this.view.geometries[0].coordinate;\n    const pointUpper = parsePoints(shapeUpper, coord)[transpose ? 3 : 0];\n    const pointLower = parsePoints(shapeLower, coord)[transpose ? 0 : 3];\n    this._drawTagArrow(pointUpper, pointLower);\n    this._drawTagValue(pointUpper, valueUpper, pointLower, valueLower);\n  }\n\n  private _drawTagArrow(pointUpper, pointLower) {\n    let { spacing } = this;\n    const { size, offset, animation, transpose } = this;\n    const { headSize } = this.arrow;\n    const totalHeight = pointLower.y - pointUpper.y;\n    const totalWidth = pointLower.x - pointUpper.x;\n\n    let points;\n\n    if (transpose) {\n      if ((totalWidth - headSize) / 2 < spacing) {\n        // 当柱间距不足容纳箭头尖与间隔时，画三角并挤占间隔\n        spacing = Math.max(1, (totalWidth - headSize) / 2);\n        points = [\n          [pointUpper.x + spacing, pointUpper.y - offset],\n          [pointUpper.x + spacing, pointUpper.y - offset - size],\n          [pointLower.x - spacing, pointLower.y - offset - size / 2],\n        ];\n      } else {\n        // 当柱间距足够时，画完整图形并留出间隔。\n        points = [\n          [pointUpper.x + spacing, pointUpper.y - offset],\n          [pointUpper.x + spacing, pointUpper.y - offset - size],\n          [pointLower.x - spacing - headSize, pointLower.y - offset - size],\n          [pointLower.x - spacing, pointLower.y - offset - size / 2],\n          [pointLower.x - spacing - headSize, pointLower.y - offset],\n        ];\n      }\n    } else {\n      if ((totalHeight - headSize) / 2 < spacing) {\n        // 当柱间距不足容纳箭头尖与间隔时，画三角并挤占间隔\n        spacing = Math.max(1, (totalHeight - headSize) / 2);\n        points = [\n          [pointUpper.x + offset, pointUpper.y + spacing],\n          [pointUpper.x + offset + size, pointUpper.y + spacing],\n          [pointLower.x + offset + size / 2, pointLower.y - spacing],\n        ];\n      } else {\n        // 当柱间距足够时，画完整图形并留出间隔。\n        points = [\n          [pointUpper.x + offset, pointUpper.y + spacing],\n          [pointUpper.x + offset + size, pointUpper.y + spacing],\n          [pointLower.x + offset + size, pointLower.y - spacing - headSize],\n          [pointLower.x + offset + size / 2, pointLower.y - spacing],\n          [pointLower.x + offset, pointLower.y - spacing - headSize],\n        ];\n      }\n    }\n\n    const tagArrow = this.container.addShape('polygon', {\n      name: 'arrow',\n      attrs: {\n        ...this.arrow.style,\n        points,\n      },\n    });\n\n    if (animation !== false) {\n      this._fadeInTagShape(tagArrow);\n    }\n  }\n\n  private _drawTagValue(pointUpper, valueUpper, pointLower, valueLower) {\n    const { size, offset, animation, transpose } = this;\n\n    const text = this.value.formatter(valueUpper, valueLower);\n\n    const tagValue = this.container.addShape('text', {\n      name: 'value',\n      attrs: {\n        ...this.value.style,\n        text,\n        x: transpose ? (pointUpper.x + pointLower.x) / 2 : pointUpper.x + offset + size / 2,\n        y: transpose ? pointUpper.y - offset - size / 2 : (pointUpper.y + pointLower.y) / 2,\n        textAlign: 'center',\n        textBaseline: 'middle',\n      },\n    });\n\n    if (transpose) {\n      const totalWidth = pointLower.x - pointUpper.x;\n      const { width: textWidth } = tagValue.getBBox();\n      if (textWidth > totalWidth) {\n        const cWidth = textWidth / text.length;\n        const cEnd = Math.max(1, Math.ceil(totalWidth / cWidth) - 1);\n        const textAdjusted = `${text.slice(0, cEnd)}...`;\n        tagValue.attr('text', textAdjusted);\n      }\n    }\n\n    if (animation !== false) {\n      this._fadeInTagShape(tagValue);\n    }\n  }\n\n  private _fadeInTagShape(shape) {\n    const { animation } = this;\n\n    const opacity = shape.attr('opacity');\n    shape.attr('opacity', 0);\n    const { duration } = get(animation, 'appear', DEFAULT_ANIMATE_CFG.appear);\n    shape.animate({ opacity }, duration);\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}