{"ast":null,"code":"import { fork, take, call, put, delay, takeLatest, select } from 'redux-saga/effects'; //select to listTask from store\n\nimport * as alarmTypes from './../constants/alarm';\nimport * as weatherTypes from './../constants/weather';\nimport * as authTypes from './../constants/auths';\nimport * as deviceTypes from './../constants/devices';\nimport { refeshWeatherSuccess, refeshWeatherFailed } from './../actions/weather';\nimport { getListWeather } from './../apis/weather';\nimport //getListAlarm\n'./../apis/alarm';\nimport { getListUser, addUser, loginUser, deteleUser, updateUser } from './../apis/auth';\nimport { getListData //updateData,\n//addData,\n} from './../apis/devices';\nimport { STATUS_CODE } from './../constants/index';\nimport { showLoading, hideLoading } from './../actions/ui';\nimport { hideModal } from './../actions/modal';\nimport { fetchListAlarm //fetchListAlarmSuccess,\n//fetchListAlarmFailed,\n} from './../actions/alarm';\nimport { authSignupSuccess, authSignupFaild, authLoginSuccess, authLoginFaild, checkAuthFaild, checkAuthSuccess, fetchListUserFailed, fetchListUserSuccess, setUserDeleteSucces, setUserDeleteFaild, updateUserSuccess, updateUserFailed } from './../actions/auths';\nimport { refeshSolar01Failed, refeshSolar01Success, refeshPowerSolar01Failed, refeshPowerSolar01Success, refeshSolar02Success, refeshSolar02Failed, refeshPowerSolar02Failed, refeshPowerSolar02Success, refeshMainLastSuccess, refeshMainLastFailed, refeshMainEnegrySuccess, refeshMainEnegryFailed, refeshMainEnegryHourlySuccess, refeshMainEnegryHourlyFailed, refeshMainEnegryDaylySuccess, refeshMainEnegryDaylyFailed, refeshMainEnegryWeeklySuccess, refeshMainEnegryWeeklyFailed, refeshMainEnegryMontlySuccess, refeshMainEnegryMontlyFailed, refeshFishLakeAreaSuccess, refeshFishLakeAreaFailed, refeshPowerFishLakeAreaSuccess, refeshPowerFishLakeAreaFailed, refeshHouseAreaSuccess, refeshHouseAreaFailed, refeshPowerHouseAreaSuccess, refeshPowerHouseAreaFailed } from '../actions/devices';\n/**\r\n * B1: dispatch action fetchTask\r\n * B2:Call animationPlayState: \r\n * B3:Kiểm tra status_code\r\n * Nếu thành công thì thực thi ...\r\n * Nếu thất bại thì thực thi gì đó....button-big\r\n * B4:Tắt Loadding\r\n * B5:thực thi công việc tiếp theo...\r\n */\n// function* watchFetchListAlarmAction(){\n//     while (true){\n//         const action = yield take(alarmTypes.FETCH_ALARM);// khi FETCH_TASK duoc dispatch thi code tu day tro xuong moi chay\n//         yield put(showLoading());\n//         const {params}=action.payload;\n//         console.log(params)\n//         const resp = yield call(getListAlarm,'api/v1/main/getalarm','alarm');\n//         const {status,data}= resp;\n//         if(status === STATUS_CODE.SUCCESS){\n//             yield put(fetchListAlarmSuccess(data));  \n//         }else{\n//             yield put(fetchListAlarmFailed(data));\n//         }\n//         yield delay(100);\n//         yield put(hideLoading());\n//     } \n// }\n\nfunction* filterAlarmSaga({\n  payload\n}) {\n  yield delay(500);\n  const {\n    keyword\n  } = payload;\n  console.log(keyword.type);\n  yield put(fetchListAlarm({\n    //filter:keyword.charAt(0).toUpperCase() + keyword.slice(1),// mockAPI\n    q: keyword.devicename //json-server\n\n  }));\n}\n\nfunction* loginSaga({\n  payload\n}) {\n  const {\n    email,\n    password\n  } = payload;\n  yield put(showLoading());\n  const resp = yield call(loginUser, 'api/v1/users/login', {\n    email,\n    password\n  });\n  const {\n    data,\n    status\n  } = resp;\n\n  if (status === STATUS_CODE.SUCCESS) {\n    console.log(data);\n    yield put(authLoginSuccess(data));\n    yield put(checkAuthSuccess());\n  } else {\n    yield put(checkAuthFaild());\n    yield put(authLoginFaild(data));\n  }\n\n  yield delay(200);\n  yield put(hideLoading());\n}\n\nfunction* signupSaga({\n  payload\n}) {\n  const {\n    name,\n    email,\n    password,\n    operator\n  } = payload;\n  yield put(showLoading());\n  const resp = yield call(addUser, 'api/v1/users/add', {\n    name,\n    email,\n    password,\n    operator\n  });\n  const {\n    data,\n    status\n  } = resp;\n\n  if (status === STATUS_CODE.CREATED) {\n    const resp = yield call(getListUser, 'api/v1/users/', '');\n    const {\n      status,\n      data\n    } = resp;\n    yield delay(100);\n\n    if (status === STATUS_CODE.SUCCESS) {\n      yield put(authSignupSuccess(data));\n      yield put(hideModal());\n    }\n  } else {\n    yield put(authSignupFaild(data));\n  }\n\n  yield delay(100);\n  yield put(hideLoading());\n}\n\nfunction* updateUserSaga({\n  payload\n}) {\n  const {\n    name,\n    email,\n    password,\n    operator\n  } = payload;\n  const userEditting = yield select(state => state.auth.userEditting);\n  const {\n    id\n  } = userEditting;\n  yield put(showLoading());\n  const resp = yield call(updateUser, 'api/v1/users/update', {\n    id,\n    name,\n    email,\n    password,\n    operator\n  });\n  const {\n    data,\n    status\n  } = resp;\n\n  if (status === STATUS_CODE.UPDATED) {\n    const resp = yield call(getListUser, 'api/v1/users', '');\n    const {\n      status,\n      data\n    } = resp;\n    yield delay(100);\n\n    if (status === STATUS_CODE.SUCCESS) {\n      yield put(updateUserSuccess(data));\n      yield put(hideModal());\n    }\n  } else {\n    yield put(updateUserFailed(data));\n  }\n\n  yield delay(100);\n  yield put(hideLoading());\n}\n\nfunction* watchFetchListUserAction() {\n  while (true) {\n    const action = yield take(authTypes.FETCH_USER); // khi FETCH_TASK duoc dispatch thi code tu day tro xuong moi chay\n\n    yield put(showLoading());\n    const {\n      params\n    } = action.payload;\n    const resp = yield call(getListUser, 'api/v1/users/', params);\n    const {\n      status,\n      data\n    } = resp;\n\n    if (status === STATUS_CODE.SUCCESS) {\n      yield put(fetchListUserSuccess(data));\n    } else {\n      yield put(fetchListUserFailed(data));\n    }\n\n    yield delay(50);\n    yield put(hideLoading());\n  }\n}\n\nfunction* deleteUserSaga({\n  payload\n}) {\n  const {\n    id\n  } = payload;\n  yield put(showLoading());\n  const reps = yield call(deteleUser, 'api/v1/users', id);\n  const {\n    data,\n    status\n  } = reps;\n\n  if (status === STATUS_CODE.NO_CONTENT) {\n    const resp = yield call(getListUser, 'api/v1/users', '');\n    const {\n      status,\n      data\n    } = resp;\n    yield delay(100);\n\n    if (status === STATUS_CODE.SUCCESS) {\n      yield put(setUserDeleteSucces(data));\n      yield put(hideModal());\n    }\n  } else {\n    yield put(setUserDeleteFaild(data));\n  }\n\n  yield delay(100);\n  yield put(hideLoading());\n} // refesh data weather\n\n\nfunction* refeshWeatherSaga({\n  payload\n}) {\n  const {\n    params\n  } = payload;\n  const resp = yield call(getListWeather, {\n    params\n  });\n  const {\n    status,\n    data\n  } = resp;\n\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\n    yield put(refeshWeatherSuccess(data));\n  } else {\n    yield put(refeshWeatherFailed(data));\n  }\n} // refesh data leak\n\n\nfunction* refeshHouseArea() {\n  const resp = yield call(getListData, 'api/v1/spm93/getlast', '');\n  const {\n    status,\n    data\n  } = resp;\n\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\n    yield put(refeshHouseAreaSuccess(data));\n  } else {\n    yield put(refeshHouseAreaFailed(data));\n  }\n}\n\nfunction* refeshPowerHouseArea() {\n  const resp = yield call(getListData, 'api/v1/spm93/getlast5min', '');\n  const {\n    status,\n    data\n  } = resp;\n\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\n    yield put(refeshPowerHouseAreaSuccess(data));\n  } else {\n    yield put(refeshPowerHouseAreaFailed(data));\n  }\n} // refesh data leak\n\n\nfunction* refeshfishLakeArea({\n  payload\n}) {\n  const {\n    params\n  } = payload;\n  const resp = yield call(getListData, 'api/v1/spm91/getlast', {\n    params\n  });\n  const {\n    status,\n    data\n  } = resp;\n\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\n    yield put(refeshFishLakeAreaSuccess(data));\n  } else {\n    yield put(refeshFishLakeAreaFailed(data));\n  }\n} // refesh data leak\n\n\nfunction* refeshPowerfishLakeArea({\n  payload\n}) {\n  const {\n    params\n  } = payload;\n  const resp = yield call(getListData, 'api/v1/spm91/getlast5min', {\n    params\n  });\n  const {\n    status,\n    data\n  } = resp;\n  console.log(data);\n\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\n    yield put(refeshPowerFishLakeAreaSuccess(data));\n  } else {\n    yield put(refeshPowerFishLakeAreaFailed(data));\n  }\n} // refesh data leak\n\n\nfunction* refeshSolar01Area({\n  payload\n}) {\n  const {\n    params\n  } = payload;\n  const resp = yield call(getListData, 'api/v1/spm91/getlast', {\n    params\n  });\n  const {\n    status,\n    data\n  } = resp;\n\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\n    yield put(refeshSolar01Success(data));\n  } else {\n    yield put(refeshSolar01Failed(data));\n  }\n} // refesh data leak\n\n\nfunction* refeshPowerSolar01Area({\n  payload\n}) {\n  const {\n    params\n  } = payload;\n  const resp = yield call(getListData, 'api/v1/spm91/getlast5min', {\n    params\n  });\n  const {\n    status,\n    data\n  } = resp;\n\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\n    yield put(refeshPowerSolar01Success(data));\n  } else {\n    yield put(refeshPowerSolar01Failed(data));\n  }\n} // refesh data leak\n\n\nfunction* refeshSolar02Area({\n  payload\n}) {\n  const {\n    params\n  } = payload;\n  const resp = yield call(getListData, 'api/v1/spm91/getlast', {\n    params\n  });\n  const {\n    status,\n    data\n  } = resp;\n\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\n    yield put(refeshSolar02Success(data));\n  } else {\n    yield put(refeshSolar02Failed(data));\n  }\n} // refesh data leak\n\n\nfunction* refeshPowerSolar02Area({\n  payload\n}) {\n  const {\n    params\n  } = payload;\n  const resp = yield call(getListData, 'api/v1/spm91/getlast5min', {\n    params\n  });\n  const {\n    status,\n    data\n  } = resp;\n\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\n    yield put(refeshPowerSolar02Success(data));\n  } else {\n    yield put(refeshPowerSolar02Failed(data));\n  }\n} // refesh data main last\n\n\nfunction* refeshMainLastSaga({\n  payload\n}) {\n  const {\n    params\n  } = payload;\n  const resp = yield call(getListData, '/getlast', {\n    params\n  });\n  const {\n    status,\n    data\n  } = resp;\n\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\n    yield put(refeshMainLastSuccess(data));\n  } else {\n    yield put(refeshMainLastFailed(data));\n  }\n} // refesh data main min\n\n\nfunction* refeshMainEnegrySaga({\n  payload\n}) {\n  const {\n    params\n  } = payload;\n  const resp = yield call(getListData, '/getlast5min', {\n    params\n  });\n  const {\n    status,\n    data\n  } = resp;\n\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\n    yield put(refeshMainEnegrySuccess(data));\n  } else {\n    yield put(refeshMainEnegryFailed(data));\n  }\n} // refesh data main min\n\n\nfunction* refeshMainEnegryDaylySaga({\n  payload\n}) {\n  const {\n    params\n  } = payload;\n  const resp = yield call(getListData, '/getlastenegrybytoday', {\n    params\n  });\n  const {\n    status,\n    data\n  } = resp;\n\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\n    yield put(refeshMainEnegryDaylySuccess(data));\n  } else {\n    yield put(refeshMainEnegryDaylyFailed(data));\n  }\n} // refesh data main min\n\n\nfunction* refeshMainEnegryHourlySaga({\n  payload\n}) {\n  const {\n    params\n  } = payload;\n  const resp = yield call(getListData, '/getlastenegrybyhour', {\n    params\n  });\n  const {\n    status,\n    data\n  } = resp;\n\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\n    yield put(refeshMainEnegryHourlySuccess(data));\n  } else {\n    yield put(refeshMainEnegryHourlyFailed(data));\n  }\n} // refesh data main min\n\n\nfunction* refeshMainEnegryWeeklySaga({\n  payload\n}) {\n  const {\n    params\n  } = payload;\n  const resp = yield call(getListData, '/getlastenegrybyweek', {\n    params\n  });\n  const {\n    status,\n    data\n  } = resp;\n\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\n    yield put(refeshMainEnegryWeeklySuccess(data));\n  } else {\n    yield put(refeshMainEnegryWeeklyFailed(data));\n  }\n} // refesh data main min\n\n\nfunction* refeshMainEnegryMonthlySaga({\n  payload\n}) {\n  const {\n    params\n  } = payload;\n  const resp = yield call(getListData, '/getlastenegrybymothly', {\n    params\n  });\n  const {\n    status,\n    data\n  } = resp;\n\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\n    yield put(refeshMainEnegryMonthlySuccess(data));\n  } else {\n    yield put(refeshMainEnegryMonthlyFailed(data));\n  }\n}\n\nfunction* rootSaga() {\n  // yield fork(watchFetchListAlarmAction);\n  yield fork(watchFetchListUserAction);\n  yield takeLatest(alarmTypes.FILTER_ALARM, filterAlarmSaga);\n  yield takeLatest(authTypes.AUTH_LOGIN, loginSaga);\n  yield takeLatest(authTypes.AUTH_SIGNUP, signupSaga);\n  yield takeLatest(authTypes.SET_USER_DELETE, deleteUserSaga);\n  yield takeLatest(authTypes.UPDATE_USER, updateUserSaga);\n  yield takeLatest(weatherTypes.REFESH_WEATHER, refeshWeatherSaga);\n  yield takeLatest(deviceTypes.REFESH_MAIN_LAST, refeshMainLastSaga);\n  yield takeLatest(deviceTypes.REFESH_MAIN_ENEGRY, refeshMainEnegrySaga);\n  yield takeLatest(deviceTypes.REFESH_MAIN_ENEGRY_DAYLY, refeshMainEnegryDaylySaga);\n  yield takeLatest(deviceTypes.REFESH_MAIN_ENEGRY_HOURLY, refeshMainEnegryHourlySaga);\n  yield takeLatest(deviceTypes.REFESH_MAIN_ENEGRY_WEEKLY, refeshMainEnegryWeeklySaga);\n  yield takeLatest(deviceTypes.REFESH_MAIN_ENEGRY_MONTHLY, refeshMainEnegryMonthlySaga);\n  yield takeLatest(deviceTypes.REFESH_HOUSE_AREA, refeshHouseArea);\n  yield takeLatest(deviceTypes.REFESH_POWER_HOUSE_AREA, refeshPowerHouseArea);\n  yield takeLatest(deviceTypes.REFESH_FISH_LAKE_AREA, refeshfishLakeArea);\n  yield takeLatest(deviceTypes.REFESH_POWER_FISH_LAKE_AREA, refeshPowerfishLakeArea);\n  yield takeLatest(deviceTypes.REFESH_SOLAR01_AREA, refeshSolar01Area);\n  yield takeLatest(deviceTypes.REFESH_POWER_SOLAR01_AREA, refeshPowerSolar01Area);\n  yield takeLatest(deviceTypes.REFESH_SOLAR02_AREA, refeshSolar02Area);\n  yield takeLatest(deviceTypes.REFESH_POWER_SOLAR02_AREA, refeshPowerSolar02Area);\n}\n\nexport default rootSaga;","map":{"version":3,"sources":["C:/Users/vietn/Desktop/AppEnegry2020/frontend/src/sagas/index.js"],"names":["fork","take","call","put","delay","takeLatest","select","alarmTypes","weatherTypes","authTypes","deviceTypes","refeshWeatherSuccess","refeshWeatherFailed","getListWeather","getListUser","addUser","loginUser","deteleUser","updateUser","getListData","STATUS_CODE","showLoading","hideLoading","hideModal","fetchListAlarm","authSignupSuccess","authSignupFaild","authLoginSuccess","authLoginFaild","checkAuthFaild","checkAuthSuccess","fetchListUserFailed","fetchListUserSuccess","setUserDeleteSucces","setUserDeleteFaild","updateUserSuccess","updateUserFailed","refeshSolar01Failed","refeshSolar01Success","refeshPowerSolar01Failed","refeshPowerSolar01Success","refeshSolar02Success","refeshSolar02Failed","refeshPowerSolar02Failed","refeshPowerSolar02Success","refeshMainLastSuccess","refeshMainLastFailed","refeshMainEnegrySuccess","refeshMainEnegryFailed","refeshMainEnegryHourlySuccess","refeshMainEnegryHourlyFailed","refeshMainEnegryDaylySuccess","refeshMainEnegryDaylyFailed","refeshMainEnegryWeeklySuccess","refeshMainEnegryWeeklyFailed","refeshMainEnegryMontlySuccess","refeshMainEnegryMontlyFailed","refeshFishLakeAreaSuccess","refeshFishLakeAreaFailed","refeshPowerFishLakeAreaSuccess","refeshPowerFishLakeAreaFailed","refeshHouseAreaSuccess","refeshHouseAreaFailed","refeshPowerHouseAreaSuccess","refeshPowerHouseAreaFailed","filterAlarmSaga","payload","keyword","console","log","type","q","devicename","loginSaga","email","password","resp","data","status","SUCCESS","signupSaga","name","operator","CREATED","updateUserSaga","userEditting","state","auth","id","UPDATED","watchFetchListUserAction","action","FETCH_USER","params","deleteUserSaga","reps","NO_CONTENT","refeshWeatherSaga","lenght","refeshHouseArea","refeshPowerHouseArea","refeshfishLakeArea","refeshPowerfishLakeArea","refeshSolar01Area","refeshPowerSolar01Area","refeshSolar02Area","refeshPowerSolar02Area","refeshMainLastSaga","refeshMainEnegrySaga","refeshMainEnegryDaylySaga","refeshMainEnegryHourlySaga","refeshMainEnegryWeeklySaga","refeshMainEnegryMonthlySaga","refeshMainEnegryMonthlySuccess","refeshMainEnegryMonthlyFailed","rootSaga","FILTER_ALARM","AUTH_LOGIN","AUTH_SIGNUP","SET_USER_DELETE","UPDATE_USER","REFESH_WEATHER","REFESH_MAIN_LAST","REFESH_MAIN_ENEGRY","REFESH_MAIN_ENEGRY_DAYLY","REFESH_MAIN_ENEGRY_HOURLY","REFESH_MAIN_ENEGRY_WEEKLY","REFESH_MAIN_ENEGRY_MONTHLY","REFESH_HOUSE_AREA","REFESH_POWER_HOUSE_AREA","REFESH_FISH_LAKE_AREA","REFESH_POWER_FISH_LAKE_AREA","REFESH_SOLAR01_AREA","REFESH_POWER_SOLAR01_AREA","REFESH_SOLAR02_AREA","REFESH_POWER_SOLAR02_AREA"],"mappings":"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","sourcesContent":["import {fork,take,call,put,delay,takeLatest,select} from 'redux-saga/effects';//select to listTask from store\r\nimport * as alarmTypes from './../constants/alarm';\r\nimport * as weatherTypes from './../constants/weather';\r\nimport * as authTypes from './../constants/auths';\r\nimport * as deviceTypes from './../constants/devices';\r\nimport {\r\n    refeshWeatherSuccess,\r\n    refeshWeatherFailed,\r\n    } from './../actions/weather';\r\nimport {\r\n    getListWeather\r\n    } from './../apis/weather';\r\nimport {\r\n    //getListAlarm\r\n    } from './../apis/alarm';\r\nimport {    \r\n    getListUser,\r\n    addUser,\r\n    loginUser,\r\n    deteleUser,     \r\n    updateUser\r\n    } from './../apis/auth';\r\n\r\nimport {getListData,\r\n        //updateData,\r\n        //addData,\r\n        } from './../apis/devices';\r\nimport {STATUS_CODE} from './../constants/index';\r\nimport {showLoading,hideLoading} from './../actions/ui';\r\nimport {hideModal} from './../actions/modal';\r\nimport {\r\n    fetchListAlarm,\r\n    //fetchListAlarmSuccess,\r\n    //fetchListAlarmFailed,\r\n    } from './../actions/alarm';\r\nimport {\r\n    authSignupSuccess,\r\n    authSignupFaild,\r\n    authLoginSuccess,\r\n    authLoginFaild,\r\n    checkAuthFaild,\r\n    checkAuthSuccess,\r\n    fetchListUserFailed,\r\n    fetchListUserSuccess,\r\n    setUserDeleteSucces,    \r\n    setUserDeleteFaild,\r\n    updateUserSuccess,\r\n    updateUserFailed\r\n    } from './../actions/auths';\r\nimport { refeshSolar01Failed,\r\n        refeshSolar01Success,\r\n        refeshPowerSolar01Failed,\r\n        refeshPowerSolar01Success,\r\n        refeshSolar02Success,\r\n        refeshSolar02Failed,\r\n        refeshPowerSolar02Failed,\r\n        refeshPowerSolar02Success,\r\n        refeshMainLastSuccess,\r\n        refeshMainLastFailed,\r\n        refeshMainEnegrySuccess,\r\n        refeshMainEnegryFailed,\r\n        refeshMainEnegryHourlySuccess,\r\n        refeshMainEnegryHourlyFailed,\r\n        refeshMainEnegryDaylySuccess,\r\n        refeshMainEnegryDaylyFailed,\r\n        refeshMainEnegryWeeklySuccess,\r\n        refeshMainEnegryWeeklyFailed,\r\n        refeshMainEnegryMontlySuccess,\r\n        refeshMainEnegryMontlyFailed,\r\n        refeshFishLakeAreaSuccess,\r\n        refeshFishLakeAreaFailed,\r\n        refeshPowerFishLakeAreaSuccess,\r\n        refeshPowerFishLakeAreaFailed,\r\n        refeshHouseAreaSuccess,\r\n        refeshHouseAreaFailed,\r\n        refeshPowerHouseAreaSuccess,\r\n        refeshPowerHouseAreaFailed,\r\n     } from '../actions/devices';\r\n/**\r\n * B1: dispatch action fetchTask\r\n * B2:Call animationPlayState: \r\n * B3:Kiểm tra status_code\r\n * Nếu thành công thì thực thi ...\r\n * Nếu thất bại thì thực thi gì đó....button-big\r\n * B4:Tắt Loadding\r\n * B5:thực thi công việc tiếp theo...\r\n */\r\n// function* watchFetchListAlarmAction(){\r\n//     while (true){\r\n//         const action = yield take(alarmTypes.FETCH_ALARM);// khi FETCH_TASK duoc dispatch thi code tu day tro xuong moi chay\r\n//         yield put(showLoading());\r\n//         const {params}=action.payload;\r\n//         console.log(params)\r\n//         const resp = yield call(getListAlarm,'api/v1/main/getalarm','alarm');\r\n//         const {status,data}= resp;\r\n//         if(status === STATUS_CODE.SUCCESS){\r\n//             yield put(fetchListAlarmSuccess(data));  \r\n//         }else{\r\n//             yield put(fetchListAlarmFailed(data));\r\n//         }\r\n//         yield delay(100);\r\n//         yield put(hideLoading());\r\n//     } \r\n// }\r\n\r\nfunction* filterAlarmSaga({payload}){\r\n    yield delay(500);\r\n    const {keyword} = payload;\r\n    console.log(keyword.type)\r\n    yield put(fetchListAlarm({\r\n        //filter:keyword.charAt(0).toUpperCase() + keyword.slice(1),// mockAPI\r\n        q:keyword.devicename, //json-server\r\n        }),\r\n    );\r\n}\r\n\r\nfunction* loginSaga({payload}){\r\n    const {email,password}= payload;\r\n    yield put(showLoading());\r\n    const resp =yield call(loginUser,'api/v1/users/login',{email,password});\r\n    const{data,status}=resp;\r\n    if(status === STATUS_CODE.SUCCESS){\r\n        console.log(data);\r\n        yield put(authLoginSuccess(data));\r\n        yield put(checkAuthSuccess());\r\n    }else{\r\n        yield put(checkAuthFaild());\r\n        yield put(authLoginFaild(data));\r\n    }\r\n    yield delay(200);\r\n    yield put(hideLoading());\r\n\r\n}\r\nfunction* signupSaga({payload}){\r\n    const {name,email,password,operator}= payload;\r\n    yield put(showLoading());\r\n    const resp = yield call(addUser,'api/v1/users/add',{name,email,password,operator});\r\n    const{data,status}=resp;\r\n    if(status === STATUS_CODE.CREATED ){\r\n        const resp = yield call(getListUser,'api/v1/users/','');\r\n        const {status,data}= resp;\r\n        yield delay(100);\r\n        if(status === STATUS_CODE.SUCCESS){\r\n         yield put(authSignupSuccess(data));\r\n         yield put(hideModal());\r\n        }\r\n    }else{\r\n         yield put(authSignupFaild(data));\r\n    }\r\n    yield delay(100);\r\n    yield put(hideLoading());\r\n}\r\nfunction* updateUserSaga({payload}){\r\n    const {name,email,password,operator}= payload;\r\n    const userEditting = yield select(state => state.auth.userEditting);\r\n    const {id} = userEditting;\r\n    yield put(showLoading());\r\n    const resp = yield call(updateUser,'api/v1/users/update',{id,name,email,password,operator});\r\n    const{data,status}=resp;\r\n    if(status === STATUS_CODE.UPDATED ){\r\n        const resp = yield call(getListUser,'api/v1/users','');\r\n        const {status,data}= resp;\r\n        yield delay(100);\r\n        if(status === STATUS_CODE.SUCCESS){\r\n         yield put(updateUserSuccess(data));\r\n         yield put(hideModal());\r\n        }\r\n    }else {\r\n         yield put(updateUserFailed(data));\r\n         \r\n    }\r\n    yield delay(100);\r\n    yield put(hideLoading());\r\n}\r\nfunction* watchFetchListUserAction(){\r\n    while (true){\r\n        const action = yield take(authTypes.FETCH_USER);// khi FETCH_TASK duoc dispatch thi code tu day tro xuong moi chay\r\n        yield put(showLoading());\r\n        const {params}=action.payload;\r\n        const resp = yield call(getListUser,'api/v1/users/',params);\r\n        const {status,data}= resp;\r\n        if(status === STATUS_CODE.SUCCESS){\r\n            yield put(fetchListUserSuccess(data));  \r\n            \r\n        }else{\r\n            yield put(fetchListUserFailed(data));\r\n        }\r\n        yield delay(50);\r\n        yield put(hideLoading());\r\n    } \r\n}\r\n\r\nfunction* deleteUserSaga({payload}){\r\n    const {id}= payload;\r\n    yield put(showLoading());\r\n    const reps= yield call(deteleUser,'api/v1/users',id);\r\n    const {data,status}=reps;\r\n    if(status === STATUS_CODE.NO_CONTENT){\r\n        const resp = yield call(getListUser,'api/v1/users','');\r\n        const {status,data}= resp;\r\n        yield delay(100);\r\n        if(status === STATUS_CODE.SUCCESS){\r\n            yield put(setUserDeleteSucces(data));\r\n            yield put(hideModal());\r\n        }  \r\n    } else {\r\n        yield put(setUserDeleteFaild(data));\r\n    }\r\n    yield delay(100);\r\n    yield put(hideLoading());\r\n}\r\n// refesh data weather\r\nfunction* refeshWeatherSaga({payload}){\r\n    const {params} = payload;\r\n    const resp = yield call(getListWeather,{params});\r\n    const {status,data}= resp;\r\n    if(status === STATUS_CODE.SUCCESS && data.lenght !== 0){\r\n        yield put(refeshWeatherSuccess(data));  \r\n    }else{\r\n        yield put(refeshWeatherFailed(data));\r\n    } \r\n}\r\n\r\n// refesh data leak\r\nfunction* refeshHouseArea(){\r\n    const resp = yield call(getListData,'api/v1/spm93/getlast','');\r\n    const {status,data}= resp;\r\n    if(status === STATUS_CODE.SUCCESS && data.lenght !== 0){\r\n        yield put(refeshHouseAreaSuccess(data));  \r\n    }else{\r\n        yield put(refeshHouseAreaFailed(data));\r\n    } \r\n}\r\nfunction* refeshPowerHouseArea(){\r\n    const resp = yield call(getListData,'api/v1/spm93/getlast5min','');\r\n    const {status,data}= resp;\r\n    if(status === STATUS_CODE.SUCCESS && data.lenght !== 0){\r\n        yield put(refeshPowerHouseAreaSuccess(data));  \r\n    }else{\r\n        yield put(refeshPowerHouseAreaFailed(data));\r\n    } \r\n}\r\n// refesh data leak\r\nfunction* refeshfishLakeArea({payload}){\r\n    const {params} = payload;\r\n    const resp = yield call(getListData,'api/v1/spm91/getlast',{params});\r\n    const {status,data}= resp;\r\n\r\n    if(status === STATUS_CODE.SUCCESS && data.lenght !== 0){\r\n        yield put(refeshFishLakeAreaSuccess(data));  \r\n    }else{\r\n        yield put(refeshFishLakeAreaFailed(data));\r\n    }\r\n    \r\n}\r\n// refesh data leak\r\nfunction* refeshPowerfishLakeArea({payload}){\r\n    const {params} = payload;\r\n    const resp = yield call(getListData,'api/v1/spm91/getlast5min',{params});\r\n    const {status,data}= resp;\r\n    console.log(data)\r\n    if(status === STATUS_CODE.SUCCESS && data.lenght !== 0){\r\n        yield put(refeshPowerFishLakeAreaSuccess(data));  \r\n    }else{\r\n        yield put(refeshPowerFishLakeAreaFailed(data));\r\n    }\r\n    \r\n}\r\n// refesh data leak\r\nfunction* refeshSolar01Area({payload}){\r\n    const {params} = payload;\r\n    const resp = yield call(getListData,'api/v1/spm91/getlast',{params});\r\n    const {status,data}= resp;\r\n    if(status === STATUS_CODE.SUCCESS && data.lenght !== 0){\r\n        yield put(refeshSolar01Success(data));  \r\n    }else{\r\n        yield put(refeshSolar01Failed(data));\r\n    }\r\n    \r\n}\r\n// refesh data leak\r\nfunction* refeshPowerSolar01Area({payload}){\r\n    const {params} = payload;\r\n    const resp = yield call(getListData,'api/v1/spm91/getlast5min',{params});\r\n    const {status,data}= resp;\r\n    if(status === STATUS_CODE.SUCCESS && data.lenght !== 0){\r\n        yield put(refeshPowerSolar01Success(data));  \r\n    }else{\r\n        yield put(refeshPowerSolar01Failed(data));\r\n    }\r\n    \r\n}\r\n// refesh data leak\r\nfunction* refeshSolar02Area({payload}){\r\n    const {params} = payload;\r\n    const resp = yield call(getListData,'api/v1/spm91/getlast',{params});\r\n    const {status,data}= resp;\r\n    if(status === STATUS_CODE.SUCCESS && data.lenght !== 0){\r\n        yield put(refeshSolar02Success(data));  \r\n    }else{\r\n        yield put(refeshSolar02Failed(data));\r\n    }\r\n    \r\n}\r\n// refesh data leak\r\nfunction* refeshPowerSolar02Area({payload}){\r\n    const {params} = payload;\r\n    const resp = yield call(getListData,'api/v1/spm91/getlast5min',{params});\r\n    const {status,data}= resp;\r\n    if(status === STATUS_CODE.SUCCESS && data.lenght !== 0){\r\n        yield put(refeshPowerSolar02Success(data));  \r\n    }else{\r\n        yield put(refeshPowerSolar02Failed(data));\r\n    }\r\n    \r\n}\r\n\r\n// refesh data main last\r\nfunction* refeshMainLastSaga({payload}){\r\n    const {params} = payload;\r\n    const resp = yield call(getListData,'/getlast',{params});\r\n    const {status,data}= resp;\r\n    if(status === STATUS_CODE.SUCCESS && data.lenght !== 0){\r\n        yield put(refeshMainLastSuccess(data));  \r\n    }else{\r\n        yield put(refeshMainLastFailed(data));\r\n    } \r\n}\r\n// refesh data main min\r\nfunction* refeshMainEnegrySaga({payload}){\r\n    const {params} = payload;\r\n    const resp = yield call(getListData,'/getlast5min',{params});\r\n    const {status,data}= resp;\r\n    if(status === STATUS_CODE.SUCCESS && data.lenght !== 0){\r\n        yield put(refeshMainEnegrySuccess(data));  \r\n    }else{\r\n        yield put(refeshMainEnegryFailed(data));\r\n    } \r\n}\r\n// refesh data main min\r\nfunction* refeshMainEnegryDaylySaga({payload}){\r\n    const {params} = payload;\r\n    const resp = yield call(getListData,'/getlastenegrybytoday',{params});\r\n    const {status,data}= resp;\r\n    if(status === STATUS_CODE.SUCCESS && data.lenght !== 0){\r\n        yield put(refeshMainEnegryDaylySuccess(data));  \r\n    }else{\r\n        yield put(refeshMainEnegryDaylyFailed(data));\r\n    } \r\n}\r\n// refesh data main min\r\nfunction* refeshMainEnegryHourlySaga({payload}){\r\n    const {params} = payload;\r\n    const resp = yield call(getListData,'/getlastenegrybyhour',{params});\r\n    const {status,data}= resp;\r\n    if(status === STATUS_CODE.SUCCESS && data.lenght !== 0){\r\n        yield put(refeshMainEnegryHourlySuccess(data));  \r\n    }else{\r\n        yield put(refeshMainEnegryHourlyFailed(data));\r\n    } \r\n}\r\n// refesh data main min\r\nfunction* refeshMainEnegryWeeklySaga({payload}){\r\n    const {params} = payload;\r\n    const resp = yield call(getListData,'/getlastenegrybyweek',{params});\r\n    const {status,data}= resp;\r\n    if(status === STATUS_CODE.SUCCESS && data.lenght !== 0){\r\n        yield put(refeshMainEnegryWeeklySuccess(data));  \r\n    }else{\r\n        yield put(refeshMainEnegryWeeklyFailed(data));\r\n    } \r\n}\r\n\r\n// refesh data main min\r\nfunction* refeshMainEnegryMonthlySaga({payload}){\r\n    const {params} = payload;\r\n    const resp = yield call(getListData,'/getlastenegrybymothly',{params});\r\n    const {status,data}= resp;\r\n    if(status === STATUS_CODE.SUCCESS && data.lenght !== 0){\r\n        yield put(refeshMainEnegryMonthlySuccess(data));  \r\n    }else{\r\n        yield put(refeshMainEnegryMonthlyFailed(data));\r\n    } \r\n}\r\n\r\n\r\nfunction* rootSaga() {\r\n    // yield fork(watchFetchListAlarmAction);\r\n    yield fork(watchFetchListUserAction);\r\n    yield takeLatest(alarmTypes.FILTER_ALARM,filterAlarmSaga);\r\n    yield takeLatest(authTypes.AUTH_LOGIN,loginSaga);\r\n    yield takeLatest(authTypes.AUTH_SIGNUP,signupSaga)\r\n    yield takeLatest(authTypes.SET_USER_DELETE,deleteUserSaga)  \r\n    yield takeLatest (authTypes.UPDATE_USER,updateUserSaga)\r\n    yield takeLatest (weatherTypes.REFESH_WEATHER,refeshWeatherSaga)\r\n    yield takeLatest (deviceTypes.REFESH_MAIN_LAST,refeshMainLastSaga)\r\n    yield takeLatest (deviceTypes.REFESH_MAIN_ENEGRY,refeshMainEnegrySaga)\r\n    yield takeLatest (deviceTypes.REFESH_MAIN_ENEGRY_DAYLY,refeshMainEnegryDaylySaga)\r\n    yield takeLatest (deviceTypes.REFESH_MAIN_ENEGRY_HOURLY,refeshMainEnegryHourlySaga)\r\n    yield takeLatest (deviceTypes.REFESH_MAIN_ENEGRY_WEEKLY,refeshMainEnegryWeeklySaga)\r\n    yield takeLatest (deviceTypes.REFESH_MAIN_ENEGRY_MONTHLY,refeshMainEnegryMonthlySaga)\r\n    yield takeLatest (deviceTypes.REFESH_HOUSE_AREA,refeshHouseArea)\r\n    yield takeLatest (deviceTypes.REFESH_POWER_HOUSE_AREA,refeshPowerHouseArea)\r\n    yield takeLatest (deviceTypes.REFESH_FISH_LAKE_AREA,refeshfishLakeArea)\r\n    yield takeLatest (deviceTypes.REFESH_POWER_FISH_LAKE_AREA,refeshPowerfishLakeArea)\r\n    yield takeLatest (deviceTypes.REFESH_SOLAR01_AREA,refeshSolar01Area)\r\n    yield takeLatest (deviceTypes.REFESH_POWER_SOLAR01_AREA,refeshPowerSolar01Area)\r\n    yield takeLatest (deviceTypes.REFESH_SOLAR02_AREA,refeshSolar02Area)\r\n    yield takeLatest (deviceTypes.REFESH_POWER_SOLAR02_AREA,refeshPowerSolar02Area)\r\n    \r\n}\r\n\r\nexport default rootSaga;"]},"metadata":{},"sourceType":"module"}