{"ast":null,"code":"import { fork, take, call, put, delay, takeLatest, select } from 'redux-saga/effects'; //select to listTask from store\n\nimport * as alarmTypes from './../constants/alarm';\nimport * as weatherTypes from './../constants/weather';\nimport * as priceTypes from './../constants/prices';\nimport * as authTypes from './../constants/auths';\nimport * as deviceTypes from './../constants/devices';\nimport * as analyticsTypes from './../constants/analytics';\nimport { refeshWeatherSuccess, refeshWeatherFailed } from './../actions/weather';\nimport { refeshpriceFailed, refeshpriceSuccess, addpriceFailed, addpriceSuccess, filterPriceNewSuccess, filterPriceNewFailed } from './../actions/prices';\nimport { fetchListAnalyticsFailed, fetchListAnalyticsSuccess } from './../actions/analytics';\nimport { getListWeather } from './../apis/weather';\nimport { getListPrice, addPrice } from './../apis/prices';\nimport { getList, addList } from './../apis/alarm';\nimport { getListAnalytics } from './../apis/analytics';\nimport { getListUser, addUser, loginUser, deteleUser, updateUser } from './../apis/auth';\nimport { getListData //updateData,\n//addData,\n} from './../apis/devices';\nimport { STATUS_CODE } from './../constants/index';\nimport { showLoading, hideLoading } from './../actions/ui';\nimport { hideModal } from './../actions/modal';\nimport { fetchListAlarm, fetchListAlarmSuccess, fetchListAlarmFailed, refeshListEmailAlarmSuccess, refeshListEmailAlarmFailed, addListEmailAlarmFailed, addListEmailAlarmSuccess } from './../actions/alarm';\nimport { authSignupSuccess, authSignupFaild, authLoginSuccess, authLoginFaild, authLogHistorySuccess, authLogHistoryFaild // checkAuthFaild,\n// checkAuthSuccess,\n, fetchListUserFailed, fetchListUserSuccess, setUserDeleteSucces, setUserDeleteFaild, updateUserSuccess, updateUserFailed, authLogDeleteHistoryFaild, authLogDeleteHistorySuccess } from './../actions/auths';\nimport { refeshSolar01Failed, refeshSolar01Success, refeshPowerSolar01Failed, refeshPowerSolar01Success, refeshSolar02Success, refeshSolar02Failed, refeshPowerSolar02Failed, refeshPowerSolar02Success, refeshMainLastSuccess, refeshMainLastFailed, refeshMainEnegrySuccess, refeshMainEnegryFailed, refeshMainEnegryHourlySuccess, refeshMainEnegryHourlyFailed, refeshMainEnegryDaylySuccess, refeshMainEnegryDaylyFailed, refeshMainEnegryWeeklySuccess, refeshMainEnegryWeeklyFailed, refeshMainEnegryMonthlySuccess, refeshMainEnegryMonthlyFailed, refeshFishLakeAreaSuccess, refeshFishLakeAreaFailed, refeshPowerFishLakeAreaSuccess, refeshPowerFishLakeAreaFailed, refeshHouseAreaSuccess, refeshHouseAreaFailed, refeshPowerHouseAreaSuccess, refeshPowerHouseAreaFailed, refeshCalculatorEnegrySuccess } from '../actions/devices';\n/**\r\n * B1: dispatch action fetchTask\r\n * B2:Call animationPlayState:\r\n * B3:Kiểm tra status_code\r\n * Nếu thành công thì thực thi ...\r\n * Nếu thất bại thì thực thi gì đó....button-big\r\n * B4:Tắt Loadding\r\n * B5:thực thi công việc tiếp theo...\r\n */\n\nfunction* watchFetchListAlarmAction() {\n  while (true) {\n    const action = yield take(alarmTypes.FETCH_ALARM);\n    yield put(showLoading());\n    const {\n      params\n    } = action.payload;\n    console.log(params);\n    const resp = yield call(getList, 'api/v1/alarm', '');\n    const {\n      status,\n      data\n    } = resp;\n\n    if (status === STATUS_CODE.SUCCESS) {\n      yield put(fetchListAlarmSuccess(data));\n    } else {\n      yield put(fetchListAlarmFailed(data));\n    }\n\n    yield delay(100);\n    yield put(hideLoading());\n  }\n} //  Refesh list email alarm\n\n\nfunction* refeshListEmailAlarmAction() {\n  yield put(showLoading());\n  const resp = yield call(getList, 'api/v1/emailalarm', '');\n  const {\n    status,\n    data\n  } = resp;\n\n  if (status === STATUS_CODE.SUCCESS) {\n    yield put(refeshListEmailAlarmSuccess(data));\n  } else {\n    yield put(refeshListEmailAlarmFailed(data));\n  }\n\n  yield delay(100);\n  yield put(hideLoading());\n} // add list email alarm\n\n\nfunction* addeEmailAlarm({\n  payload\n}) {\n  yield put(showLoading());\n  const {\n    params\n  } = payload;\n  const resp = yield call(addList, 'api/v1/emailalarm/add', params);\n  const {\n    status,\n    data\n  } = resp;\n\n  if (status === STATUS_CODE.SUCCESS) {\n    yield put(addListEmailAlarmSuccess(data));\n  } else {\n    yield put(addListEmailAlarmFailed(data));\n  }\n\n  yield delay(100);\n  yield put(hideLoading());\n} // fiter alarm\n\n\nfunction* filterAlarmSaga({\n  payload\n}) {\n  yield delay(100);\n  const {\n    keyword\n  } = payload;\n  yield put(fetchListAlarm(keyword));\n}\n\nfunction* refeshListPriceAction() {\n  yield put(showLoading());\n  const resp = yield call(getListPrice, 'api/v1/price', '');\n  const {\n    status,\n    data\n  } = resp;\n\n  if (status === STATUS_CODE.SUCCESS) {\n    yield put(refeshpriceSuccess(data));\n  } else {\n    yield put(refeshpriceFailed(data));\n  }\n\n  yield delay(100);\n  yield put(hideLoading());\n}\n\nfunction* addListPrice({\n  payload\n}) {\n  yield put(showLoading());\n  const {\n    params\n  } = payload;\n  const resp = yield call(addPrice, 'api/v1/price/add', params);\n  const {\n    status,\n    data\n  } = resp;\n\n  if (status === STATUS_CODE.SUCCESS) {\n    yield put(addpriceSuccess(data));\n  } else {\n    yield put(addpriceFailed(data));\n  }\n\n  yield delay(100);\n  yield put(hideLoading());\n}\n\nfunction* fiterPriceNew({\n  payload\n}) {\n  const {\n    params\n  } = payload;\n  const resp = yield call(getListPrice, 'api/v1/price/getlast', params);\n  const {\n    status,\n    data\n  } = resp;\n\n  if (status === STATUS_CODE.SUCCESS) {\n    yield put(filterPriceNewSuccess(data));\n  } else {\n    yield put(filterPriceNewFailed(data));\n  }\n\n  yield delay(100);\n}\n\nfunction* loginSaga({\n  payload\n}) {\n  const {\n    email,\n    password\n  } = payload;\n  yield put(showLoading());\n  const resp = yield call(loginUser, 'api/v1/users/login', {\n    email,\n    password\n  });\n  const {\n    data,\n    status\n  } = resp;\n\n  if (status === STATUS_CODE.SUCCESS && data.state === 'true') {\n    yield put(authLoginSuccess(data));\n  } else if (status === STATUS_CODE.SUCCESS && data.state === 'false') {\n    yield put(authLoginFaild(data.error));\n  }\n\n  yield delay(200);\n  yield put(hideLoading());\n}\n\nfunction* signupSaga({\n  payload\n}) {\n  const {\n    name,\n    email,\n    password,\n    operator\n  } = payload;\n  yield put(showLoading());\n  const resp = yield call(addUser, 'api/v1/users/add', {\n    name,\n    email,\n    password,\n    operator\n  });\n  const {\n    data,\n    status\n  } = resp;\n\n  if (status === STATUS_CODE.CREATED) {\n    const resp = yield call(getListUser, 'api/v1/users/', '');\n    const {\n      status,\n      data\n    } = resp;\n    yield delay(100);\n\n    if (status === STATUS_CODE.SUCCESS) {\n      yield put(authSignupSuccess(data));\n      yield put(hideModal());\n    }\n  } else {\n    yield put(authSignupFaild(data));\n  }\n\n  yield delay(100);\n  yield put(hideLoading());\n}\n\nfunction* updateUserSaga({\n  payload\n}) {\n  const {\n    name,\n    email,\n    password,\n    operator\n  } = payload;\n  const userEditting = yield select(state => state.auth.userEditting);\n  const {\n    id\n  } = userEditting;\n  yield put(showLoading());\n  const resp = yield call(updateUser, 'api/v1/users/update', {\n    id,\n    name,\n    email,\n    password,\n    operator\n  });\n  const {\n    data,\n    status\n  } = resp;\n\n  if (status === STATUS_CODE.UPDATED) {\n    const resp = yield call(getListUser, 'api/v1/users', '');\n    const {\n      status,\n      data\n    } = resp;\n    yield delay(100);\n\n    if (status === STATUS_CODE.SUCCESS) {\n      yield put(updateUserSuccess(data));\n      yield put(hideModal());\n    }\n  } else {\n    yield put(updateUserFailed(data));\n  }\n\n  yield delay(100);\n  yield put(hideLoading());\n}\n\nfunction* watchFetchListUserAction() {\n  while (true) {\n    const action = yield take(authTypes.FETCH_USER); // khi FETCH_TASK duoc dispatch thi code tu day tro xuong moi chay\n\n    yield put(showLoading());\n    const {\n      params\n    } = action.payload;\n    const resp = yield call(getListUser, 'api/v1/users', params);\n    const {\n      status,\n      data\n    } = resp;\n\n    if (status === STATUS_CODE.SUCCESS) {\n      yield put(fetchListUserSuccess(data));\n    } else {\n      yield put(fetchListUserFailed(data));\n    }\n\n    yield delay(50);\n    yield put(hideLoading());\n  }\n}\n\nfunction* watchFetchListUserLogAction() {\n  while (true) {\n    const action = yield take(authTypes.AUTH_HISTORY); // khi FETCH_TASK duoc dispatch thi code tu day tro xuong moi chay\n\n    yield put(showLoading());\n    const {\n      params\n    } = action.payload;\n    const resp = yield call(getListUser, 'api/v1/userlog', params);\n    const {\n      status,\n      data\n    } = resp;\n\n    if (status === STATUS_CODE.SUCCESS) {\n      yield put(authLogHistorySuccess(data));\n    } else {\n      yield put(authLogHistoryFaild(data));\n    }\n\n    yield delay(50);\n    yield put(hideLoading());\n  }\n}\n\nfunction* deleteUserSaga({\n  payload\n}) {\n  const {\n    id\n  } = payload;\n  yield put(showLoading());\n  const reps = yield call(deteleUser, 'api/v1/users', id);\n  const {\n    data,\n    status\n  } = reps;\n\n  if (status === STATUS_CODE.NO_CONTENT) {\n    const resp = yield call(getListUser, 'api/v1/users', '');\n    const {\n      status,\n      data\n    } = resp;\n    yield delay(100);\n\n    if (status === STATUS_CODE.SUCCESS) {\n      yield put(setUserDeleteSucces(data));\n      yield put(hideModal());\n    }\n  } else {\n    yield put(setUserDeleteFaild(data));\n  }\n\n  yield delay(100);\n  yield put(hideLoading());\n}\n\nfunction* deleteUserlogSaga({\n  payload\n}) {\n  const {\n    id\n  } = payload;\n  yield put(showLoading());\n  const reps = yield call(deteleUser, 'api/v1/userlog', id);\n  const {\n    data,\n    status\n  } = reps;\n\n  if (status === STATUS_CODE.NO_CONTENT) {\n    const resp = yield call(getListUser, 'api/v1/userlog', '');\n    const {\n      status,\n      data\n    } = resp;\n    yield delay(100);\n\n    if (status === STATUS_CODE.SUCCESS) {\n      yield put(authLogDeleteHistorySuccess(data));\n      yield put(hideModal());\n    }\n  } else {\n    yield put(authLogDeleteHistoryFaild(data));\n  }\n\n  yield delay(100);\n  yield put(hideLoading());\n} // analytics saga\n\n\nfunction* analyticsSaga({\n  payload\n}) {\n  const {\n    params\n  } = payload;\n  yield put(showLoading());\n  const resp = yield call(getListAnalytics, 'api/v1/main/analytics', params);\n  const {\n    status,\n    data\n  } = resp;\n\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\n    yield put(fetchListAnalyticsSuccess(data));\n  } else {\n    yield put(fetchListAnalyticsFailed(data));\n  }\n\n  yield delay(100);\n  yield put(hideLoading());\n} // refesh data weather\n\n\nfunction* refeshWeatherSaga({\n  payload\n}) {\n  const {\n    params\n  } = payload;\n  const resp = yield call(getListWeather, params);\n  const {\n    status,\n    data\n  } = resp;\n\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\n    yield put(refeshWeatherSuccess(data));\n  } else {\n    yield put(refeshWeatherFailed(data));\n  }\n} // refesh data leak\n\n\nfunction* refeshHouseArea() {\n  const resp = yield call(getListData, 'api/v1/spm93/getlast', '');\n  const {\n    status,\n    data\n  } = resp;\n\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\n    yield put(refeshHouseAreaSuccess(data));\n  } else {\n    yield put(refeshHouseAreaFailed(data));\n  }\n}\n\nfunction* refeshPowerHouseArea() {\n  const resp = yield call(getListData, 'api/v1/spm93/getlast5min', '');\n  const {\n    status,\n    data\n  } = resp;\n\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\n    yield put(refeshPowerHouseAreaSuccess(data));\n  } else {\n    yield put(refeshPowerHouseAreaFailed(data));\n  }\n} // refesh data leak\n\n\nfunction* refeshfishLakeArea({\n  payload\n}) {\n  const {\n    params\n  } = payload;\n  const resp = yield call(getListData, 'api/v1/spm91/getlast', {\n    params\n  });\n  const {\n    status,\n    data\n  } = resp;\n\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\n    yield put(refeshFishLakeAreaSuccess(data));\n  } else {\n    yield put(refeshFishLakeAreaFailed(data));\n  }\n} // refesh data leak\n\n\nfunction* refeshPowerfishLakeArea({\n  payload\n}) {\n  const {\n    params\n  } = payload;\n  const resp = yield call(getListData, 'api/v1/spm91/getlast5min', {\n    params\n  });\n  const {\n    status,\n    data\n  } = resp;\n\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\n    yield put(refeshPowerFishLakeAreaSuccess(data));\n  } else {\n    yield put(refeshPowerFishLakeAreaFailed(data));\n  }\n} // refesh data leak\n\n\nfunction* refeshSolar01Area({\n  payload\n}) {\n  const {\n    params\n  } = payload;\n  const resp = yield call(getListData, 'api/v1/spm91/getlast', {\n    params\n  });\n  const {\n    status,\n    data\n  } = resp;\n\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\n    yield put(refeshSolar01Success(data));\n  } else {\n    yield put(refeshSolar01Failed(data));\n  }\n} // refesh data leak\n\n\nfunction* refeshPowerSolar01Area({\n  payload\n}) {\n  const {\n    params\n  } = payload;\n  const resp = yield call(getListData, 'api/v1/spm91/getlast5min', {\n    params\n  });\n  const {\n    status,\n    data\n  } = resp;\n\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\n    yield put(refeshPowerSolar01Success(data));\n  } else {\n    yield put(refeshPowerSolar01Failed(data));\n  }\n} // refesh data leak\n\n\nfunction* refeshSolar02Area({\n  payload\n}) {\n  const {\n    params\n  } = payload;\n  const resp = yield call(getListData, 'api/v1/spm91/getlast', {\n    params\n  });\n  const {\n    status,\n    data\n  } = resp;\n\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\n    yield put(refeshSolar02Success(data));\n  } else {\n    yield put(refeshSolar02Failed(data));\n  }\n} // refesh data leak\n\n\nfunction* refeshPowerSolar02Area({\n  payload\n}) {\n  const {\n    params\n  } = payload;\n  const resp = yield call(getListData, 'api/v1/spm91/getlast5min', {\n    params\n  });\n  const {\n    status,\n    data\n  } = resp;\n\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\n    yield put(refeshPowerSolar02Success(data));\n  } else {\n    yield put(refeshPowerSolar02Failed(data));\n  }\n} // refesh data main last\n\n\nfunction* refeshMainLastSaga({\n  payload\n}) {\n  const resp = yield call(getListData, 'api/v1/main/getlast', '');\n  const {\n    status,\n    data\n  } = resp;\n\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\n    yield put(refeshMainLastSuccess(data));\n  } else {\n    yield put(refeshMainLastFailed(data));\n  }\n} // refesh data main min\n\n\nfunction* refeshMainEnegrySaga({\n  payload\n}) {\n  const resp = yield call(getListData, 'api/v1/main/getlast5min', '');\n  const {\n    status,\n    data\n  } = resp;\n\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\n    yield put(refeshMainEnegrySuccess(data));\n  } else {\n    yield put(refeshMainEnegryFailed(data));\n  }\n} // refesh data main min\n\n\nfunction* refeshMainEnegryDaylySaga({\n  payload\n}) {\n  const resp = yield call(getListData, 'api/v1/main/getlastenegrybyyesterday', '');\n  const {\n    status,\n    data\n  } = resp;\n\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\n    yield put(refeshMainEnegryDaylySuccess(data));\n  } else {\n    yield put(refeshMainEnegryDaylyFailed(data));\n  }\n} // refesh data main min\n\n\nfunction* refeshMainEnegryHourlySaga({\n  payload\n}) {\n  const resp = yield call(getListData, 'api/v1/main/getlastenegrybyhour', '');\n  const {\n    status,\n    data\n  } = resp;\n\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\n    yield put(refeshMainEnegryHourlySuccess(data));\n  } else {\n    yield put(refeshMainEnegryHourlyFailed(data));\n  }\n} // refesh data main min\n\n\nfunction* refeshMainEnegryWeeklySaga({\n  payload\n}) {\n  const resp = yield call(getListData, 'api/v1/main/getlastenegrybyweek', '');\n  const {\n    status,\n    data\n  } = resp;\n\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\n    yield put(refeshMainEnegryWeeklySuccess(data));\n  } else {\n    yield put(refeshMainEnegryWeeklyFailed(data));\n  }\n} // refesh data main min\n\n\nfunction* refeshMainEnegryMonthlySaga({\n  payload\n}) {\n  // const {params} = payload;\n  const resp = yield call(getListData, 'api/v1/main/getlastenegrybymothly', '');\n  const {\n    status,\n    data\n  } = resp;\n\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\n    yield put(refeshMainEnegryMonthlySuccess(data));\n  } else {\n    yield put(refeshMainEnegryMonthlyFailed(data));\n  }\n}\n\nfunction* rootSaga() {\n  yield fork(watchFetchListAlarmAction);\n  yield fork(watchFetchListUserLogAction);\n  yield fork(watchFetchListUserAction);\n  yield takeLatest(alarmTypes.REFESH_EMAIL_ALARM, refeshListEmailAlarmAction);\n  yield takeLatest(alarmTypes.ADD_EMAIL_ALARM, addeEmailAlarm);\n  yield takeLatest(priceTypes.REFESH_PRICE, refeshListPriceAction);\n  yield takeLatest(priceTypes.ADD_PRICE, addListPrice);\n  yield takeLatest(priceTypes.FILTER_FRICE_NEW, fiterPriceNew);\n  yield takeLatest(alarmTypes.FILTER_ALARM, filterAlarmSaga);\n  yield takeLatest(authTypes.AUTH_LOGIN, loginSaga);\n  yield takeLatest(authTypes.AUTH_SIGNUP, signupSaga);\n  yield takeLatest(authTypes.SET_USER_DELETE, deleteUserSaga);\n  yield takeLatest(authTypes.AUTH_DELETE_HISTORY, deleteUserlogSaga);\n  yield takeLatest(authTypes.UPDATE_USER, updateUserSaga);\n  yield takeLatest(analyticsTypes.ANALYTICS, analyticsSaga);\n  yield takeLatest(deviceTypes.REFESH_MAIN_LAST, refeshMainLastSaga);\n  yield takeLatest(deviceTypes.REFESH_MAIN_ENEGRY, refeshMainEnegrySaga);\n  yield takeLatest(deviceTypes.REFESH_MAIN_ENEGRY_DAYLY, refeshMainEnegryDaylySaga);\n  yield takeLatest(deviceTypes.REFESH_MAIN_ENEGRY_HOURLY, refeshMainEnegryHourlySaga);\n  yield takeLatest(deviceTypes.REFESH_MAIN_ENEGRY_WEEKLY, refeshMainEnegryWeeklySaga);\n  yield takeLatest(deviceTypes.REFESH_MAIN_ENEGRY_MONTHLY, refeshMainEnegryMonthlySaga);\n  yield takeLatest(deviceTypes.REFESH_HOUSE_AREA, refeshHouseArea);\n  yield takeLatest(deviceTypes.REFESH_POWER_HOUSE_AREA, refeshPowerHouseArea);\n  yield takeLatest(deviceTypes.REFESH_FISH_LAKE_AREA, refeshfishLakeArea);\n  yield takeLatest(deviceTypes.REFESH_POWER_FISH_LAKE_AREA, refeshPowerfishLakeArea);\n  yield takeLatest(deviceTypes.REFESH_SOLAR01_AREA, refeshSolar01Area);\n  yield takeLatest(deviceTypes.REFESH_POWER_SOLAR01_AREA, refeshPowerSolar01Area);\n  yield takeLatest(deviceTypes.REFESH_SOLAR02_AREA, refeshSolar02Area);\n  yield takeLatest(deviceTypes.REFESH_POWER_SOLAR02_AREA, refeshPowerSolar02Area);\n  yield takeLatest(weatherTypes.REFESH_WEATHER, refeshWeatherSaga);\n}\n\nexport default rootSaga;","map":{"version":3,"sources":["C:/Users/vietn/Desktop/AppEnegry2020/frontend/src/sagas/index.js"],"names":["fork","take","call","put","delay","takeLatest","select","alarmTypes","weatherTypes","priceTypes","authTypes","deviceTypes","analyticsTypes","refeshWeatherSuccess","refeshWeatherFailed","refeshpriceFailed","refeshpriceSuccess","addpriceFailed","addpriceSuccess","filterPriceNewSuccess","filterPriceNewFailed","fetchListAnalyticsFailed","fetchListAnalyticsSuccess","getListWeather","getListPrice","addPrice","getList","addList","getListAnalytics","getListUser","addUser","loginUser","deteleUser","updateUser","getListData","STATUS_CODE","showLoading","hideLoading","hideModal","fetchListAlarm","fetchListAlarmSuccess","fetchListAlarmFailed","refeshListEmailAlarmSuccess","refeshListEmailAlarmFailed","addListEmailAlarmFailed","addListEmailAlarmSuccess","authSignupSuccess","authSignupFaild","authLoginSuccess","authLoginFaild","authLogHistorySuccess","authLogHistoryFaild","fetchListUserFailed","fetchListUserSuccess","setUserDeleteSucces","setUserDeleteFaild","updateUserSuccess","updateUserFailed","authLogDeleteHistoryFaild","authLogDeleteHistorySuccess","refeshSolar01Failed","refeshSolar01Success","refeshPowerSolar01Failed","refeshPowerSolar01Success","refeshSolar02Success","refeshSolar02Failed","refeshPowerSolar02Failed","refeshPowerSolar02Success","refeshMainLastSuccess","refeshMainLastFailed","refeshMainEnegrySuccess","refeshMainEnegryFailed","refeshMainEnegryHourlySuccess","refeshMainEnegryHourlyFailed","refeshMainEnegryDaylySuccess","refeshMainEnegryDaylyFailed","refeshMainEnegryWeeklySuccess","refeshMainEnegryWeeklyFailed","refeshMainEnegryMonthlySuccess","refeshMainEnegryMonthlyFailed","refeshFishLakeAreaSuccess","refeshFishLakeAreaFailed","refeshPowerFishLakeAreaSuccess","refeshPowerFishLakeAreaFailed","refeshHouseAreaSuccess","refeshHouseAreaFailed","refeshPowerHouseAreaSuccess","refeshPowerHouseAreaFailed","refeshCalculatorEnegrySuccess","watchFetchListAlarmAction","action","FETCH_ALARM","params","payload","console","log","resp","status","data","SUCCESS","refeshListEmailAlarmAction","addeEmailAlarm","filterAlarmSaga","keyword","refeshListPriceAction","addListPrice","fiterPriceNew","loginSaga","email","password","state","error","signupSaga","name","operator","CREATED","updateUserSaga","userEditting","auth","id","UPDATED","watchFetchListUserAction","FETCH_USER","watchFetchListUserLogAction","AUTH_HISTORY","deleteUserSaga","reps","NO_CONTENT","deleteUserlogSaga","analyticsSaga","lenght","refeshWeatherSaga","refeshHouseArea","refeshPowerHouseArea","refeshfishLakeArea","refeshPowerfishLakeArea","refeshSolar01Area","refeshPowerSolar01Area","refeshSolar02Area","refeshPowerSolar02Area","refeshMainLastSaga","refeshMainEnegrySaga","refeshMainEnegryDaylySaga","refeshMainEnegryHourlySaga","refeshMainEnegryWeeklySaga","refeshMainEnegryMonthlySaga","rootSaga","REFESH_EMAIL_ALARM","ADD_EMAIL_ALARM","REFESH_PRICE","ADD_PRICE","FILTER_FRICE_NEW","FILTER_ALARM","AUTH_LOGIN","AUTH_SIGNUP","SET_USER_DELETE","AUTH_DELETE_HISTORY","UPDATE_USER","ANALYTICS","REFESH_MAIN_LAST","REFESH_MAIN_ENEGRY","REFESH_MAIN_ENEGRY_DAYLY","REFESH_MAIN_ENEGRY_HOURLY","REFESH_MAIN_ENEGRY_WEEKLY","REFESH_MAIN_ENEGRY_MONTHLY","REFESH_HOUSE_AREA","REFESH_POWER_HOUSE_AREA","REFESH_FISH_LAKE_AREA","REFESH_POWER_FISH_LAKE_AREA","REFESH_SOLAR01_AREA","REFESH_POWER_SOLAR01_AREA","REFESH_SOLAR02_AREA","REFESH_POWER_SOLAR02_AREA","REFESH_WEATHER"],"mappings":"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","sourcesContent":["import {\r\n  fork,\r\n  take,\r\n  call,\r\n  put,\r\n  delay,\r\n  takeLatest,\r\n  select,\r\n} from 'redux-saga/effects'; //select to listTask from store\r\nimport * as alarmTypes from './../constants/alarm';\r\nimport * as weatherTypes from './../constants/weather';\r\nimport * as priceTypes from './../constants/prices';\r\nimport * as authTypes from './../constants/auths';\r\nimport * as deviceTypes from './../constants/devices';\r\nimport * as analyticsTypes from './../constants/analytics';\r\nimport {\r\n  refeshWeatherSuccess,\r\n  refeshWeatherFailed,\r\n} from './../actions/weather';\r\nimport {\r\n  refeshpriceFailed,\r\n  refeshpriceSuccess,\r\n  addpriceFailed,\r\n  addpriceSuccess,\r\n  filterPriceNewSuccess,\r\n  filterPriceNewFailed,\r\n} from './../actions/prices';\r\nimport {\r\n  fetchListAnalyticsFailed,\r\n  fetchListAnalyticsSuccess,\r\n} from './../actions/analytics';\r\nimport { getListWeather } from './../apis/weather';\r\nimport { getListPrice, addPrice } from './../apis/prices';\r\nimport { getList, addList } from './../apis/alarm';\r\nimport { getListAnalytics } from './../apis/analytics';\r\nimport {\r\n  getListUser,\r\n  addUser,\r\n  loginUser,\r\n  deteleUser,\r\n  updateUser,\r\n} from './../apis/auth';\r\n\r\nimport {\r\n  getListData,\r\n  //updateData,\r\n  //addData,\r\n} from './../apis/devices';\r\nimport { STATUS_CODE } from './../constants/index';\r\nimport { showLoading, hideLoading } from './../actions/ui';\r\nimport { hideModal } from './../actions/modal';\r\nimport {\r\n  fetchListAlarm,\r\n  fetchListAlarmSuccess,\r\n  fetchListAlarmFailed,\r\n  refeshListEmailAlarmSuccess,\r\n  refeshListEmailAlarmFailed,\r\n  addListEmailAlarmFailed,\r\n  addListEmailAlarmSuccess,\r\n} from './../actions/alarm';\r\nimport {\r\n  authSignupSuccess,\r\n  authSignupFaild,\r\n  authLoginSuccess,\r\n  authLoginFaild,\r\n  authLogHistorySuccess,\r\n  authLogHistoryFaild,\r\n  // checkAuthFaild,\r\n  // checkAuthSuccess,\r\n  fetchListUserFailed,\r\n  fetchListUserSuccess,\r\n  setUserDeleteSucces,\r\n  setUserDeleteFaild,\r\n  updateUserSuccess,\r\n  updateUserFailed,\r\n  authLogDeleteHistoryFaild,\r\n  authLogDeleteHistorySuccess,\r\n} from './../actions/auths';\r\nimport {\r\n  refeshSolar01Failed,\r\n  refeshSolar01Success,\r\n  refeshPowerSolar01Failed,\r\n  refeshPowerSolar01Success,\r\n  refeshSolar02Success,\r\n  refeshSolar02Failed,\r\n  refeshPowerSolar02Failed,\r\n  refeshPowerSolar02Success,\r\n  refeshMainLastSuccess,\r\n  refeshMainLastFailed,\r\n  refeshMainEnegrySuccess,\r\n  refeshMainEnegryFailed,\r\n  refeshMainEnegryHourlySuccess,\r\n  refeshMainEnegryHourlyFailed,\r\n  refeshMainEnegryDaylySuccess,\r\n  refeshMainEnegryDaylyFailed,\r\n  refeshMainEnegryWeeklySuccess,\r\n  refeshMainEnegryWeeklyFailed,\r\n  refeshMainEnegryMonthlySuccess,\r\n  refeshMainEnegryMonthlyFailed,\r\n  refeshFishLakeAreaSuccess,\r\n  refeshFishLakeAreaFailed,\r\n  refeshPowerFishLakeAreaSuccess,\r\n  refeshPowerFishLakeAreaFailed,\r\n  refeshHouseAreaSuccess,\r\n  refeshHouseAreaFailed,\r\n  refeshPowerHouseAreaSuccess,\r\n  refeshPowerHouseAreaFailed,\r\n  refeshCalculatorEnegrySuccess\r\n} from '../actions/devices';\r\n/**\r\n * B1: dispatch action fetchTask\r\n * B2:Call animationPlayState:\r\n * B3:Kiểm tra status_code\r\n * Nếu thành công thì thực thi ...\r\n * Nếu thất bại thì thực thi gì đó....button-big\r\n * B4:Tắt Loadding\r\n * B5:thực thi công việc tiếp theo...\r\n */\r\nfunction* watchFetchListAlarmAction() {\r\n  while (true) {\r\n    const action = yield take(alarmTypes.FETCH_ALARM);\r\n    yield put(showLoading());\r\n    const { params } = action.payload;\r\n    console.log(params);\r\n    const resp = yield call(getList, 'api/v1/alarm', '');\r\n    const { status, data } = resp;\r\n    if (status === STATUS_CODE.SUCCESS) {\r\n      yield put(fetchListAlarmSuccess(data));\r\n    } else {\r\n      yield put(fetchListAlarmFailed(data));\r\n    }\r\n    yield delay(100);\r\n    yield put(hideLoading());\r\n  }\r\n}\r\n//  Refesh list email alarm\r\nfunction* refeshListEmailAlarmAction() {\r\n  yield put(showLoading());\r\n  const resp = yield call(getList, 'api/v1/emailalarm', '');\r\n  const { status, data } = resp;\r\n  if (status === STATUS_CODE.SUCCESS) {\r\n    yield put(refeshListEmailAlarmSuccess(data));\r\n  } else {\r\n    yield put(refeshListEmailAlarmFailed(data));\r\n  }\r\n  yield delay(100);\r\n  yield put(hideLoading());\r\n}\r\n// add list email alarm\r\nfunction* addeEmailAlarm({ payload }) {\r\n  yield put(showLoading());\r\n  const { params } = payload;\r\n  const resp = yield call(addList, 'api/v1/emailalarm/add', params);\r\n  const { status, data } = resp;\r\n  if (status === STATUS_CODE.SUCCESS) {\r\n    yield put(addListEmailAlarmSuccess(data));\r\n  } else {\r\n    yield put(addListEmailAlarmFailed(data));\r\n  }\r\n  yield delay(100);\r\n  yield put(hideLoading());\r\n}\r\n// fiter alarm\r\nfunction* filterAlarmSaga({ payload }) {\r\n  yield delay(100);\r\n  const { keyword } = payload;\r\n  yield put(fetchListAlarm(keyword));\r\n}\r\n\r\nfunction* refeshListPriceAction() {\r\n  yield put(showLoading());\r\n  const resp = yield call(getListPrice, 'api/v1/price', '');\r\n  const { status, data } = resp;\r\n  if (status === STATUS_CODE.SUCCESS) {\r\n    yield put(refeshpriceSuccess(data));\r\n  } else {\r\n    yield put(refeshpriceFailed(data));\r\n  }\r\n  yield delay(100);\r\n  yield put(hideLoading());\r\n}\r\n\r\nfunction* addListPrice({ payload }) {\r\n  yield put(showLoading());\r\n  const { params } = payload;\r\n  const resp = yield call(addPrice, 'api/v1/price/add', params);\r\n  const { status, data } = resp;\r\n  if (status === STATUS_CODE.SUCCESS) {\r\n    yield put(addpriceSuccess(data));\r\n  } else {\r\n    yield put(addpriceFailed(data));\r\n  }\r\n  yield delay(100);\r\n  yield put(hideLoading());\r\n}\r\nfunction* fiterPriceNew({ payload }) {\r\n  const { params } = payload;\r\n  const resp = yield call(getListPrice, 'api/v1/price/getlast', params);\r\n  const { status, data } = resp;\r\n  if (status === STATUS_CODE.SUCCESS) {\r\n    yield put(filterPriceNewSuccess(data));\r\n  } else {\r\n    yield put(filterPriceNewFailed(data));\r\n  }\r\n  yield delay(100);\r\n}\r\n\r\nfunction* loginSaga({ payload }) {\r\n  const { email, password } = payload;\r\n  yield put(showLoading());\r\n  const resp = yield call(loginUser, 'api/v1/users/login', { email, password });\r\n  const { data, status } = resp;\r\n  if (status === STATUS_CODE.SUCCESS && data.state === 'true') {\r\n    yield put(authLoginSuccess(data));\r\n  } else if (status === STATUS_CODE.SUCCESS && data.state === 'false') {\r\n    yield put(authLoginFaild(data.error));\r\n  }\r\n  yield delay(200);\r\n  yield put(hideLoading());\r\n}\r\nfunction* signupSaga({ payload }) {\r\n  const { name, email, password, operator } = payload;\r\n  yield put(showLoading());\r\n  const resp = yield call(addUser, 'api/v1/users/add', {\r\n    name,\r\n    email,\r\n    password,\r\n    operator,\r\n  });\r\n  const { data, status } = resp;\r\n  if (status === STATUS_CODE.CREATED) {\r\n    const resp = yield call(getListUser, 'api/v1/users/', '');\r\n    const { status, data } = resp;\r\n    yield delay(100);\r\n    if (status === STATUS_CODE.SUCCESS) {\r\n      yield put(authSignupSuccess(data));\r\n      yield put(hideModal());\r\n    }\r\n  } else {\r\n    yield put(authSignupFaild(data));\r\n  }\r\n  yield delay(100);\r\n  yield put(hideLoading());\r\n}\r\nfunction* updateUserSaga({ payload }) {\r\n  const { name, email, password, operator } = payload;\r\n  const userEditting = yield select(state => state.auth.userEditting);\r\n  const { id } = userEditting;\r\n  yield put(showLoading());\r\n  const resp = yield call(updateUser, 'api/v1/users/update', {\r\n    id,\r\n    name,\r\n    email,\r\n    password,\r\n    operator,\r\n  });\r\n  const { data, status } = resp;\r\n  if (status === STATUS_CODE.UPDATED) {\r\n    const resp = yield call(getListUser, 'api/v1/users', '');\r\n    const { status, data } = resp;\r\n    yield delay(100);\r\n    if (status === STATUS_CODE.SUCCESS) {\r\n      yield put(updateUserSuccess(data));\r\n      yield put(hideModal());\r\n    }\r\n  } else {\r\n    yield put(updateUserFailed(data));\r\n  }\r\n  yield delay(100);\r\n  yield put(hideLoading());\r\n}\r\nfunction* watchFetchListUserAction() {\r\n  while (true) {\r\n    const action = yield take(authTypes.FETCH_USER); // khi FETCH_TASK duoc dispatch thi code tu day tro xuong moi chay\r\n    yield put(showLoading());\r\n    const { params } = action.payload;\r\n    const resp = yield call(getListUser, 'api/v1/users', params);\r\n    const { status, data } = resp;\r\n    if (status === STATUS_CODE.SUCCESS) {\r\n      yield put(fetchListUserSuccess(data));\r\n    } else {\r\n      yield put(fetchListUserFailed(data));\r\n    }\r\n    yield delay(50);\r\n    yield put(hideLoading());\r\n  }\r\n}\r\nfunction* watchFetchListUserLogAction() {\r\n  while (true) {\r\n    const action = yield take(authTypes.AUTH_HISTORY); // khi FETCH_TASK duoc dispatch thi code tu day tro xuong moi chay\r\n    yield put(showLoading());\r\n    const { params } = action.payload;\r\n    const resp = yield call(getListUser, 'api/v1/userlog', params);\r\n    const { status, data } = resp;\r\n    if (status === STATUS_CODE.SUCCESS) {\r\n      yield put(authLogHistorySuccess(data));\r\n    } else {\r\n      yield put(authLogHistoryFaild(data));\r\n    }\r\n    yield delay(50);\r\n    yield put(hideLoading());\r\n  }\r\n}\r\nfunction* deleteUserSaga({ payload }) {\r\n  const { id } = payload;\r\n  yield put(showLoading());\r\n  const reps = yield call(deteleUser, 'api/v1/users', id);\r\n  const { data, status } = reps;\r\n  if (status === STATUS_CODE.NO_CONTENT) {\r\n    const resp = yield call(getListUser, 'api/v1/users', '');\r\n    const { status, data } = resp;\r\n    yield delay(100);\r\n    if (status === STATUS_CODE.SUCCESS) {\r\n      yield put(setUserDeleteSucces(data));\r\n      yield put(hideModal());\r\n    }\r\n  } else {\r\n    yield put(setUserDeleteFaild(data));\r\n  }\r\n  yield delay(100);\r\n  yield put(hideLoading());\r\n}\r\n\r\nfunction* deleteUserlogSaga({ payload }) {\r\n  const { id } = payload;\r\n  yield put(showLoading());\r\n  const reps = yield call(deteleUser, 'api/v1/userlog', id);\r\n  const { data, status } = reps;\r\n  if (status === STATUS_CODE.NO_CONTENT) {\r\n    const resp = yield call(getListUser, 'api/v1/userlog', '');\r\n    const { status, data } = resp;\r\n    yield delay(100);\r\n    if (status === STATUS_CODE.SUCCESS) {\r\n      yield put(authLogDeleteHistorySuccess(data));\r\n      yield put(hideModal());\r\n    }\r\n  } else {\r\n    yield put(authLogDeleteHistoryFaild(data));\r\n  }\r\n  yield delay(100);\r\n  yield put(hideLoading());\r\n}\r\n\r\n// analytics saga\r\n\r\nfunction* analyticsSaga({ payload }) {\r\n  const { params } = payload;\r\n  yield put(showLoading());\r\n  const resp = yield call(getListAnalytics, 'api/v1/main/analytics', params);\r\n  const { status, data } = resp;\r\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\r\n    yield put(fetchListAnalyticsSuccess(data));\r\n  } else {\r\n    yield put(fetchListAnalyticsFailed(data));\r\n  }\r\n  yield delay(100);\r\n  yield put(hideLoading());\r\n}\r\n// refesh data weather\r\nfunction* refeshWeatherSaga({ payload }) {\r\n  const { params } = payload;\r\n  const resp = yield call(getListWeather, params);\r\n  const { status, data } = resp;\r\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\r\n    yield put(refeshWeatherSuccess(data));\r\n  } else {\r\n    yield put(refeshWeatherFailed(data));\r\n  }\r\n}\r\n\r\n// refesh data leak\r\nfunction* refeshHouseArea() {\r\n  const resp = yield call(getListData, 'api/v1/spm93/getlast', '');\r\n  const { status, data } = resp;\r\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\r\n    yield put(refeshHouseAreaSuccess(data));\r\n  } else {\r\n    yield put(refeshHouseAreaFailed(data));\r\n  }\r\n}\r\nfunction* refeshPowerHouseArea() {\r\n  const resp = yield call(getListData, 'api/v1/spm93/getlast5min', '');\r\n  const { status, data } = resp;\r\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\r\n    yield put(refeshPowerHouseAreaSuccess(data));\r\n  } else {\r\n    yield put(refeshPowerHouseAreaFailed(data));\r\n  }\r\n}\r\n// refesh data leak\r\nfunction* refeshfishLakeArea({ payload }) {\r\n  const { params } = payload;\r\n  const resp = yield call(getListData, 'api/v1/spm91/getlast', { params });\r\n  const { status, data } = resp;\r\n\r\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\r\n    yield put(refeshFishLakeAreaSuccess(data));\r\n  } else {\r\n    yield put(refeshFishLakeAreaFailed(data));\r\n  }\r\n}\r\n// refesh data leak\r\nfunction* refeshPowerfishLakeArea({ payload }) {\r\n  const { params } = payload;\r\n  const resp = yield call(getListData, 'api/v1/spm91/getlast5min', { params });\r\n  const { status, data } = resp;\r\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\r\n    yield put(refeshPowerFishLakeAreaSuccess(data));\r\n  } else {\r\n    yield put(refeshPowerFishLakeAreaFailed(data));\r\n  }\r\n}\r\n// refesh data leak\r\nfunction* refeshSolar01Area({ payload }) {\r\n  const { params } = payload;\r\n  const resp = yield call(getListData, 'api/v1/spm91/getlast', { params });\r\n  const { status, data } = resp;\r\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\r\n    yield put(refeshSolar01Success(data));\r\n  } else {\r\n    yield put(refeshSolar01Failed(data));\r\n  }\r\n}\r\n// refesh data leak\r\nfunction* refeshPowerSolar01Area({ payload }) {\r\n  const { params } = payload;\r\n  const resp = yield call(getListData, 'api/v1/spm91/getlast5min', { params });\r\n  const { status, data } = resp;\r\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\r\n    yield put(refeshPowerSolar01Success(data));\r\n  } else {\r\n    yield put(refeshPowerSolar01Failed(data));\r\n  }\r\n}\r\n// refesh data leak\r\nfunction* refeshSolar02Area({ payload }) {\r\n  const { params } = payload;\r\n  const resp = yield call(getListData, 'api/v1/spm91/getlast', { params });\r\n  const { status, data } = resp;\r\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\r\n    yield put(refeshSolar02Success(data));\r\n  } else {\r\n    yield put(refeshSolar02Failed(data));\r\n  }\r\n}\r\n// refesh data leak\r\nfunction* refeshPowerSolar02Area({ payload }) {\r\n  const { params } = payload;\r\n  const resp = yield call(getListData, 'api/v1/spm91/getlast5min', { params });\r\n  const { status, data } = resp;\r\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\r\n    yield put(refeshPowerSolar02Success(data));\r\n  } else {\r\n    yield put(refeshPowerSolar02Failed(data));\r\n  }\r\n}\r\n\r\n// refesh data main last\r\nfunction* refeshMainLastSaga({ payload }) {\r\n  const resp = yield call(getListData, 'api/v1/main/getlast', '');\r\n  const { status, data } = resp;\r\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\r\n    yield put(refeshMainLastSuccess(data));\r\n  } else {\r\n    yield put(refeshMainLastFailed(data));\r\n  }\r\n}\r\n// refesh data main min\r\nfunction* refeshMainEnegrySaga({ payload }) {\r\n  const resp = yield call(getListData, 'api/v1/main/getlast5min', '');\r\n  const { status, data } = resp;\r\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\r\n    yield put(refeshMainEnegrySuccess(data));\r\n  } else {\r\n    yield put(refeshMainEnegryFailed(data));\r\n  }\r\n}\r\n// refesh data main min\r\nfunction* refeshMainEnegryDaylySaga({ payload }) {\r\n  const resp = yield call(\r\n    getListData,\r\n    'api/v1/main/getlastenegrybyyesterday',\r\n    '',\r\n  );\r\n  const { status, data } = resp;\r\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\r\n    yield put(refeshMainEnegryDaylySuccess(data));\r\n  } else {\r\n    yield put(refeshMainEnegryDaylyFailed(data));\r\n  }\r\n}\r\n// refesh data main min\r\nfunction* refeshMainEnegryHourlySaga({ payload }) {\r\n  const resp = yield call(getListData, 'api/v1/main/getlastenegrybyhour', '');\r\n  const { status, data } = resp;\r\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\r\n    yield put(refeshMainEnegryHourlySuccess(data));\r\n  } else {\r\n    yield put(refeshMainEnegryHourlyFailed(data));\r\n  }\r\n}\r\n// refesh data main min\r\nfunction* refeshMainEnegryWeeklySaga({ payload }) {\r\n  const resp = yield call(getListData, 'api/v1/main/getlastenegrybyweek', '');\r\n  const { status, data } = resp;\r\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\r\n    yield put(refeshMainEnegryWeeklySuccess(data));\r\n  } else {\r\n    yield put(refeshMainEnegryWeeklyFailed(data));\r\n  }\r\n}\r\n\r\n// refesh data main min\r\nfunction* refeshMainEnegryMonthlySaga({ payload }) {\r\n  // const {params} = payload;\r\n  const resp = yield call(getListData, 'api/v1/main/getlastenegrybymothly', '');\r\n  const { status, data } = resp;\r\n  if (status === STATUS_CODE.SUCCESS && data.lenght !== 0) {\r\n    yield put(refeshMainEnegryMonthlySuccess(data));\r\n  } else {\r\n    yield put(refeshMainEnegryMonthlyFailed(data));\r\n  }\r\n}\r\n\r\nfunction* rootSaga() {\r\n  yield fork(watchFetchListAlarmAction);\r\n  yield fork(watchFetchListUserLogAction);\r\n  yield fork(watchFetchListUserAction);\r\n  yield takeLatest(alarmTypes.REFESH_EMAIL_ALARM, refeshListEmailAlarmAction);\r\n  yield takeLatest(alarmTypes.ADD_EMAIL_ALARM, addeEmailAlarm);\r\n  yield takeLatest(priceTypes.REFESH_PRICE, refeshListPriceAction);\r\n  yield takeLatest(priceTypes.ADD_PRICE, addListPrice);\r\n  yield takeLatest(priceTypes.FILTER_FRICE_NEW, fiterPriceNew);\r\n  yield takeLatest(alarmTypes.FILTER_ALARM, filterAlarmSaga);\r\n  yield takeLatest(authTypes.AUTH_LOGIN, loginSaga);\r\n  yield takeLatest(authTypes.AUTH_SIGNUP, signupSaga);\r\n  yield takeLatest(authTypes.SET_USER_DELETE, deleteUserSaga);\r\n  yield takeLatest(authTypes.AUTH_DELETE_HISTORY, deleteUserlogSaga);\r\n  yield takeLatest(authTypes.UPDATE_USER, updateUserSaga);\r\n  yield takeLatest(analyticsTypes.ANALYTICS, analyticsSaga);\r\n  yield takeLatest(deviceTypes.REFESH_MAIN_LAST, refeshMainLastSaga);\r\n  yield takeLatest(deviceTypes.REFESH_MAIN_ENEGRY, refeshMainEnegrySaga);\r\n  yield takeLatest(\r\n    deviceTypes.REFESH_MAIN_ENEGRY_DAYLY,\r\n    refeshMainEnegryDaylySaga,\r\n  );\r\n  yield takeLatest(\r\n    deviceTypes.REFESH_MAIN_ENEGRY_HOURLY,\r\n    refeshMainEnegryHourlySaga,\r\n  );\r\n  yield takeLatest(\r\n    deviceTypes.REFESH_MAIN_ENEGRY_WEEKLY,\r\n    refeshMainEnegryWeeklySaga,\r\n  );\r\n  yield takeLatest(\r\n    deviceTypes.REFESH_MAIN_ENEGRY_MONTHLY,\r\n    refeshMainEnegryMonthlySaga,\r\n  );\r\n  yield takeLatest(deviceTypes.REFESH_HOUSE_AREA, refeshHouseArea);\r\n  yield takeLatest(deviceTypes.REFESH_POWER_HOUSE_AREA, refeshPowerHouseArea);\r\n  yield takeLatest(deviceTypes.REFESH_FISH_LAKE_AREA, refeshfishLakeArea);\r\n  yield takeLatest(\r\n    deviceTypes.REFESH_POWER_FISH_LAKE_AREA,\r\n    refeshPowerfishLakeArea,\r\n  );\r\n  yield takeLatest(deviceTypes.REFESH_SOLAR01_AREA, refeshSolar01Area);\r\n  yield takeLatest(\r\n    deviceTypes.REFESH_POWER_SOLAR01_AREA,\r\n    refeshPowerSolar01Area,\r\n  );\r\n  yield takeLatest(deviceTypes.REFESH_SOLAR02_AREA, refeshSolar02Area);\r\n  yield takeLatest(\r\n    deviceTypes.REFESH_POWER_SOLAR02_AREA,\r\n    refeshPowerSolar02Area,\r\n  );\r\n  yield takeLatest(weatherTypes.REFESH_WEATHER, refeshWeatherSaga);\r\n}\r\n\r\nexport default rootSaga;\r\n"]},"metadata":{},"sourceType":"module"}