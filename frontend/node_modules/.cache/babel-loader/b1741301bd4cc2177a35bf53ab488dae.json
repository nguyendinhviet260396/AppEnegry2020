{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { each, isArray, deepMix } from '@antv/util';\nimport BBox from '../../../util/bbox';\nvar LABEL_MARGIN = 4;\n\nvar MatrixLegend =\n/** @class */\nfunction () {\n  function MatrixLegend(cfg) {\n    this.destroyed = false;\n    this.dataSlides = {};\n    this.interactiveEvents = {};\n    var defaultOptions = this.getDefaultOptions();\n    this.options = deepMix({}, defaultOptions, cfg);\n    this.view = this.options.view;\n    this.afterRender = true;\n    this.init();\n  }\n\n  MatrixLegend.prototype.init = function () {\n    var _this = this;\n\n    this.layout = this.getLayout();\n    this.width = this.options.width ? this.options.width : this.getDefaultWidth();\n    this.height = this.options.height ? this.options.height : this.getDefaultHeight();\n    var plotContainer = this.options.plot.container;\n\n    if (this.container) {\n      this.container.remove();\n    }\n\n    this.container = plotContainer.addGroup();\n    this.view.on('beforerender', function () {\n      _this.clear();\n\n      _this.options.plot.canvas.draw();\n    });\n  };\n\n  MatrixLegend.prototype.render = function () {\n    var scales = this.view.geometries[0].scales;\n    var colorField = this.options.plot.options.colorField;\n    this.colorScale = scales[colorField];\n    var _a = this.colorScale,\n        min = _a.min,\n        max = _a.max;\n    var color = this.options.plot.options.color;\n\n    if (this.layout === 'horizontal') {\n      this.renderHorizontal(min, max, color);\n    } else {\n      this.renderVertical(min, max, color);\n    }\n\n    this.legendLayout();\n    this.addInteraction();\n  };\n\n  MatrixLegend.prototype.hide = function () {\n    this.container.set('visible', false);\n    this.options.plot.canvas.draw();\n  };\n\n  MatrixLegend.prototype.show = function () {\n    this.container.set('visible', true);\n    this.options.plot.canvas.draw();\n  };\n\n  MatrixLegend.prototype.clear = function () {\n    if (this.container) {\n      this.container.clear();\n    }\n  };\n\n  MatrixLegend.prototype.destroy = function () {\n    if (this.container) {\n      this.container.remove();\n    }\n\n    this.offEvent();\n    this.destroyed = true;\n  };\n\n  MatrixLegend.prototype.getBBox = function () {\n    var origin_bbox = this.container.getBBox();\n    return new BBox(this.x, this.y, origin_bbox.width, origin_bbox.height);\n  };\n\n  MatrixLegend.prototype.renderVertical = function (min, max, colors) {\n    var _this = this;\n\n    var valueStep = (max - min) / (colors.length - 1);\n    var colorStep = 1 / (colors.length - 1);\n    var tickStep = this.height / (colors.length - 1);\n    var gradientColor = 'l(90)';\n    each(colors, function (c, index) {\n      var stepNum = colorStep * index;\n      gradientColor += stepNum + \":\" + c + \" \";\n    });\n    this.container.addShape('rect', {\n      attrs: {\n        x: 0,\n        y: 0,\n        width: this.width,\n        height: this.height,\n        fill: gradientColor\n      },\n      name: 'legend'\n    }); // draw tick and label\n\n    each(colors, function (c, index) {\n      // tick\n      var step = tickStep * index;\n\n      _this.container.addShape('path', {\n        attrs: __assign({\n          path: [['M', 0, step], ['L', _this.width, step]]\n        }, _this.options.ticklineStyle)\n      }); // value\n\n\n      var value = Math.round(valueStep * index);\n\n      _this.container.addShape('text', {\n        attrs: __assign({\n          text: value,\n          textAlign: 'left',\n          textBaseline: 'middle',\n          x: _this.width + LABEL_MARGIN,\n          y: step\n        }, _this.options.text.style),\n        name: 'legend-label'\n      });\n    }); //anchor\n\n    var tri_width = 10;\n    var tri_height = 14;\n    var tri_path = [['M', -tri_width, -tri_height / 2], ['L', 0, 0], ['L', -tri_width, tri_height / 2], ['Z']];\n    this.anchor = this.container.addShape('path', {\n      attrs: __assign({\n        path: tri_path\n      }, this.options.anchorStyle)\n    });\n    this.anchor.set('visible', false);\n  };\n\n  MatrixLegend.prototype.renderHorizontal = function (min, max, colors) {\n    var _this = this;\n\n    var valueStep = (max - min) / (colors.length - 1);\n    var colorStep = 1 / (colors.length - 1);\n    var tickStep = this.width / (colors.length - 1);\n    var gradientColor = 'l(0)';\n    each(colors, function (c, index) {\n      var stepNum = colorStep * index;\n      gradientColor += stepNum + \":\" + c + \" \";\n    });\n    this.container.addShape('rect', {\n      attrs: {\n        x: 0,\n        y: 0,\n        width: this.width,\n        height: this.height,\n        fill: gradientColor\n      },\n      name: 'legend'\n    }); // draw tick and label\n\n    each(colors, function (c, index) {\n      // tick\n      var step = tickStep * index;\n\n      _this.container.addShape('path', {\n        attrs: __assign({\n          path: [['M', step, 0], ['L', step, _this.height]]\n        }, _this.options.ticklineStyle),\n        name: 'legend-label'\n      }); // value\n\n\n      var value = Math.round(valueStep * index);\n\n      _this.container.addShape('text', {\n        attrs: __assign({\n          text: value,\n          textAlign: 'center',\n          textBaseline: 'top',\n          x: step,\n          y: _this.height + LABEL_MARGIN\n        }, _this.options.text.style)\n      });\n    }); //anchor\n\n    var tri_width = 14;\n    var tri_height = 10;\n    var tri_path = [['M', 0, 0], ['L', -tri_width / 2, -tri_height], ['L', tri_width / 2, -tri_height], ['Z']];\n    this.anchor = this.container.addShape('path', {\n      attrs: __assign({\n        path: tri_path\n      }, this.options.anchorStyle)\n    });\n    this.anchor.set('visible', false);\n  };\n\n  MatrixLegend.prototype.getLayout = function () {\n    var positions = this.options.position.split('-');\n    this.position = positions[0];\n\n    if (positions[0] === 'left' || positions[0] === 'right') {\n      return 'vertical';\n    }\n\n    return 'horizontal';\n  };\n\n  MatrixLegend.prototype.getDefaultWidth = function () {\n    if (this.layout === 'horizontal') {\n      var width = this.view.coordinateBBox.width;\n      return width;\n    }\n\n    return 10;\n  };\n\n  MatrixLegend.prototype.getDefaultHeight = function () {\n    if (this.layout === 'vertical') {\n      var height = this.view.coordinateBBox.height;\n      return height;\n    }\n\n    return 10;\n  };\n\n  MatrixLegend.prototype.legendLayout = function () {\n    var _this = this;\n\n    var panelRange = this.view.coordinateBBox;\n    var bleeding = this.options.plot.getPlotTheme().bleeding;\n\n    if (isArray(bleeding)) {\n      each(bleeding, function (it, index) {\n        if (typeof bleeding[index] === 'function') {\n          bleeding[index] = bleeding[index](_this.options.plot.options);\n        }\n      });\n    }\n\n    var bbox = this.container.getBBox();\n    var x = 0;\n    var y = 0;\n    var positions = this.options.position.split('-');\n    var plotWidth = this.options.plot.width;\n    var plotHeight = this.options.plot.height; // 先确定x\n\n    if (positions[0] === 'left') {\n      x = bleeding[3];\n    } else if (positions[0] === 'right') {\n      x = plotWidth - bleeding[1] - bbox.width;\n    } else if (positions[1] === 'center') {\n      // default\n      if (this.width === panelRange.width) {\n        x = panelRange.x;\n      } else {\n        x = (plotWidth - bbox.width) / 2;\n      }\n    } else if (positions[1] === 'left') {\n      x = bleeding[3];\n    } else if (positions[1] === 'right') {\n      x = this.options.plot.width - bleeding[1] - bbox.width;\n    } // 再确定y\n\n\n    if (positions[0] === 'bottom') {\n      y = plotHeight - bleeding[2] - bbox.height;\n    } else if (positions[0] === 'top') {\n      y = this.getTopPosition(bleeding);\n    } else if (positions[1] === 'center') {\n      // default\n      if (this.height === panelRange.height) {\n        y = panelRange.y;\n      } else {\n        //用户自行设定\n        y = (plotHeight - bbox.height) / 2;\n      }\n    } else if (positions[1] === 'top') {\n      y = bleeding[0];\n    } else if (positions[1] === 'bottom') {\n      y = plotHeight - bleeding[2] - bbox.height;\n    }\n\n    this.x = x;\n    this.y = y;\n    this.container.translate(x, y);\n  };\n\n  MatrixLegend.prototype.getDefaultOptions = function () {\n    return {\n      text: {\n        style: {\n          fontSize: 12,\n          fill: 'rgba(0, 0, 0, 0.45)'\n        }\n      },\n      ticklineStyle: {\n        lineWidth: 1,\n        stroke: 'rgba(0, 0, 0, 0.8)'\n      },\n      anchorStyle: {\n        fill: 'rgba(0,0,0,0.5)'\n      },\n      triggerOn: 'mousemove'\n    };\n  };\n\n  MatrixLegend.prototype.addInteraction = function () {\n    var _this = this;\n\n    var geomType;\n\n    if (this.options.plot.options.shapeType === 'rect') {\n      geomType = 'polygon';\n    } else {\n      geomType = 'point';\n    }\n\n    var eventName = geomType + \":\" + this.options.triggerOn; //const labelEventName = `label:${this.options.triggerOn}`;\n\n    var field = this.options.plot.options.colorField;\n    var _a = this.colorScale,\n        min = _a.min,\n        max = _a.max;\n\n    var geomEventHandler = function (ev) {\n      var value = ev.data.data[field];\n      var ratio = (value - min) / (max - min);\n\n      _this.moveAnchor(ratio);\n    };\n\n    this.view.on(eventName, geomEventHandler);\n    this.interactiveEvents[eventName] = {\n      target: this.view,\n      handler: geomEventHandler\n    };\n    /*this.view.on(labelEventName, (ev) => {\n      const value = ev.data[field];\n      const ratio = (value - min) / (max - min);\n      this.moveAnchor(ratio);\n    });*/\n\n    var mouseleaveHandler = function () {\n      _this.anchor.set('visible', false);\n    };\n\n    this.options.plot.canvas.on('mouseleave', mouseleaveHandler);\n    this.interactiveEvents.mouseleave = {\n      target: this.options.plot.canvas,\n      handler: mouseleaveHandler\n    };\n  };\n\n  MatrixLegend.prototype.moveAnchor = function (ratio) {\n    this.anchor.set('visible', true);\n\n    if (this.layout === 'vertical') {\n      var pos = this.height * ratio;\n      var ulMatrix = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n      ulMatrix[7] = pos;\n      this.anchor.stopAnimate();\n      this.anchor.animate({\n        matrix: ulMatrix\n      }, 400, 'easeLinear');\n    } else {\n      var pos = this.width * ratio;\n      var ulMatrix = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n      ulMatrix[6] = pos;\n      this.anchor.stopAnimate();\n      this.anchor.animate({\n        matrix: ulMatrix\n      }, 400, 'easeLinear');\n    }\n  };\n\n  MatrixLegend.prototype.getTopPosition = function (bleeding) {\n    if (this.options.plot.description) {\n      var bbox = this.options.plot.description.getBBox();\n      return bbox.maxY + 10;\n    } else if (this.options.plot.title) {\n      var bbox = this.options.plot.title.getBBox();\n      return bbox.maxY + 10;\n    }\n\n    return bleeding[0];\n  };\n\n  MatrixLegend.prototype.offEvent = function () {\n    each(this.interactiveEvents, function (event, key) {\n      var target = event.target,\n          handler = event.handler;\n      target.off(key, handler);\n    });\n  };\n\n  return MatrixLegend;\n}();\n\nexport default MatrixLegend;","map":{"version":3,"sources":["../../../../src/plots/heatmap/component/legend.ts"],"names":[],"mappings":"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","sourcesContent":["import { each, isArray, deepMix } from '@antv/util';\nimport BBox from '../../../util/bbox';\nimport { View, IGroup, IShape } from '../../../dependents';\nimport { LegendPosition, GraphicStyle, TextStyle, LineStyle } from '../../../interface/config';\n\nconst LABEL_MARGIN = 4;\n\nexport interface MatrixLegendConfig {\n  visible?: boolean;\n  position?: LegendPosition;\n  width?: number;\n  height?: number;\n  text?: {\n    style?: TextStyle;\n    formatter?: () => string;\n  };\n  ticklineStyle?: LineStyle;\n  anchorStyle?: GraphicStyle;\n  triggerOn?: string;\n}\n\nexport interface IMatrixLegend extends MatrixLegendConfig {\n  view: View;\n  plot: any;\n}\n\nexport default class MatrixLegend {\n  public options: IMatrixLegend;\n  public container: IGroup;\n  public anchor: IShape;\n  public afterRender: boolean;\n  public destroyed: boolean = false;\n  protected view: View;\n  protected layout: string;\n  protected width: number;\n  protected height: number;\n  protected position: string;\n  protected x: number;\n  protected y: number;\n  protected dataSlides: any = {};\n  protected colorScale: any;\n  private interactiveEvents: any = {};\n\n  constructor(cfg: IMatrixLegend) {\n    const defaultOptions = this.getDefaultOptions();\n    this.options = deepMix({}, defaultOptions, cfg);\n    this.view = this.options.view;\n    this.afterRender = true;\n    this.init();\n  }\n\n  public init() {\n    this.layout = this.getLayout();\n    this.width = this.options.width ? this.options.width : this.getDefaultWidth();\n    this.height = this.options.height ? this.options.height : this.getDefaultHeight();\n    const plotContainer = this.options.plot.container;\n    if (this.container) {\n      this.container.remove();\n    }\n    this.container = plotContainer.addGroup();\n    this.view.on('beforerender', () => {\n      this.clear();\n      this.options.plot.canvas.draw();\n    });\n  }\n\n  public render() {\n    const scales = this.view.geometries[0].scales;\n    const colorField = this.options.plot.options.colorField;\n    this.colorScale = scales[colorField];\n    const { min, max } = this.colorScale;\n    const { color } = this.options.plot.options;\n    if (this.layout === 'horizontal') {\n      this.renderHorizontal(min, max, color);\n    } else {\n      this.renderVertical(min, max, color);\n    }\n    this.legendLayout();\n    this.addInteraction();\n  }\n\n  public hide() {\n    this.container.set('visible', false);\n    this.options.plot.canvas.draw();\n  }\n\n  public show() {\n    this.container.set('visible', true);\n    this.options.plot.canvas.draw();\n  }\n\n  public clear() {\n    if (this.container) {\n      this.container.clear();\n    }\n  }\n\n  public destroy() {\n    if (this.container) {\n      this.container.remove();\n    }\n    this.offEvent();\n    this.destroyed = true;\n  }\n\n  public getBBox() {\n    const origin_bbox = this.container.getBBox();\n    return new BBox(this.x, this.y, origin_bbox.width, origin_bbox.height);\n  }\n\n  protected renderVertical(min: number, max: number, colors: string[]) {\n    const valueStep = (max - min) / (colors.length - 1);\n    const colorStep = 1 / (colors.length - 1);\n    const tickStep = this.height / (colors.length - 1);\n    let gradientColor = 'l(90)';\n    each(colors, (c, index) => {\n      const stepNum = colorStep * index;\n      gradientColor += `${stepNum}:${c} `;\n    });\n    this.container.addShape('rect', {\n      attrs: {\n        x: 0,\n        y: 0,\n        width: this.width,\n        height: this.height,\n        fill: gradientColor,\n      },\n      name: 'legend',\n    });\n    // draw tick and label\n    each(colors, (c, index) => {\n      // tick\n      const step = tickStep * index;\n      this.container.addShape('path', {\n        attrs: {\n          path: [\n            ['M', 0, step],\n            ['L', this.width, step],\n          ],\n          ...this.options.ticklineStyle,\n        },\n      });\n      // value\n      const value = Math.round(valueStep * index);\n      this.container.addShape('text', {\n        attrs: {\n          text: value,\n          textAlign: 'left',\n          textBaseline: 'middle',\n          x: this.width + LABEL_MARGIN,\n          y: step,\n          ...this.options.text.style,\n        },\n        name: 'legend-label',\n      });\n    });\n    //anchor\n    const tri_width = 10;\n    const tri_height = 14;\n    const tri_path = [['M', -tri_width, -tri_height / 2], ['L', 0, 0], ['L', -tri_width, tri_height / 2], ['Z']];\n    this.anchor = this.container.addShape('path', {\n      attrs: {\n        path: tri_path,\n        ...this.options.anchorStyle,\n      },\n    });\n    this.anchor.set('visible', false);\n  }\n\n  protected renderHorizontal(min: number, max: number, colors: string[]) {\n    const valueStep = (max - min) / (colors.length - 1);\n    const colorStep = 1 / (colors.length - 1);\n    const tickStep = this.width / (colors.length - 1);\n    let gradientColor = 'l(0)';\n    each(colors, (c, index) => {\n      const stepNum = colorStep * index;\n      gradientColor += `${stepNum}:${c} `;\n    });\n    this.container.addShape('rect', {\n      attrs: {\n        x: 0,\n        y: 0,\n        width: this.width,\n        height: this.height,\n        fill: gradientColor,\n      },\n      name: 'legend',\n    });\n    // draw tick and label\n    each(colors, (c, index) => {\n      // tick\n      const step = tickStep * index;\n      this.container.addShape('path', {\n        attrs: {\n          path: [\n            ['M', step, 0],\n            ['L', step, this.height],\n          ],\n          ...this.options.ticklineStyle,\n        },\n        name: 'legend-label',\n      });\n      // value\n      const value = Math.round(valueStep * index);\n      this.container.addShape('text', {\n        attrs: {\n          text: value,\n          textAlign: 'center',\n          textBaseline: 'top',\n          x: step,\n          y: this.height + LABEL_MARGIN,\n          ...this.options.text.style,\n        },\n      });\n    });\n    //anchor\n    const tri_width = 14;\n    const tri_height = 10;\n    const tri_path = [['M', 0, 0], ['L', -tri_width / 2, -tri_height], ['L', tri_width / 2, -tri_height], ['Z']];\n    this.anchor = this.container.addShape('path', {\n      attrs: {\n        path: tri_path,\n        ...this.options.anchorStyle,\n      },\n    });\n    this.anchor.set('visible', false);\n  }\n\n  protected getLayout() {\n    const positions = this.options.position.split('-');\n    this.position = positions[0];\n    if (positions[0] === 'left' || positions[0] === 'right') {\n      return 'vertical';\n    }\n    return 'horizontal';\n  }\n\n  protected getDefaultWidth() {\n    if (this.layout === 'horizontal') {\n      const width = this.view.coordinateBBox.width;\n      return width;\n    }\n    return 10;\n  }\n\n  protected getDefaultHeight() {\n    if (this.layout === 'vertical') {\n      const height = this.view.coordinateBBox.height;\n      return height;\n    }\n    return 10;\n  }\n\n  protected legendLayout() {\n    const panelRange = this.view.coordinateBBox;\n    const { bleeding } = this.options.plot.getPlotTheme();\n    if (isArray(bleeding)) {\n      each(bleeding, (it, index) => {\n        if (typeof bleeding[index] === 'function') {\n          bleeding[index] = bleeding[index](this.options.plot.options);\n        }\n      });\n    }\n    const bbox = this.container.getBBox();\n    let x = 0;\n    let y = 0;\n    const positions = this.options.position.split('-');\n    const plotWidth = this.options.plot.width;\n    const plotHeight = this.options.plot.height;\n    // 先确定x\n    if (positions[0] === 'left') {\n      x = bleeding[3];\n    } else if (positions[0] === 'right') {\n      x = plotWidth - bleeding[1] - bbox.width;\n    } else if (positions[1] === 'center') {\n      // default\n      if (this.width === panelRange.width) {\n        x = panelRange.x;\n      } else {\n        x = (plotWidth - bbox.width) / 2;\n      }\n    } else if (positions[1] === 'left') {\n      x = bleeding[3];\n    } else if (positions[1] === 'right') {\n      x = this.options.plot.width - bleeding[1] - bbox.width;\n    }\n    // 再确定y\n    if (positions[0] === 'bottom') {\n      y = plotHeight - bleeding[2] - bbox.height;\n    } else if (positions[0] === 'top') {\n      y = this.getTopPosition(bleeding);\n    } else if (positions[1] === 'center') {\n      // default\n      if (this.height === panelRange.height) {\n        y = panelRange.y;\n      } else {\n        //用户自行设定\n        y = (plotHeight - bbox.height) / 2;\n      }\n    } else if (positions[1] === 'top') {\n      y = bleeding[0];\n    } else if (positions[1] === 'bottom') {\n      y = plotHeight - bleeding[2] - bbox.height;\n    }\n\n    this.x = x;\n    this.y = y;\n\n    this.container.translate(x, y);\n  }\n\n  protected getDefaultOptions() {\n    return {\n      text: {\n        style: {\n          fontSize: 12,\n          fill: 'rgba(0, 0, 0, 0.45)',\n        },\n      },\n      ticklineStyle: {\n        lineWidth: 1,\n        stroke: 'rgba(0, 0, 0, 0.8)',\n      },\n      anchorStyle: {\n        fill: 'rgba(0,0,0,0.5)',\n      },\n      triggerOn: 'mousemove',\n    };\n  }\n\n  protected addInteraction() {\n    let geomType;\n    if (this.options.plot.options.shapeType === 'rect') {\n      geomType = 'polygon';\n    } else {\n      geomType = 'point';\n    }\n\n    const eventName = `${geomType}:${this.options.triggerOn}`;\n    //const labelEventName = `label:${this.options.triggerOn}`;\n    const field = this.options.plot.options.colorField;\n    const { min, max } = this.colorScale;\n\n    const geomEventHandler = (ev) => {\n      const value = ev.data.data[field];\n      const ratio = (value - min) / (max - min);\n      this.moveAnchor(ratio);\n    };\n    this.view.on(eventName, geomEventHandler);\n    this.interactiveEvents[eventName] = {\n      target: this.view,\n      handler: geomEventHandler,\n    };\n\n    /*this.view.on(labelEventName, (ev) => {\n      const value = ev.data[field];\n      const ratio = (value - min) / (max - min);\n      this.moveAnchor(ratio);\n    });*/\n\n    const mouseleaveHandler = () => {\n      this.anchor.set('visible', false);\n    };\n    this.options.plot.canvas.on('mouseleave', mouseleaveHandler);\n    this.interactiveEvents.mouseleave = {\n      target: this.options.plot.canvas,\n      handler: mouseleaveHandler,\n    };\n  }\n\n  private moveAnchor(ratio: number) {\n    this.anchor.set('visible', true);\n    if (this.layout === 'vertical') {\n      const pos = this.height * ratio;\n      const ulMatrix = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n      ulMatrix[7] = pos;\n      this.anchor.stopAnimate();\n      this.anchor.animate(\n        {\n          matrix: ulMatrix,\n        },\n        400,\n        'easeLinear'\n      );\n    } else {\n      const pos = this.width * ratio;\n      const ulMatrix = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n      ulMatrix[6] = pos;\n      this.anchor.stopAnimate();\n      this.anchor.animate(\n        {\n          matrix: ulMatrix,\n        },\n        400,\n        'easeLinear'\n      );\n    }\n  }\n\n  private getTopPosition(bleeding) {\n    if (this.options.plot.description) {\n      const bbox = this.options.plot.description.getBBox();\n      return bbox.maxY + 10;\n    } else if (this.options.plot.title) {\n      const bbox = this.options.plot.title.getBBox();\n      return bbox.maxY + 10;\n    }\n    return bleeding[0];\n  }\n\n  private offEvent() {\n    each(this.interactiveEvents, (event, key) => {\n      const { target, handler } = event;\n      target.off(key, handler);\n    });\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}