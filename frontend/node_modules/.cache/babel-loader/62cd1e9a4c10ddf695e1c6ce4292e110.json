{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { deepMix } from '@antv/util';\nimport BasePlot from '../../base/plot';\nimport RingProgressLayer from './layer';\n\nvar RingProgress =\n/** @class */\nfunction (_super) {\n  __extends(RingProgress, _super);\n\n  function RingProgress() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  RingProgress.prototype.createLayers = function (props) {\n    var layerProps = deepMix({}, props);\n    layerProps.type = 'ringProgress';\n\n    _super.prototype.createLayers.call(this, layerProps);\n  };\n\n  RingProgress.prototype.update = function (value) {\n    var layer = this.layers[0];\n    layer.update(value);\n  };\n\n  RingProgress.getDefaultOptions = RingProgressLayer.getDefaultOptions;\n  return RingProgress;\n}(BasePlot);\n\nexport default RingProgress;","map":{"version":3,"sources":["../../../src/sparkline/ring-progress/index.ts"],"names":[],"mappings":";AAAA,SAAS,OAAT,QAAwB,YAAxB;AACA,OAAO,QAAP,MAAqC,iBAArC;AACA,OAAO,iBAAP,MAA0D,SAA1D;;AAIA,IAAA,YAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA0C,EAAA,SAAA,CAAA,YAAA,EAAA,MAAA,CAAA;;AAA1C,WAAA,YAAA,GAAA;;AAaC;;AAVQ,EAAA,YAAA,CAAA,SAAA,CAAA,YAAA,GAAP,UAAoB,KAApB,EAAyB;AACvB,QAAM,UAAU,GAAG,OAAO,CAAC,EAAD,EAAK,KAAL,CAA1B;AACA,IAAA,UAAU,CAAC,IAAX,GAAkB,cAAlB;;AACA,IAAA,MAAA,CAAA,SAAA,CAAM,YAAN,CAAkB,IAAlB,CAAkB,IAAlB,EAAmB,UAAnB;AACD,GAJM;;AAMA,EAAA,YAAA,CAAA,SAAA,CAAA,MAAA,GAAP,UAAc,KAAd,EAA2B;AACzB,QAAM,KAAK,GAAG,KAAK,MAAL,CAAY,CAAZ,CAAd;AACA,IAAA,KAAK,CAAC,MAAN,CAAa,KAAb;AACD,GAHM;;AARO,EAAA,YAAA,CAAA,iBAAA,GAAgE,iBAAiB,CAAC,iBAAlF;AAYhB,SAAA,YAAA;AAAC,CAbD,CAA0C,QAA1C,CAAA;;eAAqB,Y","sourcesContent":["import { deepMix } from '@antv/util';\nimport BasePlot, { PlotConfig } from '../../base/plot';\nimport RingProgressLayer, { RingProgressViewConfig } from './layer';\n\nexport interface RingProgressConfig extends RingProgressViewConfig, PlotConfig {}\n\nexport default class RingProgress extends BasePlot<RingProgressConfig> {\n  public static getDefaultOptions: typeof RingProgressLayer.getDefaultOptions = RingProgressLayer.getDefaultOptions;\n\n  public createLayers(props) {\n    const layerProps = deepMix({}, props);\n    layerProps.type = 'ringProgress';\n    super.createLayers(layerProps);\n  }\n\n  public update(value: number) {\n    const layer = this.layers[0] as any;\n    layer.update(value);\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}