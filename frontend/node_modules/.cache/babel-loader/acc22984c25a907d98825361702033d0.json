{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { deepMix, contains, isFunction, get, findIndex, isEqual, each, set, isArray, assign } from '@antv/util';\nimport { createDom, modifyCSS } from '@antv/dom-util';\nimport { HtmlTooltipTheme, TooltipCssConst, DEFAULT_ANIMATE_CFG, _ORIGIN } from '../../dependents';\nimport { registerPlotType } from '../../base/global';\nimport ViewLayer from '../../base/view-layer';\nimport { getGeom } from '../../geoms/factory';\nimport './theme';\nimport './geometry/shape/funnel-basic-rect';\nimport './geometry/shape/funnel-dynamic-rect';\nimport './animation/funnel-scale-in-x';\nimport './animation/funnel-scale-in-y';\nimport { mappingColor, rgb2arr } from '../../util/color';\n\nfunction lerp(a, b, factor) {\n  return (1 - factor) * a + factor * b;\n}\n\nvar G2_GEOM_MAP = {\n  column: 'interval'\n};\nvar PLOT_GEOM_MAP = {\n  interval: 'funnel'\n};\n\nvar FunnelLayer =\n/** @class */\nfunction (_super) {\n  __extends(FunnelLayer, _super);\n\n  function FunnelLayer(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.type = 'funnel';\n    _this._shouldResetPercentages = true;\n    _this._shouldResetLabels = true;\n    _this._shouldResetCompareTexts = true;\n    _this._legendsListenerAttached = false;\n\n    _this._onLegendContainerMouseDown = function (e) {\n      var props = _this.options;\n      var targetName = e.target.get('name');\n\n      if (targetName.startsWith('legend-item')) {\n        var legendItem = e.target.get('parent');\n        legendItem.set('unchecked', !legendItem.get('unchecked'));\n\n        _this.refreshPercentages();\n\n        _this.refreshLabels();\n\n        if (props.dynamicHeight) {\n          var data = _this._findCheckedDataByMouseDownLegendItem(legendItem);\n\n          _this._genCustomFieldForDynamicHeight(data);\n        }\n\n        if (props.compareField) {\n          var data = _this._findCheckedDataByMouseDownLegendItem(legendItem);\n\n          _this._updateDataForCompare(data);\n\n          _this.refreshCompareTexts();\n        }\n      }\n    };\n\n    _this.adjustProps(_this.options);\n\n    if (props.dynamicHeight) {\n      _this._genCustomFieldForDynamicHeight(_this.getData());\n    }\n\n    if (props.compareField) {\n      _this.options.data = _this._reduceDataForCompare(_this.getData());\n    }\n\n    return _this;\n  }\n\n  FunnelLayer.getDefaultOptions = function (props) {\n    var cfg = {\n      label: {\n        visible: true,\n        adjustColor: true\n      },\n      percentage: {\n        visible: true,\n        offsetX: props.transpose ? 0 : 40,\n        offsetY: props.transpose ? 40 : 0,\n        spacing: 4,\n        line: {\n          visible: true,\n          style: {\n            lineWidth: 1,\n            stroke: 'rgba(0, 0, 0, 0.15)'\n          }\n        },\n        text: {\n          content: '转化率',\n          style: {\n            fill: 'rgba(0, 0, 0, 0.65)'\n          }\n        },\n        value: {\n          visible: true,\n          style: {\n            fill: 'black'\n          },\n          formatter: function (yValueUpper, yValueLower) {\n            return (100 * yValueLower / yValueUpper).toFixed(2) + \"%\";\n          }\n        }\n      },\n      tooltip: {\n        visible: true,\n        shared: true,\n        showTitle: false,\n        showCrosshairs: false,\n        showMarkers: false\n      },\n      animation: deepMix({}, DEFAULT_ANIMATE_CFG, {\n        appear: {\n          duration: 800\n        }\n      }),\n      dynamicHeight: false,\n      compareText: {\n        visible: true,\n        offsetX: -16,\n        offsetY: -16,\n        style: {\n          fill: 'black'\n        }\n      },\n      legend: {\n        position: 'bottom-center'\n      },\n      interactions: [{\n        type: 'tooltip'\n      }, {\n        type: 'legend-filter'\n      }]\n    };\n    return deepMix({}, _super.getDefaultOptions.call(this), cfg);\n  };\n\n  FunnelLayer.prototype.getColorScale = function () {\n    var xField = this.options.xField;\n\n    if (xField) {\n      return this.view.getScaleByField(xField);\n    }\n  };\n\n  FunnelLayer.prototype.coord = function () {\n    var props = this.options;\n    var coordConfig = {\n      type: 'rect',\n      actions: props.transpose ? props.dynamicHeight ? [['transpose'], ['scale', 1, -1]] : [['scale', 1, -1]] : props.dynamicHeight ? [] : [['transpose'], ['scale', 1, -1]]\n    }; // @ts-ignore\n\n    this.setConfig('coordinate', coordConfig);\n  };\n\n  FunnelLayer.prototype.axis = function () {\n    this.setConfig('axes', false);\n  };\n\n  FunnelLayer.prototype.adjustFunnel = function (funnel) {\n    var props = this.options; // @ts-ignore\n\n    funnel.shape = props.dynamicHeight ? 'funnel-dynamic-rect' : 'funnel-basic-rect';\n    funnel.color = {\n      fields: [props.xField],\n      values: props.color && (Array.isArray(props.color) ? props.color : [props.color])\n    };\n\n    if (isFunction(props.funnelStyle)) {\n      // @ts-ignore\n      funnel.style = {\n        callback: props.funnelStyle\n      };\n    } else {\n      // @ts-ignore\n      funnel.style = {\n        cfg: props.funnelStyle\n      };\n    }\n\n    funnel.adjust = [{\n      type: props.dynamicHeight ? 'stack' : 'symmetric'\n    }];\n  };\n\n  FunnelLayer.prototype.tooltip = function () {\n    var props = this.options;\n\n    if (props.compareField) {\n      deepMix(props.tooltip, {\n        htmlContent: function (title, items) {\n          var clss, el, color, elMarker;\n          clss = TooltipCssConst.CONTAINER_CLASS;\n          el = createDom(\"<div class=\\\"\" + clss + \"\\\"></div>\");\n          modifyCSS(el, HtmlTooltipTheme[clss]);\n          var elRoot = el;\n\n          if (title) {\n            clss = TooltipCssConst.TITLE_CLASS;\n            el = createDom(\"<div class=\\\"\" + clss + \"\\\"></div>\");\n            modifyCSS(el, HtmlTooltipTheme[clss]);\n            elRoot.appendChild(el);\n            var elTitle = el;\n            clss = TooltipCssConst.MARKER_CLASS;\n            el = createDom(\"<span class=\\\"\" + clss + \"\\\"></span>\");\n            modifyCSS(el, HtmlTooltipTheme[clss]);\n            modifyCSS(el, {\n              width: '10px',\n              height: '10px'\n            });\n            elTitle.appendChild(el);\n            elMarker = el;\n            el = createDom(\"<span>\" + title + \"</span>\");\n            elTitle.appendChild(el);\n          }\n\n          if (items) {\n            clss = TooltipCssConst.LIST_CLASS;\n            el = createDom(\"<ul class=\\\"\" + clss + \"\\\"></ul>\");\n            modifyCSS(el, HtmlTooltipTheme[clss]);\n            elRoot.appendChild(el);\n            var elList_1 = el;\n            items.reduce(function (pairs, item) {\n              if (!color) {\n                color = item.color;\n              }\n\n              var compareValues = get(item, 'point._origin.__compare__.compareValues');\n              var yValues = get(item, 'point._origin.__compare__.yValues');\n              yValues.forEach(function (yValue, i) {\n                return pairs.push([compareValues[i], yValue]);\n              });\n              return pairs;\n            }, []).forEach(function (_a, index) {\n              var compareValue = _a[0],\n                  yValue = _a[1];\n              clss = TooltipCssConst.LIST_ITEM_CLASS;\n              el = createDom(\"<li class=\\\"\" + clss + \"\\\" data-index=\" + index + \"></li>\");\n              modifyCSS(el, HtmlTooltipTheme[clss]);\n              elList_1.appendChild(el);\n              var elListItem = el;\n              clss = TooltipCssConst.NAME_CLASS;\n              el = createDom(\"<span class=\\\"\" + clss + \"\\\">\" + compareValue + \"</span>\");\n              modifyCSS(el, HtmlTooltipTheme[clss]);\n              elListItem.appendChild(el);\n              clss = TooltipCssConst.VALUE_CLASS;\n              el = createDom(\"<span class=\\\"\" + clss + \"\\\">\" + yValue + \"</span>\");\n              modifyCSS(el, HtmlTooltipTheme[clss]);\n              elListItem.appendChild(el);\n            });\n          }\n\n          if (color && elMarker) {\n            modifyCSS(elMarker, {\n              backgroundColor: color\n            });\n          }\n\n          return elRoot;\n        }\n      });\n    }\n\n    _super.prototype.tooltip.call(this);\n  };\n\n  FunnelLayer.prototype.addGeometry = function () {\n    var props = this.options;\n    var funnel = getGeom('interval', 'main', {\n      positionFields: [props.dynamicHeight ? '_' : props.xField, props.yField],\n      plot: this\n    });\n    this.adjustFunnel(funnel);\n    this.funnel = funnel;\n    this.setConfig('geometry', funnel);\n\n    if (!props.compareField) {\n      this.geometryTooltip();\n    }\n  };\n\n  FunnelLayer.prototype.geometryTooltip = function () {\n    this.funnel.tooltip = {};\n    var tooltipOptions = this.options.tooltip;\n\n    if (tooltipOptions.fields) {\n      this.funnel.tooltip.fields = tooltipOptions.fields;\n    }\n\n    if (tooltipOptions.formatter) {\n      this.funnel.tooltip.callback = tooltipOptions.formatter;\n\n      if (!tooltipOptions.fields) {\n        this.funnel.tooltip.fields = [this.options.xField, this.options.yField];\n      }\n    }\n  };\n\n  FunnelLayer.prototype.animation = function () {\n    var _this = this;\n\n    _super.prototype.animation.call(this);\n\n    var props = this.options;\n\n    if (props.animation === false) {\n      /** 关闭动画 */\n      this.funnel.animate = false;\n    } else {\n      var data_1 = this.getData();\n      var appearDuration = get(props, 'animation.appear.duration');\n      var appearDurationEach_1 = appearDuration / (data_1.length || 1);\n\n      if (this._animationAppearTimeoutHandler) {\n        clearTimeout(this._animationAppearTimeoutHandler);\n        delete this._animationAppearTimeoutHandler;\n      }\n\n      this._animationAppearTimeoutHandler = setTimeout(function () {\n        _this.fadeInPercentages(appearDurationEach_1);\n\n        if (props.compareField) {\n          _this.fadeInCompareTexts(appearDurationEach_1);\n        }\n\n        delete _this._animationAppearTimeoutHandler;\n      }, appearDuration);\n      this.funnel.animate = deepMix({}, props.animation, {\n        appear: {\n          animation: props.transpose ? 'funnelScaleInX' : 'funnelScaleInY',\n          duration: appearDurationEach_1,\n          delay: function (datum) {\n            return findIndex(data_1, function (o) {\n              return isEqual(o, datum);\n            }) * appearDurationEach_1;\n          },\n          callback: function (shape) {\n            _this.fadeInLabels(shape, 0.5 * appearDurationEach_1);\n          }\n        },\n        enter: {\n          animation: 'fade-in'\n        }\n      });\n    }\n  };\n\n  FunnelLayer.prototype.afterRender = function () {\n    var props = this.options;\n    this.resetLabels();\n    this.resetPercentages();\n\n    if (props.compareField) {\n      this.resetCompareTexts();\n    }\n\n    if (props.padding == 'auto') {\n      var percentageContainer = this._findPercentageContainer();\n\n      if (percentageContainer) {\n        this.paddingController.registerPadding(percentageContainer, 'inner', true);\n      }\n\n      var compareTextContainer = this._findCompareTextContainer();\n\n      if (compareTextContainer) {\n        this.paddingController.registerPadding(compareTextContainer, 'inner', true);\n      }\n    }\n\n    _super.prototype.afterRender.call(this);\n\n    if (props.animation === false) {\n      this.fadeInLabels();\n      this.fadeInPercentages();\n\n      if (props.compareField) {\n        this.fadeInCompareTexts();\n      }\n    }\n\n    if (!this._legendsListenerAttached) {\n      this._legendsListenerAttached = true; // @ts-ignore\n\n      var legendContainer = this.view.getController('legend').container;\n      legendContainer.on('mousedown', this._onLegendContainerMouseDown);\n    }\n  };\n\n  FunnelLayer.prototype.updateConfig = function (cfg) {\n    cfg = this.adjustProps(cfg);\n\n    _super.prototype.updateConfig.call(this, cfg);\n\n    this._legendsListenerAttached = false;\n  };\n\n  FunnelLayer.prototype.changeData = function (data) {\n    var props = this.options;\n\n    if (props.animation !== false) {\n      this._shouldResetPercentages = false;\n      this._shouldResetLabels = false;\n    }\n\n    if (props.dynamicHeight) {\n      var checkedData = this._findCheckedDataInNewData(data);\n\n      this._genCustomFieldForDynamicHeight(checkedData);\n    }\n\n    if (props.compareField) {\n      data = this._reduceDataForCompare(data);\n\n      var checkedData = this._findCheckedDataInNewData(data);\n\n      this._updateDataForCompare(checkedData);\n    }\n\n    _super.prototype.changeData.call(this, data);\n\n    this.refreshPercentages();\n    this.refreshLabels();\n\n    if (props.compareField) {\n      this.fadeInCompareTexts();\n    }\n  };\n\n  FunnelLayer.prototype.geometryParser = function (dim, type) {\n    if (dim === 'g2') {\n      return G2_GEOM_MAP[type];\n    }\n\n    return PLOT_GEOM_MAP[type];\n  };\n\n  FunnelLayer.prototype.adjustProps = function (props) {\n    if (props.compareField) {\n      props.dynamicHeight = false;\n    }\n\n    if (props.dynamicHeight) {\n      set(props, \"meta.\" + props.yField + \".nice\", false);\n      set(props, 'tooltip.shared', false);\n    }\n\n    return props;\n  };\n\n  FunnelLayer.prototype.resetPercentages = function () {\n    var _this = this;\n\n    if (!this._shouldResetPercentages) return;\n    var props = this.options;\n\n    var _a = props.percentage || {},\n        offsetX = _a.offsetX,\n        offsetY = _a.offsetY,\n        spacing = _a.spacing,\n        _b = _a.line,\n        percentageLine = _b === void 0 ? {} : _b,\n        _c = _a.text,\n        percentageText = _c === void 0 ? {} : _c,\n        _d = _a.value,\n        percentageValue = _d === void 0 ? {} : _d;\n\n    var adjustTimestamp = Date.now();\n\n    var container = this._findPercentageContainer(true);\n\n    this._eachShape(function (shape, index, datumLower, datumUpper) {\n      if (index > 0) {\n        var _a = shape.getBBox(),\n            minX = _a.minX,\n            maxX = _a.maxX,\n            maxY = _a.maxY,\n            minY = _a.minY;\n\n        var x1 = props.transpose ? minX : maxX;\n        var y1 = props.transpose ? props.compareField ? maxY : minY : minY;\n\n        var _b = _this._findPercentageMembersInContainerByIndex(container, index, true),\n            line_1 = _b.line,\n            text_1 = _b.text,\n            value_1 = _b.value;\n\n        var eachProcs_1 = [function (x, y, line, text, value) {\n          if (line) {\n            line.attr(deepMix({}, percentageLine.style, {\n              x1: x,\n              y1: y,\n              x2: props.transpose ? x + offsetX : x - offsetX,\n              y2: props.transpose ? y - offsetY : y + offsetY,\n              opacity: 0\n            }));\n            line.set('adjustTimestamp', adjustTimestamp);\n          }\n\n          var textWidth = 0;\n          var valueWidth = 0;\n\n          var textProc = function () {\n            if (text) {\n              text.attr(deepMix({}, percentageText.style, {\n                x: props.transpose ? x + offsetX : x - offsetX - spacing - valueWidth - spacing,\n                y: props.transpose ? y - offsetY - spacing : y + offsetY,\n                opacity: 0,\n                text: percentageText.content,\n                textAlign: props.transpose ? 'left' : 'right',\n                textBaseline: props.transpose ? 'bottom' : 'middle'\n              }));\n              text.set('adjustTimestamp', adjustTimestamp);\n              textWidth = text.getBBox().width;\n            }\n          };\n\n          var valueProc = function () {\n            if (value) {\n              value.attr(deepMix({}, percentageValue.style, {\n                x: props.transpose ? x + offsetX + textWidth + spacing : x - offsetX - spacing,\n                y: props.transpose ? y - offsetY - spacing : y + offsetY,\n                opacity: 0,\n                text: isFunction(percentageValue.formatter) ? props.compareField ? percentageValue.formatter(get(datumUpper, '__compare__.yValues.0'), get(datumLower, '__compare__.yValues.0')) : percentageValue.formatter(datumUpper[props.yField], datumLower[props.yField]) : '',\n                textAlign: props.transpose ? 'left' : 'right',\n                textBaseline: props.transpose ? 'bottom' : 'middle'\n              }));\n              value.set('adjustTimestamp', adjustTimestamp);\n              valueWidth = value.getBBox().width;\n            }\n          };\n\n          if (props.transpose) {\n            textProc();\n            valueProc();\n          } else {\n            valueProc();\n            textProc();\n          }\n        }, function (x, y, line, text, value) {\n          if (line) {\n            line.attr(deepMix({}, percentageLine.style, {\n              x1: x,\n              y1: y,\n              x2: x + offsetX,\n              y2: props.transpose ? props.compareField ? y + offsetY : y - offsetY : y + offsetY,\n              opacity: 0\n            }));\n            line.set('adjustTimestamp', adjustTimestamp);\n          }\n\n          var textWidth = 0;\n\n          if (text) {\n            text.attr(deepMix({}, percentageText.style, {\n              x: props.transpose ? x + offsetX : x + offsetX + spacing,\n              y: props.transpose ? props.compareField ? y + offsetY + spacing : y - offsetY - spacing : y + offsetY,\n              opacity: 0,\n              text: percentageText.content,\n              textAlign: 'left',\n              textBaseline: props.transpose ? props.compareField ? 'top' : 'bottom' : 'middle'\n            }));\n            text.set('adjustTimestamp', adjustTimestamp);\n            textWidth = text.getBBox().width;\n          }\n\n          if (value) {\n            value.attr(deepMix({}, percentageValue.style, {\n              x: props.transpose ? x + offsetX + textWidth + spacing : x + offsetX + spacing + textWidth + spacing,\n              y: props.transpose ? props.compareField ? y + offsetY + spacing : y - offsetY - spacing : y + offsetY,\n              opacity: 0,\n              text: isFunction(percentageValue.formatter) ? props.compareField ? percentageValue.formatter(get(datumUpper, \"__compare__.yValues.1\"), get(datumLower, \"__compare__.yValues.1\")) : percentageValue.formatter(datumUpper[props.yField], datumLower[props.yField]) : '',\n              textAlign: 'left',\n              textBaseline: props.transpose ? props.compareField ? 'top' : 'bottom' : 'middle'\n            }));\n            value.set('adjustTimestamp', adjustTimestamp);\n          }\n        }];\n\n        if (props.compareField) {\n          var _c = [minX, minY],\n              x0 = _c[0],\n              y0 = _c[1];\n          [[x0, y0], [x1, y1]].forEach(function (_a, i) {\n            var x = _a[0],\n                y = _a[1];\n            return eachProcs_1[i](x, y, line_1 && line_1[i], text_1 && text_1[i], value_1 && value_1[i]);\n          });\n        } else {\n          eachProcs_1[1](x1, y1, line_1, text_1, value_1);\n        }\n      }\n\n      datumUpper = datumLower;\n      index++;\n    });\n\n    container.get('children').forEach(function (child) {\n      if (child.get('adjustTimestamp') != adjustTimestamp) {\n        child.attr({\n          opacity: 0\n        });\n        container.set(child.get('id'), null);\n        setTimeout(function () {\n          return child.remove();\n        }, 0);\n      }\n    });\n  };\n\n  FunnelLayer.prototype.fadeInPercentages = function (duration, callback) {\n    var _this = this;\n\n    var props = this.options;\n\n    var container = this._findPercentageContainer();\n\n    var eachProc = function (i) {\n      var lastBBox = {\n        minX: Infinity,\n        maxX: -Infinity,\n        minY: Infinity,\n        maxY: -Infinity\n      };\n\n      _this._eachShape(function (shape, index) {\n        var members = _this._findPercentageMembersInContainerByIndex(container, index);\n\n        var currBBox = {\n          minX: Infinity,\n          maxX: -Infinity,\n          minY: Infinity,\n          maxY: -Infinity\n        };\n\n        var eachCalc = function (member) {\n          if (member && member.get('type') == 'text') {\n            var _a = member.getBBox(),\n                minX = _a.minX,\n                maxX = _a.maxX,\n                minY = _a.minY,\n                maxY = _a.maxY;\n\n            if (minX < currBBox.minX) currBBox.minX = minX;\n            if (maxX > currBBox.maxX) currBBox.maxX = maxX;\n            if (minY < currBBox.minY) currBBox.minY = minY;\n            if (maxY > currBBox.maxY) currBBox.maxY = maxY;\n          }\n        };\n\n        each(members, function (member) {\n          return isArray(member) ? eachCalc(member[i]) : eachCalc(member);\n        });\n\n        if (currBBox.minX > lastBBox.maxX || currBBox.maxX < lastBBox.minX || currBBox.minY > lastBBox.maxY || currBBox.maxY < lastBBox.minY) {\n          var eachShow_1 = function (member) {\n            if (member) {\n              var attrs = {\n                opacity: 1\n              };\n              duration ? member.animate(attrs, duration) : member.attr(attrs);\n            }\n          };\n\n          each(members, function (member) {\n            return isArray(member) ? eachShow_1(member[i]) : eachShow_1(member);\n          });\n          assign(lastBBox, currBBox);\n        }\n      });\n    };\n\n    props.compareField ? [0, 1].forEach(eachProc) : eachProc();\n    duration && callback && setTimeout(callback, duration);\n  };\n\n  FunnelLayer.prototype.fadeOutPercentages = function (duration, callback) {\n    var _this = this;\n\n    var container = this._findPercentageContainer();\n\n    this._eachShape(function (shape, index) {\n      var members = _this._findPercentageMembersInContainerByIndex(container, index);\n\n      var eachProc = function (member) {\n        if (member) {\n          var attrs = {\n            opacity: 0\n          };\n          duration ? member.animate(attrs, duration) : member.attr(attrs);\n        }\n      };\n\n      each(members, function (member) {\n        return isArray(member) ? member.forEach(eachProc) : eachProc(member);\n      });\n    });\n\n    duration && callback && setTimeout(callback, duration);\n  };\n\n  FunnelLayer.prototype.refreshPercentages = function (callback) {\n    var _this = this;\n\n    var props = this.options;\n\n    if (props.animation !== false) {\n      var _a = this._calcRefreshFadeDurations(),\n          fadeOutDuration = _a.fadeOutDuration,\n          fadeInDuration_1 = _a.fadeInDuration;\n\n      this._shouldResetPercentages = false;\n      this.fadeOutPercentages(fadeOutDuration, function () {\n        _this._shouldResetPercentages = true;\n\n        _this.resetPercentages();\n\n        _this.fadeInPercentages(fadeInDuration_1, callback);\n      });\n    }\n  };\n\n  FunnelLayer.prototype._findPercentageContainer = function (createIfNotFound) {\n    if (createIfNotFound === void 0) {\n      createIfNotFound = false;\n    }\n\n    var middleGroup = this.view.middleGroup;\n    var percentageContainer = middleGroup.get('percentageContainer');\n\n    if (!percentageContainer && createIfNotFound) {\n      percentageContainer = middleGroup.addGroup();\n      middleGroup.set('percentageContainer', percentageContainer);\n    }\n\n    return percentageContainer;\n  };\n\n  FunnelLayer.prototype._findPercentageMembersInContainerByIndex = function (container, index, createIfNotFound) {\n    if (createIfNotFound === void 0) {\n      createIfNotFound = false;\n    }\n\n    var props = this.options;\n\n    var _a = props.percentage || {},\n        visible = _a.visible,\n        _b = _a.line,\n        percentageLine = _b === void 0 ? {} : _b,\n        _c = _a.text,\n        percentageText = _c === void 0 ? {} : _c,\n        _d = _a.value,\n        percentageValue = _d === void 0 ? {} : _d;\n\n    var members = {\n      line: undefined,\n      text: undefined,\n      value: undefined\n    };\n\n    if (visible === false || !container) {\n      return members;\n    }\n\n    if (percentageLine.visible !== false) {\n      var find = function (i) {\n        var lineId = \"_percentage-line-\" + index + \"-\" + i;\n        var line = container.get(lineId);\n\n        if (!line && createIfNotFound) {\n          line = container.addShape({\n            id: lineId,\n            type: 'line',\n            attrs: {}\n          });\n          container.set(lineId, line);\n        }\n\n        return line;\n      };\n\n      var line = props.compareField ? [0, 1].map(find) : find(0);\n      members.line = line;\n    }\n\n    if (percentageText.visible !== false) {\n      var find = function (i) {\n        var textId = \"_percentage-text-\" + index + \"-\" + i;\n        var text = container.get(textId);\n\n        if (!text && createIfNotFound) {\n          text = container.addShape({\n            id: textId,\n            type: 'text',\n            attrs: {}\n          });\n          container.set(textId, text);\n        }\n\n        return text;\n      };\n\n      var text = props.compareField ? [0, 1].map(find) : find(0);\n      members.text = text;\n    }\n\n    if (percentageValue.visible !== false) {\n      var find = function (i) {\n        var valueId = \"_percentage-value-\" + index + \"-\" + i;\n        var value = container.get(valueId);\n\n        if (!value && createIfNotFound) {\n          value = container.addShape({\n            id: valueId,\n            type: 'text',\n            attrs: {}\n          });\n          container.set(valueId, value);\n        }\n\n        return value;\n      };\n\n      var value = props.compareField ? [0, 1].map(find) : find(0);\n      members.value = value;\n    }\n\n    return members;\n  };\n\n  FunnelLayer.prototype._calcRefreshFadeDurations = function () {\n    var props = this.options;\n    var updateDuration = get(props, 'animation.update.duration');\n    var enterDuration = get(props, 'animation.enter.duration');\n    var fadeInDuration = Math.min(enterDuration, updateDuration) * 0.6;\n    var fadeOutDuration = Math.max(enterDuration, updateDuration) * 1.2;\n    return {\n      fadeInDuration: fadeInDuration,\n      fadeOutDuration: fadeOutDuration\n    };\n  };\n\n  FunnelLayer.prototype.resetLabels = function () {\n    var _this = this;\n\n    if (!this._shouldResetLabels) return;\n    var props = this.options;\n    var xField = props.xField,\n        yField = props.yField;\n    var adjustTimestamp = Date.now();\n\n    var labelsContainer = this._getGeometry().labelsContainer;\n\n    var labelProps = props.label || {};\n    var labelStyle = deepMix(__assign({}, this.theme.label), props.label.style, {\n      opacity: 0,\n      textAlign: 'center',\n      textBaseline: 'middle'\n    });\n    var datumTop;\n\n    this._eachShape(function (shape, index, datum, elementIndex) {\n      var _a;\n\n      var element = shape.get('element');\n\n      if (index == 0) {\n        datumTop = datum;\n      }\n\n      var _b = shape.getBBox(),\n          minX = _b.minX,\n          maxX = _b.maxX,\n          minY = _b.minY,\n          maxY = _b.maxY;\n\n      var xValue = datum[xField];\n      var yValue = datum[yField];\n\n      if (labelProps.adjustColor) {\n        labelStyle.fill = _this._getAdjustedTextFillByShape(shape);\n      }\n\n      var compare = datum.__compare__;\n      var content;\n      var formatArgs = (_a = {}, _a[_ORIGIN] = datum, _a.element = element, _a.elementIndex = elementIndex, _a.mappingDatum = [].concat(element.getModel().mappingData)[0], _a.mappingDatumIndex = 0, _a);\n\n      if (labelProps.formatter) {\n        content = labelProps.formatter(xValue, formatArgs, index, yValue, datumTop[yField]);\n      } else {\n        if (compare) {\n          content = [0, 1].map(function () {\n            return \"\" + yValue;\n          }).join(props.transpose ? '\\n\\n' : '    ');\n        } else {\n          content = xValue + \" \" + yValue;\n        }\n      }\n\n      var label = _this._findLabelInContainerByIndex(labelsContainer, index, true);\n\n      var ratio = compare ? compare.yValues[0] / (compare.yValues[0] + compare.yValues[1]) : 0.5;\n      label.attr(__assign(__assign({}, labelStyle), {\n        x: lerp(minX, maxX, !props.transpose ? ratio : 0.5),\n        y: lerp(minY, maxY, props.transpose ? ratio : 0.5),\n        text: content\n      }));\n      label.set('adjustTimestamp', adjustTimestamp);\n    });\n\n    labelsContainer.get('children').forEach(function (label) {\n      if (label.get('adjustTimestamp') != adjustTimestamp) {\n        label.attr({\n          opacity: 0\n        });\n        labelsContainer.set(label.get('id'), null);\n        setTimeout(function () {\n          return label.remove();\n        });\n      }\n    });\n  };\n\n  FunnelLayer.prototype.fadeInLabels = function (targetShape, duration, callback) {\n    var _this = this;\n\n    var labelsContainer = this._getGeometry().labelsContainer;\n\n    this._eachShape(function (shape, index) {\n      if (!targetShape || targetShape == shape) {\n        var label = _this._findLabelInContainerByIndex(labelsContainer, index);\n\n        if (label) {\n          var shapeBBox = shape.getBBox();\n          var labelBBox = label.getBBox();\n\n          if (labelBBox.minX >= shapeBBox.minX && labelBBox.maxX <= shapeBBox.maxX && labelBBox.minY >= shapeBBox.minY && labelBBox.maxY <= shapeBBox.maxY) {\n            var attrs = {\n              opacity: 1\n            };\n            duration ? label.animate(attrs, duration) : label.attr(attrs);\n          }\n        }\n      }\n    });\n\n    duration && callback && setTimeout(callback, duration);\n  };\n\n  FunnelLayer.prototype.fadeOutLabels = function (targetShape, duration, callback) {\n    var _this = this;\n\n    var labelsContainer = this._getGeometry().labelsContainer;\n\n    this._eachShape(function (shape, index) {\n      if (!targetShape || targetShape == shape) {\n        var label = _this._findLabelInContainerByIndex(labelsContainer, index);\n\n        if (label) {\n          var attrs = {\n            opacity: 0\n          };\n          duration ? label.animate(attrs, duration) : label.attr(attrs);\n        }\n      }\n    });\n\n    duration && callback && setTimeout(callback, duration);\n  };\n\n  FunnelLayer.prototype.refreshLabels = function (callback) {\n    var _this = this;\n\n    var props = this.options;\n\n    if (props.animation !== false) {\n      var _a = this._calcRefreshFadeDurations(),\n          fadeOutDuration = _a.fadeOutDuration,\n          fadeInDuration_2 = _a.fadeInDuration;\n\n      this._shouldResetLabels = false;\n      this.fadeOutLabels(null, fadeOutDuration, function () {\n        _this._shouldResetLabels = true;\n\n        _this.resetLabels();\n\n        _this.fadeInLabels(null, fadeInDuration_2, callback);\n      });\n    }\n  };\n\n  FunnelLayer.prototype._findLabelInContainerByIndex = function (container, index, createIfNotFound) {\n    var _a;\n\n    if (createIfNotFound === void 0) {\n      createIfNotFound = false;\n    }\n\n    var props = this.options;\n    var label;\n\n    if (((_a = props.label) === null || _a === void 0 ? void 0 : _a.visible) === false) {\n      return label;\n    }\n\n    var labelId = \"_label-\" + index;\n    label = container.get(labelId);\n\n    if (!label && createIfNotFound) {\n      label = container.addShape({\n        id: labelId,\n        type: 'text',\n        attrs: {}\n      });\n      container.set(labelId, label);\n    }\n\n    return label;\n  };\n\n  FunnelLayer.prototype.resetCompareTexts = function () {\n    if (!this._shouldResetCompareTexts) return;\n    var props = this.options;\n    var shapeParentBBox;\n    var compare;\n\n    this._eachShape(function (shape, index, datum) {\n      if (index == 0) {\n        shapeParentBBox = shape.get('parent').getBBox();\n        compare = get(datum, '__compare__');\n      }\n    });\n\n    if (shapeParentBBox && compare && get(props, 'compareText.visible') !== false) {\n      var container_1 = this._findCompareTextContainer(true);\n\n      var yValuesMax_1 = compare.yValuesMax,\n          compareValues_1 = compare.compareValues;\n      var minX_1 = shapeParentBBox.minX,\n          maxX_1 = shapeParentBBox.maxX,\n          minY_1 = shapeParentBBox.minY,\n          maxY_1 = shapeParentBBox.maxY;\n      var compareTexts_1 = container_1.get('children');\n      [0, 1].forEach(function (i) {\n        var compareText = compareTexts_1[i];\n\n        if (!compareText) {\n          compareText = container_1.addShape({\n            type: 'text'\n          });\n        }\n\n        compareText.attr(deepMix({}, get(props, 'compareText.style'), {\n          text: props.transpose ? compareValues_1[i] : i ? \"  \" + compareValues_1[i] : compareValues_1[i] + \"  \",\n          x: props.transpose ? minX_1 + get(props, 'compareText.offsetX') : lerp(minX_1, maxX_1, yValuesMax_1[0] / (yValuesMax_1[0] + yValuesMax_1[1])),\n          y: props.transpose ? lerp(minY_1, maxY_1, yValuesMax_1[0] / (yValuesMax_1[0] + yValuesMax_1[1])) + (i ? 8 : -8) : minY_1 + get(props, 'compareText.offsetY'),\n          opacity: 0,\n          textAlign: props.transpose ? 'right' : i ? 'left' : 'right',\n          textBaseline: props.transpose ? i ? 'top' : 'bottom' : 'bottom'\n        }));\n      });\n    }\n  };\n\n  FunnelLayer.prototype.fadeInCompareTexts = function (duration, callback) {\n    var container = this._findCompareTextContainer();\n\n    if (container) {\n      var compareTexts_2 = container.get('children');\n      [0, 1].forEach(function (i) {\n        var compareText = compareTexts_2[i];\n\n        if (compareText) {\n          var attrs = {\n            opacity: 1\n          };\n          duration ? compareText.animate(attrs, duration) : compareText.attr(attrs);\n        }\n      });\n    }\n\n    duration && callback && setTimeout(callback, duration);\n  };\n\n  FunnelLayer.prototype.fadeOutCompareTexts = function (duration, callback) {\n    var container = this._findCompareTextContainer();\n\n    if (container) {\n      var compareTexts_3 = container.get('children');\n      [0, 1].forEach(function (i) {\n        var compareText = compareTexts_3[i];\n\n        if (compareText) {\n          var attrs = {\n            opacity: 0\n          };\n          duration ? compareText.animate(attrs, duration) : compareText.attr(attrs);\n        }\n      });\n    }\n\n    duration && callback && setTimeout(callback, duration);\n  };\n\n  FunnelLayer.prototype.refreshCompareTexts = function (callback) {\n    var _this = this;\n\n    var props = this.options;\n\n    if (props.animation !== false) {\n      var _a = this._calcRefreshFadeDurations(),\n          fadeInDuration_3 = _a.fadeInDuration,\n          fadeOutDuration = _a.fadeOutDuration;\n\n      this._shouldResetCompareTexts = false;\n      this.fadeOutCompareTexts(fadeOutDuration, function () {\n        _this._shouldResetCompareTexts = true;\n\n        _this.resetCompareTexts();\n\n        _this.fadeInCompareTexts(fadeInDuration_3, callback);\n      });\n    }\n  };\n\n  FunnelLayer.prototype._findCompareTextContainer = function (createIfNotFound) {\n    if (createIfNotFound === void 0) {\n      createIfNotFound = false;\n    }\n\n    var middleGroup = this.view.middleGroup;\n    var compareTextContainer = middleGroup.get('compareTextContainer');\n\n    if (!compareTextContainer && createIfNotFound) {\n      compareTextContainer = middleGroup.addGroup();\n      middleGroup.set('compareTextContainer', compareTextContainer);\n    }\n\n    return compareTextContainer;\n  };\n\n  FunnelLayer.prototype._eachShape = function (fn) {\n    var _a;\n\n    var data = this._findCheckedData(this.getData());\n\n    var dataLen = data.length;\n    var index = 0;\n    var datumUpper;\n    (_a = this._getGeometry()) === null || _a === void 0 ? void 0 : _a.elements.forEach(function (element, elementIndex) {\n      var shape = element.shape;\n      var datumLower = data[index];\n\n      if (index < dataLen) {\n        fn(shape, index, datumLower, datumUpper, elementIndex);\n      }\n\n      datumUpper = datumLower;\n      index++;\n    });\n  };\n\n  FunnelLayer.prototype._getGeometry = function () {\n    return this.view.geometries[0];\n  };\n\n  FunnelLayer.prototype._getAdjustedTextFillByShape = function (shape) {\n    var shapeColor = shape.attr('fill');\n    var shapeOpacity = shape.attr('opacity') ? shape.attr('opacity') : 1;\n    var rgb = rgb2arr(shapeColor);\n    var gray = Math.round(rgb[0] * 0.299 + rgb[1] * 0.587 + rgb[2] * 0.114) / shapeOpacity;\n    var colorBand = [{\n      from: 0,\n      to: 85,\n      color: 'white'\n    }, {\n      from: 85,\n      to: 170,\n      color: '#F6F6F6'\n    }, {\n      from: 170,\n      to: 255,\n      color: 'black'\n    }];\n    var reflect = mappingColor(colorBand, gray);\n    return reflect;\n  };\n\n  FunnelLayer.prototype._genCustomFieldForDynamicHeight = function (data) {\n    var props = this.options;\n    var total = data.reduce(function (total, datum) {\n      return total + datum[props.yField];\n    }, 0);\n    var ratioUpper = 1;\n    data.forEach(function (datum, index) {\n      var value = datum[props.yField];\n      var share = value / total;\n      var ratioLower = ratioUpper - share;\n      datum['__custom__'] = {\n        datumIndex: index,\n        dataLength: data.length,\n        ratioUpper: ratioUpper,\n        ratioLower: ratioLower,\n        reverse: props.transpose\n      };\n      ratioUpper = ratioLower;\n    });\n  };\n\n  FunnelLayer.prototype._findCheckedDataByMouseDownLegendItem = function (legendItem) {\n    var flags = legendItem.get('parent').get('children').map(function (legendItem) {\n      return !legendItem.get('unchecked');\n    });\n    var data = this.getData().filter(function (datum, index) {\n      return flags[index];\n    });\n    return data;\n  };\n\n  FunnelLayer.prototype._findCheckedDataInNewData = function (newData) {\n    var props = this.options; // @ts-ignore\n\n    var legendContainer = this.view.getController('legend').container;\n    var uncheckedXValues = legendContainer.findAll(function (shape) {\n      return shape.get('name') == 'legend-item';\n    }).filter(function (legendItem) {\n      return legendItem.get('unchecked');\n    }).map(function (legendItem) {\n      return legendItem.get('id').replace('-legend-item-', '');\n    });\n    var checkedData = newData.filter(function (datum) {\n      return !contains(uncheckedXValues, datum[props.xField]);\n    });\n    return checkedData;\n  };\n\n  FunnelLayer.prototype._findCheckedData = function (data) {\n    var _a;\n\n    var props = this.options;\n\n    if ((_a = props.legend) === null || _a === void 0 ? void 0 : _a.visible) {\n      // @ts-ignore\n      var legendContainer = this.view.getController('legend').container;\n      var checkedXValues_1 = legendContainer.findAll(function (shape) {\n        return shape.get('name') == 'legend-item';\n      }).filter(function (legendItem) {\n        return !legendItem.get('unchecked');\n      }).map(function (legendItem) {\n        return legendItem.get('id').replace('-legend-item-', '');\n      });\n      var checkedData = data.filter(function (datum) {\n        return contains(checkedXValues_1, datum[props.xField]);\n      });\n      return checkedData;\n    } else {\n      return this.processData(props.data);\n    }\n  };\n\n  FunnelLayer.prototype._reduceDataForCompare = function (data) {\n    var props = this.options;\n    var compareValueFirstVisited;\n    var yValuesMax = [-Infinity, -Infinity];\n    data = data.reduce(function (newData, datum) {\n      var _a;\n\n      var xValue = datum[props.xField];\n      var yValue = datum[props.yField];\n      var compareValue = datum[props.compareField];\n      if (!compareValueFirstVisited) compareValueFirstVisited = compareValue;\n      var newDatum = newData.find(function (newDatum) {\n        return newDatum[props.xField] == xValue;\n      });\n\n      if (!newDatum) {\n        newDatum = (_a = {}, _a[props.xField] = xValue, _a[props.yField] = 0, _a['__compare__'] = {\n          compareValues: [],\n          yValues: [],\n          yValuesMax: [],\n          yValuesNext: undefined,\n          transpose: props.transpose\n        }, _a);\n        newData.push(newDatum);\n      }\n\n      var idx = compareValue == compareValueFirstVisited ? 0 : 1;\n      newDatum['__compare__'].yValues[idx] = yValue;\n\n      if (yValuesMax[idx] < yValue) {\n        yValuesMax[idx] = yValue;\n      }\n\n      newDatum['__compare__'].compareValues[idx] = compareValue;\n      return newData;\n    }, []);\n    data.forEach(function (datum, index) {\n      datum[props.yField] = get(datum, '__compare__.yValues', []).reduce(function (yTotal, yValue) {\n        return yTotal += yValue;\n      }, 0);\n      set(datum, '__compare__.yValuesMax', yValuesMax);\n      set(datum, '__compare__.yValuesNext', get(data, index + 1 + \".__compare__.yValues\"));\n    });\n    return data;\n  };\n\n  FunnelLayer.prototype._updateDataForCompare = function (data) {\n    var yValuesMax = [-Infinity, -Infinity];\n    data.forEach(function (datum) {\n      var yValues = get(datum, '__compare__.yValues');\n      [0, 1].forEach(function (i) {\n        if (yValues[i] > yValuesMax[i]) {\n          yValuesMax[i] = yValues[i];\n        }\n      });\n    });\n    data.forEach(function (datum, index) {\n      set(datum, '__compare__.yValuesMax', yValuesMax);\n      set(datum, '__compare__.yValuesNext', get(data, index + 1 + \".__compare__.yValues\"));\n    });\n  };\n\n  return FunnelLayer;\n}(ViewLayer);\n\nexport default FunnelLayer;\nregisterPlotType('funnel', FunnelLayer);","map":{"version":3,"sources":["../../../src/plots/funnel/layer.ts"],"names":[],"mappings":"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","sourcesContent":["import { deepMix, contains, isFunction, get, findIndex, isEqual, each, set, isArray, assign } from '@antv/util';\nimport { createDom, modifyCSS } from '@antv/dom-util';\nimport {\n  IGroup,\n  IShape,\n  Element,\n  HtmlTooltipTheme,\n  TooltipCssConst,\n  DEFAULT_ANIMATE_CFG,\n  _ORIGIN,\n} from '../../dependents';\nimport { registerPlotType } from '../../base/global';\nimport { LayerConfig } from '../../base/layer';\nimport ViewLayer, { ViewConfig } from '../../base/view-layer';\nimport { getGeom } from '../../geoms/factory';\nimport { ElementOption, DataItem, LineStyle, TextStyle } from '../../interface/config';\nimport './theme';\nimport './geometry/shape/funnel-basic-rect';\nimport './geometry/shape/funnel-dynamic-rect';\nimport './animation/funnel-scale-in-x';\nimport './animation/funnel-scale-in-y';\nimport { mappingColor, rgb2arr } from '../../util/color';\n\nfunction lerp(a, b, factor) {\n  return (1 - factor) * a + factor * b;\n}\n\nconst G2_GEOM_MAP = {\n  column: 'interval',\n};\n\nconst PLOT_GEOM_MAP = {\n  interval: 'funnel',\n};\n\nexport interface FunnelStyle {\n  [k: string]: any;\n}\n\nexport interface FunnelViewConfig extends ViewConfig {\n  funnelStyle?: FunnelStyle | ((...args: any[]) => FunnelStyle);\n  percentage?: Partial<{\n    visible: boolean;\n    line: Partial<{\n      visible: boolean;\n      style: LineStyle;\n    }>;\n    text: Partial<{\n      visible: boolean;\n      content: string;\n      style: TextStyle;\n    }>;\n    value: Partial<{\n      visible: boolean;\n      style: TextStyle;\n      formatter: (yValueUpper: any, yValueLower: any) => string;\n    }>;\n    offsetX: number;\n    offsetY: number;\n    spacing: number;\n  }>;\n  transpose?: boolean;\n  dynamicHeight?: boolean;\n  compareField?: string;\n  compareText?: Partial<{\n    visible: boolean;\n    offsetX: number;\n    offsetY: number;\n    style: TextStyle;\n  }>;\n}\n\nexport interface FunnelLayerConfig extends FunnelViewConfig, LayerConfig {}\n\nexport default class FunnelLayer<T extends FunnelLayerConfig = FunnelLayerConfig> extends ViewLayer<T> {\n  public static getDefaultOptions(props?: Partial<FunnelViewConfig>): Partial<FunnelViewConfig> {\n    const cfg: Partial<FunnelViewConfig> = {\n      label: {\n        visible: true,\n        adjustColor: true,\n      },\n      percentage: {\n        visible: true,\n        offsetX: props.transpose ? 0 : 40,\n        offsetY: props.transpose ? 40 : 0,\n        spacing: 4,\n        line: {\n          visible: true,\n          style: {\n            lineWidth: 1,\n            stroke: 'rgba(0, 0, 0, 0.15)',\n          },\n        },\n        text: {\n          content: '转化率',\n          style: {\n            fill: 'rgba(0, 0, 0, 0.65)',\n          },\n        },\n        value: {\n          visible: true,\n          style: {\n            fill: 'black',\n          },\n          formatter: (yValueUpper, yValueLower) => `${((100 * yValueLower) / yValueUpper).toFixed(2)}%`,\n        },\n      },\n      tooltip: {\n        visible: true,\n        shared: true,\n        showTitle: false,\n        showCrosshairs: false,\n        showMarkers: false,\n      },\n      animation: deepMix({}, DEFAULT_ANIMATE_CFG, {\n        appear: {\n          duration: 800,\n        },\n      }),\n      dynamicHeight: false,\n      compareText: {\n        visible: true,\n        offsetX: -16,\n        offsetY: -16,\n        style: {\n          fill: 'black',\n        },\n      },\n      legend: {\n        position: 'bottom-center',\n      },\n      interactions: [{ type: 'tooltip' }, { type: 'legend-filter' }],\n    };\n    return deepMix({}, super.getDefaultOptions(), cfg);\n  }\n\n  public readonly type: string = 'funnel';\n  public funnel: any;\n\n  private _animationAppearTimeoutHandler: any;\n  private _shouldResetPercentages: boolean = true;\n  private _shouldResetLabels: boolean = true;\n  private _shouldResetCompareTexts: boolean = true;\n  private _legendsListenerAttached: boolean = false;\n\n  constructor(props: T) {\n    super(props);\n    this.adjustProps(this.options);\n\n    if (props.dynamicHeight) {\n      this._genCustomFieldForDynamicHeight(this.getData());\n    }\n\n    if (props.compareField) {\n      this.options.data = this._reduceDataForCompare(this.getData());\n    }\n  }\n\n  public getColorScale() {\n    const { xField } = this.options;\n    if (xField) {\n      return this.view.getScaleByField(xField);\n    }\n  }\n\n  protected coord() {\n    const props = this.options;\n    const coordConfig = {\n      type: 'rect',\n      actions: props.transpose\n        ? props.dynamicHeight\n          ? [['transpose'], ['scale', 1, -1]]\n          : [['scale', 1, -1]]\n        : props.dynamicHeight\n        ? []\n        : [['transpose'], ['scale', 1, -1]],\n    };\n    // @ts-ignore\n    this.setConfig('coordinate', coordConfig);\n  }\n\n  protected axis(): void {\n    this.setConfig('axes', false);\n  }\n\n  protected adjustFunnel(funnel: ElementOption) {\n    const props = this.options;\n\n    // @ts-ignore\n    funnel.shape = props.dynamicHeight ? 'funnel-dynamic-rect' : 'funnel-basic-rect';\n\n    funnel.color = {\n      fields: [props.xField],\n      values: props.color && (Array.isArray(props.color) ? props.color : [props.color]),\n    };\n\n    if (isFunction(props.funnelStyle)) {\n      // @ts-ignore\n      funnel.style = { callback: props.funnelStyle };\n    } else {\n      // @ts-ignore\n      funnel.style = { cfg: props.funnelStyle };\n    }\n\n    funnel.adjust = [\n      {\n        type: props.dynamicHeight ? 'stack' : 'symmetric',\n      },\n    ];\n  }\n\n  protected tooltip() {\n    const props = this.options;\n\n    if (props.compareField) {\n      deepMix(props.tooltip, {\n        htmlContent: (title, items) => {\n          let clss, el, color, elMarker;\n\n          clss = TooltipCssConst.CONTAINER_CLASS;\n          el = createDom(`<div class=\"${clss}\"></div>`);\n          modifyCSS(el, HtmlTooltipTheme[clss]);\n          const elRoot = el;\n\n          if (title) {\n            clss = TooltipCssConst.TITLE_CLASS;\n            el = createDom(`<div class=\"${clss}\"></div>`);\n            modifyCSS(el, HtmlTooltipTheme[clss]);\n            elRoot.appendChild(el);\n            const elTitle = el;\n\n            clss = TooltipCssConst.MARKER_CLASS;\n            el = createDom(`<span class=\"${clss}\"></span>`);\n            modifyCSS(el, HtmlTooltipTheme[clss]);\n            modifyCSS(el, { width: '10px', height: '10px' });\n            elTitle.appendChild(el);\n            elMarker = el;\n\n            el = createDom(`<span>${title}</span>`);\n            elTitle.appendChild(el);\n          }\n\n          if (items) {\n            clss = TooltipCssConst.LIST_CLASS;\n            el = createDom(`<ul class=\"${clss}\"></ul>`);\n            modifyCSS(el, HtmlTooltipTheme[clss]);\n            elRoot.appendChild(el);\n            const elList = el;\n\n            items\n              .reduce((pairs, item) => {\n                if (!color) {\n                  color = item.color;\n                }\n                const compareValues = get(item, 'point._origin.__compare__.compareValues');\n                const yValues = get(item, 'point._origin.__compare__.yValues');\n                yValues.forEach((yValue, i) => pairs.push([compareValues[i], yValue]));\n                return pairs;\n              }, [])\n              .forEach(([compareValue, yValue], index) => {\n                clss = TooltipCssConst.LIST_ITEM_CLASS;\n                el = createDom(`<li class=\"${clss}\" data-index=${index}></li>`);\n                modifyCSS(el, HtmlTooltipTheme[clss]);\n                elList.appendChild(el);\n                const elListItem = el;\n\n                clss = TooltipCssConst.NAME_CLASS;\n                el = createDom(`<span class=\"${clss}\">${compareValue}</span>`);\n                modifyCSS(el, HtmlTooltipTheme[clss]);\n                elListItem.appendChild(el);\n\n                clss = TooltipCssConst.VALUE_CLASS;\n                el = createDom(`<span class=\"${clss}\">${yValue}</span>`);\n                modifyCSS(el, HtmlTooltipTheme[clss]);\n                elListItem.appendChild(el);\n              });\n          }\n\n          if (color && elMarker) {\n            modifyCSS(elMarker, { backgroundColor: color });\n          }\n\n          return elRoot;\n        },\n      });\n    }\n\n    super.tooltip();\n  }\n\n  protected addGeometry() {\n    const props = this.options;\n    const funnel = getGeom('interval', 'main', {\n      positionFields: [props.dynamicHeight ? '_' : props.xField, props.yField],\n      plot: this,\n    });\n    this.adjustFunnel(funnel);\n    this.funnel = funnel;\n    this.setConfig('geometry', funnel);\n    if (!props.compareField) {\n      this.geometryTooltip();\n    }\n  }\n\n  protected geometryTooltip() {\n    this.funnel.tooltip = {};\n    const tooltipOptions = this.options.tooltip;\n    if (tooltipOptions.fields) {\n      this.funnel.tooltip.fields = tooltipOptions.fields;\n    }\n    if (tooltipOptions.formatter) {\n      this.funnel.tooltip.callback = tooltipOptions.formatter;\n      if (!tooltipOptions.fields) {\n        this.funnel.tooltip.fields = [this.options.xField, this.options.yField];\n      }\n    }\n  }\n\n  protected animation() {\n    super.animation();\n    const props = this.options;\n    if (props.animation === false) {\n      /** 关闭动画 */\n      this.funnel.animate = false;\n    } else {\n      const data = this.getData();\n      const appearDuration = get(props, 'animation.appear.duration');\n      const appearDurationEach = appearDuration / (data.length || 1);\n\n      if (this._animationAppearTimeoutHandler) {\n        clearTimeout(this._animationAppearTimeoutHandler);\n        delete this._animationAppearTimeoutHandler;\n      }\n      this._animationAppearTimeoutHandler = setTimeout(() => {\n        this.fadeInPercentages(appearDurationEach);\n        if (props.compareField) {\n          this.fadeInCompareTexts(appearDurationEach);\n        }\n        delete this._animationAppearTimeoutHandler;\n      }, appearDuration);\n\n      this.funnel.animate = deepMix({}, props.animation, {\n        appear: {\n          animation: props.transpose ? 'funnelScaleInX' : 'funnelScaleInY',\n          duration: appearDurationEach,\n          delay: (datum) => findIndex(data, (o) => isEqual(o, datum)) * appearDurationEach,\n          callback: (shape) => {\n            this.fadeInLabels(shape, 0.5 * appearDurationEach);\n          },\n        },\n        enter: {\n          animation: 'fade-in',\n        },\n      });\n    }\n  }\n\n  public afterRender() {\n    const props = this.options;\n    this.resetLabels();\n    this.resetPercentages();\n    if (props.compareField) {\n      this.resetCompareTexts();\n    }\n\n    if (props.padding == 'auto') {\n      const percentageContainer = this._findPercentageContainer();\n      if (percentageContainer) {\n        this.paddingController.registerPadding(percentageContainer, 'inner', true);\n      }\n      const compareTextContainer = this._findCompareTextContainer();\n      if (compareTextContainer) {\n        this.paddingController.registerPadding(compareTextContainer, 'inner', true);\n      }\n    }\n\n    super.afterRender();\n\n    if (props.animation === false) {\n      this.fadeInLabels();\n      this.fadeInPercentages();\n      if (props.compareField) {\n        this.fadeInCompareTexts();\n      }\n    }\n\n    if (!this._legendsListenerAttached) {\n      this._legendsListenerAttached = true;\n      // @ts-ignore\n      const legendContainer = this.view.getController('legend').container;\n      legendContainer.on('mousedown', this._onLegendContainerMouseDown);\n    }\n  }\n\n  public updateConfig(cfg: Partial<T>): void {\n    cfg = this.adjustProps(cfg);\n    super.updateConfig(cfg);\n    this._legendsListenerAttached = false;\n  }\n\n  public changeData(data: DataItem[]): void {\n    const props = this.options;\n\n    if (props.animation !== false) {\n      this._shouldResetPercentages = false;\n      this._shouldResetLabels = false;\n    }\n\n    if (props.dynamicHeight) {\n      const checkedData = this._findCheckedDataInNewData(data);\n      this._genCustomFieldForDynamicHeight(checkedData);\n    }\n\n    if (props.compareField) {\n      data = this._reduceDataForCompare(data);\n      const checkedData = this._findCheckedDataInNewData(data);\n      this._updateDataForCompare(checkedData);\n    }\n\n    super.changeData(data);\n\n    this.refreshPercentages();\n    this.refreshLabels();\n    if (props.compareField) {\n      this.fadeInCompareTexts();\n    }\n  }\n\n  protected geometryParser(dim, type) {\n    if (dim === 'g2') {\n      return G2_GEOM_MAP[type];\n    }\n    return PLOT_GEOM_MAP[type];\n  }\n\n  protected adjustProps(props: Partial<T>) {\n    if (props.compareField) {\n      props.dynamicHeight = false;\n    }\n\n    if (props.dynamicHeight) {\n      set(props, `meta.${props.yField}.nice`, false);\n      set(props, 'tooltip.shared', false);\n    }\n    return props;\n  }\n\n  protected resetPercentages() {\n    if (!this._shouldResetPercentages) return;\n\n    const props = this.options;\n    const {\n      offsetX,\n      offsetY,\n      spacing,\n      line: percentageLine = {},\n      text: percentageText = {},\n      value: percentageValue = {},\n    } = props.percentage || {};\n\n    const adjustTimestamp = Date.now();\n    const container = this._findPercentageContainer(true);\n\n    this._eachShape((shape, index, datumLower, datumUpper) => {\n      if (index > 0) {\n        const { minX, maxX, maxY, minY } = shape.getBBox();\n        const x1 = props.transpose ? minX : maxX;\n        const y1 = props.transpose ? (props.compareField ? maxY : minY) : minY;\n\n        const { line, text, value } = this._findPercentageMembersInContainerByIndex(container, index, true);\n\n        const eachProcs = [\n          (x, y, line, text, value) => {\n            if (line) {\n              line.attr(\n                deepMix({}, percentageLine.style, {\n                  x1: x,\n                  y1: y,\n                  x2: props.transpose ? x + offsetX : x - offsetX,\n                  y2: props.transpose ? y - offsetY : y + offsetY,\n                  opacity: 0,\n                })\n              );\n              line.set('adjustTimestamp', adjustTimestamp);\n            }\n\n            let textWidth = 0;\n            let valueWidth = 0;\n\n            const textProc = () => {\n              if (text) {\n                text.attr(\n                  deepMix({}, percentageText.style, {\n                    x: props.transpose ? x + offsetX : x - offsetX - spacing - valueWidth - spacing,\n                    y: props.transpose ? y - offsetY - spacing : y + offsetY,\n                    opacity: 0,\n                    text: percentageText.content,\n                    textAlign: props.transpose ? 'left' : 'right',\n                    textBaseline: props.transpose ? 'bottom' : 'middle',\n                  })\n                );\n                text.set('adjustTimestamp', adjustTimestamp);\n                textWidth = text.getBBox().width;\n              }\n            };\n\n            const valueProc = () => {\n              if (value) {\n                value.attr(\n                  deepMix({}, percentageValue.style, {\n                    x: props.transpose ? x + offsetX + textWidth + spacing : x - offsetX - spacing,\n                    y: props.transpose ? y - offsetY - spacing : y + offsetY,\n                    opacity: 0,\n                    text: isFunction(percentageValue.formatter)\n                      ? props.compareField\n                        ? percentageValue.formatter(\n                            get(datumUpper, '__compare__.yValues.0'),\n                            get(datumLower, '__compare__.yValues.0')\n                          )\n                        : percentageValue.formatter(datumUpper[props.yField], datumLower[props.yField])\n                      : '',\n                    textAlign: props.transpose ? 'left' : 'right',\n                    textBaseline: props.transpose ? 'bottom' : 'middle',\n                  })\n                );\n                value.set('adjustTimestamp', adjustTimestamp);\n                valueWidth = value.getBBox().width;\n              }\n            };\n\n            if (props.transpose) {\n              textProc();\n              valueProc();\n            } else {\n              valueProc();\n              textProc();\n            }\n          },\n          (x, y, line, text, value) => {\n            if (line) {\n              line.attr(\n                deepMix({}, percentageLine.style, {\n                  x1: x,\n                  y1: y,\n                  x2: x + offsetX,\n                  y2: props.transpose ? (props.compareField ? y + offsetY : y - offsetY) : y + offsetY,\n                  opacity: 0,\n                })\n              );\n              line.set('adjustTimestamp', adjustTimestamp);\n            }\n\n            let textWidth = 0;\n            if (text) {\n              text.attr(\n                deepMix({}, percentageText.style, {\n                  x: props.transpose ? x + offsetX : x + offsetX + spacing,\n                  y: props.transpose\n                    ? props.compareField\n                      ? y + offsetY + spacing\n                      : y - offsetY - spacing\n                    : y + offsetY,\n                  opacity: 0,\n                  text: percentageText.content,\n                  textAlign: 'left',\n                  textBaseline: props.transpose ? (props.compareField ? 'top' : 'bottom') : 'middle',\n                })\n              );\n              text.set('adjustTimestamp', adjustTimestamp);\n              textWidth = text.getBBox().width;\n            }\n\n            if (value) {\n              value.attr(\n                deepMix({}, percentageValue.style, {\n                  x: props.transpose ? x + offsetX + textWidth + spacing : x + offsetX + spacing + textWidth + spacing,\n                  y: props.transpose\n                    ? props.compareField\n                      ? y + offsetY + spacing\n                      : y - offsetY - spacing\n                    : y + offsetY,\n                  opacity: 0,\n                  text: isFunction(percentageValue.formatter)\n                    ? props.compareField\n                      ? percentageValue.formatter(\n                          get(datumUpper, `__compare__.yValues.1`),\n                          get(datumLower, `__compare__.yValues.1`)\n                        )\n                      : percentageValue.formatter(datumUpper[props.yField], datumLower[props.yField])\n                    : '',\n                  textAlign: 'left',\n                  textBaseline: props.transpose ? (props.compareField ? 'top' : 'bottom') : 'middle',\n                })\n              );\n              value.set('adjustTimestamp', adjustTimestamp);\n            }\n          },\n        ];\n\n        if (props.compareField) {\n          const [x0, y0] = [minX, minY];\n          [\n            [x0, y0],\n            [x1, y1],\n          ].forEach(([x, y], i) => eachProcs[i](x, y, line && line[i], text && text[i], value && value[i]));\n        } else {\n          eachProcs[1](x1, y1, line, text, value);\n        }\n      }\n      datumUpper = datumLower;\n      index++;\n    });\n\n    container.get('children').forEach((child) => {\n      if (child.get('adjustTimestamp') != adjustTimestamp) {\n        child.attr({ opacity: 0 });\n        container.set(child.get('id'), null);\n        setTimeout(() => child.remove(), 0);\n      }\n    });\n  }\n\n  protected fadeInPercentages(duration?, callback?) {\n    const props = this.options;\n    const container = this._findPercentageContainer();\n\n    const eachProc = (i?) => {\n      const lastBBox = { minX: Infinity, maxX: -Infinity, minY: Infinity, maxY: -Infinity };\n      this._eachShape((shape, index) => {\n        const members = this._findPercentageMembersInContainerByIndex(container, index);\n\n        const currBBox = { minX: Infinity, maxX: -Infinity, minY: Infinity, maxY: -Infinity };\n        const eachCalc = (member) => {\n          if (member && member.get('type') == 'text') {\n            const { minX, maxX, minY, maxY } = member.getBBox();\n            if (minX < currBBox.minX) currBBox.minX = minX;\n            if (maxX > currBBox.maxX) currBBox.maxX = maxX;\n            if (minY < currBBox.minY) currBBox.minY = minY;\n            if (maxY > currBBox.maxY) currBBox.maxY = maxY;\n          }\n        };\n        each(members, (member) => (isArray(member) ? eachCalc(member[i]) : eachCalc(member)));\n\n        if (\n          currBBox.minX > lastBBox.maxX ||\n          currBBox.maxX < lastBBox.minX ||\n          currBBox.minY > lastBBox.maxY ||\n          currBBox.maxY < lastBBox.minY\n        ) {\n          const eachShow = (member) => {\n            if (member) {\n              const attrs = {\n                opacity: 1,\n              };\n              duration ? member.animate(attrs, duration) : member.attr(attrs);\n            }\n          };\n          each(members, (member) => (isArray(member) ? eachShow(member[i]) : eachShow(member)));\n          assign(lastBBox, currBBox);\n        }\n      });\n    };\n\n    props.compareField ? [0, 1].forEach(eachProc) : eachProc();\n\n    duration && callback && setTimeout(callback, duration);\n  }\n\n  protected fadeOutPercentages(duration?, callback?) {\n    const container = this._findPercentageContainer();\n\n    this._eachShape((shape, index) => {\n      const members = this._findPercentageMembersInContainerByIndex(container, index);\n\n      const eachProc = (member) => {\n        if (member) {\n          const attrs = {\n            opacity: 0,\n          };\n          duration ? member.animate(attrs, duration) : member.attr(attrs);\n        }\n      };\n      each(members, (member) => (isArray(member) ? member.forEach(eachProc) : eachProc(member)));\n    });\n\n    duration && callback && setTimeout(callback, duration);\n  }\n\n  protected refreshPercentages(callback?) {\n    const props = this.options;\n\n    if (props.animation !== false) {\n      const { fadeOutDuration, fadeInDuration } = this._calcRefreshFadeDurations();\n\n      this._shouldResetPercentages = false;\n      this.fadeOutPercentages(fadeOutDuration, () => {\n        this._shouldResetPercentages = true;\n        this.resetPercentages();\n        this.fadeInPercentages(fadeInDuration, callback);\n      });\n    }\n  }\n\n  private _findPercentageContainer(createIfNotFound: boolean = false): IGroup | undefined {\n    const { middleGroup } = this.view;\n\n    let percentageContainer = middleGroup.get('percentageContainer');\n    if (!percentageContainer && createIfNotFound) {\n      percentageContainer = middleGroup.addGroup();\n      middleGroup.set('percentageContainer', percentageContainer);\n    }\n\n    return percentageContainer;\n  }\n\n  private _findPercentageMembersInContainerByIndex(\n    container: IGroup,\n    index: number,\n    createIfNotFound: boolean = false\n  ) {\n    const props = this.options;\n    const { visible, line: percentageLine = {}, text: percentageText = {}, value: percentageValue = {} } =\n      props.percentage || {};\n\n    const members = {\n      line: undefined,\n      text: undefined,\n      value: undefined,\n    };\n\n    if (visible === false || !container) {\n      return members;\n    }\n\n    if (percentageLine.visible !== false) {\n      const find = (i) => {\n        const lineId = `_percentage-line-${index}-${i}`;\n        let line = container.get(lineId);\n        if (!line && createIfNotFound) {\n          line = container.addShape({ id: lineId, type: 'line', attrs: {} });\n          container.set(lineId, line);\n        }\n        return line;\n      };\n      const line = props.compareField ? [0, 1].map(find) : find(0);\n      members.line = line;\n    }\n\n    if (percentageText.visible !== false) {\n      const find = (i) => {\n        const textId = `_percentage-text-${index}-${i}`;\n        let text = container.get(textId);\n        if (!text && createIfNotFound) {\n          text = container.addShape({ id: textId, type: 'text', attrs: {} });\n          container.set(textId, text);\n        }\n        return text;\n      };\n      const text = props.compareField ? [0, 1].map(find) : find(0);\n      members.text = text;\n    }\n\n    if (percentageValue.visible !== false) {\n      const find = (i) => {\n        const valueId = `_percentage-value-${index}-${i}`;\n        let value = container.get(valueId);\n        if (!value && createIfNotFound) {\n          value = container.addShape({ id: valueId, type: 'text', attrs: {} });\n          container.set(valueId, value);\n        }\n        return value;\n      };\n      const value = props.compareField ? [0, 1].map(find) : find(0);\n      members.value = value;\n    }\n\n    return members;\n  }\n\n  private _calcRefreshFadeDurations() {\n    const props = this.options;\n\n    const updateDuration = get(props, 'animation.update.duration');\n    const enterDuration = get(props, 'animation.enter.duration');\n    const fadeInDuration = Math.min(enterDuration, updateDuration) * 0.6;\n    const fadeOutDuration = Math.max(enterDuration, updateDuration) * 1.2;\n\n    return { fadeInDuration, fadeOutDuration };\n  }\n\n  protected resetLabels() {\n    if (!this._shouldResetLabels) return;\n    const props = this.options;\n    const { xField, yField } = props;\n\n    const adjustTimestamp = Date.now();\n    const { labelsContainer } = this._getGeometry();\n\n    const labelProps = props.label || {};\n    const labelStyle = deepMix(\n      {\n        ...this.theme.label,\n      },\n      props.label.style,\n      {\n        opacity: 0,\n        textAlign: 'center',\n        textBaseline: 'middle',\n      }\n    );\n\n    let datumTop;\n    this._eachShape((shape, index, datum, elementIndex) => {\n      const element: Element = shape.get('element');\n      if (index == 0) {\n        datumTop = datum;\n      }\n\n      const { minX, maxX, minY, maxY } = shape.getBBox();\n      const xValue = datum[xField];\n      const yValue = datum[yField];\n\n      if (labelProps.adjustColor) {\n        labelStyle.fill = this._getAdjustedTextFillByShape(shape);\n      }\n\n      const compare = datum.__compare__;\n      let content;\n      const formatArgs = {\n        [_ORIGIN]: datum,\n        element,\n        elementIndex,\n        mappingDatum: [].concat(element.getModel().mappingData)[0],\n        mappingDatumIndex: 0,\n      };\n      if (labelProps.formatter) {\n        content = labelProps.formatter(xValue, formatArgs, index, yValue, datumTop[yField]);\n      } else {\n        if (compare) {\n          content = [0, 1].map(() => `${yValue}`).join(props.transpose ? '\\n\\n' : '    ');\n        } else {\n          content = `${xValue} ${yValue}`;\n        }\n      }\n      const label = this._findLabelInContainerByIndex(labelsContainer, index, true);\n      const ratio = compare ? compare.yValues[0] / (compare.yValues[0] + compare.yValues[1]) : 0.5;\n      label.attr({\n        ...labelStyle,\n        x: lerp(minX, maxX, !props.transpose ? ratio : 0.5),\n        y: lerp(minY, maxY, props.transpose ? ratio : 0.5),\n        text: content,\n      });\n\n      label.set('adjustTimestamp', adjustTimestamp);\n    });\n\n    labelsContainer.get('children').forEach((label) => {\n      if (label.get('adjustTimestamp') != adjustTimestamp) {\n        label.attr({ opacity: 0 });\n        labelsContainer.set(label.get('id'), null);\n        setTimeout(() => label.remove());\n      }\n    });\n  }\n\n  protected fadeInLabels(targetShape?, duration?, callback?) {\n    const { labelsContainer } = this._getGeometry();\n    this._eachShape((shape, index) => {\n      if (!targetShape || targetShape == shape) {\n        const label = this._findLabelInContainerByIndex(labelsContainer, index);\n        if (label) {\n          const shapeBBox = shape.getBBox();\n          const labelBBox = label.getBBox();\n          if (\n            labelBBox.minX >= shapeBBox.minX &&\n            labelBBox.maxX <= shapeBBox.maxX &&\n            labelBBox.minY >= shapeBBox.minY &&\n            labelBBox.maxY <= shapeBBox.maxY\n          ) {\n            const attrs = {\n              opacity: 1,\n            };\n            duration ? label.animate(attrs, duration) : label.attr(attrs);\n          }\n        }\n      }\n    });\n\n    duration && callback && setTimeout(callback, duration);\n  }\n\n  protected fadeOutLabels(targetShape?, duration?, callback?) {\n    const { labelsContainer } = this._getGeometry();\n    this._eachShape((shape, index) => {\n      if (!targetShape || targetShape == shape) {\n        const label = this._findLabelInContainerByIndex(labelsContainer, index);\n        if (label) {\n          const attrs = {\n            opacity: 0,\n          };\n          duration ? label.animate(attrs, duration) : label.attr(attrs);\n        }\n      }\n    });\n\n    duration && callback && setTimeout(callback, duration);\n  }\n\n  protected refreshLabels(callback?) {\n    const props = this.options;\n\n    if (props.animation !== false) {\n      const { fadeOutDuration, fadeInDuration } = this._calcRefreshFadeDurations();\n\n      this._shouldResetLabels = false;\n      this.fadeOutLabels(null, fadeOutDuration, () => {\n        this._shouldResetLabels = true;\n        this.resetLabels();\n        this.fadeInLabels(null, fadeInDuration, callback);\n      });\n    }\n  }\n\n  private _findLabelInContainerByIndex(container: IGroup, index: number, createIfNotFound: boolean = false) {\n    const props = this.options;\n\n    let label;\n\n    if (props.label?.visible === false) {\n      return label;\n    }\n\n    const labelId = `_label-${index}`;\n    label = container.get(labelId);\n    if (!label && createIfNotFound) {\n      label = container.addShape({\n        id: labelId,\n        type: 'text',\n        attrs: {},\n      });\n      container.set(labelId, label);\n    }\n\n    return label;\n  }\n\n  protected resetCompareTexts() {\n    if (!this._shouldResetCompareTexts) return;\n\n    const props = this.options;\n\n    let shapeParentBBox;\n    let compare;\n    this._eachShape((shape, index, datum) => {\n      if (index == 0) {\n        shapeParentBBox = shape.get('parent').getBBox();\n        compare = get(datum, '__compare__');\n      }\n    });\n\n    if (shapeParentBBox && compare && get(props, 'compareText.visible') !== false) {\n      const container = this._findCompareTextContainer(true);\n      const { yValuesMax, compareValues } = compare;\n      const { minX, maxX, minY, maxY } = shapeParentBBox;\n\n      const compareTexts = container.get('children');\n      [0, 1].forEach((i) => {\n        let compareText = compareTexts[i];\n        if (!compareText) {\n          compareText = container.addShape({ type: 'text' });\n        }\n        compareText.attr(\n          deepMix({}, get(props, 'compareText.style'), {\n            text: props.transpose ? compareValues[i] : i ? `  ${compareValues[i]}` : `${compareValues[i]}  `,\n            x: props.transpose\n              ? minX + get(props, 'compareText.offsetX')\n              : lerp(minX, maxX, yValuesMax[0] / (yValuesMax[0] + yValuesMax[1])),\n            y: props.transpose\n              ? lerp(minY, maxY, yValuesMax[0] / (yValuesMax[0] + yValuesMax[1])) + (i ? 8 : -8)\n              : minY + get(props, 'compareText.offsetY'),\n            opacity: 0,\n            textAlign: props.transpose ? 'right' : i ? 'left' : 'right',\n            textBaseline: props.transpose ? (i ? 'top' : 'bottom') : 'bottom',\n          })\n        );\n      });\n    }\n  }\n\n  protected fadeInCompareTexts(duration?, callback?) {\n    const container = this._findCompareTextContainer();\n    if (container) {\n      const compareTexts = container.get('children');\n      [0, 1].forEach((i) => {\n        const compareText = compareTexts[i];\n\n        if (compareText) {\n          const attrs = {\n            opacity: 1,\n          };\n          duration ? compareText.animate(attrs, duration) : compareText.attr(attrs);\n        }\n      });\n    }\n\n    duration && callback && setTimeout(callback, duration);\n  }\n\n  protected fadeOutCompareTexts(duration?, callback?) {\n    const container = this._findCompareTextContainer();\n    if (container) {\n      const compareTexts = container.get('children');\n      [0, 1].forEach((i) => {\n        const compareText = compareTexts[i];\n\n        if (compareText) {\n          const attrs = {\n            opacity: 0,\n          };\n          duration ? compareText.animate(attrs, duration) : compareText.attr(attrs);\n        }\n      });\n    }\n\n    duration && callback && setTimeout(callback, duration);\n  }\n\n  protected refreshCompareTexts(callback?) {\n    const props = this.options;\n\n    if (props.animation !== false) {\n      const { fadeInDuration, fadeOutDuration } = this._calcRefreshFadeDurations();\n\n      this._shouldResetCompareTexts = false;\n      this.fadeOutCompareTexts(fadeOutDuration, () => {\n        this._shouldResetCompareTexts = true;\n        this.resetCompareTexts();\n        this.fadeInCompareTexts(fadeInDuration, callback);\n      });\n    }\n  }\n\n  private _findCompareTextContainer(createIfNotFound: boolean = false) {\n    const { middleGroup } = this.view;\n\n    let compareTextContainer = middleGroup.get('compareTextContainer');\n    if (!compareTextContainer && createIfNotFound) {\n      compareTextContainer = middleGroup.addGroup();\n      middleGroup.set('compareTextContainer', compareTextContainer);\n    }\n\n    return compareTextContainer;\n  }\n\n  private _eachShape(\n    fn: (shape: IShape | IGroup, index: number, datumLower: any, datumUpper: any, elementIndex: number) => void\n  ) {\n    const data = this._findCheckedData(this.getData());\n    const dataLen = data.length;\n    let index = 0;\n    let datumUpper;\n    this._getGeometry()?.elements.forEach((element, elementIndex) => {\n      const { shape } = element;\n      const datumLower = data[index];\n      if (index < dataLen) {\n        fn(shape, index, datumLower, datumUpper, elementIndex);\n      }\n      datumUpper = datumLower;\n      index++;\n    });\n  }\n\n  private _getGeometry() {\n    return this.view.geometries[0];\n  }\n\n  private _getAdjustedTextFillByShape(shape: IShape | IGroup) {\n    const shapeColor = shape.attr('fill');\n    const shapeOpacity = shape.attr('opacity') ? shape.attr('opacity') : 1;\n    const rgb = rgb2arr(shapeColor);\n    const gray = Math.round(rgb[0] * 0.299 + rgb[1] * 0.587 + rgb[2] * 0.114) / shapeOpacity;\n    const colorBand = [\n      { from: 0, to: 85, color: 'white' },\n      { from: 85, to: 170, color: '#F6F6F6' },\n      { from: 170, to: 255, color: 'black' },\n    ];\n    const reflect = mappingColor(colorBand, gray);\n    return reflect;\n  }\n\n  private _genCustomFieldForDynamicHeight(data: any[]) {\n    const props = this.options;\n\n    const total = data.reduce((total, datum) => total + datum[props.yField], 0);\n\n    let ratioUpper = 1;\n    data.forEach((datum, index) => {\n      const value = datum[props.yField];\n      const share = value / total;\n      const ratioLower = ratioUpper - share;\n\n      datum['__custom__'] = {\n        datumIndex: index,\n        dataLength: data.length,\n        ratioUpper,\n        ratioLower,\n        reverse: props.transpose,\n      };\n\n      ratioUpper = ratioLower;\n    });\n  }\n\n  private _findCheckedDataByMouseDownLegendItem(legendItem: IGroup) {\n    const flags = legendItem\n      .get('parent')\n      .get('children')\n      .map((legendItem) => !legendItem.get('unchecked'));\n\n    const data = this.getData().filter((datum, index) => flags[index]);\n\n    return data;\n  }\n\n  private _findCheckedDataInNewData(newData: any[]) {\n    const props = this.options;\n\n    // @ts-ignore\n    const legendContainer = this.view.getController('legend').container;\n\n    const uncheckedXValues = legendContainer\n      .findAll((shape) => shape.get('name') == 'legend-item')\n      .filter((legendItem) => legendItem.get('unchecked'))\n      .map((legendItem) => legendItem.get('id').replace('-legend-item-', ''));\n\n    const checkedData = newData.filter((datum) => !contains(uncheckedXValues, datum[props.xField]));\n\n    return checkedData;\n  }\n\n  private _findCheckedData(data: any[]) {\n    const props = this.options;\n\n    if (props.legend?.visible) {\n      // @ts-ignore\n      const legendContainer = this.view.getController('legend').container;\n\n      const checkedXValues = legendContainer\n        .findAll((shape) => shape.get('name') == 'legend-item')\n        .filter((legendItem) => !legendItem.get('unchecked'))\n        .map((legendItem) => legendItem.get('id').replace('-legend-item-', ''));\n\n      const checkedData = data.filter((datum) => contains(checkedXValues, datum[props.xField]));\n\n      return checkedData;\n    } else {\n      return this.processData(props.data);\n    }\n  }\n\n  private _reduceDataForCompare(data: any[]) {\n    const props = this.options;\n\n    let compareValueFirstVisited;\n    const yValuesMax = [-Infinity, -Infinity];\n    data = data.reduce((newData, datum) => {\n      const xValue = datum[props.xField];\n      const yValue = datum[props.yField];\n      const compareValue = datum[props.compareField];\n      if (!compareValueFirstVisited) compareValueFirstVisited = compareValue;\n\n      let newDatum = newData.find((newDatum) => newDatum[props.xField] == xValue);\n      if (!newDatum) {\n        newDatum = {\n          [props.xField]: xValue,\n          [props.yField]: 0,\n          ['__compare__']: {\n            compareValues: [],\n            yValues: [],\n            yValuesMax: [],\n            yValuesNext: undefined,\n            transpose: props.transpose,\n          },\n        };\n        newData.push(newDatum);\n      }\n      const idx = compareValue == compareValueFirstVisited ? 0 : 1;\n      newDatum['__compare__'].yValues[idx] = yValue;\n      if (yValuesMax[idx] < yValue) {\n        yValuesMax[idx] = yValue as number;\n      }\n      newDatum['__compare__'].compareValues[idx] = compareValue;\n\n      return newData;\n    }, []);\n\n    data.forEach((datum, index) => {\n      datum[props.yField] = get(datum, '__compare__.yValues', []).reduce((yTotal, yValue) => (yTotal += yValue), 0);\n      set(datum, '__compare__.yValuesMax', yValuesMax);\n      set(datum, '__compare__.yValuesNext', get(data, `${index + 1}.__compare__.yValues`));\n    });\n\n    return data;\n  }\n\n  private _updateDataForCompare(data: any[]) {\n    const yValuesMax = [-Infinity, -Infinity];\n    data.forEach((datum) => {\n      const yValues = get(datum, '__compare__.yValues');\n      [0, 1].forEach((i) => {\n        if (yValues[i] > yValuesMax[i]) {\n          yValuesMax[i] = yValues[i];\n        }\n      });\n    });\n\n    data.forEach((datum, index) => {\n      set(datum, '__compare__.yValuesMax', yValuesMax);\n      set(datum, '__compare__.yValuesNext', get(data, `${index + 1}.__compare__.yValues`));\n    });\n  }\n\n  private _onLegendContainerMouseDown = (e) => {\n    const props = this.options;\n\n    const targetName = e.target.get('name');\n    if (targetName.startsWith('legend-item')) {\n      const legendItem = e.target.get('parent');\n      legendItem.set('unchecked', !legendItem.get('unchecked'));\n\n      this.refreshPercentages();\n      this.refreshLabels();\n\n      if (props.dynamicHeight) {\n        const data = this._findCheckedDataByMouseDownLegendItem(legendItem);\n        this._genCustomFieldForDynamicHeight(data);\n      }\n\n      if (props.compareField) {\n        const data = this._findCheckedDataByMouseDownLegendItem(legendItem);\n        this._updateDataForCompare(data);\n        this.refreshCompareTexts();\n      }\n    }\n  };\n}\n\nregisterPlotType('funnel', FunnelLayer);\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}