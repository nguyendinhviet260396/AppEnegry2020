{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport { deepMix, isFunction, get } from '@antv/util';\nimport { combineFormatter, getNoopFormatter, getPrecisionFormatter, getSuffixFormatter } from '../../util/formatter';\n\nfunction propertyMapping(source, target, field) {\n  if (source[field]) {\n    target[field] = source[field];\n  }\n}\n\nvar AxisParser =\n/** @class */\nfunction () {\n  function AxisParser(cfg) {\n    this.config = false;\n    this.plot = cfg.plot;\n    this.dim = cfg.dim;\n    this.init();\n  }\n\n  AxisParser.prototype.init = function () {\n    this.config = false;\n    var theme = this.plot.getPlotTheme();\n    this.themeConfig = theme && theme.axis && theme.axis[this.dim];\n\n    if (this._needDraw()) {\n      this._styleParser();\n    }\n  };\n\n  AxisParser.prototype._styleParser = function () {\n    this.config = __assign({}, this.localProps);\n    this._isVisible('line') ? this._lineParser() : this.config.line = null;\n    this._isVisible('grid') ? this._gridParser() : this.config.grid = null;\n    this._isVisible('tickLine') ? this._tickLineParser() : this.config.tickLine = null;\n    this._isVisible('label') ? this._labelParser() : this.config.label = null;\n    this._isVisible('title') ? this._titleParser() : this.config.title = null;\n    propertyMapping(this.localProps, this.config, 'autoHideLabel');\n    propertyMapping(this.localProps, this.config, 'autoRotateLabel');\n    propertyMapping(this.localProps, this.config, 'autoRotateTitle');\n  };\n\n  AxisParser.prototype._needDraw = function () {\n    /** 如果在图表配置项里没有设置坐标轴整体的visibility则去对应的theme取 */\n    var propos = this.plot.options;\n    var propsConfig = propos[this.dim + \"Axis\"] ? propos[this.dim + \"Axis\"] : {};\n    var config = deepMix({}, this.themeConfig, propsConfig);\n    this.localProps = config;\n\n    if (config.visible) {\n      return true;\n    }\n\n    return false;\n  };\n\n  AxisParser.prototype._lineParser = function () {\n    this.config.line = this.localProps.line;\n\n    if (this.localProps.line.style) {\n      this.config.line = {\n        style: this.localProps.line.style\n      };\n    }\n\n    this.applyThemeConfig('line');\n  };\n\n  AxisParser.prototype._gridParser = function () {\n    var _this = this;\n\n    var _a, _b, _c, _d, _e;\n\n    var style = (_b = (_a = this.localProps.grid) === null || _a === void 0 ? void 0 : _a.line) === null || _b === void 0 ? void 0 : _b.style;\n    var type = (_d = (_c = this.localProps.grid) === null || _c === void 0 ? void 0 : _c.line) === null || _d === void 0 ? void 0 : _d.type;\n    var alternateColor = (_e = this.localProps.grid) === null || _e === void 0 ? void 0 : _e.alternateColor;\n\n    if (isFunction(style)) {\n      this.config.grid = function (text, index, count) {\n        var cfg = style(text, index, count);\n        return {\n          line: {\n            type: type,\n            style: deepMix({}, get(_this.themeConfig, \"grid.line.style\"), cfg)\n          },\n          alternateColor: alternateColor\n        };\n      };\n    } else if (style) {\n      this.config.grid = {\n        line: {\n          type: type,\n          style: style\n        },\n        alternateColor: alternateColor\n      };\n      this.applyThemeConfig('grid');\n    }\n  };\n\n  AxisParser.prototype._tickLineParser = function () {\n    this.config.tickLine = this.localProps.tickLine;\n\n    if (this.localProps.tickLine.style) {\n      this.config.tickLine = {\n        style: this.localProps.tickLine.style\n      };\n    }\n\n    this.applyThemeConfig('tickLine');\n  };\n\n  AxisParser.prototype._labelParser = function () {\n    var _a = this.localProps.label,\n        style = _a.style,\n        restLabelProps = __rest(_a, [\"style\"]);\n\n    var labelConfig = __assign({}, restLabelProps);\n\n    if (style) {\n      labelConfig.style = __assign({}, this.localProps.label.style);\n    }\n\n    labelConfig.style = deepMix({}, get(this.themeConfig, 'label.style'), labelConfig.style);\n    var formatter = this.parseFormatter(labelConfig);\n    labelConfig.formatter = formatter;\n    this.config.label = labelConfig;\n  };\n\n  AxisParser.prototype._titleParser = function () {\n    var titleConfig = __assign({}, this.localProps.title);\n\n    var _a = this.localProps.title,\n        visible = _a.visible,\n        style = _a.style,\n        text = _a.text;\n\n    if (!visible) {\n      this.config.showTitle = false;\n    } else {\n      this.config.showTitle = true;\n\n      if (style) {\n        titleConfig.style = style;\n      }\n\n      titleConfig.style = deepMix({}, get(this.config, 'title.style'), titleConfig.textStyle);\n\n      if (text) {\n        titleConfig.text = text;\n      }\n    }\n\n    this.config.title = titleConfig;\n  };\n\n  AxisParser.prototype._isVisible = function (name) {\n    if (this.localProps[name] && this.localProps[name].visible) {\n      return true;\n    }\n\n    return false;\n  };\n\n  AxisParser.prototype.applyThemeConfig = function (type) {\n    this.config[type] = deepMix({}, get(this.themeConfig, type + \".style\"), this.config[type]);\n  };\n\n  AxisParser.prototype.parseFormatter = function (labelConfig) {\n    var formatter = combineFormatter(getNoopFormatter(), getPrecisionFormatter(labelConfig.precision), getSuffixFormatter(labelConfig.suffix));\n\n    if (labelConfig.formatter) {\n      formatter = combineFormatter(formatter, labelConfig.formatter);\n    }\n\n    return formatter;\n  };\n\n  return AxisParser;\n}();\n\nexport default AxisParser;","map":{"version":3,"sources":["../../../src/components/axis/parser.ts"],"names":[],"mappings":"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","sourcesContent":["import { deepMix, isFunction, get } from '@antv/util';\nimport { ViewLayer } from '../..';\nimport { IBaseAxis } from '../../interface/config';\nimport { combineFormatter, getNoopFormatter, getPrecisionFormatter, getSuffixFormatter } from '../../util/formatter';\n\nfunction propertyMapping(source, target, field) {\n  if (source[field]) {\n    target[field] = source[field];\n  }\n}\n\ninterface AxisConfig {\n  plot: ViewLayer;\n  dim: string;\n}\n\nexport default class AxisParser {\n  public config: any = false;\n  protected originConfig: any;\n  private plot: any;\n  private dim: string;\n  private localProps: IBaseAxis;\n  private themeConfig: any;\n\n  constructor(cfg: AxisConfig) {\n    this.plot = cfg.plot;\n    this.dim = cfg.dim;\n    this.init();\n  }\n\n  private init() {\n    this.config = false;\n    const theme = this.plot.getPlotTheme();\n    this.themeConfig = theme && theme.axis && theme.axis[this.dim];\n    if (this._needDraw()) {\n      this._styleParser();\n    }\n  }\n\n  private _styleParser() {\n    this.config = { ...this.localProps };\n    this._isVisible('line') ? this._lineParser() : (this.config.line = null);\n    this._isVisible('grid') ? this._gridParser() : (this.config.grid = null);\n    this._isVisible('tickLine') ? this._tickLineParser() : (this.config.tickLine = null);\n    this._isVisible('label') ? this._labelParser() : (this.config.label = null);\n    this._isVisible('title') ? this._titleParser() : (this.config.title = null);\n\n    propertyMapping(this.localProps, this.config, 'autoHideLabel');\n    propertyMapping(this.localProps, this.config, 'autoRotateLabel');\n    propertyMapping(this.localProps, this.config, 'autoRotateTitle');\n  }\n\n  private _needDraw() {\n    /** 如果在图表配置项里没有设置坐标轴整体的visibility则去对应的theme取 */\n    const propos = this.plot.options;\n    const propsConfig = propos[`${this.dim}Axis`] ? propos[`${this.dim}Axis`] : {};\n    const config = deepMix({}, this.themeConfig, propsConfig);\n    this.localProps = config;\n    if (config.visible) {\n      return true;\n    }\n    return false;\n  }\n\n  private _lineParser() {\n    this.config.line = this.localProps.line;\n    if (this.localProps.line.style) {\n      this.config.line = { style: this.localProps.line.style };\n    }\n    this.applyThemeConfig('line');\n  }\n\n  private _gridParser() {\n    const style = this.localProps.grid?.line?.style;\n    const type = this.localProps.grid?.line?.type;\n    const alternateColor = this.localProps.grid?.alternateColor;\n\n    if (isFunction(style)) {\n      this.config.grid = (text: string, index: number, count: number) => {\n        const cfg = style(text, index, count);\n        return {\n          line: {\n            type,\n            style: deepMix({}, get(this.themeConfig, `grid.line.style`), cfg),\n          },\n          alternateColor,\n        };\n      };\n    } else if (style) {\n      this.config.grid = {\n        line: {\n          type,\n          style,\n        },\n        alternateColor,\n      };\n      this.applyThemeConfig('grid');\n    }\n  }\n\n  private _tickLineParser() {\n    this.config.tickLine = this.localProps.tickLine;\n    if (this.localProps.tickLine.style) {\n      this.config.tickLine = { style: this.localProps.tickLine.style };\n    }\n    this.applyThemeConfig('tickLine');\n  }\n\n  private _labelParser() {\n    const { style, ...restLabelProps } = this.localProps.label;\n    const labelConfig: any = { ...restLabelProps };\n    if (style) {\n      labelConfig.style = { ...this.localProps.label.style };\n    }\n    labelConfig.style = deepMix({}, get(this.themeConfig, 'label.style'), labelConfig.style);\n    const formatter = this.parseFormatter(labelConfig);\n    labelConfig.formatter = formatter;\n    this.config.label = labelConfig;\n  }\n\n  private _titleParser() {\n    const titleConfig: any = { ...this.localProps.title };\n    const { visible, style, text } = this.localProps.title;\n    if (!visible) {\n      this.config.showTitle = false;\n    } else {\n      this.config.showTitle = true;\n      if (style) {\n        titleConfig.style = style;\n      }\n      titleConfig.style = deepMix({}, get(this.config, 'title.style'), titleConfig.textStyle);\n\n      if (text) {\n        titleConfig.text = text;\n      }\n    }\n    this.config.title = titleConfig;\n  }\n\n  private _isVisible(name: string) {\n    if (this.localProps[name] && this.localProps[name].visible) {\n      return true;\n    }\n    return false;\n  }\n\n  private applyThemeConfig(type: 'line' | 'grid' | 'tickLine') {\n    this.config[type] = deepMix({}, get(this.themeConfig, `${type}.style`), this.config[type]);\n  }\n\n  protected parseFormatter(labelConfig) {\n    let formatter = combineFormatter(\n      getNoopFormatter(),\n      getPrecisionFormatter(labelConfig.precision),\n      getSuffixFormatter(labelConfig.suffix)\n    );\n    if (labelConfig.formatter) {\n      formatter = combineFormatter(\n        formatter,\n        labelConfig.formatter as (text: string, item: any, idx: number) => string\n      );\n    }\n    return formatter;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}