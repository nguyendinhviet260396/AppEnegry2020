{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\vietn\\\\Desktop\\\\AppEnegry2020\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\vietn\\\\Desktop\\\\AppEnegry2020\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\vietn\\\\Desktop\\\\AppEnegry2020\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\vietn\\\\Desktop\\\\AppEnegry2020\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{withStyles,Card,CardContent,Button,FormControlLabel,Checkbox}from'@material-ui/core';import{compose,bindActionCreators}from'redux';import{connect}from'react-redux';import{Field,reduxForm}from'redux-form';import renderTextField from'../../../components/FormHelper/TextField/index';import validate from'../../../commons/Validation/index';import*as authActions from'../../../actions/auths';import*as modalActions from'../../../actions/modal';import styles from'./styles';var SignupForm=/*#__PURE__*/function(_Component){_inherits(SignupForm,_Component);var _super=_createSuper(SignupForm);function SignupForm(){var _this;_classCallCheck(this,SignupForm);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.handleChecked=function(e){var checked=e.target.checked;var _this$props=_this.props,authActionCreators=_this$props.authActionCreators,invalid=_this$props.invalid,submitting=_this$props.submitting;var onButtonSubmit=authActionCreators.onButtonSubmit,offButtonSubmit=authActionCreators.offButtonSubmit;if(checked&&!invalid&&!submitting){onButtonSubmit();}else{offButtonSubmit();}};_this.handleCloseForm=function(){var modalActionCreators=_this.props.modalActionCreators;var hideModal=modalActionCreators.hideModal;hideModal();};_this.handleSubmitForm=function(data){var name=data.name,email=data.email,password=data.password,operator=data.operator;var _this$props2=_this.props,authActionCreators=_this$props2.authActionCreators,userEditting=_this$props2.userEditting;var authSignup=authActionCreators.authSignup,updateUser=authActionCreators.updateUser;if(userEditting&&userEditting.id){updateUser(name,email,password,operator);}else{authSignup(name,email,password,operator);}};return _this;}_createClass(SignupForm,[{key:\"render\",value:function render(){var _this$props3=this.props,classes=_this$props3.classes,handleSubmit=_this$props3.handleSubmit,invalid=_this$props3.invalid,onButton=_this$props3.onButton,initialValues=_this$props3.initialValues,submitting=_this$props3.submitting;var userEditting=initialValues;return/*#__PURE__*/React.createElement(\"div\",{className:classes.background},/*#__PURE__*/React.createElement(\"div\",{className:classes.signup},/*#__PURE__*/React.createElement(Card,{className:classes.card},/*#__PURE__*/React.createElement(CardContent,{className:classes.cardContent},/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit(this.handleSubmitForm)},/*#__PURE__*/React.createElement(Field,{id:\"name\",label:\"Name\",name:\"name\",className:classes.textField,inputProps:{style:{fontSize:15}}// font size of input text\n,InputLabelProps:{style:{fontSize:15}}// font size of input label\n,type:\"text\",fullWidth:true,margin:\"normal\",size:\"small\",component:renderTextField,value:userEditting?userEditting.name:''}),/*#__PURE__*/React.createElement(Field,{id:\"email\",label:\"Email\",name:\"email\",className:classes.textField,inputProps:{style:{fontSize:15}}// font size of input text\n,InputLabelProps:{style:{fontSize:15}}// font size of input label\n,type:\"text\",fullWidth:true,margin:\"normal\",component:renderTextField,value:userEditting?userEditting.email:''}),/*#__PURE__*/React.createElement(Field,{id:\"operator\",label:\"operator\",type:\"operator\",name:\"operator\",className:classes.textField,inputProps:{style:{fontSize:15}}// font size of input text\n,InputLabelProps:{style:{fontSize:15}}// font size of input label\n,fullWidth:true,margin:\"normal\",component:renderTextField,value:userEditting?userEditting.operator:''}),/*#__PURE__*/React.createElement(Field,{id:\"password\",label:\"Password\",type:\"password\",name:\"password\",className:classes.textField,inputProps:{style:{fontSize:15}}// font size of input text\n,InputLabelProps:{style:{fontSize:15}}// font size of input label\n,fullWidth:true,margin:\"normal\",component:renderTextField,value:userEditting?userEditting.password:''}),/*#__PURE__*/React.createElement(Field,{id:\"cPassWord\",label:\"ConfirmPassword\",type:\"password\",name:\"cPassword\",className:classes.textField,inputProps:{style:{fontSize:15}}// font size of input text\n,InputLabelProps:{style:{fontSize:15}}// font size of input label\n,fullWidth:true,margin:\"normal\",component:renderTextField,value:userEditting?userEditting.cPassword:''}),/*#__PURE__*/React.createElement(FormControlLabel,{control:/*#__PURE__*/React.createElement(Checkbox,{value:\"agree\"}),label:\"T\\xF4i \\u0111\\xE3 \\u0111\\u1ECDc v\\xE0 \\u0111\\u1ED3ng \\xFD v\\u1EDBi \\u0111i\\u1EC1u kho\\u1EA3n !\",onChange:this.handleChecked,className:classes.Checkbox}),/*#__PURE__*/React.createElement(Button,{className:classes.button,color:\"primary\",variant:\"contained\",type:\"submit\",disabled:onButton||submitting||invalid},\"Apply\"),/*#__PURE__*/React.createElement(Button,{className:classes.button,color:\"secondary\",variant:\"contained\",type:\"submit\",onClick:this.handleCloseForm},\"Cancel\"))))));}}]);return SignupForm;}(Component);var FORM_USER=\"TASK_USER\";var withReduxForm=reduxForm({form:FORM_USER,validate:validate});var mapStateToProps=function mapStateToProps(state){return{onButton:state.auth.onButton,initialValues:state.auth.userEditting,userEditting:state.auth.userEditting};};var mapDispatchToProps=function mapDispatchToProps(dispatch,props){return{authActionCreators:bindActionCreators(authActions,dispatch),modalActionCreators:bindActionCreators(modalActions,dispatch)};};var withConnect=connect(mapStateToProps,mapDispatchToProps);export default compose(withStyles(styles),withConnect,withReduxForm)(SignupForm);","map":{"version":3,"sources":["C:/Users/vietn/Desktop/AppEnegry2020/frontend/src/containers/AccountManager/SignupForm/index.js"],"names":["React","Component","withStyles","Card","CardContent","Button","FormControlLabel","Checkbox","compose","bindActionCreators","connect","Field","reduxForm","renderTextField","validate","authActions","modalActions","styles","SignupForm","handleChecked","e","checked","target","props","authActionCreators","invalid","submitting","onButtonSubmit","offButtonSubmit","handleCloseForm","modalActionCreators","hideModal","handleSubmitForm","data","name","email","password","operator","userEditting","authSignup","updateUser","id","classes","handleSubmit","onButton","initialValues","background","signup","card","cardContent","textField","style","fontSize","cPassword","button","FORM_USER","withReduxForm","form","mapStateToProps","state","auth","mapDispatchToProps","dispatch","withConnect"],"mappings":"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","sourcesContent":["\r\nimport React, { Component } from 'react';\r\nimport { withStyles, Card, CardContent, Button, FormControlLabel, Checkbox} from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport {compose,bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport renderTextField from '../../../components/FormHelper/TextField/index';\r\nimport validate from '../../../commons/Validation/index';\r\nimport * as authActions from '../../../actions/auths';\r\nimport * as modalActions from '../../../actions/modal';\r\nimport styles from './styles';\r\n\r\nclass SignupForm extends Component {\r\n    handleChecked=(e)=>{\r\n        const {checked}=e.target;\r\n        const {authActionCreators,invalid,submitting}=this.props;\r\n        const {onButtonSubmit,offButtonSubmit}=authActionCreators;\r\n        if(checked && !invalid && !submitting ){\r\n            onButtonSubmit()\r\n        }else{\r\n            offButtonSubmit()\r\n        }\r\n    }\r\n    handleCloseForm=()=>{\r\n        const {modalActionCreators} =this.props;\r\n        const {hideModal}=modalActionCreators;\r\n        hideModal();\r\n    }\r\n    handleSubmitForm = data => {\r\n        const {name,email,password,operator}= data;\r\n        const {authActionCreators,userEditting}=this.props;\r\n        const {authSignup,updateUser}=authActionCreators;\r\n        if(userEditting && userEditting.id){\r\n            updateUser(name,email,password,operator);\r\n        }else{\r\n            authSignup(name,email,password,operator);\r\n        }  \r\n    };\r\n    render() {\r\n        const {classes,\r\n            handleSubmit,\r\n            invalid,\r\n            onButton,\r\n            initialValues,\r\n            submitting}=this.props;\r\n            const userEditting = initialValues;   \r\n        return(\r\n            <div className={classes.background}>\r\n                <div className={classes.signup}>\r\n                    <Card className={classes.card}>\r\n                        <CardContent className={classes.cardContent}>\r\n                            <form onSubmit={handleSubmit(this.handleSubmitForm)}>\r\n                            <Field\r\n                                id=\"name\"\r\n                                label=\"Name\"\r\n                                name=\"name\"\r\n                                className={classes.textField}\r\n                                inputProps={{style: {fontSize: 15}}} // font size of input text\r\n                                InputLabelProps={{style: {fontSize: 15}}} // font size of input label\r\n                                type=\"text\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                size=\"small\"\r\n                                component={renderTextField}\r\n                                value={userEditting ? userEditting.name :''}\r\n                                />\r\n                                <Field\r\n                                id=\"email\"\r\n                                label=\"Email\"\r\n                                name=\"email\"\r\n                                className={classes.textField}\r\n                                inputProps={{style: {fontSize: 15}}} // font size of input text\r\n                                InputLabelProps={{style: {fontSize: 15}}} // font size of input label\r\n                                type=\"text\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                component={renderTextField}\r\n                                value={userEditting ? userEditting.email :''}\r\n                                />\r\n                                 <Field\r\n                                id=\"operator\"\r\n                                label=\"operator\"\r\n                                type=\"operator\"\r\n                                name=\"operator\"\r\n                                className={classes.textField}\r\n                                inputProps={{style: {fontSize: 15}}} // font size of input text\r\n                                InputLabelProps={{style: {fontSize: 15}}} // font size of input label\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                component={renderTextField}\r\n                                value={userEditting ? userEditting.operator :''}\r\n                                />\r\n                                 <Field\r\n                                id=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                className={classes.textField}\r\n                                inputProps={{style: {fontSize: 15}}} // font size of input text\r\n                                InputLabelProps={{style: {fontSize: 15}}} // font size of input label\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                component={renderTextField}\r\n                                value={userEditting ? userEditting.password :''}\r\n                                />\r\n                                <Field\r\n                                id=\"cPassWord\"\r\n                                label=\"ConfirmPassword\"\r\n                                type=\"password\"\r\n                                name=\"cPassword\"\r\n                                className={classes.textField}\r\n                                inputProps={{style: {fontSize: 15}}} // font size of input text\r\n                                InputLabelProps={{style: {fontSize: 15}}} // font size of input label\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                component={renderTextField}\r\n                                value={userEditting ? userEditting.cPassword:''}\r\n                                />\r\n                                <FormControlLabel\r\n                                control={ <Checkbox value=\"agree\" />}\r\n                                label=\"Tôi đã đọc và đồng ý với điều khoản !\"\r\n                                onChange={this.handleChecked}\r\n                                className={classes.Checkbox}\r\n                                />\r\n                                <Button\r\n                                className={classes.button}\r\n                                color = \"primary\"\r\n                                variant=\"contained\"\r\n                                type=\"submit\"\r\n                                disabled={onButton||submitting || invalid }\r\n                                >\r\n                                    Apply\r\n                                </Button>\r\n                                <Button\r\n                                className={classes.button}\r\n                                color = \"secondary\"\r\n                                variant=\"contained\"\r\n                                type=\"submit\"\r\n                                onClick={this.handleCloseForm}\r\n                                >\r\n                                     Cancel\r\n                                </Button>\r\n                            </form>\r\n                        </CardContent>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSignupForm.propTypes={\r\n    classes:PropTypes.object,\r\n    handleSubmit:PropTypes.func,\r\n    invalid:PropTypes.bool,\r\n    submitting:PropTypes.bool,\r\n    onButton:PropTypes.bool,\r\n    infauth:PropTypes.string,\r\n    userEditting:PropTypes.object,\r\n    authActionCreators:PropTypes.shape({\r\n        onButtonSubmit:PropTypes.func,\r\n        authSignup:PropTypes.func,\r\n        offButtonSubmit:PropTypes.func,\r\n        \r\n    }),\r\n}\r\n\r\nconst FORM_USER =\"TASK_USER\";\r\nconst withReduxForm = reduxForm({\r\n    form: FORM_USER,\r\n    validate:validate,\r\n});\r\nconst mapStateToProps=state=>{\r\n    return{\r\n        onButton:state.auth.onButton,\r\n        initialValues:state.auth.userEditting,\r\n        userEditting :state.auth.userEditting,\r\n    }\r\n};\r\nconst mapDispatchToProps=(dispatch,props)=>{\r\n    return{\r\n        authActionCreators:bindActionCreators(authActions,dispatch),\r\n        modalActionCreators:bindActionCreators(modalActions,dispatch),\r\n    }\r\n};\r\nconst withConnect=connect(mapStateToProps,mapDispatchToProps);\r\nexport default compose(\r\n    withStyles(styles),\r\n    withConnect,\r\n    withReduxForm,\r\n)(SignupForm);\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}