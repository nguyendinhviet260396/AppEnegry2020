{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { isEmpty } from '@antv/util';\nimport { registerShape } from '@antv/g2';\nimport { DATE_FIELD } from './constant';\nimport { isLastDayOfMonth, isLastWeekOfMonth } from '../../util/date';\n/**\n * 注册自定义日历图的 shape\n * code from https://g2.antv.vision/zh/examples/heatmap/heatmap#calendar-horizontal\n */\n\nregisterShape('polygon', 'calendar-polygon', {\n  draw: function (cfg, container) {\n    if (!isEmpty(cfg.points)) {\n      var points = cfg.points; // rect path\n\n      var path = [['M', points[0].x, points[0].y], ['L', points[1].x, points[1].y], ['L', points[2].x, points[2].y], ['L', points[3].x, points[3].y], ['Z']];\n      path = this.parsePath(path);\n\n      var attrs = __assign(__assign({\n        stroke: '#fff',\n        lineWidth: 1,\n        fill: cfg.color\n      }, cfg.style), {\n        path: path\n      });\n\n      var polygon = container.addShape('path', {\n        attrs: attrs\n      });\n      var date = cfg.data[DATE_FIELD];\n\n      if (isLastWeekOfMonth(date)) {\n        var linePath = [['M', points[2].x, points[2].y], ['L', points[3].x, points[3].y]]; // 最后一周的多边形添加右侧边框\n\n        container.addShape('path', {\n          zIndex: 1,\n          attrs: {\n            path: this.parsePath(linePath),\n            lineWidth: 1,\n            stroke: '#404040'\n          }\n        });\n\n        if (isLastDayOfMonth(date)) {\n          container.addShape('path', {\n            zIndex: 1,\n            attrs: {\n              path: this.parsePath([['M', points[1].x, points[1].y], ['L', points[2].x, points[2].y]]),\n              lineWidth: 1,\n              stroke: '#404040'\n            }\n          });\n        }\n      }\n\n      container.sort();\n      return polygon;\n    }\n  }\n});","map":{"version":3,"sources":["../../../src/plots/calendar/shape.ts"],"names":[],"mappings":";AAAA,SAAS,OAAT,QAAwB,YAAxB;AACA,SAAS,aAAT,QAA8B,UAA9B;AACA,SAAS,UAAT,QAA2B,YAA3B;AACA,SAAS,gBAAT,EAA2B,iBAA3B,QAAoD,iBAApD;AAGA;;;;;AAIA,aAAa,CAAC,SAAD,EAAY,kBAAZ,EAAgC;AAC3C,EAAA,IAAI,EAAJ,UAAK,GAAL,EAAU,SAAV,EAAmB;AACjB,QAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAL,CAAZ,EAA0B;AACxB,UAAM,MAAM,GAAG,GAAG,CAAC,MAAnB,CADwB,CAExB;;AACA,UAAI,IAAI,GAAG,CACT,CAAC,GAAD,EAAM,MAAM,CAAC,CAAD,CAAN,CAAU,CAAhB,EAAmB,MAAM,CAAC,CAAD,CAAN,CAAU,CAA7B,CADS,EAET,CAAC,GAAD,EAAM,MAAM,CAAC,CAAD,CAAN,CAAU,CAAhB,EAAmB,MAAM,CAAC,CAAD,CAAN,CAAU,CAA7B,CAFS,EAGT,CAAC,GAAD,EAAM,MAAM,CAAC,CAAD,CAAN,CAAU,CAAhB,EAAmB,MAAM,CAAC,CAAD,CAAN,CAAU,CAA7B,CAHS,EAIT,CAAC,GAAD,EAAM,MAAM,CAAC,CAAD,CAAN,CAAU,CAAhB,EAAmB,MAAM,CAAC,CAAD,CAAN,CAAU,CAA7B,CAJS,EAKT,CAAC,GAAD,CALS,CAAX;AAOA,MAAA,IAAI,GAAG,KAAK,SAAL,CAAe,IAAf,CAAP;;AAEA,UAAM,KAAK,GAAA,QAAA,CAAA,QAAA,CAAA;AACT,QAAA,MAAM,EAAE,MADC;AAET,QAAA,SAAS,EAAE,CAFF;AAGT,QAAA,IAAI,EAAE,GAAG,CAAC;AAHD,OAAA,EAIN,GAAG,CAAC,KAJE,CAAA,EAIG;AACZ,QAAA,IAAI,EAAA;AADQ,OAJH,CAAX;;AAQA,UAAM,OAAO,GAAG,SAAS,CAAC,QAAV,CAAmB,MAAnB,EAA2B;AACzC,QAAA,KAAK,EAAA;AADoC,OAA3B,CAAhB;AAIA,UAAM,IAAI,GAAS,GAAG,CAAC,IAAJ,CAAS,UAAT,CAAnB;;AAEA,UAAI,iBAAiB,CAAC,IAAD,CAArB,EAA6B;AAC3B,YAAM,QAAQ,GAAG,CACf,CAAC,GAAD,EAAM,MAAM,CAAC,CAAD,CAAN,CAAU,CAAhB,EAAmB,MAAM,CAAC,CAAD,CAAN,CAAU,CAA7B,CADe,EAEf,CAAC,GAAD,EAAM,MAAM,CAAC,CAAD,CAAN,CAAU,CAAhB,EAAmB,MAAM,CAAC,CAAD,CAAN,CAAU,CAA7B,CAFe,CAAjB,CAD2B,CAK3B;;AACA,QAAA,SAAS,CAAC,QAAV,CAAmB,MAAnB,EAA2B;AACzB,UAAA,MAAM,EAAE,CADiB;AAEzB,UAAA,KAAK,EAAE;AACL,YAAA,IAAI,EAAE,KAAK,SAAL,CAAe,QAAf,CADD;AAEL,YAAA,SAAS,EAAE,CAFN;AAGL,YAAA,MAAM,EAAE;AAHH;AAFkB,SAA3B;;AAQA,YAAI,gBAAgB,CAAC,IAAD,CAApB,EAA4B;AAC1B,UAAA,SAAS,CAAC,QAAV,CAAmB,MAAnB,EAA2B;AACzB,YAAA,MAAM,EAAE,CADiB;AAEzB,YAAA,KAAK,EAAE;AACL,cAAA,IAAI,EAAE,KAAK,SAAL,CAAe,CACnB,CAAC,GAAD,EAAM,MAAM,CAAC,CAAD,CAAN,CAAU,CAAhB,EAAmB,MAAM,CAAC,CAAD,CAAN,CAAU,CAA7B,CADmB,EAEnB,CAAC,GAAD,EAAM,MAAM,CAAC,CAAD,CAAN,CAAU,CAAhB,EAAmB,MAAM,CAAC,CAAD,CAAN,CAAU,CAA7B,CAFmB,CAAf,CADD;AAKL,cAAA,SAAS,EAAE,CALN;AAML,cAAA,MAAM,EAAE;AANH;AAFkB,WAA3B;AAWD;AACF;;AAED,MAAA,SAAS,CAAC,IAAV;AAEA,aAAO,OAAP;AACD;AACF;AA7D0C,CAAhC,CAAb","sourcesContent":["import { isEmpty } from '@antv/util';\nimport { registerShape } from '@antv/g2';\nimport { DATE_FIELD } from './constant';\nimport { isLastDayOfMonth, isLastWeekOfMonth } from '../../util/date';\nimport { Point } from '../..';\n\n/**\n * 注册自定义日历图的 shape\n * code from https://g2.antv.vision/zh/examples/heatmap/heatmap#calendar-horizontal\n */\nregisterShape('polygon', 'calendar-polygon', {\n  draw(cfg, container) {\n    if (!isEmpty(cfg.points)) {\n      const points = cfg.points as Point[];\n      // rect path\n      let path = [\n        ['M', points[0].x, points[0].y],\n        ['L', points[1].x, points[1].y],\n        ['L', points[2].x, points[2].y],\n        ['L', points[3].x, points[3].y],\n        ['Z'],\n      ];\n      path = this.parsePath(path);\n\n      const attrs = {\n        stroke: '#fff',\n        lineWidth: 1,\n        fill: cfg.color,\n        ...cfg.style,\n        path,\n      };\n\n      const polygon = container.addShape('path', {\n        attrs,\n      });\n\n      const date: Date = cfg.data[DATE_FIELD];\n\n      if (isLastWeekOfMonth(date)) {\n        const linePath = [\n          ['M', points[2].x, points[2].y],\n          ['L', points[3].x, points[3].y],\n        ];\n        // 最后一周的多边形添加右侧边框\n        container.addShape('path', {\n          zIndex: 1,\n          attrs: {\n            path: this.parsePath(linePath),\n            lineWidth: 1,\n            stroke: '#404040',\n          },\n        });\n        if (isLastDayOfMonth(date)) {\n          container.addShape('path', {\n            zIndex: 1,\n            attrs: {\n              path: this.parsePath([\n                ['M', points[1].x, points[1].y],\n                ['L', points[2].x, points[2].y],\n              ]),\n              lineWidth: 1,\n              stroke: '#404040',\n            },\n          });\n        }\n      }\n\n      container.sort();\n\n      return polygon;\n    }\n  },\n});\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}