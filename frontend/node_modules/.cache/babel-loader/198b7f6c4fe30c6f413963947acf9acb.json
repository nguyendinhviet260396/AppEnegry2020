{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { deepMix, isNil, get, has, find } from '@antv/util';\nimport { registerPlotType } from '../../base/global';\nimport ViewLayer from '../../base/view-layer';\nimport { getGeom } from '../../geoms/factory';\nimport { extractScale } from '../../util/scale';\nimport Quadrant from './components/quadrant';\nimport Trendline from './components/trendline';\nimport * as EventParser from './event';\nimport { getComponent } from '../../components/factory';\nimport './theme';\nvar G2_GEOM_MAP = {\n  scatter: 'point'\n};\nvar PLOT_GEOM_MAP = {\n  point: 'point'\n};\n\nvar ScatterLayer =\n/** @class */\nfunction (_super) {\n  __extends(ScatterLayer, _super);\n\n  function ScatterLayer() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = 'scatter';\n    return _this;\n  }\n\n  ScatterLayer.getDefaultOptions = function () {\n    return deepMix({}, _super.getDefaultOptions.call(this), {\n      pointSize: 4,\n      pointStyle: {\n        lineWidth: 1,\n        strokeOpacity: 1,\n        fillOpacity: 0.95,\n        stroke: '#fff'\n      },\n      xAxis: {\n        nice: true,\n        grid: {\n          visible: true\n        },\n        line: {\n          visible: true\n        }\n      },\n      yAxis: {\n        nice: true,\n        grid: {\n          visible: true\n        },\n        line: {\n          visible: true\n        }\n      },\n      tooltip: {\n        visible: true,\n        // false 会造成 tooltip 只能显示一条数据，true 会造成 tooltip 在空白区域也会显示\n        shared: null,\n        showTitle: false,\n        showMarkers: false,\n        showCrosshairs: false\n      },\n      label: {\n        visible: false\n      },\n      shape: 'circle'\n    });\n  };\n\n  ScatterLayer.prototype.afterRender = function () {\n    _super.prototype.afterRender.call(this);\n\n    if (this.quadrant) {\n      this.quadrant.destroy();\n    }\n\n    if (this.trendline) {\n      this.trendline.destroy();\n    }\n\n    if (this.options.quadrant && this.options.quadrant.visible) {\n      this.quadrant = new Quadrant(__assign({\n        view: this.view,\n        plotOptions: this.options\n      }, this.options.quadrant));\n      this.quadrant.render();\n    }\n\n    if (this.options.trendline && this.options.trendline.visible) {\n      this.trendline = new Trendline(__assign({\n        view: this.view,\n        plotOptions: this.options\n      }, this.options.trendline));\n      this.trendline.render();\n    }\n  };\n\n  ScatterLayer.prototype.destroy = function () {\n    if (this.quadrant) {\n      this.quadrant.destroy();\n      this.quadrant = null;\n    }\n\n    if (this.trendline) {\n      this.trendline.destroy();\n      this.trendline = null;\n    }\n\n    _super.prototype.destroy.call(this);\n  };\n\n  ScatterLayer.prototype.isValidLinearValue = function (value) {\n    if (isNil(value)) {\n      return false;\n    } else if (Number.isNaN(Number(value))) {\n      return false;\n    }\n\n    return true;\n  };\n\n  ScatterLayer.prototype.processData = function (data) {\n    var _this = this;\n\n    var _a = this.options,\n        xField = _a.xField,\n        yField = _a.yField;\n    var xAxisType = get(this.options, ['xAxis', 'type'], 'linear');\n    var yAxisType = get(this.options, ['yAxis', 'type'], 'linear');\n\n    if (xAxisType && yAxisType) {\n      var fiteredData = data.filter(function (item) {\n        if (xAxisType === 'linear' && !_this.isValidLinearValue(item[xField])) {\n          return false;\n        }\n\n        if (yAxisType === 'linear' && !_this.isValidLinearValue(item[yField])) {\n          return false;\n        }\n\n        return true;\n      }).map(function (item) {\n        var _a;\n\n        return __assign(__assign({}, item), (_a = {}, _a[xField] = xAxisType === 'linear' ? Number(item[xField]) : String(item[xField]), _a[yField] = yAxisType === 'linear' ? Number(item[yField]) : String(item[yField]), _a));\n      });\n      return fiteredData;\n    }\n\n    return data;\n  };\n\n  ScatterLayer.prototype.geometryParser = function (dim, type) {\n    if (dim === 'g2') {\n      return G2_GEOM_MAP[type];\n    }\n\n    return PLOT_GEOM_MAP[type];\n  };\n\n  ScatterLayer.prototype.scale = function () {\n    var props = this.options;\n    var scales = {};\n    /** 配置x-scale */\n\n    scales[props.xField] = {};\n\n    if (has(props, 'xAxis')) {\n      extractScale(scales[props.xField], props.xAxis);\n    }\n    /** 配置y-scale */\n\n\n    scales[props.yField] = {};\n\n    if (has(props, 'yAxis')) {\n      extractScale(scales[props.yField], props.yAxis);\n    }\n\n    var timeLineInteraction = find(props.interactions, function (interaction) {\n      return interaction.type === 'timeline';\n    });\n\n    if (timeLineInteraction && get(timeLineInteraction, 'cfg.key')) {\n      var keyField = timeLineInteraction.cfg.key;\n\n      if (scales[keyField]) {\n        scales[keyField].key = true;\n      } else {\n        scales[keyField] = {\n          key: true\n        };\n      }\n    }\n\n    this.setConfig('scales', scales);\n\n    _super.prototype.scale.call(this);\n  };\n\n  ScatterLayer.prototype.coord = function () {\n    return;\n  };\n\n  ScatterLayer.prototype.annotation = function () {\n    return;\n  };\n\n  ScatterLayer.prototype.addGeometry = function () {\n    var points = getGeom('point', 'circle', {\n      plot: this\n    });\n    this.points = points;\n\n    if (this.options.tooltip && this.options.tooltip.visible) {\n      var _a = this.options.tooltip,\n          showTitle = _a.showTitle,\n          titleField = _a.titleField;\n      this.extractTooltip();\n      this.setConfig('tooltip', __assign({\n        showTitle: showTitle,\n        title: showTitle ? titleField : undefined\n      }, this.options.tooltip));\n    }\n\n    if (this.options.label) {\n      this.label();\n    }\n\n    this.setConfig('geometry', points);\n  };\n\n  ScatterLayer.prototype.label = function () {\n    var props = this.options;\n\n    if (props.label.visible === false) {\n      if (this.points) {\n        this.points.label = false;\n      }\n\n      return;\n    }\n\n    var label = getComponent('label', __assign(__assign({\n      fields: props.label.field ? [props.label.field] : [props.yField]\n    }, props.label), {\n      plot: this\n    }));\n\n    if (this.points) {\n      this.points.label = label;\n    }\n  };\n\n  ScatterLayer.prototype.animation = function () {\n    _super.prototype.animation.call(this);\n\n    var props = this.options;\n\n    if (props.animation === false) {\n      /** 关闭动画 */\n      this.points.animate = false;\n    }\n  };\n\n  ScatterLayer.prototype.parseEvents = function (eventParser) {\n    // 气泡图继承散点图时，会存在 eventParser\n    _super.prototype.parseEvents.call(this, eventParser || EventParser);\n  };\n\n  ScatterLayer.prototype.extractTooltip = function () {\n    this.points.tooltip = {};\n    var tooltipOptions = this.options.tooltip;\n\n    if (tooltipOptions.fields) {\n      this.points.tooltip.fields = tooltipOptions.fields;\n    } else {\n      this.points.tooltip.fields = [this.options.xField, this.options.yField];\n    }\n\n    if (tooltipOptions.formatter) {\n      this.points.tooltip.callback = tooltipOptions.formatter;\n\n      if (this.options.colorField) {\n        this.points.tooltip.fields.push(this.options.colorField);\n      }\n    }\n  };\n\n  return ScatterLayer;\n}(ViewLayer);\n\nexport default ScatterLayer;\nregisterPlotType('scatter', ScatterLayer);","map":{"version":3,"sources":["../../../src/plots/scatter/layer.ts"],"names":[],"mappings":"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","sourcesContent":["import { deepMix, isNil, get, has, find } from '@antv/util';\nimport { registerPlotType } from '../../base/global';\nimport { LayerConfig } from '../../base/layer';\nimport ViewLayer, { ViewConfig } from '../../base/view-layer';\nimport { getGeom } from '../../geoms/factory';\nimport { ITimeAxis, IValueAxis, DataItem, GraphicStyle } from '../../interface/config';\nimport { extractScale } from '../../util/scale';\nimport Quadrant, { QuadrantConfig } from './components/quadrant';\nimport Trendline, { TrendlineConfig } from './components/trendline';\nimport * as EventParser from './event';\nimport { getComponent } from '../../components/factory';\nimport './theme';\n\nconst G2_GEOM_MAP = {\n  scatter: 'point',\n};\n\nconst PLOT_GEOM_MAP = {\n  point: 'point',\n};\n\nexport interface PointViewConfig extends ViewConfig {\n  /** 散点样式 */\n  pointStyle?: GraphicStyle | ((...args: any) => GraphicStyle);\n  /** 颜色字段 */\n  colorField?: string | string[];\n  /** x 轴配置 */\n  xAxis?: ITimeAxis | IValueAxis;\n  /** y 轴配置 */\n  yAxis?: ITimeAxis | IValueAxis;\n  quadrant?: QuadrantConfig;\n  trendline?: TrendlineConfig;\n}\n\nexport interface ScatterViewConfig extends PointViewConfig {\n  /** 散点大小 */\n  pointSize?: number | any;\n}\n\nexport interface ScatterLayerConfig extends ScatterViewConfig, LayerConfig {}\n\nexport default class ScatterLayer<T extends ScatterLayerConfig = ScatterLayerConfig> extends ViewLayer<T> {\n  public static getDefaultOptions(): any {\n    return deepMix({}, super.getDefaultOptions(), {\n      pointSize: 4,\n      pointStyle: {\n        lineWidth: 1,\n        strokeOpacity: 1,\n        fillOpacity: 0.95,\n        stroke: '#fff',\n      },\n      xAxis: {\n        nice: true,\n        grid: {\n          visible: true,\n        },\n        line: {\n          visible: true,\n        },\n      },\n      yAxis: {\n        nice: true,\n        grid: {\n          visible: true,\n        },\n        line: {\n          visible: true,\n        },\n      },\n      tooltip: {\n        visible: true,\n        // false 会造成 tooltip 只能显示一条数据，true 会造成 tooltip 在空白区域也会显示\n        shared: null,\n        showTitle: false,\n        showMarkers: false,\n        showCrosshairs: false,\n      },\n      label: {\n        visible: false,\n      },\n      shape: 'circle',\n    });\n  }\n\n  public type: string = 'scatter';\n  public points: any;\n  protected quadrant: Quadrant;\n  protected trendline: Trendline;\n\n  public afterRender() {\n    super.afterRender();\n    if (this.quadrant) {\n      this.quadrant.destroy();\n    }\n    if (this.trendline) {\n      this.trendline.destroy();\n    }\n    if (this.options.quadrant && this.options.quadrant.visible) {\n      this.quadrant = new Quadrant({\n        view: this.view,\n        plotOptions: this.options,\n        ...this.options.quadrant,\n      });\n      this.quadrant.render();\n    }\n    if (this.options.trendline && this.options.trendline.visible) {\n      this.trendline = new Trendline({\n        view: this.view,\n        plotOptions: this.options,\n        ...this.options.trendline,\n      });\n      this.trendline.render();\n    }\n  }\n\n  public destroy() {\n    if (this.quadrant) {\n      this.quadrant.destroy();\n      this.quadrant = null;\n    }\n    if (this.trendline) {\n      this.trendline.destroy();\n      this.trendline = null;\n    }\n    super.destroy();\n  }\n\n  private isValidLinearValue(value) {\n    if (isNil(value)) {\n      return false;\n    } else if (Number.isNaN(Number(value))) {\n      return false;\n    }\n    return true;\n  }\n\n  protected processData(data?: DataItem[]): DataItem[] | undefined {\n    const { xField, yField } = this.options;\n    const xAxisType = get(this.options, ['xAxis', 'type'], 'linear');\n    const yAxisType = get(this.options, ['yAxis', 'type'], 'linear');\n    if (xAxisType && yAxisType) {\n      const fiteredData = data\n        .filter((item) => {\n          if (xAxisType === 'linear' && !this.isValidLinearValue(item[xField])) {\n            return false;\n          }\n          if (yAxisType === 'linear' && !this.isValidLinearValue(item[yField])) {\n            return false;\n          }\n          return true;\n        })\n        .map((item) => {\n          return {\n            ...item,\n            [xField]: xAxisType === 'linear' ? Number(item[xField]) : String(item[xField]),\n            [yField]: yAxisType === 'linear' ? Number(item[yField]) : String(item[yField]),\n          };\n        });\n      return fiteredData;\n    }\n\n    return data;\n  }\n\n  protected geometryParser(dim, type) {\n    if (dim === 'g2') {\n      return G2_GEOM_MAP[type];\n    }\n    return PLOT_GEOM_MAP[type];\n  }\n\n  protected scale() {\n    const props = this.options;\n    const scales = {};\n    /** 配置x-scale */\n    scales[props.xField] = {};\n    if (has(props, 'xAxis')) {\n      extractScale(scales[props.xField], props.xAxis);\n    }\n    /** 配置y-scale */\n    scales[props.yField] = {};\n    if (has(props, 'yAxis')) {\n      extractScale(scales[props.yField], props.yAxis);\n    }\n    const timeLineInteraction = find(props.interactions, (interaction) => {\n      return interaction.type === 'timeline';\n    });\n    if (timeLineInteraction && get(timeLineInteraction, 'cfg.key')) {\n      const keyField = timeLineInteraction.cfg.key;\n      if (scales[keyField]) {\n        scales[keyField].key = true;\n      } else {\n        scales[keyField] = { key: true };\n      }\n    }\n    this.setConfig('scales', scales);\n    super.scale();\n  }\n\n  protected coord() {\n    return;\n  }\n\n  protected annotation() {\n    return;\n  }\n\n  protected addGeometry() {\n    const points = getGeom('point', 'circle', {\n      plot: this,\n    });\n    this.points = points;\n    if (this.options.tooltip && this.options.tooltip.visible) {\n      const { showTitle, titleField } = this.options.tooltip;\n      this.extractTooltip();\n      this.setConfig('tooltip', {\n        showTitle,\n        title: showTitle ? titleField : undefined,\n        ...this.options.tooltip,\n      } as any);\n    }\n    if (this.options.label) {\n      this.label();\n    }\n    this.setConfig('geometry', points);\n  }\n\n  protected label() {\n    const props = this.options;\n\n    if (props.label.visible === false) {\n      if (this.points) {\n        this.points.label = false;\n      }\n      return;\n    }\n\n    const label = getComponent('label', {\n      fields: props.label.field ? [props.label.field] : [props.yField],\n      ...props.label,\n      plot: this,\n    });\n\n    if (this.points) {\n      this.points.label = label;\n    }\n  }\n\n  protected animation() {\n    super.animation();\n    const props = this.options;\n    if (props.animation === false) {\n      /** 关闭动画 */\n      this.points.animate = false;\n    }\n  }\n\n  protected parseEvents(eventParser) {\n    // 气泡图继承散点图时，会存在 eventParser\n    super.parseEvents(eventParser || EventParser);\n  }\n\n  protected extractTooltip() {\n    this.points.tooltip = {};\n    const tooltipOptions: any = this.options.tooltip;\n    if (tooltipOptions.fields) {\n      this.points.tooltip.fields = tooltipOptions.fields;\n    } else {\n      this.points.tooltip.fields = [this.options.xField, this.options.yField];\n    }\n    if (tooltipOptions.formatter) {\n      this.points.tooltip.callback = tooltipOptions.formatter;\n      if (this.options.colorField) {\n        this.points.tooltip.fields.push(this.options.colorField);\n      }\n    }\n  }\n}\n\nregisterPlotType('scatter', ScatterLayer);\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}