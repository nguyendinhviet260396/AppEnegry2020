{"ast":null,"code":"import { __extends } from \"tslib\";\nimport EE from '@antv/event-emitter';\nimport { getGesture } from './gestures';\n/**\n * 给 view 添加移动端的滚动能力：\n *  - 监听 touch 事件，emit wheel 事件\n *  - 滚动惯性包装\n *  - 和 pc 的 wheel 事件保持基本一致\n */\n\nvar GM =\n/** @class */\nfunction (_super) {\n  __extends(GM, _super);\n\n  function GM(element, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var _this = _super.call(this) || this;\n    /**\n     * touchstart 触发\n     * @param ev\n     */\n\n\n    _this.onTouchStart = function (ev) {\n      _this.preventEvent(ev);\n\n      _this.element.on('touchmove', _this.onTouchMove);\n\n      _this.element.on('touchend', _this.onTouchEnd);\n\n      _this.element.on('touchcancel', _this.onTouchCancel);\n\n      _this.emit('touchdown', ev);\n\n      _this.doGestures(ev);\n    };\n    /**\n     * touchmove 触发\n     * @param ev\n     */\n\n\n    _this.onTouchMove = function (ev) {\n      _this.preventEvent(ev);\n\n      _this.emit('touchmove', ev);\n\n      _this.doGestures(ev);\n    };\n    /**\n     * touchend 触发\n     * @param ev\n     */\n\n\n    _this.onTouchEnd = function (ev) {\n      _this.preventEvent(ev);\n\n      _this.emit('touchend', ev);\n\n      _this.element.off('touchmove', _this.onTouchMove);\n\n      _this.element.off('touchend', _this.onTouchEnd);\n\n      _this.element.off('touchcancel', _this.onTouchCancel);\n\n      _this.doGestures(ev);\n    };\n    /**\n     * touchcancel 触发\n     * @param ev\n     */\n\n\n    _this.onTouchCancel = function (ev) {\n      _this.preventEvent(ev);\n\n      _this.emit('touchcancel', ev);\n\n      _this.element.off('touchmove', _this.onTouchMove);\n\n      _this.element.off('touchend', _this.onTouchEnd);\n\n      _this.element.off('touchcancel', _this.onTouchCancel);\n\n      _this.doGestures(ev);\n    };\n\n    _this.element = element;\n    _this.options = options;\n\n    _this.initialGestures();\n\n    _this.bindTouchStart();\n\n    return _this;\n  }\n  /**\n   * 销毁，取消事件绑定\n   */\n\n\n  GM.prototype.destroy = function () {\n    this.element.off('touchstart', this.onTouchStart);\n    this.off();\n  };\n  /**\n   * 实例化手势\n   */\n\n\n  GM.prototype.initialGestures = function () {\n    var _this = this;\n\n    var gestures = this.options.gestures || ['Pan', 'Press', 'Swipe', 'Tap'];\n    this.gestures = gestures.map(function (gesture) {\n      var Ctor = getGesture(gesture);\n      return new Ctor(_this);\n    });\n  };\n  /**\n   * 绑定 touchstart 事件\n   */\n\n\n  GM.prototype.bindTouchStart = function () {\n    this.element.on('touchstart', this.onTouchStart);\n  };\n\n  GM.prototype.preventEvent = function (ev) {\n    var type = ev.type;\n    var prevents = this.options.prevents || [];\n\n    if (prevents.includes(type)) {\n      ev.preventDefault();\n    }\n  };\n\n  GM.prototype.doGestures = function (ev) {\n    this.gestures.forEach(function (g) {\n      g.do(ev);\n    });\n  };\n\n  return GM;\n}(EE);\n\nexport { GM };","map":{"version":3,"sources":["../src/gm.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\nimport EE from '@antv/event-emitter';\nimport { getGesture } from './gestures';\n/**\n * 给 view 添加移动端的滚动能力：\n *  - 监听 touch 事件，emit wheel 事件\n *  - 滚动惯性包装\n *  - 和 pc 的 wheel 事件保持基本一致\n */\nvar GM = /** @class */ (function (_super) {\n    __extends(GM, _super);\n    function GM(element, options) {\n        if (options === void 0) { options = {}; }\n        var _this = _super.call(this) || this;\n        /**\n         * touchstart 触发\n         * @param ev\n         */\n        _this.onTouchStart = function (ev) {\n            _this.preventEvent(ev);\n            _this.element.on('touchmove', _this.onTouchMove);\n            _this.element.on('touchend', _this.onTouchEnd);\n            _this.element.on('touchcancel', _this.onTouchCancel);\n            _this.emit('touchdown', ev);\n            _this.doGestures(ev);\n        };\n        /**\n         * touchmove 触发\n         * @param ev\n         */\n        _this.onTouchMove = function (ev) {\n            _this.preventEvent(ev);\n            _this.emit('touchmove', ev);\n            _this.doGestures(ev);\n        };\n        /**\n         * touchend 触发\n         * @param ev\n         */\n        _this.onTouchEnd = function (ev) {\n            _this.preventEvent(ev);\n            _this.emit('touchend', ev);\n            _this.element.off('touchmove', _this.onTouchMove);\n            _this.element.off('touchend', _this.onTouchEnd);\n            _this.element.off('touchcancel', _this.onTouchCancel);\n            _this.doGestures(ev);\n        };\n        /**\n         * touchcancel 触发\n         * @param ev\n         */\n        _this.onTouchCancel = function (ev) {\n            _this.preventEvent(ev);\n            _this.emit('touchcancel', ev);\n            _this.element.off('touchmove', _this.onTouchMove);\n            _this.element.off('touchend', _this.onTouchEnd);\n            _this.element.off('touchcancel', _this.onTouchCancel);\n            _this.doGestures(ev);\n        };\n        _this.element = element;\n        _this.options = options;\n        _this.initialGestures();\n        _this.bindTouchStart();\n        return _this;\n    }\n    /**\n     * 销毁，取消事件绑定\n     */\n    GM.prototype.destroy = function () {\n        this.element.off('touchstart', this.onTouchStart);\n        this.off();\n    };\n    /**\n     * 实例化手势\n     */\n    GM.prototype.initialGestures = function () {\n        var _this = this;\n        var gestures = this.options.gestures || ['Pan', 'Press', 'Swipe', 'Tap'];\n        this.gestures = gestures.map(function (gesture) {\n            var Ctor = getGesture(gesture);\n            return new Ctor(_this);\n        });\n    };\n    /**\n     * 绑定 touchstart 事件\n     */\n    GM.prototype.bindTouchStart = function () {\n        this.element.on('touchstart', this.onTouchStart);\n    };\n    GM.prototype.preventEvent = function (ev) {\n        var type = ev.type;\n        var prevents = this.options.prevents || [];\n        if (prevents.includes(type)) {\n            ev.preventDefault();\n        }\n    };\n    GM.prototype.doGestures = function (ev) {\n        this.gestures.forEach(function (g) {\n            g.do(ev);\n        });\n    };\n    return GM;\n}(EE));\nexport { GM };\n//# sourceMappingURL=gm.js.map"]},"metadata":{},"sourceType":"module"}