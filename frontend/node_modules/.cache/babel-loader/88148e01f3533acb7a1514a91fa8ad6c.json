{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { deepMix, each, map, isArray, get, clone, isNumber } from '@antv/util';\nimport BaseComponent from '../base';\nimport { VIEW_LIFE_CIRCLE, getDefaultAnimateCfg, doAnimate, ORIGIN } from '../../dependents';\nimport BBox from '../../util/bbox';\n\nvar LabelComponent =\n/** @class */\nfunction (_super) {\n  __extends(LabelComponent, _super);\n\n  function LabelComponent() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.labelsCfgMap = {};\n    _this.lastLabelsCfgMap = {};\n    return _this;\n  }\n\n  LabelComponent.prototype.getGeometry = function () {\n    return this.geometry;\n  };\n\n  LabelComponent.prototype.getLabels = function () {\n    return this.labels;\n  };\n\n  LabelComponent.prototype.show = function () {\n    this.container.show();\n  };\n\n  LabelComponent.prototype.hide = function () {\n    this.container.hide();\n  };\n\n  LabelComponent.prototype.initConfig = function (config) {\n    var _this = this;\n\n    this.layer = config.layer;\n    var view = this.layer.view;\n    this.view = view;\n    this.geometry = config.geometry;\n    this.coord = view.getCoordinate();\n    this.options = deepMix(this.getDefaultOptions(), config.label);\n\n    var callback = function () {\n      _this.clear();\n\n      _this.labelsCfgMap = {};\n      _this.lastLabelsCfgMap = {};\n\n      _this.render();\n    };\n\n    view.on(VIEW_LIFE_CIRCLE.AFTER_PAINT, callback);\n    this.addDisposable(function () {\n      view.off(VIEW_LIFE_CIRCLE.AFTER_PAINT, callback);\n    });\n  };\n\n  LabelComponent.prototype.renderInner = function (group) {\n    var _this = this;\n\n    this.labels = [];\n    this.labelsCfgMap = {}; // 绘制 Label 图形\n\n    each(this.geometry.elements, function (element, elementIdx) {\n      var labels = [].concat(_this.drawLabelItem(group, element, elementIdx));\n      each(labels, function (label, idx) {\n        _this.adjustLabel(label, element, idx);\n\n        if (!label.destroyed) {\n          _this.labels.push(label);\n\n          _this.labelsCfgMap[label.get('id')] = clone(label.attrs);\n        }\n      });\n    }); // 执行布局\n\n    this.layoutLabels(this.geometry, this.labels); // 执行动画：参照 G2 Label 动画\n\n    var lastLabelsCfgMap = this.lastLabelsCfgMap;\n    var labelsCfgMap = this.labelsCfgMap;\n    var animateCfg = this.geometry.animateOption ? getDefaultAnimateCfg('label', this.coord) : false;\n    each(labelsCfgMap, function (attrs, id) {\n      var shape = group.findById(id);\n\n      if (shape) {\n        if (lastLabelsCfgMap[id]) {\n          var oldAttrs = lastLabelsCfgMap[id]; // 图形发生更新\n\n          var updateAnimateCfg = get(animateCfg, 'update');\n\n          if (updateAnimateCfg) {\n            shape.stopAnimate();\n            shape.attr(oldAttrs);\n            doAnimate(shape, updateAnimateCfg, {\n              toAttrs: __assign({}, attrs),\n              coordinate: _this.coord\n            });\n          }\n        } else {\n          // 新生成的 shape\n          var appearAnimateCfg = get(animateCfg, 'appear');\n\n          if (appearAnimateCfg) {\n            shape.stopAnimate();\n            doAnimate(shape, appearAnimateCfg, {\n              toAttrs: __assign({}, shape.attr()),\n              coordinate: _this.coord\n            });\n          }\n        }\n      }\n\n      delete lastLabelsCfgMap[id];\n    });\n    each(lastLabelsCfgMap, function (attrs, id) {\n      // 移除\n      var leaveAnimateCfg = get(animateCfg, 'leave');\n\n      if (leaveAnimateCfg) {\n        var tempShape = group.addShape('text', {\n          attrs: attrs,\n          id: id,\n          name: 'label'\n        });\n        tempShape.stopAnimate();\n        doAnimate(tempShape, leaveAnimateCfg, {\n          toAttrs: null,\n          coordinate: _this.coord\n        });\n      }\n    });\n    this.lastLabelsCfgMap = this.labelsCfgMap;\n  };\n\n  LabelComponent.prototype.drawLabelText = function (group, attrs, extraCfgs) {\n    if (extraCfgs === void 0) {\n      extraCfgs = {};\n    }\n\n    return group.addShape('text', __assign({\n      attrs: attrs\n    }, extraCfgs));\n  };\n\n  LabelComponent.prototype.drawLabelItem = function (group, element, elementIndex) {\n    var _this = this;\n\n    var model = element.getModel();\n    var items = [].concat(this.getLabelItemAttrs(element, elementIndex));\n    var offset = this.getDefaultOffset();\n    var offsetPoint = this.getLabelOffset();\n    return map(items, function (attrs, index) {\n      var _a;\n\n      var position = {\n        x: attrs.x + offsetPoint.x,\n        y: attrs.y + offsetPoint.y\n      };\n      var dataItem = isArray(model.mappingData) ? model.mappingData[index] : model.mappingData;\n\n      var id = _this.getLabelId(dataItem);\n\n      return _this.drawLabelText(group, __assign(__assign({}, attrs), position), (_a = {\n        id: id,\n        name: 'label',\n        offset: offset,\n        element: element\n      }, _a[ORIGIN] = dataItem, _a));\n    });\n  };\n  /** 获取当前 Label 的 offset */\n\n\n  LabelComponent.prototype.getDefaultOffset = function () {\n    return Number(this.options.offset);\n  };\n  /** 默认实现：获取当前 Label 的 offset 点：包括 offset、offsetX、offsetY */\n\n\n  LabelComponent.prototype.getLabelOffset = function () {\n    var _a = this.options,\n        offsetX = _a.offsetX,\n        offsetY = _a.offsetY;\n    return {\n      x: isNumber(offsetX) ? offsetX : 0,\n      y: isNumber(offsetY) ? offsetY : 0\n    };\n  };\n  /** 通过指定方向和系数获取整体 offset 点 */\n\n\n  LabelComponent.prototype.getLabelOffsetByDimAndFactor = function (dim, factor) {\n    var _a = this.options,\n        offsetX = _a.offsetX,\n        offsetY = _a.offsetY;\n    var offset = this.getDefaultOffset();\n    var offsetPoint = {\n      x: 0,\n      y: 0\n    };\n    offsetPoint[dim] = offset * factor;\n\n    if (isNumber(offsetX)) {\n      offsetPoint.x += offsetX;\n    }\n\n    if (isNumber(offsetY)) {\n      offsetPoint.y += offsetY;\n    }\n\n    return offsetPoint;\n  };\n  /** 初始化默认全局配置 */\n\n\n  LabelComponent.prototype.getDefaultOptions = function () {\n    return {};\n  };\n  /** 整理对所有 Labels 的布局调整 */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  LabelComponent.prototype.layoutLabels = function (geometry, labels) {// empty\n  };\n\n  LabelComponent.prototype.getLabelId = function (data) {\n    var origin = data._origin;\n    var type = this.geometry.type;\n    var xScale = this.geometry.getXScale();\n    var yScale = this.geometry.getYScale();\n    var labelId = this.geometry.getElementId(data);\n\n    if (type === 'line' || type === 'area') {\n      // 折线图以及区域图，一条线会对应一组数据，即多个 labels，为了区分这些 labels，需要在 line id 的前提下加上 x 字段值\n      labelId += \" \" + origin[xScale.field];\n    } else if (type === 'path') {\n      // path 路径图，无序，有可能存在相同 x 不同 y 的情况，需要通过 x y 来确定唯一 id\n      labelId += \" \" + origin[xScale.field] + \"-\" + origin[yScale.field];\n    }\n\n    return labelId;\n  };\n\n  LabelComponent.prototype.getCoordinateBBox = function () {\n    var coord = this.coord;\n    var start = coord.start,\n        end = coord.end;\n    return new BBox(Math.min(start.x, end.x), Math.min(start.y, end.y), coord.getWidth(), coord.getHeight());\n  };\n\n  return LabelComponent;\n}(BaseComponent);\n\nexport default LabelComponent; // Label 组件注册\n\nvar LABEL_CONFIG_MAP = {};\nexport function registerLabelComponent(type, component) {\n  LABEL_CONFIG_MAP[type] = component;\n}\nexport function getLabelComponent(type) {\n  return LABEL_CONFIG_MAP[type];\n}","map":{"version":3,"sources":["../../../src/components/label/base.ts"],"names":[],"mappings":";AAAA,SAAS,OAAT,EAAkB,IAAlB,EAAwB,GAAxB,EAA6B,OAA7B,EAAsC,GAAtC,EAA2C,KAA3C,EAAkD,QAAlD,QAAkE,YAAlE;AAEA,OAAO,aAAP,MAAmD,SAAnD;AACA,SAQE,gBARF,EASE,oBATF,EAUE,SAVF,EAWE,MAXF,QAYO,kBAZP;AAeA,OAAO,IAAP,MAAiB,iBAAjB;;AAYA,IAAA,cAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA8E,EAAA,SAAA,CAAA,cAAA,EAAA,MAAA,CAAA;;AAA9E,WAAA,cAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;;AAOU,IAAA,KAAA,CAAA,YAAA,GAA0C,EAA1C;AACA,IAAA,KAAA,CAAA,gBAAA,GAA8C,EAA9C;;AAyNT;;AAvNQ,EAAA,cAAA,CAAA,SAAA,CAAA,WAAA,GAAP,YAAA;AACE,WAAO,KAAK,QAAZ;AACD,GAFM;;AAIA,EAAA,cAAA,CAAA,SAAA,CAAA,SAAA,GAAP,YAAA;AACE,WAAO,KAAK,MAAZ;AACD,GAFM;;AAIA,EAAA,cAAA,CAAA,SAAA,CAAA,IAAA,GAAP,YAAA;AACE,SAAK,SAAL,CAAe,IAAf;AACD,GAFM;;AAIA,EAAA,cAAA,CAAA,SAAA,CAAA,IAAA,GAAP,YAAA;AACE,SAAK,SAAL,CAAe,IAAf;AACD,GAFM;;AAIG,EAAA,cAAA,CAAA,SAAA,CAAA,UAAA,GAAV,UAAqB,MAArB,EAAiD;AAAjD,QAAA,KAAA,GAAA,IAAA;;AACE,SAAK,KAAL,GAAa,MAAM,CAAC,KAApB;AACA,QAAM,IAAI,GAAG,KAAK,KAAL,CAAW,IAAxB;AACA,SAAK,IAAL,GAAY,IAAZ;AACA,SAAK,QAAL,GAAgB,MAAM,CAAC,QAAvB;AACA,SAAK,KAAL,GAAa,IAAI,CAAC,aAAL,EAAb;AACA,SAAK,OAAL,GAAe,OAAO,CAAC,KAAK,iBAAL,EAAD,EAA2B,MAAM,CAAC,KAAlC,CAAtB;;AAEA,QAAM,QAAQ,GAAG,YAAA;AACf,MAAA,KAAI,CAAC,KAAL;;AACA,MAAA,KAAI,CAAC,YAAL,GAAoB,EAApB;AACA,MAAA,KAAI,CAAC,gBAAL,GAAwB,EAAxB;;AACA,MAAA,KAAI,CAAC,MAAL;AACD,KALD;;AAMA,IAAA,IAAI,CAAC,EAAL,CAAQ,gBAAgB,CAAC,WAAzB,EAAsC,QAAtC;AACA,SAAK,aAAL,CAAmB,YAAA;AACjB,MAAA,IAAI,CAAC,GAAL,CAAS,gBAAgB,CAAC,WAA1B,EAAuC,QAAvC;AACD,KAFD;AAGD,GAlBS;;AAoBA,EAAA,cAAA,CAAA,SAAA,CAAA,WAAA,GAAV,UAAsB,KAAtB,EAAmC;AAAnC,QAAA,KAAA,GAAA,IAAA;;AACE,SAAK,MAAL,GAAc,EAAd;AACA,SAAK,YAAL,GAAoB,EAApB,CAFiC,CAIjC;;AACA,IAAA,IAAI,CAAC,KAAK,QAAL,CAAc,QAAf,EAAyB,UAAC,OAAD,EAAmB,UAAnB,EAAqC;AAChE,UAAM,MAAM,GAAG,GAAG,MAAH,CAAU,KAAI,CAAC,aAAL,CAAmB,KAAnB,EAA0B,OAA1B,EAAmC,UAAnC,CAAV,CAAf;AACA,MAAA,IAAI,CAAC,MAAD,EAAS,UAAC,KAAD,EAAQ,GAAR,EAAW;AACtB,QAAA,KAAI,CAAC,WAAL,CAAiB,KAAjB,EAAwB,OAAxB,EAAiC,GAAjC;;AACA,YAAI,CAAC,KAAK,CAAC,SAAX,EAAsB;AACpB,UAAA,KAAI,CAAC,MAAL,CAAY,IAAZ,CAAiB,KAAjB;;AACA,UAAA,KAAI,CAAC,YAAL,CAAkB,KAAK,CAAC,GAAN,CAAU,IAAV,CAAlB,IAAqC,KAAK,CAAC,KAAK,CAAC,KAAP,CAA1C;AACD;AACF,OANG,CAAJ;AAOD,KATG,CAAJ,CALiC,CAgBjC;;AACA,SAAK,YAAL,CAAkB,KAAK,QAAvB,EAAiC,KAAK,MAAtC,EAjBiC,CAmBjC;;AACA,QAAM,gBAAgB,GAAG,KAAK,gBAA9B;AACA,QAAM,YAAY,GAAG,KAAK,YAA1B;AACA,QAAM,UAAU,GAAG,KAAK,QAAL,CAAc,aAAd,GAA8B,oBAAoB,CAAC,OAAD,EAAU,KAAK,KAAf,CAAlD,GAA0E,KAA7F;AACA,IAAA,IAAI,CAAC,YAAD,EAAe,UAAC,KAAD,EAAmB,EAAnB,EAA6B;AAC9C,UAAM,KAAK,GAAG,KAAK,CAAC,QAAN,CAAe,EAAf,CAAd;;AACA,UAAI,KAAJ,EAAW;AACT,YAAI,gBAAgB,CAAC,EAAD,CAApB,EAA0B;AACxB,cAAM,QAAQ,GAAG,gBAAgB,CAAC,EAAD,CAAjC,CADwB,CAExB;;AACA,cAAM,gBAAgB,GAAG,GAAG,CAAC,UAAD,EAAa,QAAb,CAA5B;;AACA,cAAI,gBAAJ,EAAsB;AACpB,YAAA,KAAK,CAAC,WAAN;AACA,YAAA,KAAK,CAAC,IAAN,CAAW,QAAX;AACA,YAAA,SAAS,CAAC,KAAD,EAAQ,gBAAR,EAA0B;AACjC,cAAA,OAAO,EAAA,QAAA,CAAA,EAAA,EACF,KADE,CAD0B;AAIjC,cAAA,UAAU,EAAE,KAAI,CAAC;AAJgB,aAA1B,CAAT;AAMD;AACF,SAdD,MAcO;AACL;AACA,cAAM,gBAAgB,GAAG,GAAG,CAAC,UAAD,EAAa,QAAb,CAA5B;;AACA,cAAI,gBAAJ,EAAsB;AACpB,YAAA,KAAK,CAAC,WAAN;AACA,YAAA,SAAS,CAAC,KAAD,EAAQ,gBAAR,EAA0B;AACjC,cAAA,OAAO,EAAA,QAAA,CAAA,EAAA,EACF,KAAK,CAAC,IAAN,EADE,CAD0B;AAIjC,cAAA,UAAU,EAAE,KAAI,CAAC;AAJgB,aAA1B,CAAT;AAMD;AACF;AACF;;AACD,aAAO,gBAAgB,CAAC,EAAD,CAAvB;AACD,KAhCG,CAAJ;AAiCA,IAAA,IAAI,CAAC,gBAAD,EAAmB,UAAC,KAAD,EAAmB,EAAnB,EAAqB;AAC1C;AACA,UAAM,eAAe,GAAG,GAAG,CAAC,UAAD,EAAa,OAAb,CAA3B;;AACA,UAAI,eAAJ,EAAqB;AACnB,YAAM,SAAS,GAAG,KAAK,CAAC,QAAN,CAAe,MAAf,EAAuB;AACvC,UAAA,KAAK,EAAA,KADkC;AAEvC,UAAA,EAAE,EAAA,EAFqC;AAGvC,UAAA,IAAI,EAAE;AAHiC,SAAvB,CAAlB;AAKA,QAAA,SAAS,CAAC,WAAV;AACA,QAAA,SAAS,CAAC,SAAD,EAAY,eAAZ,EAA6B;AACpC,UAAA,OAAO,EAAE,IAD2B;AAEpC,UAAA,UAAU,EAAE,KAAI,CAAC;AAFmB,SAA7B,CAAT;AAID;AACF,KAfG,CAAJ;AAgBA,SAAK,gBAAL,GAAwB,KAAK,YAA7B;AACD,GAzES;;AA2EA,EAAA,cAAA,CAAA,SAAA,CAAA,aAAA,GAAV,UAAwB,KAAxB,EAAuC,KAAvC,EAAyD,SAAzD,EAAiF;AAAxB,QAAA,SAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,SAAA,GAAA,EAAA;AAAwB;;AAC/E,WAAO,KAAK,CAAC,QAAN,CAAe,MAAf,EAAqB,QAAA,CAAA;AAC1B,MAAA,KAAK,EAAA;AADqB,KAAA,EAEvB,SAFuB,CAArB,CAAP;AAID,GALS;;AAOA,EAAA,cAAA,CAAA,SAAA,CAAA,aAAA,GAAV,UAAwB,KAAxB,EAAuC,OAAvC,EAAyD,YAAzD,EAA6E;AAA7E,QAAA,KAAA,GAAA,IAAA;;AACE,QAAM,KAAK,GAAG,OAAO,CAAC,QAAR,EAAd;AACA,QAAM,KAAK,GAAG,GAAG,MAAH,CAAU,KAAK,iBAAL,CAAuB,OAAvB,EAAgC,YAAhC,CAAV,CAAd;AACA,QAAM,MAAM,GAAG,KAAK,gBAAL,EAAf;AACA,QAAM,WAAW,GAAG,KAAK,cAAL,EAApB;AACA,WAAO,GAAG,CAAC,KAAD,EAAQ,UAAC,KAAD,EAAQ,KAAR,EAAa;;;AAC7B,UAAM,QAAQ,GAAG;AACf,QAAA,CAAC,EAAE,KAAK,CAAC,CAAN,GAAU,WAAW,CAAC,CADV;AAEf,QAAA,CAAC,EAAE,KAAK,CAAC,CAAN,GAAU,WAAW,CAAC;AAFV,OAAjB;AAIA,UAAM,QAAQ,GAAG,OAAO,CAAC,KAAK,CAAC,WAAP,CAAP,GAA6B,KAAK,CAAC,WAAN,CAAkB,KAAlB,CAA7B,GAAwD,KAAK,CAAC,WAA/E;;AACA,UAAM,EAAE,GAAG,KAAI,CAAC,UAAL,CAAgB,QAAhB,CAAX;;AACA,aAAO,KAAI,CAAC,aAAL,CACL,KADK,EACA,QAAA,CAAA,QAAA,CAAA,EAAA,EACA,KADA,CAAA,EACU,QADV,CADA,GAEkB,EAAA,GAAA;AAErB,QAAA,EAAE,EAAA,EAFmB;AAGrB,QAAA,IAAI,EAAE,OAHe;AAIrB,QAAA,MAAM,EAAA,MAJe;AAKrB,QAAA,OAAO,EAAA;AALc,OAAA,EAMrB,EAAA,CAAC,MAAD,CAAA,GAAU,QANW,EAQxB,EAVM,EAAP;AAWD,KAlBS,CAAV;AAmBD,GAxBS;AA0BV;;;AACU,EAAA,cAAA,CAAA,SAAA,CAAA,gBAAA,GAAV,YAAA;AACE,WAAO,MAAM,CAAC,KAAK,OAAL,CAAa,MAAd,CAAb;AACD,GAFS;AAIV;;;AACU,EAAA,cAAA,CAAA,SAAA,CAAA,cAAA,GAAV,YAAA;AACQ,QAAA,EAAA,GAAuB,KAAK,OAA5B;AAAA,QAAE,OAAO,GAAA,EAAA,CAAA,OAAT;AAAA,QAAW,OAAO,GAAA,EAAA,CAAA,OAAlB;AACN,WAAO;AACL,MAAA,CAAC,EAAE,QAAQ,CAAC,OAAD,CAAR,GAAoB,OAApB,GAA8B,CAD5B;AAEL,MAAA,CAAC,EAAE,QAAQ,CAAC,OAAD,CAAR,GAAoB,OAApB,GAA8B;AAF5B,KAAP;AAID,GANS;AAQV;;;AACU,EAAA,cAAA,CAAA,SAAA,CAAA,4BAAA,GAAV,UAAuC,GAAvC,EAAuD,MAAvD,EAAqE;AAC7D,QAAA,EAAA,GAAuB,KAAK,OAA5B;AAAA,QAAE,OAAO,GAAA,EAAA,CAAA,OAAT;AAAA,QAAW,OAAO,GAAA,EAAA,CAAA,OAAlB;AACN,QAAM,MAAM,GAAG,KAAK,gBAAL,EAAf;AACA,QAAM,WAAW,GAAG;AAClB,MAAA,CAAC,EAAE,CADe;AAElB,MAAA,CAAC,EAAE;AAFe,KAApB;AAIA,IAAA,WAAW,CAAC,GAAD,CAAX,GAAmB,MAAM,GAAG,MAA5B;;AACA,QAAI,QAAQ,CAAC,OAAD,CAAZ,EAAuB;AACrB,MAAA,WAAW,CAAC,CAAZ,IAAiB,OAAjB;AACD;;AACD,QAAI,QAAQ,CAAC,OAAD,CAAZ,EAAuB;AACrB,MAAA,WAAW,CAAC,CAAZ,IAAiB,OAAjB;AACD;;AACD,WAAO,WAAP;AACD,GAfS;AAiBV;;;AACU,EAAA,cAAA,CAAA,SAAA,CAAA,iBAAA,GAAV,YAAA;AACE,WAAO,EAAP;AACD,GAFS;AAUV;AACA;;;AACU,EAAA,cAAA,CAAA,SAAA,CAAA,YAAA,GAAV,UAAuB,QAAvB,EAA2C,MAA3C,EAA2D,CACzD;AACD,GAFS;;AAIA,EAAA,cAAA,CAAA,SAAA,CAAA,UAAA,GAAV,UAAqB,IAArB,EAAuC;AACrC,QAAM,MAAM,GAAG,IAAI,CAAC,OAApB;AACA,QAAM,IAAI,GAAG,KAAK,QAAL,CAAc,IAA3B;AACA,QAAM,MAAM,GAAG,KAAK,QAAL,CAAc,SAAd,EAAf;AACA,QAAM,MAAM,GAAG,KAAK,QAAL,CAAc,SAAd,EAAf;AACA,QAAI,OAAO,GAAG,KAAK,QAAL,CAAc,YAAd,CAA2B,IAA3B,CAAd;;AACA,QAAI,IAAI,KAAK,MAAT,IAAmB,IAAI,KAAK,MAAhC,EAAwC;AACtC;AACA,MAAA,OAAO,IAAI,MAAI,MAAM,CAAC,MAAM,CAAC,KAAR,CAArB;AACD,KAHD,MAGO,IAAI,IAAI,KAAK,MAAb,EAAqB;AAC1B;AACA,MAAA,OAAO,IAAI,MAAI,MAAM,CAAC,MAAM,CAAC,KAAR,CAAV,GAAwB,GAAxB,GAA4B,MAAM,CAAC,MAAM,CAAC,KAAR,CAA7C;AACD;;AAED,WAAO,OAAP;AACD,GAfS;;AAiBA,EAAA,cAAA,CAAA,SAAA,CAAA,iBAAA,GAAV,YAAA;AACU,QAAA,KAAK,GAAK,KAAL,KAAL;AACA,QAAA,KAAK,GAAU,KAAK,CAAf,KAAL;AAAA,QAAO,GAAG,GAAK,KAAK,CAAV,GAAV;AACR,WAAO,IAAI,IAAJ,CAAS,IAAI,CAAC,GAAL,CAAS,KAAK,CAAC,CAAf,EAAkB,GAAG,CAAC,CAAtB,CAAT,EAAmC,IAAI,CAAC,GAAL,CAAS,KAAK,CAAC,CAAf,EAAkB,GAAG,CAAC,CAAtB,CAAnC,EAA6D,KAAK,CAAC,QAAN,EAA7D,EAA+E,KAAK,CAAC,SAAN,EAA/E,CAAP;AACD,GAJS;;AAKZ,SAAA,cAAA;AAAC,CAjOD,CAA8E,aAA9E,CAAA;;+BAmOA;;AACA,IAAM,gBAAgB,GAAuC,EAA7D;AAEA,OAAM,SAAU,sBAAV,CAAiC,IAAjC,EAA+C,SAA/C,EAA4E;AAChF,EAAA,gBAAgB,CAAC,IAAD,CAAhB,GAAyB,SAAzB;AACD;AAED,OAAM,SAAU,iBAAV,CAA4B,IAA5B,EAAwC;AAC5C,SAAO,gBAAgB,CAAC,IAAD,CAAvB;AACD","sourcesContent":["import { deepMix, each, map, isArray, get, clone, isNumber } from '@antv/util';\nimport ViewLayer from '../../base/view-layer';\nimport BaseComponent, { BaseComponentConfig } from '../base';\nimport {\n  IGroup,\n  IShape,\n  View,\n  Geometry,\n  Element,\n  Coordinate,\n  MappingDatum,\n  VIEW_LIFE_CIRCLE,\n  getDefaultAnimateCfg,\n  doAnimate,\n  ORIGIN,\n} from '../../dependents';\nimport { Label, TextStyle } from '../../interface/config';\nimport { LooseMap } from '../../interface/types';\nimport BBox from '../../util/bbox';\n\nexport interface LabelComponentConfig extends BaseComponentConfig {\n  layer: ViewLayer;\n  geometry: Geometry;\n  label: Label;\n}\n\nexport interface LabelComponentCtor<T extends LabelComponentConfig = LabelComponentConfig> {\n  new (config: T): LabelComponent;\n}\n\nexport default abstract class LabelComponent<L extends Label = Label> extends BaseComponent<LabelComponentConfig> {\n  protected layer: ViewLayer;\n  protected view: View;\n  protected geometry: Geometry;\n  protected coord: Coordinate;\n  protected options: L;\n  protected labels: IShape[];\n  private labelsCfgMap: Record<string, TextStyle> = {};\n  private lastLabelsCfgMap: Record<string, TextStyle> = {};\n\n  public getGeometry() {\n    return this.geometry;\n  }\n\n  public getLabels() {\n    return this.labels;\n  }\n\n  public show() {\n    this.container.show();\n  }\n\n  public hide() {\n    this.container.hide();\n  }\n\n  protected initConfig(config: LabelComponentConfig) {\n    this.layer = config.layer;\n    const view = this.layer.view;\n    this.view = view;\n    this.geometry = config.geometry;\n    this.coord = view.getCoordinate();\n    this.options = deepMix(this.getDefaultOptions(), config.label);\n\n    const callback = () => {\n      this.clear();\n      this.labelsCfgMap = {};\n      this.lastLabelsCfgMap = {};\n      this.render();\n    };\n    view.on(VIEW_LIFE_CIRCLE.AFTER_PAINT, callback);\n    this.addDisposable(() => {\n      view.off(VIEW_LIFE_CIRCLE.AFTER_PAINT, callback);\n    });\n  }\n\n  protected renderInner(group: IGroup) {\n    this.labels = [];\n    this.labelsCfgMap = {};\n\n    // 绘制 Label 图形\n    each(this.geometry.elements, (element: Element, elementIdx: number) => {\n      const labels = [].concat(this.drawLabelItem(group, element, elementIdx));\n      each(labels, (label, idx) => {\n        this.adjustLabel(label, element, idx);\n        if (!label.destroyed) {\n          this.labels.push(label);\n          this.labelsCfgMap[label.get('id')] = clone(label.attrs);\n        }\n      });\n    });\n\n    // 执行布局\n    this.layoutLabels(this.geometry, this.labels);\n\n    // 执行动画：参照 G2 Label 动画\n    const lastLabelsCfgMap = this.lastLabelsCfgMap;\n    const labelsCfgMap = this.labelsCfgMap;\n    const animateCfg = this.geometry.animateOption ? getDefaultAnimateCfg('label', this.coord) : false;\n    each(labelsCfgMap, (attrs: TextStyle, id: string) => {\n      const shape = group.findById(id) as IShape;\n      if (shape) {\n        if (lastLabelsCfgMap[id]) {\n          const oldAttrs = lastLabelsCfgMap[id];\n          // 图形发生更新\n          const updateAnimateCfg = get(animateCfg, 'update');\n          if (updateAnimateCfg) {\n            shape.stopAnimate();\n            shape.attr(oldAttrs);\n            doAnimate(shape, updateAnimateCfg, {\n              toAttrs: {\n                ...attrs,\n              },\n              coordinate: this.coord,\n            });\n          }\n        } else {\n          // 新生成的 shape\n          const appearAnimateCfg = get(animateCfg, 'appear');\n          if (appearAnimateCfg) {\n            shape.stopAnimate();\n            doAnimate(shape, appearAnimateCfg, {\n              toAttrs: {\n                ...shape.attr(),\n              },\n              coordinate: this.coord,\n            });\n          }\n        }\n      }\n      delete lastLabelsCfgMap[id];\n    });\n    each(lastLabelsCfgMap, (attrs: TextStyle, id) => {\n      // 移除\n      const leaveAnimateCfg = get(animateCfg, 'leave');\n      if (leaveAnimateCfg) {\n        const tempShape = group.addShape('text', {\n          attrs,\n          id,\n          name: 'label',\n        });\n        tempShape.stopAnimate();\n        doAnimate(tempShape, leaveAnimateCfg, {\n          toAttrs: null,\n          coordinate: this.coord,\n        });\n      }\n    });\n    this.lastLabelsCfgMap = this.labelsCfgMap;\n  }\n\n  protected drawLabelText(group: IGroup, attrs: TextStyle, extraCfgs: LooseMap = {}): IShape {\n    return group.addShape('text', {\n      attrs,\n      ...extraCfgs,\n    });\n  }\n\n  protected drawLabelItem(group: IGroup, element: Element, elementIndex: number): IShape | IShape[] {\n    const model = element.getModel();\n    const items = [].concat(this.getLabelItemAttrs(element, elementIndex));\n    const offset = this.getDefaultOffset();\n    const offsetPoint = this.getLabelOffset();\n    return map(items, (attrs, index) => {\n      const position = {\n        x: attrs.x + offsetPoint.x,\n        y: attrs.y + offsetPoint.y,\n      };\n      const dataItem = isArray(model.mappingData) ? model.mappingData[index] : model.mappingData;\n      const id = this.getLabelId(dataItem);\n      return this.drawLabelText(\n        group,\n        { ...attrs, ...position },\n        {\n          id,\n          name: 'label',\n          offset,\n          element,\n          [ORIGIN]: dataItem,\n        }\n      );\n    });\n  }\n\n  /** 获取当前 Label 的 offset */\n  protected getDefaultOffset() {\n    return Number(this.options.offset);\n  }\n\n  /** 默认实现：获取当前 Label 的 offset 点：包括 offset、offsetX、offsetY */\n  protected getLabelOffset() {\n    const { offsetX, offsetY } = this.options;\n    return {\n      x: isNumber(offsetX) ? offsetX : 0,\n      y: isNumber(offsetY) ? offsetY : 0,\n    };\n  }\n\n  /** 通过指定方向和系数获取整体 offset 点 */\n  protected getLabelOffsetByDimAndFactor(dim: 'x' | 'y', factor: number) {\n    const { offsetX, offsetY } = this.options;\n    const offset = this.getDefaultOffset();\n    const offsetPoint = {\n      x: 0,\n      y: 0,\n    };\n    offsetPoint[dim] = offset * factor;\n    if (isNumber(offsetX)) {\n      offsetPoint.x += offsetX;\n    }\n    if (isNumber(offsetY)) {\n      offsetPoint.y += offsetY;\n    }\n    return offsetPoint;\n  }\n\n  /** 初始化默认全局配置 */\n  protected getDefaultOptions(): Partial<L> {\n    return {};\n  }\n\n  /** 获取绘制当前 Label 的属性配置 */\n  protected abstract getLabelItemAttrs(element: Element, idx: number): TextStyle | TextStyle[];\n\n  /** 在当前 Label 绘制之后的调整 */\n  protected abstract adjustLabel(label: IShape, element: Element, datumIdx: number): void;\n\n  /** 整理对所有 Labels 的布局调整 */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  protected layoutLabels(geometry: Geometry, labels: IShape[]): void {\n    // empty\n  }\n\n  protected getLabelId(data: MappingDatum): string {\n    const origin = data._origin;\n    const type = this.geometry.type;\n    const xScale = this.geometry.getXScale();\n    const yScale = this.geometry.getYScale();\n    let labelId = this.geometry.getElementId(data);\n    if (type === 'line' || type === 'area') {\n      // 折线图以及区域图，一条线会对应一组数据，即多个 labels，为了区分这些 labels，需要在 line id 的前提下加上 x 字段值\n      labelId += ` ${origin[xScale.field]}`;\n    } else if (type === 'path') {\n      // path 路径图，无序，有可能存在相同 x 不同 y 的情况，需要通过 x y 来确定唯一 id\n      labelId += ` ${origin[xScale.field]}-${origin[yScale.field]}`;\n    }\n\n    return labelId;\n  }\n\n  protected getCoordinateBBox() {\n    const { coord } = this;\n    const { start, end } = coord;\n    return new BBox(Math.min(start.x, end.x), Math.min(start.y, end.y), coord.getWidth(), coord.getHeight());\n  }\n}\n\n// Label 组件注册\nconst LABEL_CONFIG_MAP: Record<string, LabelComponentCtor> = {};\n\nexport function registerLabelComponent(type: string, component: LabelComponentCtor) {\n  LABEL_CONFIG_MAP[type] = component;\n}\n\nexport function getLabelComponent(type: string): LabelComponentCtor {\n  return LABEL_CONFIG_MAP[type];\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}