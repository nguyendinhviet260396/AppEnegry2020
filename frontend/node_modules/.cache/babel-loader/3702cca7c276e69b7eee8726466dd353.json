{"ast":null,"code":"import { assign } from '@antv/util';\n\nvar ApplyResponsive =\n/** @class */\nfunction () {\n  function ApplyResponsive(cfg) {\n    assign(this, cfg);\n    this.init();\n  }\n\n  ApplyResponsive.prototype.init = function () {\n    this.type = this.getType();\n\n    if (this.shouldApply()) {\n      this.apply();\n    }\n  };\n\n  return ApplyResponsive;\n}();\n\nexport default ApplyResponsive;","map":{"version":3,"sources":["../../../../src/util/responsive/apply/base.ts"],"names":[],"mappings":"AAAA,SAAS,MAAT,QAAuB,YAAvB;;AAEA,IAAA,eAAA;AAAA;AAAA,YAAA;AAKE,WAAA,eAAA,CAAY,GAAZ,EAAe;AACb,IAAA,MAAM,CAAC,IAAD,EAAO,GAAP,CAAN;AACA,SAAK,IAAL;AACD;;AAES,EAAA,eAAA,CAAA,SAAA,CAAA,IAAA,GAAV,YAAA;AACE,SAAK,IAAL,GAAY,KAAK,OAAL,EAAZ;;AACA,QAAI,KAAK,WAAL,EAAJ,EAAwB;AACtB,WAAK,KAAL;AACD;AACF,GALS;;AAYZ,SAAA,eAAA;AAAC,CAtBD,EAAA","sourcesContent":["import { assign } from '@antv/util';\n\nexport default abstract class ApplyResponsive {\n  public plot: any;\n  public type: string;\n  public responsiveTheme: any;\n\n  constructor(cfg) {\n    assign(this, cfg);\n    this.init();\n  }\n\n  protected init() {\n    this.type = this.getType();\n    if (this.shouldApply()) {\n      this.apply();\n    }\n  }\n\n  protected abstract shouldApply(): boolean;\n\n  protected abstract apply(): void;\n\n  protected abstract getType(): string;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}