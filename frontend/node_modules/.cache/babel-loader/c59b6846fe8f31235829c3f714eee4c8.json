{"ast":null,"code":"function elementWidth(node, region, cfg) {\n  if (cfg === void 0) {\n    cfg = {\n      ratio: 0.15\n    };\n  }\n\n  return node.width < region.width * cfg.ratio;\n}\n\nexport default {\n  type: 'padding',\n  usage: 'compare',\n  expression: elementWidth\n};","map":{"version":3,"sources":["../../../../src/util/responsive/constraints/element-width.ts"],"names":[],"mappings":"AAIA,SAAS,YAAT,CAAsB,IAAtB,EAA4B,MAA5B,EAAoC,GAApC,EAA0E;AAAtC,MAAA,GAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,GAAA,GAAA;AAAyB,MAAA,KAAK,EAAE;AAAhC,KAAA;AAAsC;;AACxE,SAAO,IAAI,CAAC,KAAL,GAAa,MAAM,CAAC,KAAP,GAAe,GAAG,CAAC,KAAvC;AACD;;AAED,eAAe;AACb,EAAA,IAAI,EAAE,SADO;AAEb,EAAA,KAAK,EAAE,SAFM;AAGb,EAAA,UAAU,EAAE;AAHC,CAAf","sourcesContent":["export interface ElementWidthCfg {\n  ratio: number;\n}\n\nfunction elementWidth(node, region, cfg: ElementWidthCfg = { ratio: 0.15 }) {\n  return node.width < region.width * cfg.ratio;\n}\n\nexport default {\n  type: 'padding',\n  usage: 'compare',\n  expression: elementWidth,\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}