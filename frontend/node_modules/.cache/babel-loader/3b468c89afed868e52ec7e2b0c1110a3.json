{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { deepMix } from '@antv/util';\nimport { registerPlotType } from '../../base/global';\nimport * as EventParser from '../scatter/event';\nimport ScatterLayer from '../scatter/layer';\nimport './shape';\nimport './theme';\n\nvar BubbleLayer =\n/** @class */\nfunction (_super) {\n  __extends(BubbleLayer, _super);\n\n  function BubbleLayer() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = 'bubble';\n    return _this;\n  }\n\n  BubbleLayer.getDefaultOptions = function () {\n    return deepMix({}, _super.getDefaultOptions.call(this), {\n      // 直径 min 4px；max 64px\n      pointSize: [2, 32],\n      pointStyle: {\n        stroke: null,\n        strokeOpacity: 1,\n        fillOpacity: 0.5\n      },\n      label: {\n        position: 'middle',\n        style: {\n          stroke: '#fff',\n          lineWidth: 2\n        }\n      },\n      shape: 'bubble-point'\n    });\n  };\n\n  BubbleLayer.prototype.getSizeScale = function () {\n    var sizeField = this.options.sizeField;\n\n    if (sizeField) {\n      this.view.getScaleByField(sizeField);\n    }\n  };\n\n  BubbleLayer.prototype.legend = function () {\n    var _a;\n\n    _super.prototype.legend.call(this);\n\n    if (this.options.legend && this.options.legend.visible === false) {\n      return;\n    }\n\n    this.setConfig('legends', (_a = {}, _a[this.options.sizeField] = false, _a));\n  };\n\n  BubbleLayer.prototype.parseEvents = function () {\n    _super.prototype.parseEvents.call(this, EventParser);\n  };\n\n  return BubbleLayer;\n}(ScatterLayer);\n\nexport default BubbleLayer;\nregisterPlotType('bubble', BubbleLayer);","map":{"version":3,"sources":["../../../src/plots/bubble/layer.ts"],"names":[],"mappings":";AAAA,SAAS,OAAT,QAAwB,YAAxB;AACA,SAAS,gBAAT,QAAiC,mBAAjC;AAEA,OAAO,KAAK,WAAZ,MAA6B,kBAA7B;AACA,OAAO,YAAP,MAAgD,kBAAhD;AACA,OAAO,SAAP;AACA,OAAO,SAAP;;AAWA,IAAA,WAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA0F,EAAA,SAAA,CAAA,WAAA,EAAA,MAAA,CAAA;;AAA1F,WAAA,WAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;;AA4BS,IAAA,KAAA,CAAA,IAAA,GAAe,QAAf;;AAiBR;;AA5Ce,EAAA,WAAA,CAAA,iBAAA,GAAd,YAAA;AACE,WAAO,OAAO,CAAC,EAAD,EAAK,MAAA,CAAM,iBAAN,CAAuB,IAAvB,CAAuB,IAAvB,CAAL,EAAgC;AAC5C;AACA,MAAA,SAAS,EAAE,CAAC,CAAD,EAAI,EAAJ,CAFiC;AAG5C,MAAA,UAAU,EAAE;AACV,QAAA,MAAM,EAAE,IADE;AAEV,QAAA,aAAa,EAAE,CAFL;AAGV,QAAA,WAAW,EAAE;AAHH,OAHgC;AAQ5C,MAAA,KAAK,EAAE;AACL,QAAA,QAAQ,EAAE,QADL;AAEL,QAAA,KAAK,EAAE;AACL,UAAA,MAAM,EAAE,MADH;AAEL,UAAA,SAAS,EAAE;AAFN;AAFF,OARqC;AAe5C,MAAA,KAAK,EAAE;AAfqC,KAAhC,CAAd;AAiBD,GAlBa;;AAoBP,EAAA,WAAA,CAAA,SAAA,CAAA,YAAA,GAAP,YAAA;AACU,QAAA,SAAS,GAAK,KAAK,OAAL,CAAL,SAAT;;AACR,QAAI,SAAJ,EAAe;AACb,WAAK,IAAL,CAAU,eAAV,CAA0B,SAA1B;AACD;AACF,GALM;;AASG,EAAA,WAAA,CAAA,SAAA,CAAA,MAAA,GAAV,YAAA;;;AACE,IAAA,MAAA,CAAA,SAAA,CAAM,MAAN,CAAY,IAAZ,CAAY,IAAZ;;AAEA,QAAI,KAAK,OAAL,CAAa,MAAb,IAAuB,KAAK,OAAL,CAAa,MAAb,CAAoB,OAApB,KAAgC,KAA3D,EAAkE;AAChE;AACD;;AAED,SAAK,SAAL,CAAe,SAAf,GAAwB,EAAA,GAAA,EAAA,EACtB,EAAA,CAAC,KAAK,OAAL,CAAa,SAAd,CAAA,GAA0B,KADJ,EAEtB,EAFF;AAGD,GAVS;;AAYA,EAAA,WAAA,CAAA,SAAA,CAAA,WAAA,GAAV,YAAA;AACE,IAAA,MAAA,CAAA,SAAA,CAAM,WAAN,CAAiB,IAAjB,CAAiB,IAAjB,EAAkB,WAAlB;AACD,GAFS;;AAGZ,SAAA,WAAA;AAAC,CA7CD,CAA0F,YAA1F,CAAA;;;AA+CA,gBAAgB,CAAC,QAAD,EAAW,WAAX,CAAhB","sourcesContent":["import { deepMix } from '@antv/util';\nimport { registerPlotType } from '../../base/global';\nimport { LayerConfig } from '../../base/layer';\nimport * as EventParser from '../scatter/event';\nimport ScatterLayer, { ScatterViewConfig } from '../scatter/layer';\nimport './shape';\nimport './theme';\n\nexport interface BubbleViewConfig extends ScatterViewConfig {\n  /** 气泡大小 */\n  pointSize?: [number, number];\n  /** 气泡大小字段 */\n  sizeField?: string;\n}\n\nexport interface BubbleLayerConfig extends BubbleViewConfig, LayerConfig {}\n\nexport default class BubbleLayer<T extends BubbleLayerConfig = BubbleLayerConfig> extends ScatterLayer<T> {\n  public static getDefaultOptions(): any {\n    return deepMix({}, super.getDefaultOptions(), {\n      // 直径 min 4px；max 64px\n      pointSize: [2, 32],\n      pointStyle: {\n        stroke: null,\n        strokeOpacity: 1,\n        fillOpacity: 0.5,\n      },\n      label: {\n        position: 'middle',\n        style: {\n          stroke: '#fff',\n          lineWidth: 2,\n        },\n      },\n      shape: 'bubble-point',\n    });\n  }\n\n  public getSizeScale() {\n    const { sizeField } = this.options;\n    if (sizeField) {\n      this.view.getScaleByField(sizeField);\n    }\n  }\n\n  public type: string = 'bubble';\n\n  protected legend() {\n    super.legend();\n\n    if (this.options.legend && this.options.legend.visible === false) {\n      return;\n    }\n\n    this.setConfig('legends', {\n      [this.options.sizeField]: false,\n    });\n  }\n\n  protected parseEvents() {\n    super.parseEvents(EventParser);\n  }\n}\n\nregisterPlotType('bubble', BubbleLayer);\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}