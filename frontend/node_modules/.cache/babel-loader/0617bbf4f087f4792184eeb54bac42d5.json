{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { deepMix, each } from '@antv/util';\nimport ViewLayer from '../base/view-layer';\nimport { getComponent } from '../components/factory';\nimport '../geoms/line/mini';\n\nvar TinyLayer =\n/** @class */\nfunction (_super) {\n  __extends(TinyLayer, _super);\n\n  function TinyLayer() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  TinyLayer.getDefaultOptions = function () {\n    return deepMix({}, _super.getDefaultOptions.call(this), {\n      title: {\n        visible: false\n      },\n      description: {\n        visible: false\n      },\n      padding: [0, 0, 0, 0],\n      legend: {\n        visible: false\n      },\n      xAxis: {\n        visible: false\n      },\n      yAxis: {\n        visible: false\n      },\n      tooltip: {\n        visible: false\n      }\n    });\n  };\n\n  TinyLayer.prototype.coord = function () {\n    return;\n  };\n\n  TinyLayer.prototype.addGeometry = function () {\n    return;\n  };\n\n  TinyLayer.prototype.annotation = function () {\n    var _this = this;\n\n    var props = this.options;\n    var config = [];\n    var defaultGuidelineCfg = {\n      line: {\n        style: {\n          lineWidth: 1,\n          stroke: '#66d6a8'\n        }\n      }\n    };\n    each(props.guideLine, function (line) {\n      var guideLine = getComponent('guideLine', {\n        plot: _this,\n        cfg: deepMix({}, defaultGuidelineCfg, line)\n      });\n      config.push(guideLine);\n    });\n    this.setConfig('annotations', config);\n  };\n\n  return TinyLayer;\n}(ViewLayer);\n\nexport default TinyLayer;","map":{"version":3,"sources":["../../src/sparkline/tiny-layer.ts"],"names":[],"mappings":";AAAA,SAAS,OAAT,EAAkB,IAAlB,QAA8B,YAA9B;AAEA,OAAO,SAAP,MAAsC,oBAAtC;AACA,SAAS,YAAT,QAA6B,uBAA7B;AACA,OAAO,oBAAP;;AASA,IAAA,SAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA6F,EAAA,SAAA,CAAA,SAAA,EAAA,MAAA,CAAA;;AAA7F,WAAA,SAAA,GAAA;;AAqDC;;AApDe,EAAA,SAAA,CAAA,iBAAA,GAAd,YAAA;AACE,WAAO,OAAO,CAAC,EAAD,EAAK,MAAA,CAAM,iBAAN,CAAuB,IAAvB,CAAuB,IAAvB,CAAL,EAAgC;AAC5C,MAAA,KAAK,EAAE;AACL,QAAA,OAAO,EAAE;AADJ,OADqC;AAI5C,MAAA,WAAW,EAAE;AACX,QAAA,OAAO,EAAE;AADE,OAJ+B;AAO5C,MAAA,OAAO,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAPmC;AAQ5C,MAAA,MAAM,EAAE;AACN,QAAA,OAAO,EAAE;AADH,OARoC;AAW5C,MAAA,KAAK,EAAE;AACL,QAAA,OAAO,EAAE;AADJ,OAXqC;AAc5C,MAAA,KAAK,EAAE;AACL,QAAA,OAAO,EAAE;AADJ,OAdqC;AAiB5C,MAAA,OAAO,EAAE;AACP,QAAA,OAAO,EAAE;AADF;AAjBmC,KAAhC,CAAd;AAqBD,GAtBa;;AAwBJ,EAAA,SAAA,CAAA,SAAA,CAAA,KAAA,GAAV,YAAA;AACE;AACD,GAFS;;AAIA,EAAA,SAAA,CAAA,SAAA,CAAA,WAAA,GAAV,YAAA;AACE;AACD,GAFS;;AAIA,EAAA,SAAA,CAAA,SAAA,CAAA,UAAA,GAAV,YAAA;AAAA,QAAA,KAAA,GAAA,IAAA;;AACE,QAAM,KAAK,GAAG,KAAK,OAAnB;AACA,QAAM,MAAM,GAAG,EAAf;AACA,QAAM,mBAAmB,GAAG;AAC1B,MAAA,IAAI,EAAE;AACJ,QAAA,KAAK,EAAE;AACL,UAAA,SAAS,EAAE,CADN;AAEL,UAAA,MAAM,EAAE;AAFH;AADH;AADoB,KAA5B;AAQA,IAAA,IAAI,CAAC,KAAK,CAAC,SAAP,EAAkB,UAAC,IAAD,EAAK;AACzB,UAAM,SAAS,GAAG,YAAY,CAAC,WAAD,EAAc;AAC1C,QAAA,IAAI,EAAE,KADoC;AAE1C,QAAA,GAAG,EAAE,OAAO,CAAC,EAAD,EAAK,mBAAL,EAA0B,IAA1B;AAF8B,OAAd,CAA9B;AAIA,MAAA,MAAM,CAAC,IAAP,CAAY,SAAZ;AACD,KANG,CAAJ;AAOA,SAAK,SAAL,CAAe,aAAf,EAA8B,MAA9B;AACD,GAnBS;;AAoBZ,SAAA,SAAA;AAAC,CArDD,CAA6F,SAA7F,CAAA","sourcesContent":["import { deepMix, each } from '@antv/util';\nimport { LayerConfig } from '../base/layer';\nimport ViewLayer, { ViewConfig } from '../base/view-layer';\nimport { getComponent } from '../components/factory';\nimport '../geoms/line/mini';\n\nexport interface TinyViewConfig extends ViewConfig {\n  indicator?: any;\n  guideLine?: any; // FIXME:\n}\n\nexport interface TinyLayerConfig extends TinyViewConfig, LayerConfig {}\n\nexport default abstract class TinyLayer<T extends TinyLayerConfig = TinyLayerConfig> extends ViewLayer<T> {\n  public static getDefaultOptions(): any {\n    return deepMix({}, super.getDefaultOptions(), {\n      title: {\n        visible: false,\n      },\n      description: {\n        visible: false,\n      },\n      padding: [0, 0, 0, 0],\n      legend: {\n        visible: false,\n      },\n      xAxis: {\n        visible: false,\n      },\n      yAxis: {\n        visible: false,\n      },\n      tooltip: {\n        visible: false,\n      },\n    });\n  }\n\n  protected coord() {\n    return;\n  }\n\n  protected addGeometry() {\n    return;\n  }\n\n  protected annotation() {\n    const props = this.options;\n    const config = [];\n    const defaultGuidelineCfg = {\n      line: {\n        style: {\n          lineWidth: 1,\n          stroke: '#66d6a8',\n        },\n      },\n    };\n    each(props.guideLine, (line) => {\n      const guideLine = getComponent('guideLine', {\n        plot: this,\n        cfg: deepMix({}, defaultGuidelineCfg, line),\n      });\n      config.push(guideLine);\n    });\n    this.setConfig('annotations', config);\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}