{"ast":null,"code":"import { getTheme as g2GetTheme } from '../../dependents';\nimport { isString, deepMix } from '@antv/util';\nimport { convertToG2Theme, getGlobalTheme, getTheme } from '../../theme';\nimport { getResponsiveTheme } from '../../util/responsive/theme';\nimport { convertThemeToG2Theme } from '../../theme/theme';\n/**\n * 负责图表theme的管理\n */\n\nvar G2DefaultTheme = g2GetTheme();\n\nvar ThemeController =\n/** @class */\nfunction () {\n  function ThemeController() {}\n  /**\n   * 获取指定的全局theme\n   * @param theme\n   */\n\n\n  ThemeController.getGlobalTheme = function (theme) {\n    if (isString(theme)) {\n      return getGlobalTheme(theme);\n    }\n\n    return deepMix({}, getGlobalTheme(), theme);\n  };\n  /**\n   * 通过 theme 和图表类型，获取当前 plot 对应的主题\n   * @param props\n   * @param type\n   */\n\n\n  ThemeController.prototype.getPlotTheme = function (props, type) {\n    var theme = props.theme;\n\n    if (isString(theme)) {\n      return deepMix({}, getGlobalTheme(theme), getTheme(type));\n    }\n\n    return deepMix({}, getGlobalTheme(), getTheme(type), convertThemeToG2Theme(type, theme));\n  };\n  /**\n   * 获取转化成 G2 的结构主题\n   * @param props\n   * @param type\n   */\n\n\n  ThemeController.prototype.getTheme = function (props, type) {\n    var plotG2Theme = convertToG2Theme(this.getPlotTheme(props, type));\n    var g2Theme = deepMix({}, G2DefaultTheme, plotG2Theme);\n    return g2Theme;\n  };\n\n  ThemeController.prototype.getResponsiveTheme = function (type) {\n    return getResponsiveTheme(type) || getResponsiveTheme('default');\n  };\n\n  return ThemeController;\n}();\n\nexport default ThemeController;","map":{"version":3,"sources":["../../../src/base/controller/theme.ts"],"names":[],"mappings":"AAAA,SAAS,QAAQ,IAAI,UAArB,QAAuC,kBAAvC;AACA,SAAS,QAAT,EAAmB,OAAnB,QAAkC,YAAlC;AACA,SAAS,gBAAT,EAA2B,cAA3B,EAA2C,QAA3C,QAA2D,aAA3D;AACA,SAAS,kBAAT,QAAmC,6BAAnC;AAEA,SAAS,qBAAT,QAAsC,mBAAtC;AAEA;;;;AAIA,IAAM,cAAc,GAAG,UAAU,EAAjC;;AAEA,IAAA,eAAA;AAAA;AAAA,YAAA;AAAA,WAAA,eAAA,GAAA,CAuCC;AAtCC;;;;;;AAIc,EAAA,eAAA,CAAA,cAAA,GAAd,UAA6B,KAA7B,EAAmD;AACjD,QAAI,QAAQ,CAAC,KAAD,CAAZ,EAAqB;AACnB,aAAO,cAAc,CAAC,KAAD,CAArB;AACD;;AACD,WAAO,OAAO,CAAC,EAAD,EAAK,cAAc,EAAnB,EAAuB,KAAvB,CAAd;AACD,GALa;AAOd;;;;;;;AAKO,EAAA,eAAA,CAAA,SAAA,CAAA,YAAA,GAAP,UAAoB,KAApB,EAA8B,IAA9B,EAA0C;AAChC,QAAA,KAAK,GAAK,KAAK,CAAV,KAAL;;AACR,QAAI,QAAQ,CAAC,KAAD,CAAZ,EAAqB;AACnB,aAAO,OAAO,CAAC,EAAD,EAAK,cAAc,CAAC,KAAD,CAAnB,EAA4B,QAAQ,CAAC,IAAD,CAApC,CAAd;AACD;;AACD,WAAO,OAAO,CAAC,EAAD,EAAK,cAAc,EAAnB,EAAuB,QAAQ,CAAC,IAAD,CAA/B,EAAuC,qBAAqB,CAAC,IAAD,EAAO,KAAP,CAA5D,CAAd;AACD,GANM;AAQP;;;;;;;AAKO,EAAA,eAAA,CAAA,SAAA,CAAA,QAAA,GAAP,UAAgB,KAAhB,EAA0B,IAA1B,EAAsC;AACpC,QAAM,WAAW,GAAG,gBAAgB,CAAC,KAAK,YAAL,CAAkB,KAAlB,EAAyB,IAAzB,CAAD,CAApC;AACA,QAAM,OAAO,GAAG,OAAO,CAAC,EAAD,EAAK,cAAL,EAAqB,WAArB,CAAvB;AACA,WAAO,OAAP;AACD,GAJM;;AAMA,EAAA,eAAA,CAAA,SAAA,CAAA,kBAAA,GAAP,UAA0B,IAA1B,EAAsC;AACpC,WAAO,kBAAkB,CAAC,IAAD,CAAlB,IAA4B,kBAAkB,CAAC,SAAD,CAArD;AACD,GAFM;;AAGT,SAAA,eAAA;AAAC,CAvCD,EAAA","sourcesContent":["import { getTheme as g2GetTheme } from '../../dependents';\nimport { isString, deepMix } from '@antv/util';\nimport { convertToG2Theme, getGlobalTheme, getTheme } from '../../theme';\nimport { getResponsiveTheme } from '../../util/responsive/theme';\nimport { ViewConfig } from '../view-layer';\nimport { convertThemeToG2Theme } from '../../theme/theme';\n\n/**\n * 负责图表theme的管理\n */\n\nconst G2DefaultTheme = g2GetTheme();\n\nexport default class ThemeController<T extends ViewConfig = ViewConfig> {\n  /**\n   * 获取指定的全局theme\n   * @param theme\n   */\n  public static getGlobalTheme(theme: string | object) {\n    if (isString(theme)) {\n      return getGlobalTheme(theme);\n    }\n    return deepMix({}, getGlobalTheme(), theme);\n  }\n\n  /**\n   * 通过 theme 和图表类型，获取当前 plot 对应的主题\n   * @param props\n   * @param type\n   */\n  public getPlotTheme(props: T, type: string) {\n    const { theme } = props;\n    if (isString(theme)) {\n      return deepMix({}, getGlobalTheme(theme), getTheme(type));\n    }\n    return deepMix({}, getGlobalTheme(), getTheme(type), convertThemeToG2Theme(type, theme));\n  }\n\n  /**\n   * 获取转化成 G2 的结构主题\n   * @param props\n   * @param type\n   */\n  public getTheme(props: T, type: string): any {\n    const plotG2Theme = convertToG2Theme(this.getPlotTheme(props, type));\n    const g2Theme = deepMix({}, G2DefaultTheme, plotG2Theme);\n    return g2Theme;\n  }\n\n  public getResponsiveTheme(type: string) {\n    return getResponsiveTheme(type) || getResponsiveTheme('default');\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}